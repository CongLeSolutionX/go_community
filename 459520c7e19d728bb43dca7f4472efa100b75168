{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "33bc9668_dd358972",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-04-05T21:39:18Z",
      "side": 1,
      "message": "Writing docs is so much more fun with gopls\u0027 new package doc viewer. :)",
      "revId": "459520c7e19d728bb43dca7f4472efa100b75168",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc8dd5e7_5f839f38",
        "filename": "src/cmd/compile/internal/types2/api_predicates.go",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-04-05T23:05:02Z",
      "side": 1,
      "message": "I think we use \"context\" instead of \"realm\"; the latter is a term not seen so far in the type checkers.",
      "range": {
        "startLine": 75,
        "startChar": 53,
        "endLine": 75,
        "endChar": 58
      },
      "revId": "459520c7e19d728bb43dca7f4472efa100b75168",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "231b5f36_7f35f3f8",
        "filename": "src/go/types/api_predicates.go",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 31647
      },
      "writtenOn": "2024-04-05T22:09:11Z",
      "side": 1,
      "message": "Is the word \"canonical\" well known? Also, can we remove the non-parameterized qualifier, as it may be distracting?\n\nYou could say \"[Named] types are identical only if their [TypeName] objects reported by [Named.Obj] are the same pointers, and their type arguments are identical.\"",
      "range": {
        "startLine": 80,
        "startChar": 3,
        "endLine": 80,
        "endChar": 12
      },
      "revId": "459520c7e19d728bb43dca7f4472efa100b75168",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}