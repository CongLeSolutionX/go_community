{
  "comments": [
    {
      "key": {
        "uuid": "5d808813_30b78e21",
        "filename": "src/compress/flate/asm_amd64.s",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-02-12T22:35:10Z",
      "side": 1,
      "message": "The 0x18 could use a comment.",
      "range": {
        "startLine": 126,
        "startChar": 14,
        "endLine": 126,
        "endChar": 15
      },
      "revId": "b9593ebfa1575e1c931ead4762a399370b038f07",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d808813_10b28a30",
        "filename": "src/compress/flate/asm_amd64.s",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 5899
      },
      "writtenOn": "2016-02-12T22:35:10Z",
      "side": 1,
      "message": "You need to set the AX and DX registers when using PCMPESTRI. This was discussed recently on separate change to the snappy code: https://groups.google.com/d/msg/golang-nuts/V8pK3bWEhcY/oOJiFDtJHAAJ\n\nA bigger point is that presumably all of the existing tests passed even with this subtle bug, which doesn\u0027t fill me with confidence that this asm code is 100% correct.\n\nReturning a shorter match here may actually result in \u0027correct\u0027 output, in that the output is *a* valid flate compression, but it may not be as well compressed as it should be.\n\nThe bottom line: this CL should really add more tests, especially unit tests for matchLenSSE4 and maybe for the other asm functions, but my request is not limited to the just that. AFAICT the only change to *_test.go code in this CL is to tweak a benchmark.\n\nIt would also be nice, although I don\u0027t know how practical it is, if we could somehow test that the output is \u0027well compressed\u0027, not just \u0027*a* valid compression\u0027. For example, breaking the encoder to only emit literal strings and no LZW style back-ref copies will \u0027pass\u0027 any test that round-trips an encode and decode and compares to the original, but it is clearly broken.",
      "revId": "b9593ebfa1575e1c931ead4762a399370b038f07",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7daf0c90_c1667895",
        "filename": "src/compress/flate/asm_amd64.s",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 6545
      },
      "writtenOn": "2016-02-13T09:40:04Z",
      "side": 1,
      "message": "\u003e You need to set the AX and DX registers when using PCMPESTRI.\n\nThanks. I am aware. This function isn\u0027t used by this patch, so I didn\u0027t feel a huge need to instantly update it.\n\n\u003e existing tests passed even with this subtle bug,\n\nI would love to add it, if you have a testing method that could test behavior that depends on the register assignment of the compiler.\n\n\u003e if we could somehow test that the output is \u0027well compressed\u0027\n\nThat test already exists: https://github.com/golang/go/blob/master/src/compress/flate/deflate_test.go#L346",
      "parentUuid": "5d808813_10b28a30",
      "revId": "b9593ebfa1575e1c931ead4762a399370b038f07",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}