{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a5bd1a58_8a973aeb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-23T15:37:31Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d1b9e9753\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1b9e97531959eb1939a5516cc66431530b83ae09",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43dcd113_d1a129ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-23T15:37:31Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "dbe1aba8_08d78b8d",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1b9e97531959eb1939a5516cc66431530b83ae09",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a128ff2b_4234e929",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-23T15:50:06Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "a5bd1a58_8a973aeb",
      "tag": "autogenerated:trybots~happy",
      "revId": "1b9e97531959eb1939a5516cc66431530b83ae09",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dc9ed13_753d5108",
        "filename": "src/internal/singleflight/singleflight.go",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-09-23T15:51:37Z",
      "side": 1,
      "message": "(optional) I wonder if we should also move this call to `c.wg.Done` inside the section guarded by `g.mu`.\n\nOtherwise, the second call to `Do` for a key could complete and be followed by a call to `ForgetUnshared` that then returns `false`, even though the caller otherwise knows that no call with the key is in flight.",
      "revId": "1b9e97531959eb1939a5516cc66431530b83ae09",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63846363_6e9be43c",
        "filename": "src/internal/singleflight/singleflight.go",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 14665
      },
      "writtenOn": "2022-09-26T02:55:27Z",
      "side": 1,
      "message": "Not sure I get it. If `Do` is completed, then the key was deleted, so ForgotUnshared should always return true.",
      "parentUuid": "2dc9ed13_753d5108",
      "revId": "1b9e97531959eb1939a5516cc66431530b83ae09",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3ae4f70_1969c11a",
        "filename": "src/internal/singleflight/singleflight.go",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-09-28T18:12:27Z",
      "side": 1,
      "message": "\u003e Not sure I get it. If `Do` is completed, then the key was deleted\n\nThe second call to `Do` can currently return before the key is deleted.\nThe interleaving is something like:\n\nA: lock g.mu, set g.m[key] \u003d c, unlock g.mu\nB: lock g.mu, set c.dups\u003d1, unlock g.mu\nB: (block on c.wg)\nA: set c.val\nA: mark c.wg done\nB: (unblock on c.wg)\nB: return c.val\nB: call ForgetUnshared, lock g.mu read c.dups\u003d1, return false, unlock g.mu\nA: lock g.mu, delete g.m[key], unlock g.mu\n\nIf we move the call to `c.wg.Done` into the critical section, then goroutine A\u0027s “mark c.wg done” step moves into the same critical section as “delete g.m[key]”, which prevents B\u0027s critical section from interrupting in between those two operations.",
      "parentUuid": "63846363_6e9be43c",
      "revId": "1b9e97531959eb1939a5516cc66431530b83ae09",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1925d22c_2016b149",
        "filename": "src/internal/singleflight/singleflight.go",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 14665
      },
      "writtenOn": "2022-09-29T04:16:14Z",
      "side": 1,
      "message": "Ah right, I will send a follow up CL for fixing that, so it can be easier to reference when porting to x/sync.\n\nHowever, writing test for that case can be tricky.",
      "parentUuid": "e3ae4f70_1969c11a",
      "revId": "1b9e97531959eb1939a5516cc66431530b83ae09",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}