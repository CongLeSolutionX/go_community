{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "addd51e1_19aacffc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-04-07T22:25:10Z",
      "side": 1,
      "message": "LGTM, thanks!",
      "revId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b61b1c97_807c19e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-04-07T22:25:31Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d551cbeb9",
      "tag": "autogenerated:trybots~beginning",
      "revId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23a6ce3f_86bac5e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-04-07T22:39:13Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "b61b1c97_807c19e8",
      "tag": "autogenerated:trybots~happy",
      "revId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20c48105_851f5de4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-04-07T23:01:07Z",
      "side": 1,
      "message": "Would it be possible to have a test?",
      "revId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e0eb476_58e0b26f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 55613
      },
      "writtenOn": "2022-04-07T23:32:50Z",
      "side": 1,
      "message": "OK, let me see how to add tests.",
      "parentUuid": "20c48105_851f5de4",
      "revId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bee25a41_1e7e74bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 55613
      },
      "writtenOn": "2022-04-07T23:33:38Z",
      "side": 1,
      "message": "Mark as not resolved.",
      "parentUuid": "4e0eb476_58e0b26f",
      "revId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4257748c_1c14556c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-04-07T23:35:53Z",
      "side": 1,
      "message": "Add a file $GOROOT/test/fixedbugs/issue52127.go with contents like:\n\n```\n// run\n\n// copyright blah blah\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"os/exec\"\n\t\"path/filepath\"\n)\n\nfunc main() {\n\tdir, err :\u003d os.MkdirTemp(\"\", \"issue52127\")\n\tif err !\u003d nil {\n\t\tpanic(err)\n\t}\n\tdefer os.RemoveAll(dir)\n\n\targs :\u003d []string{\"go\", \"build\"}\n\twrite :\u003d func(prefix string, i int, data string) {\n\t\tfilename :\u003d filepath.Join(dir, fmt.Sprintf(\"%s%d.go\", prefix, i))\n\t\tif err :\u003d os.WriteFile(filename, []byte(data), 0o644); err !\u003d nil {\n\t\t\tpanic(err)\n\t\t}\n\t\targs \u003d append(args, filename)\n\t}\n\n\tfor i :\u003d 0; i \u003c 100; i++ {\n\t\twrite(\"a\", i, \"package p\\n\")\n\t}\n\tfor i :\u003d 0; i \u003c 100; i++ {\n\t\twrite(\"b\", i, \"package p\\nvar\\nvar\\nvar\\nvar\\nvar\\n\")\n\t}\n\n\tcmd :\u003d exec.Command(args[0], args[1:]...)\n\tif err :\u003d cmd.Run(); err !\u003d nil {\n\t\tpanic(err)\n\t}\n}\n```\n\nYou might need to make additional tweaks to disable the test on some targets. Try to look through the other $GOROOT/test/.../*.go files to look for other examples of tests that manually invoke \"go build\".",
      "parentUuid": "bee25a41_1e7e74bc",
      "revId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23ec248a_578eac71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 55613
      },
      "writtenOn": "2022-04-07T23:39:12Z",
      "side": 1,
      "message": "Sorry, I chose `Resolved` by mistake, which resulted in a merge.\n\nI will submit a new CL if there are suitable test cases.",
      "parentUuid": "bee25a41_1e7e74bc",
      "revId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b09b2654_4ed8a565",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 55613
      },
      "writtenOn": "2022-04-07T23:40:41Z",
      "side": 1,
      "message": "Thank you Matthew Dempsky for your help.",
      "parentUuid": "23ec248a_578eac71",
      "revId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2a40088_d1078410",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-04-07T23:43:37Z",
      "side": 1,
      "message": "\u003e Sorry, I chose  Resolved  by mistake, which resulted in a merge.\n\nNo problem. I marked as Auto-Submit, because I didn\u0027t think a test was important/practical here; but Cherry was right to ask for one, and it seems reasonable to add one.",
      "parentUuid": "b09b2654_4ed8a565",
      "revId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required. Self review is not allowed."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Trust",
        "description": {
          "value": "A change must get two Trust+1 or Code-Review+2 from two different approvers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "distinctvoters:\"[Code-Review,Trust],value\u003dMAX,count\u003e1\""
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"distinctvoters:\"[Code-Review,Trust],value=MAX,count>1\""},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["distinctvoters:\"[Code-Review,Trust],value=MAX,count>1\""],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "551cbeb9ddfc57f1fef34191d09c820c11400865",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}