{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5a1e7c78_3176f5ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13550
      },
      "writtenOn": "2021-04-15T18:32:54Z",
      "side": 1,
      "message": "Bryan, Rob, is this the kind of fix either of you were thinking about?\n\nI think the logic is correct. I know it\u0027s rough; the dot check is a bit lazy, I don\u0027t use filepath, and there are no tests.\n\nBut hey, all my tests now pass for all edge cases :) So at least that\u0027s a signal that it\u0027s close enough to the right solution.",
      "revId": "c8d8c13c3245603fbb8b60d676ecc9ec877002e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ae9178e_c9bf0987",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13550
      },
      "writtenOn": "2021-04-15T18:33:46Z",
      "side": 1,
      "message": "I should also note that this is far simpler than what FindPkg does with its \"walk vendor directories\" logic. Maybe we want to reuse that instead?",
      "revId": "c8d8c13c3245603fbb8b60d676ecc9ec877002e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "675b3f7f_f708acda",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13550
      },
      "writtenOn": "2021-04-15T18:38:52Z",
      "side": 1,
      "message": "Err, I forgot that FindPkg goes through go/build.Import, which is a pretty big hammer. So probably not.",
      "parentUuid": "9ae9178e_c9bf0987",
      "revId": "c8d8c13c3245603fbb8b60d676ecc9ec877002e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c9428b0_a06ea625",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13550
      },
      "writtenOn": "2021-04-15T19:20:52Z",
      "side": 1,
      "message": "I\u0027ll take it that you agree this is roughly the right fix? I\u0027ll add tests and polish it up tomorrow.",
      "revId": "c8d8c13c3245603fbb8b60d676ecc9ec877002e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a05adf45_9e1465ed",
        "filename": "src/go/internal/gcimporter/gcimporter.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-04-15T19:03:30Z",
      "side": 1,
      "message": "FWIW, the condition that the \u0027go\u0027 command currently uses is here:\nhttps://github.com/golang/go/blob/ddd8d7c0a6859114f1f9bfbb3c56fb63f870badc/src/cmd/go/internal/search/search.go#L554-L561\n\nand the call site is here:\nhttps://github.com/golang/go/blob/ddd8d7c0a6859114f1f9bfbb3c56fb63f870badc/src/cmd/go/internal/modload/load.go#L1296-L1331\n\nAFAICT the main difference is that search.IsStandardImportPath only searches the first element for the dot.",
      "revId": "c8d8c13c3245603fbb8b60d676ecc9ec877002e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc967da1_d4eeb5e8",
        "filename": "src/go/internal/gcimporter/gcimporter.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-04-15T19:03:30Z",
      "side": 1,
      "message": "To be pedantic, I think you may need to check for GOROOT/src as a prefix, not just GOROOT.\n\n(Otherwise you could theoretically get erroneous results for the module in `GOROOT/misc`, depending on whether that ever ends up depending on external modules and, if so, whether it ends up vendoring them. The vendored dependencies of the `misc` repo would presumably not be special in the way that the standard-library ones are.)",
      "range": {
        "startLine": 100,
        "startChar": 34,
        "endLine": 100,
        "endChar": 67
      },
      "revId": "c8d8c13c3245603fbb8b60d676ecc9ec877002e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8e915df_198f2dfc",
        "filename": "src/go/internal/gcimporter/gcimporter.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 13550
      },
      "writtenOn": "2021-04-15T19:20:52Z",
      "side": 1,
      "message": "Good point.",
      "parentUuid": "dc967da1_d4eeb5e8",
      "range": {
        "startLine": 100,
        "startChar": 34,
        "endLine": 100,
        "endChar": 67
      },
      "revId": "c8d8c13c3245603fbb8b60d676ecc9ec877002e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7e0b676_2dc515eb",
        "filename": "src/go/internal/gcimporter/gcimporter.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 13550
      },
      "writtenOn": "2021-04-15T19:20:52Z",
      "side": 1,
      "message": "Yeah, that\u0027s what I meant earlier about this dot check being lazy.",
      "parentUuid": "a05adf45_9e1465ed",
      "revId": "c8d8c13c3245603fbb8b60d676ecc9ec877002e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}