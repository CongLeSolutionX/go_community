{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a425a380_28bebd97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 36739
      },
      "writtenOn": "2021-02-19T07:26:25Z",
      "side": 1,
      "message": " Should I do anything for this series?",
      "revId": "9fdd50fe2907a452b59ca44b6f78a4c334b897df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26c66f29_8b0ac340",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 7530
      },
      "writtenOn": "2021-02-19T07:28:50Z",
      "side": 1,
      "message": "TRY\u003dmips32,mips32le",
      "revId": "9fdd50fe2907a452b59ca44b6f78a4c334b897df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cea149f9_50119269",
        "filename": "src/cmd/link/internal/ld/elf.go",
        "patchSetId": 16
      },
      "lineNbr": 532,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-19T15:57:01Z",
      "side": 1,
      "message": "I think it\u0027s better to move those to line comments in the const block, so it is easier to match comment and definition. Either\n\nMIPS_FPABI_NONE \u003d 0 // ...\nMIPS_FPABI_ANY  \u003d 1 // ...\n\nOr\n\n// ...\nMIPS_FPABI_NONE \u003d 0\n\n// ...\nMIPS_FPABI_ANY \u003d 1",
      "range": {
        "startLine": 523,
        "startChar": 0,
        "endLine": 532,
        "endChar": 88
      },
      "revId": "9fdd50fe2907a452b59ca44b6f78a4c334b897df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50d64d20_3cd9c960",
        "filename": "src/cmd/link/internal/ld/elf.go",
        "patchSetId": 16
      },
      "lineNbr": 532,
      "author": {
        "id": 36739
      },
      "writtenOn": "2021-02-20T08:07:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cea149f9_50119269",
      "range": {
        "startLine": 523,
        "startChar": 0,
        "endLine": 532,
        "endChar": 88
      },
      "revId": "9fdd50fe2907a452b59ca44b6f78a4c334b897df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "011c4ce8_db9ec7b4",
        "filename": "src/cmd/link/internal/ld/elf.go",
        "patchSetId": 16
      },
      "lineNbr": 1558,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-19T15:57:01Z",
      "side": 1,
      "message": "This needs some comment. Why ANY?",
      "range": {
        "startLine": 1558,
        "startChar": 26,
        "endLine": 1558,
        "endChar": 40
      },
      "revId": "9fdd50fe2907a452b59ca44b6f78a4c334b897df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06c18a14_0755a40d",
        "filename": "src/cmd/link/internal/ld/elf.go",
        "patchSetId": 16
      },
      "lineNbr": 1558,
      "author": {
        "id": 36739
      },
      "writtenOn": "2021-02-20T08:03:41Z",
      "side": 1,
      "message": "It may be a bad naming.\nMIPS_FPABI_ANY means the old style paired float/double register schaming.\nCurrently, go are not make sure that non-odd-number-fpr is used.\nSo we have to assume that the FPABI_ANY is used.\n\nThis patch is just to make sure that the kernel can recognize the binary correctly.\n\nIn future, we will switch the whole go stack to FPXX, and then FP64.",
      "parentUuid": "011c4ce8_db9ec7b4",
      "range": {
        "startLine": 1558,
        "startChar": 26,
        "endLine": 1558,
        "endChar": 40
      },
      "revId": "9fdd50fe2907a452b59ca44b6f78a4c334b897df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cfd801f_29e35206",
        "filename": "src/cmd/link/internal/ld/elf.go",
        "patchSetId": 16
      },
      "lineNbr": 1558,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-22T16:57:28Z",
      "side": 1,
      "message": "I think it still good to have a comment in the code. Thanks.",
      "parentUuid": "06c18a14_0755a40d",
      "range": {
        "startLine": 1558,
        "startChar": 26,
        "endLine": 1558,
        "endChar": 40
      },
      "revId": "9fdd50fe2907a452b59ca44b6f78a4c334b897df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd648a33_f7b2cbc9",
        "filename": "src/cmd/link/internal/ld/elf.go",
        "patchSetId": 16
      },
      "lineNbr": 1558,
      "author": {
        "id": 36739
      },
      "writtenOn": "2021-02-23T03:34:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4cfd801f_29e35206",
      "range": {
        "startLine": 1558,
        "startChar": 26,
        "endLine": 1558,
        "endChar": 40
      },
      "revId": "9fdd50fe2907a452b59ca44b6f78a4c334b897df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82743120_6f090e9a",
        "filename": "src/cmd/link/internal/ld/elf.go",
        "patchSetId": 16
      },
      "lineNbr": 1558,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-24T00:42:18Z",
      "side": 1,
      "message": "I\u0027m not sure I understand the comment. It is a TODO but doesn\u0027t explain why we use ANY now.\n\nAlso, I believe currently we don\u0027t use odd-numbered FP registers on 32-bit MIPS.",
      "parentUuid": "cd648a33_f7b2cbc9",
      "range": {
        "startLine": 1558,
        "startChar": 26,
        "endLine": 1558,
        "endChar": 40
      },
      "revId": "9fdd50fe2907a452b59ca44b6f78a4c334b897df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49435992_675acc51",
        "filename": "src/cmd/link/internal/ld/elf.go",
        "patchSetId": 16
      },
      "lineNbr": 1558,
      "author": {
        "id": 36739
      },
      "writtenOn": "2021-02-24T01:47:14Z",
      "side": 1,
      "message": "We does use odd-numbered FPR on 32bit MIPS.\nSee mips/asm0.go, the AMOVF is implemented with lwc1/swc1.\n\nIn the FR\u003d0 mode, if we want to move a DOUBLE from FPR, we need\n    lwc1 $f0, address\n    lwc1 $f1, address+4\nthe reason is that it is said that go cannot make sure 8byte aligned for DOUBLE,\nso we cannot use `ldc1\u0027 to load DOUBLE.\n\nThese 2 `lwc1\u0027 instructions cannot work with FR\u003d1 mode, in FR\u003d1 mode, we need\n    lwc1  $f0, address\n    lw    $t1, address+4\n    mfhc1 $f0, $t1\nWhile, the problem is that `mfhc1\u0027 is introduced from MIPS32r2, while currently,\nthe baseline of golang is MIPS32r1.\n\n\nIf we mark the output to be FPXX, the kernel may use FR\u003d1 mode for this program.\nthen we get some error.",
      "parentUuid": "82743120_6f090e9a",
      "range": {
        "startLine": 1558,
        "startChar": 26,
        "endLine": 1558,
        "endChar": 40
      },
      "revId": "9fdd50fe2907a452b59ca44b6f78a4c334b897df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48b86304_2c3054fd",
        "filename": "src/cmd/link/internal/ld/elf.go",
        "patchSetId": 16
      },
      "lineNbr": 1558,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-24T15:47:22Z",
      "side": 1,
      "message": "You\u0027re right. I forgot we split MOVD to two MOVFs. Thanks.\n\nI think it is still worth to mention why we choose ANY in the comment. It isn\u0027t obvious reading this code (partly due to ANY is perhaps a bad naming).",
      "parentUuid": "49435992_675acc51",
      "range": {
        "startLine": 1558,
        "startChar": 26,
        "endLine": 1558,
        "endChar": 40
      },
      "revId": "9fdd50fe2907a452b59ca44b6f78a4c334b897df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}