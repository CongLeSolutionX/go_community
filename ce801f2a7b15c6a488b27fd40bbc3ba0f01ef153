{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f70605b3_3db399d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-14T14:21:06Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dce801f2a\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "ce801f2a7b15c6a488b27fd40bbc3ba0f01ef153",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7051529b_7684decd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-14T14:32:56Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "f70605b3_3db399d3",
      "tag": "autogenerated:trybots~happy",
      "revId": "ce801f2a7b15c6a488b27fd40bbc3ba0f01ef153",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c668e1c6_76c4e15b",
        "filename": "src/runtime/cpuprof.go",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-08-14T14:35:04Z",
      "side": 1,
      "message": "maybe also point at the comment on sigNoteSetup explaining that notes are not async-signal-safe",
      "range": {
        "startLine": 232,
        "startChar": 32,
        "endLine": 232,
        "endChar": 45
      },
      "revId": "ce801f2a7b15c6a488b27fd40bbc3ba0f01ef153",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7130accb_f9ee66b5",
        "filename": "src/runtime/cpuprof.go",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-14T15:41:26Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "c668e1c6_76c4e15b",
      "range": {
        "startLine": 232,
        "startChar": 32,
        "endLine": 232,
        "endChar": 45
      },
      "revId": "ce801f2a7b15c6a488b27fd40bbc3ba0f01ef153",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1ae7d42_ec5f696a",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 2
      },
      "lineNbr": 494,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-08-14T14:33:55Z",
      "side": 1,
      "message": "this seems like an odd place to put this comment. I think the comment would make more sense if there was a crash after this point on darwin and/or ios.\n\nthough it might be a better idea put a crash in the Darwin sema* functions if called from a signal handler (`getg() \u003d\u003d getg().m.gsignal`), before doing anything dangerous. maybe we\u0027ll find more issues!",
      "range": {
        "startLine": 494,
        "startChar": 3,
        "endLine": 494,
        "endChar": 99
      },
      "revId": "ce801f2a7b15c6a488b27fd40bbc3ba0f01ef153",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ceb538b_158bf6de",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 2
      },
      "lineNbr": 494,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-14T15:20:27Z",
      "side": 1,
      "message": "I\u0027d like to do the crashing sema* functions in a different CL, but I also think that is the right place to do the crash and that it doesn\u0027t need an additional crash here -- the code\u0027s currently correct and it has a cautionary comment.",
      "parentUuid": "b1ae7d42_ec5f696a",
      "range": {
        "startLine": 494,
        "startChar": 3,
        "endLine": 494,
        "endChar": 99
      },
      "revId": "ce801f2a7b15c6a488b27fd40bbc3ba0f01ef153",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31dc5393_7d00e0ae",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 2
      },
      "lineNbr": 494,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-08-14T15:33:13Z",
      "side": 1,
      "message": "fair enough. separate CL is fine.",
      "parentUuid": "8ceb538b_158bf6de",
      "range": {
        "startLine": 494,
        "startChar": 3,
        "endLine": 494,
        "endChar": 99
      },
      "revId": "ce801f2a7b15c6a488b27fd40bbc3ba0f01ef153",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06d83c2a_823f2d3f",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 2
      },
      "lineNbr": 494,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-14T15:41:26Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8ceb538b_158bf6de",
      "range": {
        "startLine": 494,
        "startChar": 3,
        "endLine": 494,
        "endChar": 99
      },
      "revId": "ce801f2a7b15c6a488b27fd40bbc3ba0f01ef153",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}