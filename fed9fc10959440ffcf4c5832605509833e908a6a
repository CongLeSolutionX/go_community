{
  "comments": [
    {
      "key": {
        "uuid": "13605896_00f1d684",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-11-06T20:14:25Z",
      "side": 1,
      "message": "s/The case/Cases/",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 8
      },
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "309c5c86_af28960d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 5190
      },
      "writtenOn": "2017-11-06T21:27:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "13605896_00f1d684",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 8
      },
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9b6ce00_733bee7e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-11-06T20:14:25Z",
      "side": 1,
      "message": "s/explicitely/explicitly/",
      "range": {
        "startLine": 22,
        "startChar": 24,
        "endLine": 22,
        "endChar": 35
      },
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69e866a6_03c57012",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 5190
      },
      "writtenOn": "2017-11-06T21:27:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9b6ce00_733bee7e",
      "range": {
        "startLine": 22,
        "startChar": 24,
        "endLine": 22,
        "endChar": 35
      },
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88c0e8bd_b2b42124",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-11-06T20:14:25Z",
      "side": 1,
      "message": "s/requiriement/requirement/",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 20
      },
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d278fdff_4579de73",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 5190
      },
      "writtenOn": "2017-11-06T21:27:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88c0e8bd_b2b42124",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 20
      },
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d4c2833_1cf96178",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-11-06T20:14:25Z",
      "side": 1,
      "message": "s/doesn\u0027t/don\u0027t/",
      "range": {
        "startLine": 46,
        "startChar": 20,
        "endLine": 46,
        "endChar": 27
      },
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0208e3d4_77479afd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 5190
      },
      "writtenOn": "2017-11-06T21:27:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d4c2833_1cf96178",
      "range": {
        "startLine": 46,
        "startChar": 20,
        "endLine": 46,
        "endChar": 27
      },
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83b1091d_faefcb94",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-11-06T20:14:25Z",
      "side": 1,
      "message": "Missing period.",
      "range": {
        "startLine": 50,
        "startChar": 38,
        "endLine": 50,
        "endChar": 0
      },
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c342b5b2_c64a4de8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 5190
      },
      "writtenOn": "2017-11-06T21:27:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83b1091d_faefcb94",
      "range": {
        "startLine": 50,
        "startChar": 38,
        "endLine": 50,
        "endChar": 0
      },
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6a16dfe_86dea279",
        "filename": "src/runtime/testdata/testprogcgo/traceback.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-11-06T20:14:25Z",
      "side": 1,
      "message": "I think we can test for specific values here.\n    } else if (arg-\u003emode \u003d\u003d 1) {\n        ...\n    } else {\n        abort();\n    }",
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc2d3b03_864e815c",
        "filename": "src/runtime/testdata/testprogcgo/traceback.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 5190
      },
      "writtenOn": "2017-11-06T21:27:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f6a16dfe_86dea279",
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0b45bfc_a25322b0",
        "filename": "src/runtime/traceback.go",
        "patchSetId": 1
      },
      "lineNbr": 876,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-11-06T20:14:25Z",
      "side": 1,
      "message": "I think I would omit this sentence here.  It would be more appropriate in the discussion of the symbolizer function below.",
      "range": {
        "startLine": 875,
        "startChar": 11,
        "endLine": 876,
        "endChar": 13
      },
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed95f821_e56a1ccd",
        "filename": "src/runtime/traceback.go",
        "patchSetId": 1
      },
      "lineNbr": 876,
      "author": {
        "id": 5190
      },
      "writtenOn": "2017-11-06T21:27:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0b45bfc_a25322b0",
      "range": {
        "startLine": 875,
        "startChar": 11,
        "endLine": 876,
        "endChar": 13
      },
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0077f748_411c86ea",
        "filename": "src/runtime/traceback.go",
        "patchSetId": 1
      },
      "lineNbr": 977,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-11-06T20:14:25Z",
      "side": 1,
      "message": "Make this a short comment here, and expand on it below.  Also, it shouldn\u0027t be a \"hint\".  It should definitively state what is happening.\n\nBelow, it should be describes in or immediately after the single sentence paragraph that describes the PC field.  Also the next paragraph needs to be changed, as it is no longer true that all fields other than PC are zero.",
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73aa2d43_352b6667",
        "filename": "src/runtime/traceback.go",
        "patchSetId": 1
      },
      "lineNbr": 1081,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-11-06T20:14:25Z",
      "side": 1,
      "message": "The CL description lists three modes.  Is this approach going to let us see the right distinctions?  Should runtime.Stack symbolize C symbols?  Should callers of runtime.CallersFrames other than the profiler see symbolized C symbols?  I don\u0027t understand why differentiating based on whether the program is crashing or not is going to give us the right distinction.\n\nIt seems to me that what matters in the issue is whether we are profiling or not, because profiling calls CallersFrames a lot and that causes the symbolizer to be called a lot.  That means that we need to set the mode argument based on whether we are calling CallerFrames from the profiler.  We could do that by adding a new API accessible only from runtime/pprof, that would be like CallersFrames only with a mode to pass to the cgo symbolizer.  We could use that new API for the call in runtime/trace.go as well.",
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca8d0ab6_c4c8c437",
        "filename": "src/runtime/traceback.go",
        "patchSetId": 1
      },
      "lineNbr": 1081,
      "author": {
        "id": 5190
      },
      "writtenOn": "2017-11-06T21:27:05Z",
      "side": 1,
      "message": "I see. Yes, we can special case symbolization for runtime/pprof or trace.\n\nOn the other hand, I don\u0027t see a reason to choose less performant symbolizer implementation for  CallersFrames or runtime.Stack called in non-crash case. For example, the debug/pprof/goroutine with debug\u003e1 is implemented using runtime.Stack and it\u0027s possible that the output includes a fair number of non-go symbols. Furthermore, there is nothing that prevents users from using \n CallersFrames for many non-go symbols.",
      "parentUuid": "73aa2d43_352b6667",
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14a53b34_40e32df2",
        "filename": "src/runtime/traceback.go",
        "patchSetId": 1
      },
      "lineNbr": 1081,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-11-07T01:42:00Z",
      "side": 1,
      "message": "I would say that people are making a choice: to call runtime.SetCgoTraceback or to not call it.  Most people obviously don\u0027t call it, and for them none of this matters.  The people who do call it are presumably doing so because they want to get symbols for non-Go functions in their tracebacks.  Yes, the output may include a fair number of non-Go symbols; all the more reason why they want to see that information.  You are describing symbolization of non-Go PC values as a less-performant implementation, but it is an implementation that the user has explicitly chosen.  What we are talking about here is a way to give more flexibility to that implementation.  People who care deeply about the performance of symbolization of non-Go symbols won\u0027t call runtime.SetCgoTraceback in the first place, or at least if they do they won\u0027t pass in a symbolizer function.\n\nI think that debug/pprof/goroutine calls runtime.GoroutineProfile, not runtime.Stack, so that (runtime.GoroutineProfile) could also be a mode.",
      "parentUuid": "ca8d0ab6_c4c8c437",
      "revId": "fed9fc10959440ffcf4c5832605509833e908a6a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}