{
  "comments": [
    {
      "key": {
        "uuid": "0b28aa68_4d85ca3d",
        "filename": "src/sort/example_search_test.go",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-09-16T14:00:50Z",
      "side": 1,
      "message": "shouldn\u0027t this still be i \u003c len(a) like line 18, just defensively to avoid crashes if there are no elements in a?",
      "revId": "79167bbd9c71017e18836a3e5e40261b57012358",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50efb36f_e0cc022d",
        "filename": "src/sort/example_search_test.go",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 15015
      },
      "writtenOn": "2016-09-16T14:18:33Z",
      "side": 1,
      "message": "The algorithm is at https://golang.org/src/sort/search.go?s\u003d2247:2287#L49\n\nin binary search we trim the range until there is just one element left\n\nthe point of the check in the previous function is that when checking for lower bound in an ascending order array for an element greater than the last one, the algorithm will return length\n\nhere, the lower bound will never go below 0, so 0 is the lowest value returned, which is always a valid array index\n\nideally you would probably check whether your collection is empty before searching something in it",
      "parentUuid": "0b28aa68_4d85ca3d",
      "revId": "79167bbd9c71017e18836a3e5e40261b57012358",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50efb36f_a0d6fab6",
        "filename": "src/sort/example_search_test.go",
        "patchSetId": 10
      },
      "lineNbr": 35,
      "author": {
        "id": 15015
      },
      "writtenOn": "2016-09-16T14:22:50Z",
      "side": 1,
      "message": "sorry just checked, and turns out it is required\n\nhttps://play.golang.org/p/aW02noB00a",
      "parentUuid": "50efb36f_e0cc022d",
      "revId": "79167bbd9c71017e18836a3e5e40261b57012358",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}