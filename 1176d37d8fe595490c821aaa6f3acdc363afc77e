{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e8e333bd_003d8830",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-01-13T18:11:39Z",
      "side": 1,
      "message": "Is it possible to add a test? The encoding test in cmd/asm cannot test constant pool. Maybe we can test a small program that uses VMOVQ to load a constant and check the constant is correct,",
      "revId": "1176d37d8fe595490c821aaa6f3acdc363afc77e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78437be6_284db1cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-01-13T18:16:35Z",
      "side": 1,
      "message": "Could you put this CL first? This fixes a correctness bug, and I want to get this in for Go 1.16. The other can wait for Go 1.17, as it is just a cleanup and we\u0027re in the freeze now.",
      "revId": "1176d37d8fe595490c821aaa6f3acdc363afc77e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e744339_f9d26214",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 24534
      },
      "writtenOn": "2021-01-14T01:34:48Z",
      "side": 1,
      "message": "Sure, thanks.",
      "parentUuid": "78437be6_284db1cc",
      "revId": "1176d37d8fe595490c821aaa6f3acdc363afc77e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5e7e45b_81d87a30",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 24534
      },
      "writtenOn": "2021-01-14T01:42:59Z",
      "side": 1,
      "message": "Oh it suddenly occurred to me that we cannot do this, because all the constant classes supported by VMOVQ are not listed in this check. For example BITCON. I don\u0027t really want to add these constant classes to the check in this CL.",
      "parentUuid": "4e744339_f9d26214",
      "revId": "1176d37d8fe595490c821aaa6f3acdc363afc77e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2ad90d7_c62775f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-01-14T01:45:28Z",
      "side": 1,
      "message": "Why does that matter? Here we are using a new function addpool128, not the existing function.",
      "parentUuid": "d5e7e45b_81d87a30",
      "revId": "1176d37d8fe595490c821aaa6f3acdc363afc77e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e9a3e6c_0fe93949",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 24534
      },
      "writtenOn": "2021-01-14T01:48:40Z",
      "side": 1,
      "message": "Oh yes, I am still thinking about the previous code. Sorry",
      "parentUuid": "a2ad90d7_c62775f0",
      "revId": "1176d37d8fe595490c821aaa6f3acdc363afc77e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93ad892b_c058daad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 24534
      },
      "writtenOn": "2021-01-19T01:44:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e9a3e6c_0fe93949",
      "revId": "1176d37d8fe595490c821aaa6f3acdc363afc77e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd081fa2_366aa266",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 2
      },
      "lineNbr": 1265,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-01-13T18:11:39Z",
      "side": 1,
      "message": "Offset (capital O).",
      "range": {
        "startLine": 1265,
        "startChar": 54,
        "endLine": 1265,
        "endChar": 60
      },
      "revId": "1176d37d8fe595490c821aaa6f3acdc363afc77e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9f00b46_24309d2f",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 2
      },
      "lineNbr": 1265,
      "author": {
        "id": 24534
      },
      "writtenOn": "2021-01-19T01:44:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd081fa2_366aa266",
      "range": {
        "startLine": 1265,
        "startChar": 54,
        "endLine": 1265,
        "endChar": 60
      },
      "revId": "1176d37d8fe595490c821aaa6f3acdc363afc77e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd98eef3_d393b614",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 2
      },
      "lineNbr": 1268,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-01-13T18:11:39Z",
      "side": 1,
      "message": "Is this really necessary? Can you just use al.Offset and ah.Offset?",
      "range": {
        "startLine": 1267,
        "startChar": 0,
        "endLine": 1268,
        "endChar": 20
      },
      "revId": "1176d37d8fe595490c821aaa6f3acdc363afc77e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8053ac2b_aa9fe9cd",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 2
      },
      "lineNbr": 1268,
      "author": {
        "id": 24534
      },
      "writtenOn": "2021-01-19T01:44:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd98eef3_d393b614",
      "range": {
        "startLine": 1267,
        "startChar": 0,
        "endLine": 1268,
        "endChar": 20
      },
      "revId": "1176d37d8fe595490c821aaa6f3acdc363afc77e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}