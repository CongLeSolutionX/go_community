{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "db338651_b0b933e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-04-27T20:10:00Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d4d64344d",
      "tag": "autogenerated:trybots~beginning",
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90ca10da_e9b0599e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-04-27T20:49:46Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "db338651_b0b933e9",
      "tag": "autogenerated:trybots~happy",
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c8afd31_238a19aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-27T22:18:32Z",
      "side": 1,
      "message": "Looks good overall. Thanks.",
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97c51843_882f44c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-04-28T02:01:32Z",
      "side": 1,
      "message": "I did a preliminary test (a quantity test, not a quality test)\nwith optargorder -- github.com/dr2chase/optargorder -- and\nthe numbers are superficially worse.  The test could be broken,\nof course.  It is whining about \"too many pieces\".\n\nI\u0027ll also try by hand.\nThe test binary for optargorder, is optargorder.\nIgnore the COULD NOT PARSE complaints.\n\n```\n# drchase-macbookpro ~/work/gocode/src/github.com/dr2chase/optargorder 21-04-27 21:51:37\n./optargorder ./old-dbg\n\tWARNING: COULD NOT PARSE (strconv.ryuDigits in /Users/drchase/work/go-debug/src/strconv/ftoaryu.go, err \u003d in:2:1: expected ), found \u0027}\u0027 (and 5 more errors))\n\tWARNING: COULD NOT PARSE (strconv.ryuDigits32 in /Users/drchase/work/go-debug/src/strconv/ftoaryu.go, err \u003d in:2:1: expected ), found \u0027}\u0027 (and 5 more errors))\n\tWARNING: COULD NOT PARSE (go/scanner.lower in /Users/drchase/work/go-debug/src/go/scanner/scanner.go, err \u003d in:2:1: expected declaration, found \u0027}\u0027)\nnFunctions,argumentError,tooManyPieces,missingSource,wrongOrder,missingDwarf,duplicated,1-totalErrors/nFunctions\n3300,458,31,2,35,7,11,0.835152\n# drchase-macbookpro ~/work/gocode/src/github.com/dr2chase/optargorder 21-04-27 21:51:48\n./optargorder ./new-dbg\n\tWARNING: COULD NOT PARSE (strconv.ryuDigits in /Users/drchase/work/go-debug/src/strconv/ftoaryu.go, err \u003d in:2:1: expected ), found \u0027}\u0027 (and 5 more errors))\n\tWARNING: COULD NOT PARSE (strconv.ryuDigits32 in /Users/drchase/work/go-debug/src/strconv/ftoaryu.go, err \u003d in:2:1: expected ), found \u0027}\u0027 (and 5 more errors))\n\tWARNING: COULD NOT PARSE (go/scanner.lower in /Users/drchase/work/go-debug/src/go/scanner/scanner.go, err \u003d in:2:1: expected declaration, found \u0027}\u0027)\nnFunctions,argumentError,tooManyPieces,missingSource,wrongOrder,missingDwarf,duplicated,1-totalErrors/nFunctions\n3300,458,821,2,16,5,11,0.602121\n```\n",
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "354d923f_efebd6cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2021-04-28T11:56:26Z",
      "side": 1,
      "message": "Thanks, I\u0027ll look that over. \n\nLooking at the code, https://github.com/dr2chase/optargorder/blob/master/checkargorder.go#L306, it seems to be assuming that everything is in memory as opposed to registers? Which would definitely not be the case. I\u0027ll poke at it a little and see if I can understand the logic.",
      "parentUuid": "97c51843_882f44c1",
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efe07240_0e8b8aab",
        "filename": "src/cmd/compile/internal/dwarfgen/dwarf.go",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-27T22:18:32Z",
      "side": 1,
      "message": "Where in the code controls this is only for input parameters? (Sorry, I\u0027m not really familiar with this code)",
      "range": {
        "startLine": 326,
        "startChar": 0,
        "endLine": 329,
        "endChar": 54
      },
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74a7b357_bb4b0968",
        "filename": "src/cmd/compile/internal/ssa/debug.go",
        "patchSetId": 2
      },
      "lineNbr": 1123,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-27T22:18:32Z",
      "side": 1,
      "message": "(Not for this CL) this comment is outdated.",
      "range": {
        "startLine": 1122,
        "startChar": 0,
        "endLine": 1123,
        "endChar": 13
      },
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "915460e0_8f75e084",
        "filename": "src/cmd/compile/internal/ssa/debug.go",
        "patchSetId": 2
      },
      "lineNbr": 1250,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-27T22:18:32Z",
      "side": 1,
      "message": "We could just check a.Op without using a map.",
      "range": {
        "startLine": 1250,
        "startChar": 6,
        "endLine": 1250,
        "endChar": 31
      },
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0f35a66_d2225aa5",
        "filename": "src/cmd/compile/internal/ssa/debug.go",
        "patchSetId": 2
      },
      "lineNbr": 1255,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-27T22:18:32Z",
      "side": 1,
      "message": "You probably can check that the other input is OpSP, and v.Aux is a Name of PPARAM.",
      "range": {
        "startLine": 1255,
        "startChar": 4,
        "endLine": 1255,
        "endChar": 22
      },
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0ef14de_1532a805",
        "filename": "src/cmd/compile/internal/ssa/debug.go",
        "patchSetId": 2
      },
      "lineNbr": 1261,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-27T22:18:32Z",
      "side": 1,
      "message": "This probably will likely to have false positives. What about walking forward? All the spills should be pretty early, so it shouldn\u0027t walk very long. We can stop if you see a CALL or something.",
      "range": {
        "startLine": 1261,
        "startChar": 8,
        "endLine": 1261,
        "endChar": 22
      },
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9cd3243_fabe05be",
        "filename": "src/cmd/compile/internal/ssa/debug.go",
        "patchSetId": 2
      },
      "lineNbr": 1313,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-27T22:18:32Z",
      "side": 1,
      "message": "What about parameters passed on stack?",
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9dbe024_793023cc",
        "filename": "src/cmd/compile/internal/ssa/debug.go",
        "patchSetId": 2
      },
      "lineNbr": 1336,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-27T22:18:32Z",
      "side": 1,
      "message": "Ideally for each parameter we could use the stack location as long as that parameter is spilled. I guess it is fine to change them altogether, as the registers should also be live until at least all of them are spilled.",
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ac87d89_6f1360d5",
        "filename": "src/cmd/compile/internal/ssa/debug.go",
        "patchSetId": 2
      },
      "lineNbr": 1351,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-27T22:18:32Z",
      "side": 1,
      "message": "I\u0027m not sure this. I think this offset is the offset within n, not including n\u0027s frame offset. (I could be wrong.)",
      "range": {
        "startLine": 1351,
        "startChar": 45,
        "endLine": 1351,
        "endChar": 48
      },
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3c08170_516d3ba1",
        "filename": "src/cmd/compile/internal/ssa/debug.go",
        "patchSetId": 2
      },
      "lineNbr": 1391,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-27T22:18:32Z",
      "side": 1,
      "message": "Is this possible? list is not nil at line 1362 but is nil here?",
      "range": {
        "startLine": 1388,
        "startChar": 2,
        "endLine": 1391,
        "endChar": 3
      },
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed80c080_d0f8d80f",
        "filename": "src/cmd/compile/internal/ssa/debug.go",
        "patchSetId": 2
      },
      "lineNbr": 1394,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-27T22:18:32Z",
      "side": 1,
      "message": "I\u0027m not sure I understand this. call_frame_cfa sounds like the FP. But the code above also does this, so it is probably okay.",
      "range": {
        "startLine": 1394,
        "startChar": 29,
        "endLine": 1394,
        "endChar": 49
      },
      "revId": "4d64344d956fccc7d4077cddddee42651664c58c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}