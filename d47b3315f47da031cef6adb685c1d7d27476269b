{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "72691624_14c45680",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-11T14:30:50Z",
      "side": 1,
      "message": "built instead of build?",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c56fc01_316326c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-05-11T17:07:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72691624_14c45680",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc6c3bbe_0c0e272a",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-11T14:30:50Z",
      "side": 1,
      "message": "Which \"they\"? The caller or callee?",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3d9c617_096480a8",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-05-11T17:07:36Z",
      "side": 1,
      "message": "The caller (an external object could contain both types of functions.)",
      "parentUuid": "bc6c3bbe_0c0e272a",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3473d6d_92e8f9cd",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 276,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-11T14:30:50Z",
      "side": 1,
      "message": "All local symbols in the caller object?",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dcfeeb19_53236cad",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 276,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-05-11T17:07:36Z",
      "side": 1,
      "message": "All local symbols share the same TOC pointer. Not all use it, or need it set up in R2 on entry. I\u0027ll try to clarify the comment.",
      "parentUuid": "b3473d6d_92e8f9cd",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b24113d9_5080508e",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-11T14:30:50Z",
      "side": 1,
      "message": "If the Go symbol is not PIC is this really true (what happens when non-PIC Go symbol calls cgo.)",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b237cea8_ae039ecc",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-05-11T17:07:36Z",
      "side": 1,
      "message": "This cannot be a Go symbol, this is processing an R_PPC64_REL24 relocation within an external object.",
      "parentUuid": "b24113d9_5080508e",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21c9b4eb_d622437b",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-11T20:50:35Z",
      "side": 1,
      "message": "What I was trying to say is, if the caller (not Go) calls into a Go symbol, I think you are saying that R2 is always preserved. But what if the Go callee is a non-PIC symbol that then calls into cgo which clobbers R2. I think that can happen? The cgo C code would initialize its own R2 and not try to the save the caller\u0027s R2.",
      "parentUuid": "b237cea8_ae039ecc",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8948fe9_8f897a5a",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-05-11T22:11:46Z",
      "side": 1,
      "message": "I don\u0027t think R2 gets clobbered by any direct calls back into Go today. In all buildmodes, R2 should be preserved in runtime.asmcgocall.\n\nThough, the cases where external objects call into Go should be few and surgical.",
      "parentUuid": "21c9b4eb_d622437b",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08b145b9_d4ed8c23",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-12T11:42:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d8948fe9_8f897a5a",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba9036e9_1c99c0b4",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 496,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-11T14:30:50Z",
      "side": 1,
      "message": "What are the other assumptions and how are they handled?",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0bc1a46_bc1b564f",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 496,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-05-11T17:07:36Z",
      "side": 1,
      "message": "That is the only one. Though, maybe case 3 should be improved to generate code based on buildmode and GOPPC64 (this also applies to regular call stubs too).",
      "parentUuid": "ba9036e9_1c99c0b4",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "452bcd15_7ddc9f14",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 496,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-11T20:50:35Z",
      "side": 1,
      "message": "OK now I reread it, it sounds OK.",
      "parentUuid": "b0bc1a46_bc1b564f",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "293bd295_de9a0c3f",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 514,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-11T14:30:50Z",
      "side": 1,
      "message": "What is position dependent? The targ address or the PLT. I don\u0027t see how that affects the code.",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "664ae83f_99c20c0f",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 514,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-05-11T17:07:36Z",
      "side": 1,
      "message": "targ@plt. s/This/This stub/.",
      "parentUuid": "293bd295_de9a0c3f",
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3654a2fe_74b3b588",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 2
      },
      "lineNbr": 1235,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-05-05T21:01:29Z",
      "side": 1,
      "message": "Reminder to myself: ensure trybot runs on AIX.",
      "range": {
        "startLine": 1235,
        "startChar": 14,
        "endLine": 1235,
        "endChar": 27
      },
      "revId": "d47b3315f47da031cef6adb685c1d7d27476269b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}