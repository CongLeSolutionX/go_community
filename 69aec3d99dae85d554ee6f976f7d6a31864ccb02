{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4f49980c_87631dad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 6005
      },
      "writtenOn": "2020-11-06T21:37:02Z",
      "side": 1,
      "message": "I\u0027ve been investigating #35170 and hoping to post an update there soon. As part of that, we can easily turn off the reboot test if we want to (but I hope we won\u0027t have to).",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 66
      },
      "revId": "69aec3d99dae85d554ee6f976f7d6a31864ccb02",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58fbc7e6_765b3d5f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-11-06T21:26:00Z",
      "side": 1,
      "message": "TRY\u003dandroid,ios,plan9,js",
      "revId": "69aec3d99dae85d554ee6f976f7d6a31864ccb02",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60b55cf1_83023628",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6005
      },
      "writtenOn": "2020-11-06T21:37:02Z",
      "side": 1,
      "message": "I\u0027m currently have a slight preference against this change: I\u0027d like to avoid a generalized \"fastOS\" abstraction. I think doing so will make it harder to review changes to it in the future. Right now each block is independent and has comments explaining the logic. (I would prefer a change that avoids adding shared variables and tweaks individual test blocks as needed.)\n\nI would like to less builder-specific configuration here and more in x/build/dashboard, if possible, and this change doesn\u0027t seem to move us in that direction.\n\nPlease comment if you have other suggestions, this is just based on my current understanding of the situation.",
      "revId": "69aec3d99dae85d554ee6f976f7d6a31864ccb02",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b848646_48f5d8f2",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 6005
      },
      "writtenOn": "2020-11-06T21:37:02Z",
      "side": 1,
      "message": "I have a slight worry about creating a \"fastOS\" abstraction. It seems adding/removing an OS from the list can get tests to fail because of missing capabilities (e.g., if an OS is fast OS but lacks exec) or succeed because coverage is reduced.\n\nI think I would be more okay with a \"fastBuilder\" abstraction:\n\n    fastBuilder :\u003d os.Getenv(\"GO_BUILDER_NAME\") !\u003d \"\" \u0026\u0026 goos !\u003d \"android\" \u0026\u0026 !t.iOS() \u0026\u0026 goos !\u003d \"js\" \u0026\u0026 goos !\u003d \"plan9\"\n\nBut some of the cases below should probably still check both that a builder is fast (via the var abstraction) and have the necessary capabilities.\n\nAs one data point, I think GOOS\u003djs should be one of our fastest builders/TryBots because it skips so many tests due to not having certain capabilities. It is sometimes slow (#35170) but I think that\u0027s due some problem somewhere, not an inherent property.",
      "revId": "69aec3d99dae85d554ee6f976f7d6a31864ccb02",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}