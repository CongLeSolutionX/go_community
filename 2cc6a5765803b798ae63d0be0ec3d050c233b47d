{
  "comments": [
    {
      "key": {
        "uuid": "77e669b7_8de19a62",
        "filename": "src/runtime/map_fast32.go",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 16006
      },
      "writtenOn": "2018-10-03T08:34:16Z",
      "side": 1,
      "message": "Thanks for the CL and map improvements.\n\nWe should avoid adding function call overhead and extra variables which can cause stack spills in mapassign_fast32_helper. This will likely make performance even slower for the very hot map\u003d fast functions. We could start with mappassignop_fast functions with duplicated code that clear on reuse and benchmark the difference vs normal mapassign functions then iterate from there. It might not be possible to make mapassignop a wrapper without hurting mapassign performance and even then we might end up with much more code. In case we cant make changes without hurting map\u003d performance I would vote to leave the code as is and leave the map delete slow down. In profiling data I see mapassigns using ~20-1000 times (depending on type) more CPU in total then mapdeletes.\n\nPlease benchmark any changes to map code with ~20 runs each and compare using benchcmp before review.",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 186,
        "endChar": 1
      },
      "revId": "2cc6a5765803b798ae63d0be0ec3d050c233b47d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}