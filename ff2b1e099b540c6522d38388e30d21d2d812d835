{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0f4a8d64_fea727e3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-11-16T01:53:16Z",
      "side": 1,
      "message": "TRY\u003dlongtest",
      "revId": "ff2b1e099b540c6522d38388e30d21d2d812d835",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbd04dbd_9f8bad3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-16T01:53:35Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003dff2b1e09",
      "tag": "autogenerated:trybots~beginning",
      "revId": "ff2b1e099b540c6522d38388e30d21d2d812d835",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c422958_2ac3a690",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-16T02:07:41Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n",
      "parentUuid": "cbd04dbd_9f8bad3b",
      "tag": "autogenerated:trybots~happy",
      "revId": "ff2b1e099b540c6522d38388e30d21d2d812d835",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8aa2e84_db71aca4",
        "filename": "src/internal/fuzz/worker.go",
        "patchSetId": 1
      },
      "lineNbr": 1119,
      "author": {
        "id": 28759
      },
      "writtenOn": "2021-11-16T15:38:13Z",
      "side": 1,
      "message": "Could we just always do it this way? Then you don\u0027t need resp.Depth at all, and you can just do this:\n\n  for i :\u003d int64(0); i \u003c resp.Count%chainedMutations; i++ {\n     ...\n   }",
      "range": {
        "startLine": 1119,
        "startChar": 4,
        "endLine": 1119,
        "endChar": 54
      },
      "revId": "ff2b1e099b540c6522d38388e30d21d2d812d835",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "210a4ce2_db9aa884",
        "filename": "src/internal/fuzz/worker.go",
        "patchSetId": 1
      },
      "lineNbr": 1119,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-11-16T17:03:54Z",
      "side": 1,
      "message": "Yeah, I was experimenting with randomizing the number of chained mutations, in which case the worker needs to include that information since the coordinator doesn\u0027t know how many the worker did, but for now it\u0027s probably fine to just hard code it and do away with this extra field.\n\nSide note: we communicate the count twice, we set it in the fuzzResponse in the worker, and then overwrite it in the coordinator using the count in the shared memory header. We should really just do this once.",
      "parentUuid": "b8aa2e84_db71aca4",
      "range": {
        "startLine": 1119,
        "startChar": 4,
        "endLine": 1119,
        "endChar": 54
      },
      "revId": "ff2b1e099b540c6522d38388e30d21d2d812d835",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b35d0ad_aa684f1c",
        "filename": "src/internal/fuzz/worker.go",
        "patchSetId": 1
      },
      "lineNbr": 1119,
      "author": {
        "id": 28759
      },
      "writtenOn": "2021-11-16T17:42:14Z",
      "side": 1,
      "message": "Agreed about the need to refactor. I\u0027ll file an issue and see if we can get a freeze exception to do that.",
      "parentUuid": "210a4ce2_db9aa884",
      "range": {
        "startLine": 1119,
        "startChar": 4,
        "endLine": 1119,
        "endChar": 54
      },
      "revId": "ff2b1e099b540c6522d38388e30d21d2d812d835",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}