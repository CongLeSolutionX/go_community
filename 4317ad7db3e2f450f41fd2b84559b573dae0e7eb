{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5a0c72d9_4c949ee8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-11T20:03:22Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d4317ad7d\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "4317ad7db3e2f450f41fd2b84559b573dae0e7eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "852784ca_97f5a141",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-11T20:16:49Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "5a0c72d9_4c949ee8",
      "tag": "autogenerated:trybots~happy",
      "revId": "4317ad7db3e2f450f41fd2b84559b573dae0e7eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c92e945_95c734d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-11-11T20:38:52Z",
      "side": 1,
      "message": "A lot of the changes here are to pass around a *dnsConfig.  If I understand what is happening--and I may not--then we are passing around the dnsConfig to avoid needing to grab the mutex to load it.  But the only code that I see actually using that dnsConfig file is for the GOOS \u003d\u003d \"openbsd\" case.  I may very well be missing something, but what?  Do we really need to add all this code just for OpenBSD?  Can we just have the OpenBSD code grab the mutex when it needs it?",
      "revId": "4317ad7db3e2f450f41fd2b84559b573dae0e7eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf61322e_63c1a4a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 55874
      },
      "writtenOn": "2022-11-11T21:21:05Z",
      "side": 1,
      "message": "Oh, I did not include the reasoning in the message. This passing of *dnsConfig is to fix a possible race condition: hostLookupOrder() uses a dnsConfig (without unknownOPT) and returns FilesDNS order, but then a resolv.conf change occurs so the lookup methods will use a new config (let\u0027s say with  an unsupported option, so the unknownOPT is set). With this passing we will use the same config that was used to decide the lookup order.",
      "parentUuid": "0c92e945_95c734d2",
      "revId": "4317ad7db3e2f450f41fd2b84559b573dae0e7eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3efd8fc8_0955af81",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-11-11T22:44:50Z",
      "side": 1,
      "message": "Am I correct in thinking that the only place where this can make a different is GOOS \u003d\u003d \"openbsd\"?  I\u0027m not seeing where else there is a race.  Thanks.",
      "parentUuid": "bf61322e_63c1a4a5",
      "revId": "4317ad7db3e2f450f41fd2b84559b573dae0e7eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "737a323b_7ec87901",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 55874
      },
      "writtenOn": "2022-11-12T07:04:10Z",
      "side": 1,
      "message": "Why only openbsd? This can happen on all Unix systems.",
      "parentUuid": "3efd8fc8_0955af81",
      "revId": "4317ad7db3e2f450f41fd2b84559b573dae0e7eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36d5d359_6ae7e294",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-11-12T16:17:34Z",
      "side": 1,
      "message": "I see the openbsd case where hostLookupOrder looks at the conf.lookup field.  I don\u0027t see any other cases where it looks at a conf field.\n\nOK, I see, it\u0027s the unknownOpt field, which you did mention.  If unknownOpt is true, then we will use cgo.  So I guess the problem is that we might see that unknownOpt is false.  Then in goLookupIPCNAMEOrder we might reload resolv.conf, and at that point unknownOpt might become true, but we don\u0027t check it again.  So we might use a new server list that we probably shouldn\u0027t.\n\nIf that sounds accurate can you add that to the description?  Thanks.",
      "parentUuid": "737a323b_7ec87901",
      "revId": "4317ad7db3e2f450f41fd2b84559b573dae0e7eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1087d6d3_99050e08",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 55874
      },
      "writtenOn": "2022-11-12T17:44:27Z",
      "side": 1,
      "message": "updated",
      "parentUuid": "36d5d359_6ae7e294",
      "revId": "4317ad7db3e2f450f41fd2b84559b573dae0e7eb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}