{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a6845c56_ee424bc7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-02-04T19:29:38Z",
      "side": 1,
      "message": "What are the values on your systems?  There is nothing special about 4096 except that it happens to work.  What if we just change it to 256?",
      "revId": "1934626ab9ae62c0003317b3db70e41c3be39477",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88db547e_84904e87",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 28615
      },
      "writtenOn": "2022-02-04T20:10:52Z",
      "side": 1,
      "message": "I think the problem on my system is that Max is out of bounds as well as Cur.\n\nmaxFileLimit is 49152, but getrlimit returns {Cur:0xffff, Max:0x7fffffffffffffff}\n\ndo you think it\u0027d be better to leave this value hardcoded but clamp max as well? the real problem is that round-tripping through getrlimit-\u003esetrlimit fails.",
      "parentUuid": "a6845c56_ee424bc7",
      "revId": "1934626ab9ae62c0003317b3db70e41c3be39477",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77f8cccc_43f94399",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-02-04T20:17:05Z",
      "side": 1,
      "message": "Sure, we can try clamping max.\n\nOr just skip the test on darwin and ios.  New code should be using golang.org/x/sys/unix for this kind of thing anyhow.  Though it seems likely that the similar test in that package will have the same problem.",
      "parentUuid": "88db547e_84904e87",
      "revId": "1934626ab9ae62c0003317b3db70e41c3be39477",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "274298ff_3ea6f710",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 28615
      },
      "writtenOn": "2022-02-04T20:19:00Z",
      "side": 1,
      "message": "As a tactical matter, we don\u0027t run that package\u0027s tests on Fuchsia infrastructure - so that matters slightly less.\n\nIf we\u0027re clamping max, and realizing that round tripping through getrlimit -\u003e setrlimit causes a problem, we probably do want to query kern.maxfilelimit. Do you agree?",
      "parentUuid": "77f8cccc_43f94399",
      "revId": "1934626ab9ae62c0003317b3db70e41c3be39477",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "963135b0_d54cfbc9",
        "filename": "src/syscall/syscall_unix_test.go",
        "patchSetId": 2
      },
      "lineNbr": 330,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-02-04T19:29:38Z",
      "side": 1,
      "message": "The zero variable is a bit easier to read than this new code, doesn\u0027t seem necessary to change that.",
      "revId": "1934626ab9ae62c0003317b3db70e41c3be39477",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9655d4dc_91a5d5d4",
        "filename": "src/syscall/syscall_unix_test.go",
        "patchSetId": 2
      },
      "lineNbr": 345,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-02-04T19:29:38Z",
      "side": 1,
      "message": "I don\u0027t think this is going to work on Dragonfly and FreeBSD, where the type of the Cur field is int64.  It\u0027s unfortunate that we wound up with different field types on different systems but not sure we can do much about that now.",
      "revId": "1934626ab9ae62c0003317b3db70e41c3be39477",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}