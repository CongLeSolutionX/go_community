{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "70b1c1c1_c46bd9f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 31,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-03-01T16:27:17Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s true that the new logic results in universally failing type inference. I think it results in some cases that now succeed but then don\u0027t type-check.\n\nIIUC, this is one such case:\n\n```\nfunc F[P any](P, P)\n\ntype myInt int\n\nF(int(0), myInt(0))\n```",
      "range": {
        "startLine": 30,
        "startChar": 56,
        "endLine": 31,
        "endChar": 51
      },
      "revId": "2c0d53aa8b6992d8c48332e4eba3c4e40a7b1476",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da3b4f6a_e14e53ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-28T17:49:07Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d2c0d53aa\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "2c0d53aa8b6992d8c48332e4eba3c4e40a7b1476",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f43025c_2667295f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-28T17:59:40Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "da3b4f6a_e14e53ce",
      "tag": "autogenerated:trybots~happy",
      "revId": "2c0d53aa8b6992d8c48332e4eba3c4e40a7b1476",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b72ff2b2_3431ec46",
        "filename": "src/cmd/compile/internal/types2/unify.go",
        "patchSetId": 15
      },
      "lineNbr": 251,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-03-01T16:27:17Z",
      "side": 1,
      "message": "This comment is good, but I would say more about how and why this works.\n\nSpecifically, I would add something to the following effect, somewhere in this file:\n\n\"Through type unification, we may use predicate relationships between parameterized types to infer information about their structure and identity. For example: function arguments must be assignable to their corresponding parameters, and therefore the underlying type of function arguments and type parameter must be identical after substitution. Unification succeeds if this process infers unparameterized type arguments for all type parameters in the type parameter list.\n\nHowever, it is possible that type unification may succeed, and yet the resulting inferred types do not result in a valid signature (either because argument types are not assignable to function parameters, or type arguments do not satisfy their constraints). This is OK, as it will be caught later. However, we must be careful that type unification only unifies types that must be identical after substitution for predicates to be satisfied. As long as the algorithm only unifies types that must be identical after substitution, the unification result is unique.\n\nIn general, while we only unify \"necessary\" conditions, making these conditions more precise leads to improved type inference. For example, in the case of function parameter assignability, encoding the rule that \"at most one type may be a named type\" allows us to infer named type arguments where we otherwise would not.\n\nOne exception to this rule that we only unify necessary conditions is the treatment of untyped constants: as a final pass, we try unifying using the default types of untyped arguments. This is OK because...\"",
      "range": {
        "startLine": 251,
        "startChar": 4,
        "endLine": 251,
        "endChar": 6
      },
      "revId": "2c0d53aa8b6992d8c48332e4eba3c4e40a7b1476",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f62d6488_e0276875",
        "filename": "src/cmd/compile/internal/types2/unify.go",
        "patchSetId": 15
      },
      "lineNbr": 315,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-03-01T16:27:17Z",
      "side": 1,
      "message": "\"not in the type-parameter list that is being unified\"?",
      "range": {
        "startLine": 315,
        "startChar": 5,
        "endLine": 315,
        "endChar": 34
      },
      "revId": "2c0d53aa8b6992d8c48332e4eba3c4e40a7b1476",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}