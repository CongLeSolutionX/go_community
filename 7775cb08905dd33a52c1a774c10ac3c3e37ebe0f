{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "23400b03_dbca5870",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-07-14T19:22:30Z",
      "side": 1,
      "message": "TRY\u003dlongtest",
      "revId": "7775cb08905dd33a52c1a774c10ac3c3e37ebe0f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54979e51_98d08c61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-14T19:24:05Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d7775cb08\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "7775cb08905dd33a52c1a774c10ac3c3e37ebe0f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f16198ae_d29c1d07",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-14T19:36:56Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n",
      "parentUuid": "54979e51_98d08c61",
      "tag": "autogenerated:trybots~happy",
      "revId": "7775cb08905dd33a52c1a774c10ac3c3e37ebe0f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cd2d113_91617539",
        "filename": "src/cmd/go/testdata/script/mod_prefer_compatible.txt",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 5056
      },
      "writtenOn": "2023-07-15T11:15:11Z",
      "side": 1,
      "message": "Why does the existence of v2.1.0 matter to @v2.0?",
      "revId": "7775cb08905dd33a52c1a774c10ac3c3e37ebe0f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d2d7902_f432a64f",
        "filename": "src/cmd/go/testdata/script/mod_prefer_compatible.txt",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-07-17T18:20:21Z",
      "side": 1,
      "message": "`v2.1.0` has a `go.mod` file, so it is `github.com/russross/blackfriday/v2 v2.1.0` instead of `github.com/russross/blackfriday v2.1.0+incompatible`. We don\u0027t want to have to download and check the `go.mod` file for every single `v2` tag just in case one happens to work with the older module path — in the common case, a given major version is either entirely `+incompatible` or entirely a versioned import path.\n\nThis doesn\u0027t show up with the proxy because the proxy preprocesses the non-matching versions to their correct module path, filtering them out of the unversioned path. Since the proxy only serves the versions with a matching path, `cmd/go` doesn\u0027t notice the mismatched versions after the `v2.0.0` tag.\n\n(This behavior is for #34165, fine-tuned in CL 212317. It predates the `retract` directive, which addresses a lot of these “which path is the intended one” questions more directly now.)",
      "parentUuid": "8cd2d113_91617539",
      "revId": "7775cb08905dd33a52c1a774c10ac3c3e37ebe0f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}