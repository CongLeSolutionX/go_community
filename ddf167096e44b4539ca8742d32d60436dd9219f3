{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "088c2f6d_e4d109a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-07T17:55:17Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dddf16709\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "ddf167096e44b4539ca8742d32d60436dd9219f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6546053_1541058b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-07T17:58:30Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003dddf16709\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/ddf16709/linux-amd64_74d44b40.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "088c2f6d_e4d109a0",
      "tag": "autogenerated:trybots~progress",
      "revId": "ddf167096e44b4539ca8742d32d60436dd9219f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb229f69_2746fdf6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-07T18:02:45Z",
      "side": 1,
      "message": "10 of 44 TryBots failed.\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/ddf16709/linux-amd64_74d44b40.log\nFailed on linux-arm64: https://storage.googleapis.com/go-build-log/ddf16709/linux-arm64_914a0de2.log\nFailed on freebsd-amd64-12_3: https://storage.googleapis.com/go-build-log/ddf16709/freebsd-amd64-12_3_61448998.log\nFailed on linux-amd64-boringcrypto: https://storage.googleapis.com/go-build-log/ddf16709/linux-amd64-boringcrypto_cf6152b2.log\nFailed on linux-386: https://storage.googleapis.com/go-build-log/ddf16709/linux-386_e48b7317.log\nFailed on js-wasm-node18: https://storage.googleapis.com/go-build-log/ddf16709/js-wasm-node18_66adb3ae.log\nFailed on windows-amd64-2016: https://storage.googleapis.com/go-build-log/ddf16709/windows-amd64-2016_40cbb480.log\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/ddf16709/linux-amd64-race_aecf8b39.log\nFailed on openbsd-amd64-72: https://storage.googleapis.com/go-build-log/ddf16709/openbsd-amd64-72_b85a6df8.log\nFailed on windows-386-2016: https://storage.googleapis.com/go-build-log/ddf16709/windows-386-2016_ad3ff61a.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "088c2f6d_e4d109a0",
      "tag": "autogenerated:trybots~failed",
      "revId": "ddf167096e44b4539ca8742d32d60436dd9219f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7d612a1_77b94e4e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13550
      },
      "writtenOn": "2023-04-07T18:07:34Z",
      "side": 1,
      "message": "Hm, I guess this might have uncovered a bug. I\u0027m not familiar enough with the code to tell what would be the best way to move forward. Continuing to ignore the errors doesn\u0027t seem great.",
      "revId": "ddf167096e44b4539ca8742d32d60436dd9219f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cdad0e7_d43df11b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-04-07T19:26:12Z",
      "side": 1,
      "message": "It looks like we expect empty profile to be parsed without error. We probably need to add `if p.Empty() { return nil }` at the start of `postDecode`.",
      "parentUuid": "f7d612a1_77b94e4e",
      "revId": "ddf167096e44b4539ca8742d32d60436dd9219f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "364bbb11_e29125bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-04-07T19:26:49Z",
      "side": 1,
      "message": "I agree we probably shouldn\u0027t ignore errors.\n\nThe error shown in the test isn\u0027t very helpful because Parse falls back to parseLegacy on error, so only the parseLegacy error is passed through: https://cs.opensource.google/go/go/+/refs/heads/master:src/internal/profile/profile.go;l\u003d144;drc\u003d17770315280330ff3cbe4fb32620e020b0218bd6",
      "parentUuid": "f7d612a1_77b94e4e",
      "revId": "ddf167096e44b4539ca8742d32d60436dd9219f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dc64037_d8533715",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13550
      },
      "writtenOn": "2023-04-07T19:29:27Z",
      "side": 1,
      "message": "Thanks both - suggestion applied, and indeed the legacy fallback further confused me when I looked at this for five minutes :)",
      "parentUuid": "364bbb11_e29125bc",
      "revId": "ddf167096e44b4539ca8742d32d60436dd9219f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}