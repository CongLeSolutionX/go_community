{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8af5bc90_5d710982",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-16T00:34:50Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d160c5b66\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "160c5b6693606d520b03c9aba05ac4b9b20c3654",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6e0a963_813eb0f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-11-16T00:35:59Z",
      "side": 1,
      "message": "I just split this into 3 parts, the first two I think are acceptable, the third, maybe, I\u0027d have to make a case for it.  But the first two will make deferring the third less painful.",
      "revId": "160c5b6693606d520b03c9aba05ac4b9b20c3654",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a2fde1a_d0bd8a4c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-16T00:45:56Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "8af5bc90_5d710982",
      "tag": "autogenerated:trybots~happy",
      "revId": "160c5b6693606d520b03c9aba05ac4b9b20c3654",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ac745f7_d93b0e87",
        "filename": "src/cmd/compile/internal/logopt/log_opts.go",
        "patchSetId": 5
      },
      "lineNbr": 241,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-11-16T19:47:18Z",
      "side": 1,
      "message": "nit:\n\n```\nconst (\n  None logFormat \u003d iota\n  Json0\n  \n  LastFormat \u003d Json0\n  LastReport \u003d None\n)\n```",
      "revId": "160c5b6693606d520b03c9aba05ac4b9b20c3654",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82cc699a_baeb3741",
        "filename": "src/cmd/compile/internal/logopt/log_opts.go",
        "patchSetId": 5
      },
      "lineNbr": 245,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-11-16T19:47:18Z",
      "side": 1,
      "message": "Does the \"LSP format\" here refer to the LSP specification itself, or the wording of LSP messages?\n\nAlso, nit: please capitalize LSP consistently in prose.",
      "range": {
        "startLine": 245,
        "startChar": 3,
        "endLine": 245,
        "endChar": 13
      },
      "revId": "160c5b6693606d520b03c9aba05ac4b9b20c3654",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e47092af_c9328152",
        "filename": "src/cmd/compile/internal/logopt/log_opts.go",
        "patchSetId": 5
      },
      "lineNbr": 249,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-11-16T19:47:18Z",
      "side": 1,
      "message": "nit: typo; missing space\n\nAlso, edit the sentence to not repeat \"turns out\"?",
      "range": {
        "startLine": 249,
        "startChar": 21,
        "endLine": 249,
        "endChar": 40
      },
      "revId": "160c5b6693606d520b03c9aba05ac4b9b20c3654",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16120b56_ebb2770a",
        "filename": "src/cmd/compile/internal/logopt/log_opts.go",
        "patchSetId": 5
      },
      "lineNbr": 255,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-11-16T19:47:18Z",
      "side": 1,
      "message": "I\u0027m having trouble reading this sentence. Can you try restating it more simply?\n\nE.g., one complete sentence that says how things are today. Full stop. Then another complete sentence that says how you envision that changing in the future.\n\nAlso, as discussed in the team meeting this week, I\u0027m still very unclear what commitments we\u0027ve made to users about the behavior of the logopt functionality, and what consequences that has on the rest of the team in evolving the compiler.\n\nThe typecheckers have been migrating towards a consistent set of stable error messages, along with examples: https://pkg.go.dev/internal/types/errors@go1.21.4\n\nI\u0027d like to see the compiler\u0027s internal diagnostics move in a similar direction.",
      "range": {
        "startLine": 253,
        "startChar": 24,
        "endLine": 255,
        "endChar": 37
      },
      "revId": "160c5b6693606d520b03c9aba05ac4b9b20c3654",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c82654b6_a5f5cb8e",
        "filename": "src/cmd/compile/internal/logopt/log_opts.go",
        "patchSetId": 5
      },
      "lineNbr": 259,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-11-16T19:47:18Z",
      "side": 1,
      "message": "Can we represent this as a {major,minor int} pair instead of as a string?",
      "range": {
        "startLine": 259,
        "startChar": 16,
        "endLine": 259,
        "endChar": 22
      },
      "revId": "160c5b6693606d520b03c9aba05ac4b9b20c3654",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ecceb61_6632a784",
        "filename": "src/cmd/compile/internal/logopt/log_opts.go",
        "patchSetId": 5
      },
      "lineNbr": 265,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-11-16T19:47:18Z",
      "side": 1,
      "message": "I\u0027m really not a fan of overloading numbers to have orthogonal meaning. It means every user needs to know about the magic constants and how to encode what they want to do.\n\nThis is effectively giving users a second knob to dial behavior, but creating a new ad hoc mechanism for controlling that knob. Can we use an existing mechanism instead? E.g., add a `-d` flag? Or generalize the `-json` flag to take more than just a single number?",
      "revId": "160c5b6693606d520b03c9aba05ac4b9b20c3654",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de267d91_b3ec2190",
        "filename": "src/cmd/compile/internal/logopt/log_opts.go",
        "patchSetId": 5
      },
      "lineNbr": 285,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-11-16T19:47:18Z",
      "side": 1,
      "message": "nit: error messages should start with a lowercase letter",
      "revId": "160c5b6693606d520b03c9aba05ac4b9b20c3654",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11817c4a_f3bbbe2e",
        "filename": "src/cmd/compile/internal/logopt/log_opts.go",
        "patchSetId": 5
      },
      "lineNbr": 483,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-11-16T19:47:18Z",
      "side": 1,
      "message": "Why only/exactly this version? I assume LSP is backwards compatible within major versions.",
      "revId": "160c5b6693606d520b03c9aba05ac4b9b20c3654",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}