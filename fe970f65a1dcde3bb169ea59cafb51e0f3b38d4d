{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bc26033b_aed3daa8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-01-28T01:22:15Z",
      "side": 1,
      "message": "That\u0027s not quite right: It\u0027s just that for methods, it\u0027s the receiver which defines the type parameters. They still apply to the whole function.\n\nThat is, it doesn\u0027t matter how the type parameters are defined (explicitly, or implicitly via a generic receiver type), they are visible throughout the entire function. Specifically, a receiver-defined type parameter can be used as a type in the method signature.\n\nJust leave this paragraph away.",
      "range": {
        "startLine": 13,
        "startChar": 36,
        "endLine": 13,
        "endChar": 38
      },
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc6ca51c_e122359e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-01-28T02:22:17Z",
      "side": 1,
      "message": "OK, thanks, I\u0027ll remove the paragraph.  Yes, I explained it wrong, even though I knew that the type params of the receiver can be used anywhere.",
      "parentUuid": "bc26033b_aed3daa8",
      "range": {
        "startLine": 13,
        "startChar": 36,
        "endLine": 13,
        "endChar": 38
      },
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a422045_32c815d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-01-28T01:04:05Z",
      "side": 1,
      "message": "Feel free to tell me to update or remove anything, change any comments, etc.\n\n",
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "205e2ed0_783c68fb",
        "filename": "src/cmd/compile/internal/ir/expr.go",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-01-28T01:22:15Z",
      "side": 1,
      "message": "This is now\n\nX[Targs](Args)",
      "range": {
        "startLine": 156,
        "startChar": 33,
        "endLine": 156,
        "endChar": 34
      },
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "684c8831_fe2f918c",
        "filename": "src/cmd/compile/internal/ir/expr.go",
        "patchSetId": 2
      },
      "lineNbr": 156,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-01-28T02:22:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "205e2ed0_783c68fb",
      "range": {
        "startLine": 156,
        "startChar": 33,
        "endLine": 156,
        "endChar": 34
      },
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa7bba16_c17f7a51",
        "filename": "src/cmd/compile/internal/ir/expr.go",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-01-28T01:22:15Z",
      "side": 1,
      "message": "I\u0027d move them before the Args as they appear syntactically before.",
      "range": {
        "startLine": 162,
        "startChar": 22,
        "endLine": 162,
        "endChar": 31
      },
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92306441_b0302e59",
        "filename": "src/cmd/compile/internal/ir/expr.go",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-01-28T02:22:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa7bba16_c17f7a51",
      "range": {
        "startLine": 162,
        "startChar": 22,
        "endLine": 162,
        "endChar": 31
      },
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98ed0feb_b879b1eb",
        "filename": "src/cmd/compile/internal/ir/expr.go",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-01-28T01:22:15Z",
      "side": 1,
      "message": "I\u0027d get rid of this. Just make the signature above:\n\n(pos src.XPos, op Op, fun Node, targs, args []Node) *CallExpr\n\nI counted 25 uses of NewCallExpr in the compiler, which seems a lot to update. But eventually, most of these (all of them?) need to handle type parameters. If you have separate calls, we run the danger of forgetting about the targs. We need to carry them along.",
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e622be2f_f4e38791",
        "filename": "src/cmd/compile/internal/ir/expr.go",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-01-28T02:22:17Z",
      "side": 1,
      "message": "Done, thanks for the feedback on the API.  I am slightly worried that by changing the args of NewCallExpr() and NewSignature() now, we may run a bunch more conflicts at or near their call sites.  Also, I had to modify mkbuiltin.go",
      "parentUuid": "98ed0feb_b879b1eb",
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1bfdae3_91d314de",
        "filename": "src/cmd/compile/internal/types/type.go",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-01-28T01:22:15Z",
      "side": 1,
      "message": "I don\u0027t think you need this comment.\n\nAs is, it\u0027s the only one, and that\u0027s odd. Unless you comment all the constants which seems overkill. The constant name is pretty clear.",
      "range": {
        "startLine": 75,
        "startChar": 23,
        "endLine": 75,
        "endChar": 24
      },
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b269ba1_ef7c4abb",
        "filename": "src/cmd/compile/internal/types/type.go",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-01-28T02:22:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1bfdae3_91d314de",
      "range": {
        "startLine": 75,
        "startChar": 23,
        "endLine": 75,
        "endChar": 24
      },
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cafa6069_26755b76",
        "filename": "src/cmd/compile/internal/types/type.go",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-01-28T01:22:15Z",
      "side": 1,
      "message": "This should be TTYPEPARAM no?",
      "range": {
        "startLine": 154,
        "startChar": 4,
        "endLine": 154,
        "endChar": 11
      },
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39463f9b_90388c26",
        "filename": "src/cmd/compile/internal/types/type.go",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-01-28T02:22:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cafa6069_26755b76",
      "range": {
        "startLine": 154,
        "startChar": 4,
        "endLine": 154,
        "endChar": 11
      },
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07a839d8_5ff80a09",
        "filename": "src/cmd/compile/internal/types/type.go",
        "patchSetId": 2
      },
      "lineNbr": 1660,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-01-28T01:22:15Z",
      "side": 1,
      "message": "Again, I would not do this and just add a tparams field before the params.",
      "range": {
        "startLine": 1660,
        "startChar": 5,
        "endLine": 1660,
        "endChar": 24
      },
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e8a6edd_78a08b8e",
        "filename": "src/cmd/compile/internal/types/type.go",
        "patchSetId": 2
      },
      "lineNbr": 1660,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-01-28T02:22:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07a839d8_5ff80a09",
      "range": {
        "startLine": 1660,
        "startChar": 5,
        "endLine": 1660,
        "endChar": 24
      },
      "revId": "fe970f65a1dcde3bb169ea59cafb51e0f3b38d4d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}