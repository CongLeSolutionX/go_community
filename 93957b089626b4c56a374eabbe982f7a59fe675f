{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5e3f2866_d0131828",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-10-21T16:22:39Z",
      "side": 1,
      "message": "The fix looks good. But I\u0027m not sure I understand why this is specific to inlining.",
      "range": {
        "startLine": 7,
        "startChar": 42,
        "endLine": 7,
        "endChar": 50
      },
      "revId": "93957b089626b4c56a374eabbe982f7a59fe675f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a5a397f_8f39155c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 14020
      },
      "writtenOn": "2022-10-21T16:32:01Z",
      "side": 1,
      "message": "If coverage is enabled, and we\u0027re building a package with coverage turned on, counter variables are flagged (e.g. ir.Name node will have CoverageCounter flag set, etc). When an inlinable coverage-instrumented function is written out to export data, however, we lose the special flags (no export data support for those). So if another package inlines the function, the counter variables will appear as regular vars to the race detector. Let me know if that makes sense.",
      "parentUuid": "5e3f2866_d0131828",
      "range": {
        "startLine": 7,
        "startChar": 42,
        "endLine": 7,
        "endChar": 50
      },
      "revId": "93957b089626b4c56a374eabbe982f7a59fe675f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61fa2fc8_938fa2e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-10-21T16:34:56Z",
      "side": 1,
      "message": "Thanks. Interesting. (Beyond this CL) perhaps we should consider adding coverage counter flags to the export data, or disabling inlining an instrumented function into a non-instrumented function.",
      "parentUuid": "6a5a397f_8f39155c",
      "range": {
        "startLine": 7,
        "startChar": 42,
        "endLine": 7,
        "endChar": 50
      },
      "revId": "93957b089626b4c56a374eabbe982f7a59fe675f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99fc06ce_095c9b81",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 14020
      },
      "writtenOn": "2022-10-21T16:48:38Z",
      "side": 1,
      "message": "I agree in general, although for export data it would have to be done very carefully in order to avoid size increase for the non-coverage case.",
      "parentUuid": "61fa2fc8_938fa2e5",
      "range": {
        "startLine": 7,
        "startChar": 42,
        "endLine": 7,
        "endChar": 50
      },
      "revId": "93957b089626b4c56a374eabbe982f7a59fe675f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be18866d_300b4c69",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-21T16:14:36Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d93957b08\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "93957b089626b4c56a374eabbe982f7a59fe675f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52759cb0_4f9072a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-21T16:14:36Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "5098d500_ae97aab0",
      "tag": "autogenerated:trybots~beginning",
      "revId": "93957b089626b4c56a374eabbe982f7a59fe675f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f555afd_9cb92b37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2022-10-21T16:15:21Z",
      "side": 1,
      "message": "TRY\u003dlongtest",
      "revId": "93957b089626b4c56a374eabbe982f7a59fe675f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6ad4186_723df558",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-21T16:26:59Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n",
      "parentUuid": "be18866d_300b4c69",
      "tag": "autogenerated:trybots~happy",
      "revId": "93957b089626b4c56a374eabbe982f7a59fe675f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}