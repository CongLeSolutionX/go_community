{
  "comments": [
    {
      "key": {
        "uuid": "306f8562_47c1426d",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 800,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Unused?",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf01992a_9be84eb8",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 800,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "306f8562_47c1426d",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "801d7127_467d7f1c",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 802,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Document what pageAllocDummy is.",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc809b98_9c6e48e6",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 802,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "no longer used.",
      "parentUuid": "801d7127_467d7f1c",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96b3c53f_f30167a5",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 807,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "If this lock is actually used, I would just call it \"lock\". \"dummyLock\" sounds like it doesn\u0027t protect anything at all.",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc2d5205_a2ad3913",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 807,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "no longer used, just going to allocate a mutex on the heap for testing.",
      "parentUuid": "96b3c53f_f30167a5",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbb10814_ccb1ec7e",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 813,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "This is getting sophisticated enough that we should maybe put it in its own export file, like export_mpagealloc_test.go",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20ff2c57_219696d6",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 813,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "meh. I responded to your comment below but GetTestPageAlloc isn\u0027t really necessary anymore. it\u0027s very self-contained now.",
      "parentUuid": "fbb10814_ccb1ec7e",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85cbca76_1fe8d27d",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 816,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "I\u0027m not entirely clear on what the map keys are. Are these chunk indexes and ranges within each chunk? Would it make more sense to just take a slice of ranges in terms of page indexes or addresses?",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d52d9e79_2e25a204",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 816,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "you are correct, these are chunk indexes and range within each chunk. to make this more obvious, rather than an int, I\u0027ll do a chunkIdx.\n\nit\u0027s a little bit harder to write tests that way, IMO. the tests are more clear with a coarser grain.",
      "parentUuid": "85cbca76_1fe8d27d",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6494f91_f7648dbc",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 816,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-30T22:40:16Z",
      "side": 1,
      "message": "Okay",
      "parentUuid": "d52d9e79_2e25a204",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e90ff090_e4d1c27c",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 827,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "This doesn\u0027t say why this is a problem. There are a bunch of other ways we could allocate it, or it could be declared on the caller\u0027s stack with an initializer function instead of an allocator function.",
      "range": {
        "startLine": 825,
        "startChar": 22,
        "endLine": 827,
        "endChar": 16
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a32cd75_81e0d492",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 827,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "it\u0027s really the mheap connection that\u0027s a problem here, and this was poorly explained.\n\nanyway, this is gone now.",
      "parentUuid": "e90ff090_e4d1c27c",
      "range": {
        "startLine": 825,
        "startChar": 22,
        "endLine": 827,
        "endChar": 16
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc6e7803_6e0ee86f",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 828,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "It looks like PutTestPageAlloc frees all of this memory. Is this still a problem?\n\nOverall, I\u0027m wondering if the cache is actually necessary. It would be nice if it wasn\u0027t.",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd675744_8de74f10",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 828,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "got rid of it. you\u0027re right, it\u0027s no longer necessary (it was because of mheap, we needed some static global mheap structs to refer to, basically).",
      "parentUuid": "dc6e7803_6e0ee86f",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dd82f46_acf078a0",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 835,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "for i :\u003d range pageAllocDummies",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb2be5d5_b742812f",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 835,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "no longer necessary.",
      "parentUuid": "5dd82f46_acf078a0",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f97883d8_3c83e0a0",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 843,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Panic with a useful message?",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06c64317_ff38087f",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 843,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "no longer necessary.",
      "parentUuid": "f97883d8_3c83e0a0",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f55f53c_5b9ab076",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 850,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Stale comment?",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4acf81d5_c2670b84",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 850,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f55f53c_5b9ab076",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ddb7487_a35b3351",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 860,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Should allocRange ignore N \u003d\u003d 0, or maybe panic?",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14bde3c1_35482d61",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 860,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "it should ignore. there are a bunch of places where I want to say BitRange{0, 0} to juxtapose with other BitRanges, purely for readability.",
      "parentUuid": "5ddb7487_a35b3351",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64fd0033_a69a648d",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 878,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "for i :\u003d range pageAllocDummies",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "898155ac_bd64ea99",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 878,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "no longer necessary.",
      "parentUuid": "64fd0033_a69a648d",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86a5562b_f6776a45",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 884,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "that",
      "range": {
        "startLine": 884,
        "startChar": 40,
        "endLine": 884,
        "endChar": 45
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3be65d8_cbd6b0a3",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 884,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "no longer necessary.",
      "parentUuid": "86a5562b_f6776a45",
      "range": {
        "startLine": 884,
        "startChar": 40,
        "endLine": 884,
        "endChar": 45
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82d9a655_5724f6a2",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 914,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Is the \"entry.pageAlloc.init\" above going to clobber the fixalloc or is this okay?",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e33209c3_31d74c31",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 914,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "ah, actually yes it probably clobbers it.\n\nare we fine with leaking the fixalloc? it would be a lot nicer if we did. the newest patchset just leaks it.\n\nwe could alternatively not use the fixalloc and just map the bitmap directly like Keith suggested (which I\u0027m leaning toward).",
      "parentUuid": "82d9a655_5724f6a2",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38184691_d06c4b33",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 914,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-30T22:40:16Z",
      "side": 1,
      "message": "How much are we leaking if we leak the fixalloc?\n\nI guess mapping the bitmap is a factor of 8 more address space, right? (Replacing an 8 byte pointer with its 64 byte target.) Is the idea that we\u0027re already letting loose on the address space, so why not just map 4 gigs for the bitmap?\n\nIf this big mapping has unforeseen consequences, do we have a fallback plan that\u0027s low enough risk to implement during the freeze?",
      "parentUuid": "e33209c3_31d74c31",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f67aef8d_bd17cba8",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 914,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T22:59:24Z",
      "side": 1,
      "message": "I switched to just mapping the bitmap.\n\nFallback plan is the fixalloc. I don\u0027t think it leaks very much in the tests in practice, but I can measure it. Also, we can play tricks in the test by caching fixallocs.",
      "parentUuid": "38184691_d06c4b33",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6796d60_b6772d1a",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 918,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Document",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7c653e8_44ea09db",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 918,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6796d60_b6772d1a",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d9de6f9_abcda5e0",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 920,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Document",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5b25a12_e70be814",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 38
      },
      "lineNbr": 920,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d9de6f9_abcda5e0",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9983be35_eee44018",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 79,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "The -arenaBaseOffset could use a little explanation.",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81e9db39_75b22936",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 79,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9983be35_eee44018",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41531341_a8c6e406",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 84,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "leaf?",
      "range": {
        "startLine": 84,
        "startChar": 32,
        "endLine": 84,
        "endChar": 39
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89f19889_e5526e59",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 84,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41531341_a8c6e406",
      "range": {
        "startLine": 84,
        "startChar": 32,
        "endLine": 84,
        "endChar": 39
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "955e35cd_b84d281e",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 100,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "that (also on the next line)\n\n(\"which\" always introduces a sub-clause. \"X which Y\" means you can delete the \"which Y\" part and still have a sensible sentence. \"X that Y\" means that Y is integral to X.)",
      "range": {
        "startLine": 100,
        "startChar": 49,
        "endLine": 100,
        "endChar": 54
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6ce49df_228210e1",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 100,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "955e35cd_b84d281e",
      "range": {
        "startLine": 100,
        "startChar": 49,
        "endLine": 100,
        "endChar": 54
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d5ede9f_2b7eee7d",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 106,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "It\u0027s rather confusing that this uses both inclusive and exclusive ranges. Can\u0027t they both be exclusive? Is the problem that limit could be the end of the address space? (I was really skeptical of the call sites, so I had to come and check the documentation.)",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e4062db_c3656f39",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 106,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "end of the address space is a valid reason, but not one the rest of the code considers at all. I\u0027ll make them both exclusive. it\u0027s just a -1 in the math.\n\nit\u0027s definitely confusing, this code has gone through too many iterations.",
      "parentUuid": "8d5ede9f_2b7eee7d",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6eaed278_d63b6f9a",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 114,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "What\u0027s an entry block? Actually, I\u0027m rather confused by why this function is doing rounding at all. Why isn\u0027t this function just a shift of the address (and dealing with arenaBaseOffset)?",
      "range": {
        "startLine": 114,
        "startChar": 64,
        "endLine": 114,
        "endChar": 75
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ef7b921_e48d0132",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 114,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "ah, ok. this function not only gets the summary range but also rounds it such that it includes the \"block\" (the 8 entries that make up a summary at the next level) that is needed to compute a summary in the next level.\n\nthis is generally more useful than just getting the summary ranges because the update routine assumes it can access a full block. so, this function is used both by the update code and by the mapping code to make sure we always have a full block. that\u0027s why it rounds.\n\ndocumented this.",
      "parentUuid": "6eaed278_d63b6f9a",
      "range": {
        "startLine": 114,
        "startChar": 64,
        "endLine": 114,
        "endChar": 75
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "043d9a08_32ab67a6",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 114,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-30T22:40:16Z",
      "side": 1,
      "message": "Got it. The new code makes a lot more sense.",
      "parentUuid": "2ef7b921_e48d0132",
      "range": {
        "startLine": 114,
        "startChar": 64,
        "endLine": 114,
        "endChar": 75
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "998fad7b_7e15d829",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 140,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Typo",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9aa42559_6871f5fe",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 140,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "998fad7b_7e15d829",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95e9f6e1_6c657590",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 142,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "\u003c\u003d",
      "range": {
        "startLine": 142,
        "startChar": 31,
        "endLine": 142,
        "endChar": 32
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd278fa0_9ec5b226",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 142,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "95e9f6e1_6c657590",
      "range": {
        "startLine": 142,
        "startChar": 31,
        "endLine": 142,
        "endChar": 32
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "245c3bd3_504a7bce",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 151,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Explain how this is indexed.",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3662ba3a_47672d0f",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 151,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "245c3bd3_504a7bce",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03dd9056_3b0e32c6",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 170,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "The fact that it\u0027s critical is less important than its justification. \"This level of indirection makes it possible to test pageAlloc independently of the runtime allocator.\"",
      "range": {
        "startLine": 169,
        "startChar": 46,
        "endLine": 170,
        "endChar": 16
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "566f579c_c0f4b732",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 170,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03dd9056_3b0e32c6",
      "range": {
        "startLine": 169,
        "startChar": 46,
        "endLine": 170,
        "endChar": 16
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5165ebb_ff93bc2e",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 182,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "sysStat?",
      "range": {
        "startLine": 182,
        "startChar": 63,
        "endLine": 182,
        "endChar": 79
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48a56e7b_3d3a635f",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 182,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e5165ebb_ff93bc2e",
      "range": {
        "startLine": 182,
        "startChar": 63,
        "endLine": 182,
        "endChar": 79
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f10bbf95_66d4ebb1",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 196,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "\"It may allocate metadata, in which case *sysStat will be updated.\"",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4219e7d9_dd158bf9",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 196,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f10bbf95_66d4ebb1",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36782568_b65d74f7",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 198,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "What are the locking/concurrency rules for this?",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08736d2d_bc5feb32",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 198,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36782568_b65d74f7",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cab8909f_1df7165f",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 199,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Not strictly true, since this also maps chunks. Maybe \"Grow the summary levels in a system-dependent manner.\"?",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "348db93a_5c9c4d3f",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 199,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cab8909f_1df7165f",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b88b790b_50f9c337",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 208,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Move to just before \"Get the part of chunks that now needs to be mapped\"?",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2b31b84_829e2397",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 208,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b88b790b_50f9c337",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0482311_6d590d62",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 236,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "This looks identical to the logic in sysGrow. Maybe the logic could be merged in a helper?",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c281e509_cb4b2eaf",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 236,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0482311_6d590d62",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f84df9c_e3a36fe9",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 242,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "See my comment at https://go-review.googlesource.com/c/go/+/190622/38/src/runtime/mpagealloc_64bit.go#115",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d19faea_79ff984c",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 242,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "See my response to your comment. :)",
      "parentUuid": "7f84df9c_e3a36fe9",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "166bb5bd_50adee47",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 242,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-30T22:40:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4d19faea_79ff984c",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b760d51_316e9adb",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 258,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "I\u0027m not sure what this means.\n\nI would think this is a matter of correctness, since the definition of searchAddr is \"there are no free pages below here\". Does \"below\" mean in the address space or in the shifted address space?",
      "range": {
        "startLine": 257,
        "startChar": 60,
        "endLine": 258,
        "endChar": 32
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02f3cf5a_8fe558b0",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 258,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "updated this comment, and the comment on searchAddr.",
      "parentUuid": "6b760d51_316e9adb",
      "range": {
        "startLine": 257,
        "startChar": 60,
        "endLine": 258,
        "endChar": 32
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7863a79_774b0811",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 270,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Does it add free memory, or did grow just add a bunch of free memory and update is incorporating that into the summary?",
      "range": {
        "startLine": 269,
        "startChar": 17,
        "endLine": 270,
        "endChar": 21
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f60a025_a82a7467",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 270,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "yes oops.",
      "parentUuid": "f7863a79_774b0811",
      "range": {
        "startLine": 269,
        "startChar": 17,
        "endLine": 270,
        "endChar": 21
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f84efbb7_d42242ac",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 38
      },
      "lineNbr": 274,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "I haven\u0027t read past here yet.",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6e3c90_6c01d79d",
        "filename": "src/runtime/mpagealloc_32bit.go",
        "patchSetId": 38
      },
      "lineNbr": 0,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Some of my comments from mpagealloc_64bit also apply here.",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6270e832_77b3735b",
        "filename": "src/runtime/mpagealloc_32bit.go",
        "patchSetId": 38
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done, I think?",
      "parentUuid": "7a6e3c90_6c01d79d",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ea5bba3_754820f4",
        "filename": "src/runtime/mpagealloc_32bit.go",
        "patchSetId": 38
      },
      "lineNbr": 75,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "entries",
      "range": {
        "startLine": 75,
        "startChar": 2,
        "endLine": 75,
        "endChar": 3
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a847e943_945f8e87",
        "filename": "src/runtime/mpagealloc_32bit.go",
        "patchSetId": 38
      },
      "lineNbr": 75,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ea5bba3_754820f4",
      "range": {
        "startLine": 75,
        "startChar": 2,
        "endLine": 75,
        "endChar": 3
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "535eac72_a715c953",
        "filename": "src/runtime/mpagealloc_32bit.go",
        "patchSetId": 38
      },
      "lineNbr": 81,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Instead of keeping the offset i, maybe \"reservation \u003d add(reservation, e * mallocSumBytes)\"?",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b6faf8d_b7941fa6",
        "filename": "src/runtime/mpagealloc_32bit.go",
        "patchSetId": 38
      },
      "lineNbr": 81,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "535eac72_a715c953",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41a30e36_6c9b5de5",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 26,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "This seems unrelated to levelBits. Should this just by in the doc for levelShift?",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 26,
        "endChar": 21
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f665e5df_cb059681",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 26,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41a30e36_6c9b5de5",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 26,
        "endChar": 21
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "050f8483_c71f1f79",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 52,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Leaf?",
      "range": {
        "startLine": 52,
        "startChar": 7,
        "endLine": 52,
        "endChar": 14
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "142466d0_289e5722",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 52,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "050f8483_c71f1f79",
      "range": {
        "startLine": 52,
        "startChar": 7,
        "endLine": 52,
        "endChar": 14
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d704d0d_0018709a",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 61,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Go ahead and name this so it\u0027s clearer to callers what they\u0027re supposed to pass, even though this implementation doesn\u0027t use it.",
      "range": {
        "startLine": 61,
        "startChar": 28,
        "endLine": 61,
        "endChar": 29
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00bec4a6_0eb0048d",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 61,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d704d0d_0018709a",
      "range": {
        "startLine": 61,
        "startChar": 28,
        "endLine": 61,
        "endChar": 29
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4faa5a58_ded737b5",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 64,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "for l, shift :\u003d range levelShift ?",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca660308_588e80a1",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 64,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4faa5a58_ded737b5",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a4bfa70_02ecc2f9",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 65,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "\"size\" is ambiguous. I think this is \"entries\"",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e286928_068176b9",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 65,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a4bfa70_02ecc2f9",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b60b0636_25124dc0",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 71,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Slightly more self-descriptive: \"page summary memory\"",
      "range": {
        "startLine": 71,
        "startChar": 28,
        "endLine": 71,
        "endChar": 51
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08d9242b_3b9675c5",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 71,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b60b0636_25124dc0",
      "range": {
        "startLine": 71,
        "startChar": 28,
        "endLine": 71,
        "endChar": 51
      },
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25be34b9_72afa2ad",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 80,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Document (probably just this one, not the 32bit one)",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22f45283_1073c49b",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 80,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25be34b9_72afa2ad",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b044374_4c366b60",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 99,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Move this above the mlo, mhi calculation? It seems to be in the middle of the mapping computation, but doesn\u0027t itself relate to the mapping.",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa0b9d13_8d37b600",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 99,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "Done, as in I made it more obviously separate from that work.",
      "parentUuid": "3b044374_4c366b60",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14cdaf92_f2f59a79",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 108,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "Comment what this is doing. // Extend the new range to be contiguous with the old range.",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e898eaad_78f0c3e2",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 108,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "no longer relevant, refactored this into a helper.",
      "parentUuid": "14cdaf92_f2f59a79",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ec07de8_fc29c4a5",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 115,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "What if the overlap is something like\n\n      |--- mapped ---|\n   |--- need ---|\n\n? Then you\u0027ll fall into this case, but you actually needed to map the memory from needBase to mappedBase (but not past mappedBase or you\u0027ll wipe out the overlapping memory).",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56a45abe_1bb6bd23",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 115,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s true. The first \"else if\" should handle this case. In the image you show, needBase \u003c mappedBase \u0026\u0026 needLimit \u003c mappedLimit, which satisfies the above condition.\n\nwe only fall into this case if needBase \u003e\u003d mappedBase \u0026\u0026 needLimit \u003c\u003d mappedLimit, which means we\u0027ve already mapped everything we need.",
      "parentUuid": "9ec07de8_fc29c4a5",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7670ac0f_7fb291bf",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 115,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-30T22:40:16Z",
      "side": 1,
      "message": "Oops, you\u0027re right.",
      "parentUuid": "56a45abe_1bb6bd23",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2aaaec93_659208a4",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 127,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "I was surprised to not see this update s.start and s.end, given that it consumes them and then changes the underlying state that they summarize.",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e684aa44_697804dd",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 127,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-30T03:14:28Z",
      "side": 1,
      "message": "it could do that. the only reason it doesn\u0027t is because that\u0027s less code that\u0027s shared (e.g. while I\u0027m at it I could throw in the chunk slice mapping update in here too).\n\nI\u0027m not really sure where to place the boundary and open to suggestions.",
      "parentUuid": "2aaaec93_659208a4",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f59c6e21_e83ddba7",
        "filename": "src/runtime/mpagealloc_64bit.go",
        "patchSetId": 38
      },
      "lineNbr": 127,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-30T22:40:16Z",
      "side": 1,
      "message": "Okay, that\u0027s reasonable. I suggested a tweak to the doc comment to make this more explicit.",
      "parentUuid": "e684aa44_697804dd",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "755fea40_e849503b",
        "filename": "src/runtime/mpagealloc_test.go",
        "patchSetId": 38
      },
      "lineNbr": 0,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T22:46:16Z",
      "side": 1,
      "message": "I haven\u0027t read this file yet.",
      "revId": "808ffb925280b43fff005dbb297c2ffd84a92279",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}