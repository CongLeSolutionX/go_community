{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6c360250_88e4ff49",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-04-28T04:42:36Z",
      "side": 1,
      "message": "TRY\u003dwasmtime",
      "revId": "38bf800b8a06718aec4092b596061d1704c35c18",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ae35da3_6e1e1dce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-28T04:43:09Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d38bf800b\nNote that builder wasip1-wasm-wasmtime has known issues:\n\thttps://go.dev/issue/59583\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "38bf800b8a06718aec4092b596061d1704c35c18",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5274d929_4a74705b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-28T04:47:32Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d38bf800b\nFailed on wasip1-wasm-wasmtime: https://storage.googleapis.com/go-build-log/38bf800b/wasip1-wasm-wasmtime_0f681212.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "5ae35da3_6e1e1dce",
      "tag": "autogenerated:trybots~progress",
      "revId": "38bf800b8a06718aec4092b596061d1704c35c18",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2416cdfc_cecdd4df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-28T04:55:53Z",
      "side": 1,
      "message": "1 of 46 SlowBots failed.\nFailed on wasip1-wasm-wasmtime: https://storage.googleapis.com/go-build-log/38bf800b/wasip1-wasm-wasmtime_0f681212.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\nSlowBot builds that ran:\n* wasip1-wasm-wasmtime\n",
      "parentUuid": "5ae35da3_6e1e1dce",
      "tag": "autogenerated:trybots~failed",
      "revId": "38bf800b8a06718aec4092b596061d1704c35c18",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91932339_1e54f3d3",
        "filename": "src/internal/testenv/testenv.go",
        "patchSetId": 1
      },
      "lineNbr": 390,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-04-28T04:42:36Z",
      "side": 1,
      "message": "This was a drive by fix, if we\u0027d rather I make a separate CL for this, let me know.",
      "revId": "38bf800b8a06718aec4092b596061d1704c35c18",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4356ee7c_9dd63133",
        "filename": "src/internal/testenv/testenv.go",
        "patchSetId": 1
      },
      "lineNbr": 390,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-05-01T00:39:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91932339_1e54f3d3",
      "revId": "38bf800b8a06718aec4092b596061d1704c35c18",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ad19d9b_d8903b41",
        "filename": "src/internal/testenv/testenv_notwin.go",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-28T14:59:31Z",
      "side": 1,
      "message": "Could you also include `android` in this case? It\u0027s not at all obvious to me why and `android` builder would necessarily prohibit symlinks (and I wonder whether the `corellium` builders in particular might actually support them).\n\nIf it breaks I\u0027ll do the cleanup, since I\u0027ve been messing with the `android` environment anyway. üòÖ",
      "revId": "38bf800b8a06718aec4092b596061d1704c35c18",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d355fda1_53de5a59",
        "filename": "src/internal/testenv/testenv_notwin.go",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-05-01T00:39:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ad19d9b_d8903b41",
      "revId": "38bf800b8a06718aec4092b596061d1704c35c18",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cfeccd0_55293e3c",
        "filename": "src/internal/testenv/testenv_notwin.go",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-28T14:59:31Z",
      "side": 1,
      "message": "(nit) use `SyscallIsNotSupported` instead, so that this will generalize better if we need it on more platforms?",
      "revId": "38bf800b8a06718aec4092b596061d1704c35c18",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d34646a1_6c7b4195",
        "filename": "src/internal/testenv/testenv_notwin.go",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-05-01T00:39:49Z",
      "side": 1,
      "message": "I\u0027m worried about expanding the meaning of `SyscallIsNotSupported` to include `os.ErrPermission` in the general case on wasip1, since it might not always mean that it\u0027s not supported, but rather an actual permission error.",
      "parentUuid": "9cfeccd0_55293e3c",
      "revId": "38bf800b8a06718aec4092b596061d1704c35c18",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f6d516f_38042382",
        "filename": "src/internal/testenv/testenv_notwin.go",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-01T15:16:40Z",
      "side": 1,
      "message": "Hmm. We care about two properties here:\n1. Is the necessary system call supported at all?\n2. Are symlinks supported in the temp directory in particular?\n\nWe could have (1) without (2) if the OS supports symlinks but the temp directory does not (such as if it is a FAT32 partition), but in that case I would still want to tolerate errors other than a permission error (for example, `ENOTSUP`).\n\nOn the other hand, I could also imagine a Unix platform deciding to disallow symlinks in `/tmp` for some reason or another, and I wouldn\u0027t be surprised if they returned `EPERM` in that case.\n\nFWIW, `SyscallIsNotSupported` already includes `fs.ErrPermission` on Unix systems, because many container environments return `EPERM` for disallowed syscalls. Although in my opinion `ENOSYS` would usually be more appropriate, the pattern of returning `EPERM` seems pretty entrenched, and to my eye it looks exactly analogous to what `wasmtime` is doing here. I think it would be appropriate to widen `syscallIsNotSupported` in `testenv_notunix.go` to include the same `ErrPermission` check as on Unix.",
      "parentUuid": "d34646a1_6c7b4195",
      "revId": "38bf800b8a06718aec4092b596061d1704c35c18",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bccb092_94416be3",
        "filename": "src/internal/testenv/testenv_notwin.go",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-28T14:59:31Z",
      "side": 1,
      "message": "(nit) ‚Äúruntime‚Äù here seems a little confusing, since it could either refer to the Go runtime or the WASI runtime.\n\nMaybe instead:\n```\nreturn false, fmt.Sprintf(\"symlinks unsupported: %v\", err)\n```",
      "range": {
        "startLine": 39,
        "startChar": 39,
        "endLine": 39,
        "endChar": 54
      },
      "revId": "38bf800b8a06718aec4092b596061d1704c35c18",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72a4d1f7_cecb318e",
        "filename": "src/internal/testenv/testenv_notwin.go",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-05-01T00:39:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7bccb092_94416be3",
      "range": {
        "startLine": 39,
        "startChar": 39,
        "endLine": 39,
        "endChar": 54
      },
      "revId": "38bf800b8a06718aec4092b596061d1704c35c18",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}