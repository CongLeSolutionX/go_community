{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6fee7838_3d5d620a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-03-08T18:03:21Z",
      "side": 1,
      "message": "TRY\u003ddragonfly-amd64,freebsd-amd64,freebsd-arm64,netbsd-amd64,netbsd-arm64,openbsd-amd64,openbsd-arm64",
      "revId": "7608f3d89addf35b15a8412c9a74e42d3d482c71",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "748cf913_c6f7a0ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-08T18:03:38Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d7608f3d8",
      "tag": "autogenerated:trybots~beginning",
      "revId": "7608f3d89addf35b15a8412c9a74e42d3d482c71",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "680f4265_67eec5ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-08T18:05:05Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d7608f3d8\nFailed on (x/tools) linux-amd64: https://storage.googleapis.com/go-build-log/7608f3d8/linux-amd64_9d1b90b2.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "748cf913_c6f7a0ef",
      "tag": "autogenerated:trybots~progress",
      "revId": "7608f3d89addf35b15a8412c9a74e42d3d482c71",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d422323_7bd4b1a4",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-03-08T18:35:12Z",
      "side": 1,
      "message": "On AMD64 register ABI is always enabled. So no need for the #ifdef.\n\n(I\u0027m working on doing this for ARM64)",
      "revId": "7608f3d89addf35b15a8412c9a74e42d3d482c71",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa3bde81_b11253ef",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-03-08T20:06:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d422323_7bd4b1a4",
      "revId": "7608f3d89addf35b15a8412c9a74e42d3d482c71",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb1c75af_6e2f769b",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-03-08T18:35:12Z",
      "side": 1,
      "message": "I\u0027m not sure it is okay to leave this out and not adjust SP in the register ABI case. I think we need to reserve the space for the spill slots.",
      "revId": "7608f3d89addf35b15a8412c9a74e42d3d482c71",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ab3c85b_9c170f15",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-03-08T20:06:53Z",
      "side": 1,
      "message": "Ah, good call, thanks!",
      "parentUuid": "cb1c75af_6e2f769b",
      "revId": "7608f3d89addf35b15a8412c9a74e42d3d482c71",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f65a8c21_d674ee29",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-03-08T18:35:12Z",
      "side": 1,
      "message": "The wrapper would load the G register (R14) and zero X15, which the Go code needs. Since we can be any external context here, I think we need to do that manually.",
      "revId": "7608f3d89addf35b15a8412c9a74e42d3d482c71",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a81146b5_3f7a59e6",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-03-08T20:06:53Z",
      "side": 1,
      "message": "Done. I don\u0027t believe anything needs to be done for arm64, since sigtrampgo needs to use sigFetchG to find the G anyways.",
      "parentUuid": "f65a8c21_d674ee29",
      "revId": "7608f3d89addf35b15a8412c9a74e42d3d482c71",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}