{
  "comments": [
    {
      "key": {
        "uuid": "97884e74_d167e493",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-01-06T16:46:48Z",
      "side": 1,
      "message": "I\u0027m having trouble parsing this sentence.",
      "revId": "1a08a84e064f4e974777534b7bfb253e917fb2df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97884e74_112a4cef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 5056
      },
      "writtenOn": "2017-01-06T17:58:00Z",
      "side": 1,
      "message": "The context is: We know that one goroutine (not the one selecting) woke up the select, so it must have won the cas on the old stack. \n\nCan you suggest a way to reword the text in the CL?",
      "parentUuid": "97884e74_d167e493",
      "revId": "1a08a84e064f4e974777534b7bfb253e917fb2df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97884e74_513bf42a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-01-06T18:18:03Z",
      "side": 1,
      "message": "Oh, now I see what you\u0027re getting at. Perhaps adding \"One goroutine has already won a cas ...\" here would have helped me.",
      "parentUuid": "97884e74_112a4cef",
      "revId": "1a08a84e064f4e974777534b7bfb253e917fb2df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97884e74_71d4f8d5",
        "filename": "src/runtime/select.go",
        "patchSetId": 2
      },
      "lineNbr": 426,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-01-06T16:46:48Z",
      "side": 1,
      "message": "inside the gp.waiting sudog list",
      "range": {
        "startLine": 426,
        "startChar": 24,
        "endLine": 426,
        "endChar": 53
      },
      "revId": "1a08a84e064f4e974777534b7bfb253e917fb2df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97884e74_11d1ece4",
        "filename": "src/runtime/select.go",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-01-06T16:46:48Z",
      "side": 1,
      "message": "The comment hasn\u0027t mentioned a first readying yet. Perhaps\n\nTwo concurrent goroutines attempting to complete one of our (still linked in) select cases might race with this adjustment, causing one to see the selectdone pointer to the old stack and one to see the selectdone pointer to the new stack. This can cause both CASes to succeed, leading to both goroutines readying us. Then things break. The best break is that the second ready sees ...",
      "range": {
        "startLine": 432,
        "startChar": 15,
        "endLine": 432,
        "endChar": 23
      },
      "revId": "1a08a84e064f4e974777534b7bfb253e917fb2df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97884e74_31275028",
        "filename": "src/runtime/select.go",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 5056
      },
      "writtenOn": "2017-01-06T17:58:00Z",
      "side": 1,
      "message": "There aren\u0027t two concurrent goroutines here. One has already woken us up. The second one is looking now. They could in theory be the same goroutine.",
      "parentUuid": "97884e74_11d1ece4",
      "range": {
        "startLine": 432,
        "startChar": 15,
        "endLine": 432,
        "endChar": 23
      },
      "revId": "1a08a84e064f4e974777534b7bfb253e917fb2df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97884e74_11356c34",
        "filename": "src/runtime/select.go",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-01-06T18:18:03Z",
      "side": 1,
      "message": "I see. Perhaps saying exactly what the goroutine is concurrent with would have helped me read this right.\n\nA goroutine running concurrently with this stack copy could attempt to complete one of our (still linked in) select cases and see the new selectdone pointer (pointing at the new stack) before the new stack has real data. Its cas on selectdone can succeed incorrectly, making that goroutine attempt to ready us even though we\u0027ve already been ready\u0027ed for another case.",
      "parentUuid": "97884e74_31275028",
      "revId": "1a08a84e064f4e974777534b7bfb253e917fb2df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97884e74_31ce7046",
        "filename": "src/runtime/select.go",
        "patchSetId": 2
      },
      "lineNbr": 462,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-01-06T16:46:48Z",
      "side": 1,
      "message": "Can this also cause a race on sudog.elem? E.g., a send could see the adjusted sudog.elem, write through that pointer, and then the stack memmove overwrites that slot? The systemstack fixes this, but I don\u0027t think either of these alternate solutions do.",
      "revId": "1a08a84e064f4e974777534b7bfb253e917fb2df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97884e74_91407ca8",
        "filename": "src/runtime/select.go",
        "patchSetId": 2
      },
      "lineNbr": 462,
      "author": {
        "id": 5056
      },
      "writtenOn": "2017-01-06T18:00:20Z",
      "side": 1,
      "message": "As long as the cas is correct, there will be no use of sudog.elem at this point - someone else already woke us up. But yes, I should probably pull this paragraph. I started the \"done in sudog\" fix last night and found that it really doesn\u0027t simplify much because of sudog.elem and wanting to keep the channels locked for as short a time as possible.",
      "parentUuid": "97884e74_31ce7046",
      "revId": "1a08a84e064f4e974777534b7bfb253e917fb2df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97884e74_3132f04d",
        "filename": "src/runtime/select.go",
        "patchSetId": 2
      },
      "lineNbr": 462,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-01-06T18:18:03Z",
      "side": 1,
      "message": "Ah. As long as we prevent the race on selectdone, the write through elem will be done before this is ready\u0027ed and has a chance to copy its stack.",
      "parentUuid": "97884e74_91407ca8",
      "revId": "1a08a84e064f4e974777534b7bfb253e917fb2df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7e3a6ee_3c0f3be3",
        "filename": "src/runtime/select.go",
        "patchSetId": 2
      },
      "lineNbr": 513,
      "author": {
        "id": 5065
      },
      "writtenOn": "2017-01-06T06:45:06Z",
      "side": 1,
      "message": "incomplete sentence",
      "range": {
        "startLine": 513,
        "startChar": 32,
        "endLine": 513,
        "endChar": 37
      },
      "revId": "1a08a84e064f4e974777534b7bfb253e917fb2df",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}