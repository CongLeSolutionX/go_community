{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "402360ea_b10d017d",
        "filename": "src/archive/tar/writer.go",
        "patchSetId": 7
      },
      "lineNbr": 422,
      "author": {
        "id": 8495
      },
      "writtenOn": "2023-08-08T03:07:45Z",
      "side": 1,
      "message": "What\u0027s the right behavior if `info` is a symlink?\n\nRight now this will encode a symlink, but with an empty target, which is wrong.\n\nI think we should return an error for the time being.\n\nAn accepted proposal fixes this (see https://github.com/golang/go/issues/49580), where we can type-assert to `fs.ReadLinkFS` and use that to derive the target path.",
      "range": {
        "startLine": 422,
        "startChar": 33,
        "endLine": 422,
        "endChar": 35
      },
      "revId": "aa54bb085dcbc938c186ece701deabd70c234020",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08298eef_3e6df192",
        "filename": "src/archive/tar/writer.go",
        "patchSetId": 7
      },
      "lineNbr": 422,
      "author": {
        "id": 63983
      },
      "writtenOn": "2023-08-08T11:32:45Z",
      "side": 1,
      "message": "I just moved this to WIP while we figure out the best course of action. I haven\u0027t consider this case during my testing, but I think returning an error is the right thing to do. The CL for ReadLinkFS seems to be stale for more than a year so I guess we can\u0027t rely on that. I will leave a proper comment tho to use that once it becomes available.",
      "parentUuid": "402360ea_b10d017d",
      "range": {
        "startLine": 422,
        "startChar": 33,
        "endLine": 422,
        "endChar": 35
      },
      "revId": "aa54bb085dcbc938c186ece701deabd70c234020",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "faf3b5e7_776663b2",
        "filename": "src/archive/tar/writer.go",
        "patchSetId": 7
      },
      "lineNbr": 422,
      "author": {
        "id": 63983
      },
      "writtenOn": "2023-08-09T00:54:55Z",
      "side": 1,
      "message": "I tried to reproduce the same issue with tar here and couldn\u0027t. If try to call AddFS on a directory with symbolic links I get `open filename: too many levels of symbolic links`. Did you manage to replicate the issue you reported on zip with tar?",
      "parentUuid": "08298eef_3e6df192",
      "range": {
        "startLine": 422,
        "startChar": 33,
        "endLine": 422,
        "endChar": 35
      },
      "revId": "aa54bb085dcbc938c186ece701deabd70c234020",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcc8d190_e40e7762",
        "filename": "src/archive/tar/writer.go",
        "patchSetId": 7
      },
      "lineNbr": 422,
      "author": {
        "id": 63983
      },
      "writtenOn": "2023-08-10T00:18:59Z",
      "side": 1,
      "message": "Either way I decided to go with the safer approach. I just added a test to confirm we indeed return an error if AddFS encounters a non regular file.",
      "parentUuid": "faf3b5e7_776663b2",
      "range": {
        "startLine": 422,
        "startChar": 33,
        "endLine": 422,
        "endChar": 35
      },
      "revId": "aa54bb085dcbc938c186ece701deabd70c234020",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39c1d2d8_6b598cb4",
        "filename": "src/archive/tar/writer.go",
        "patchSetId": 7
      },
      "lineNbr": 422,
      "author": {
        "id": 63983
      },
      "writtenOn": "2023-08-10T00:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fcc8d190_e40e7762",
      "range": {
        "startLine": 422,
        "startChar": 33,
        "endLine": 422,
        "endChar": 35
      },
      "revId": "aa54bb085dcbc938c186ece701deabd70c234020",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}