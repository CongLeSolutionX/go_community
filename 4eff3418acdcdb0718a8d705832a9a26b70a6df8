{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c82c96b1_3f50a895",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-28T18:01:33Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d4eff3418\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f00e816e_f8984588",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-28T18:12:36Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "c82c96b1_3f50a895",
      "tag": "autogenerated:trybots~happy",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb47071b_8d11118a",
        "filename": "src/cmd/compile/internal/base/flag.go",
        "patchSetId": 21
      },
      "lineNbr": 202,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "It seems non-orthogonal that the same flag controls logging and policy. E.g., that level 2 has logging on, but 11 has it off.\n\nWould it be a problem to split those into separate flags, so that their respective levels have monotonic behavior?",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27beb9cb_2ffc2f66",
        "filename": "src/cmd/compile/internal/base/flag.go",
        "patchSetId": 21
      },
      "lineNbr": 219,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "strings.HasPrefix(debug.LoopVarHash, \"FS\")?",
      "range": {
        "startLine": 219,
        "startChar": 5,
        "endLine": 219,
        "endChar": 64
      },
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ca1dcf1_8053dc36",
        "filename": "src/cmd/compile/internal/gc/main.go",
        "patchSetId": 21
      },
      "lineNbr": 328,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "How does it print incorrectly otherwise?",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00e0c147_96d75acf",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 36,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "This documentation all seems redundant with the documentation in base.Flag, but also inconsistent. The other docs didn\u0027t mention level 13.",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e603ebb3_aa5f9942",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 42,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "I think Fn is always Name.Curfn?",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f065a0d2_b2510d2e",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 56,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "nit: I suggest using ir.WithFunc instead.",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f687c341_252df6cd",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 80,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "When is this nil? Can that case be handled within the hashdebug logic itself instead?",
      "range": {
        "startLine": 80,
        "startChar": 6,
        "endLine": 80,
        "endChar": 29
      },
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43a04fb5_b0651bb1",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 99,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "Can we hoist some of these helper functions to package scope? They don\u0027t seem to need any local variable context.",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14d7a64a_c42fb51e",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 124,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "On first reading this comment, I didn\u0027t know what \"PL\" meant. Maybe change the first sentence to introduce that, like \"scanChildrenThenTransform populates possiblyLeaked (PL) with blah blah and then transforms blah blah. Specifically: [list of cases]\"?",
      "range": {
        "startLine": 124,
        "startChar": 63,
        "endLine": 124,
        "endChar": 65
      },
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f629948_8530186c",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 137,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "Can you just do the assignment unconditionally? Below too.",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12e79f84_ee53a328",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 150,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "You probably only need to add PAUTO/PPARAM/PPARAMOUT variables to the map?",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ccfe683_d8c18b6c",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 176,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "nit: `var leaked []*ir.Name`",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17dbe3b5_fb19485b",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 212,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "Sorry, I\u0027m struggling to understand this. I think starting with an example demonstrating a basic before/after of the transformation would be helpful.",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0df67ea_9f4f8ac2",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 216,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "I\u0027m having a hard time envisioning what these optimizations look like in practice, why they\u0027re safe, and how beneficial they are. Can you elaborate?",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e074b16_61a12f20",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 220,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "This maps z to z\u0027?",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d74318b_50f77a27",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 256,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "Could use a comment explaining that this is trying to match `continue` statements corresponding to `for` loop `x`, whether involving a label or not.",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca447f2c_e5849874",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 272,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "nit: bodyContinue",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b090a72_17a60477",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 289,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "nit: `ir.NewBool(true)`?",
      "range": {
        "startLine": 289,
        "startChar": 55,
        "endLine": 289,
        "endChar": 89
      },
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85318593_e745e210",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 293,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "nit: I think \"assign\" or \"set\" would be a better verb than \"get\".",
      "range": {
        "startLine": 293,
        "startChar": 5,
        "endLine": 293,
        "endChar": 22
      },
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eda5f397_4fbf5f12",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 364,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "Just unconditionally doing `c[j] \u003d n` seems fine.",
      "range": {
        "startLine": 362,
        "startChar": 0,
        "endLine": 364,
        "endChar": 5
      },
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8518454f_efea28ca",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 378,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "Can you use ir.EditChildren instead?",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90cd1b28_6bf5a52c",
        "filename": "src/cmd/compile/internal/loopvar/loopvar.go",
        "patchSetId": 21
      },
      "lineNbr": 403,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "What\u0027s this TODO about?",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be72a3d7_c92430e0",
        "filename": "src/runtime/race/testdata/mop_test.go",
        "patchSetId": 21
      },
      "lineNbr": 334,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-02-28T20:59:34Z",
      "side": 1,
      "message": "nit: leave a comment explaining why this isn\u0027t \":\u003d\"?",
      "revId": "4eff3418acdcdb0718a8d705832a9a26b70a6df8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}