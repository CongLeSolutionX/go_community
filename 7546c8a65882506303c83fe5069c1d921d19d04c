{
  "comments": [
    {
      "key": {
        "uuid": "0cf785ae_fe209551",
        "filename": "src/cmd/compile/internal/gc/order.go",
        "patchSetId": 1
      },
      "lineNbr": 1281,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-04-29T21:00:26Z",
      "side": 1,
      "message": "I assume that something else emits the creation of the map when the len(dynamics) \u003d\u003d 0 case breaks out?",
      "range": {
        "startLine": 1281,
        "startChar": 35,
        "endLine": 1281,
        "endChar": 62
      },
      "revId": "7546c8a65882506303c83fe5069c1d921d19d04c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99925490_079bb424",
        "filename": "src/cmd/compile/internal/gc/order.go",
        "patchSetId": 1
      },
      "lineNbr": 1281,
      "author": {
        "id": 5200
      },
      "writtenOn": "2019-04-29T21:15:22Z",
      "side": 1,
      "message": "Yes, we return n unmodified and walk will emit all the assignments that initialize the (static portions of the) map.\n\nIn other words, order.expr for an OMAPLIT either returns n (the original OMAPLIT), or we do:\n  tmp :\u003d map[int]int{...} // the original OMAPLIT minus the dynamic entries\n  .. additional assignments to tmp ..\n  return tmp\n\nIn either case, all the static entries are put into the map in walk.",
      "parentUuid": "0cf785ae_fe209551",
      "range": {
        "startLine": 1281,
        "startChar": 35,
        "endLine": 1281,
        "endChar": 62
      },
      "revId": "7546c8a65882506303c83fe5069c1d921d19d04c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}