{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7610d9a0_f73bd50d",
        "filename": "src/sync/map_bench_test.go",
        "patchSetId": 28
      },
      "lineNbr": 544,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-09-28T16:02:22Z",
      "side": 1,
      "message": "Again, please drop the mutex here — there is no need for it, and contention on the mutex will almost certainly bias the benchmark results by preventing multiple goroutines from running `Clear` concurrently.",
      "revId": "4af232e67733f7599cfcdeb4ddebebb120ba95db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab3242d3_d38e4d75",
        "filename": "src/sync/map_bench_test.go",
        "patchSetId": 28
      },
      "lineNbr": 544,
      "author": {
        "id": 63133
      },
      "writtenOn": "2023-09-29T02:32:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7610d9a0_f73bd50d",
      "revId": "4af232e67733f7599cfcdeb4ddebebb120ba95db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d804c62_f2d39a6c",
        "filename": "src/sync/map_bench_test.go",
        "patchSetId": 28
      },
      "lineNbr": 562,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-09-28T16:02:22Z",
      "side": 1,
      "message": "Don\u0027t leave commented-out code — it is unlikely that we would ever uncomment it, and not particularly essential to the benchmark (lots of real programs store to maps of monitoring data with ~0 loads in the steady state).",
      "range": {
        "startLine": 548,
        "startChar": 0,
        "endLine": 562,
        "endChar": 8
      },
      "revId": "4af232e67733f7599cfcdeb4ddebebb120ba95db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef3d3228_1a5f0137",
        "filename": "src/sync/map_bench_test.go",
        "patchSetId": 28
      },
      "lineNbr": 562,
      "author": {
        "id": 63133
      },
      "writtenOn": "2023-09-29T02:55:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d804c62_f2d39a6c",
      "range": {
        "startLine": 548,
        "startChar": 0,
        "endLine": 562,
        "endChar": 8
      },
      "revId": "4af232e67733f7599cfcdeb4ddebebb120ba95db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a74cee4_c58f450f",
        "filename": "src/sync/map_test.go",
        "patchSetId": 28
      },
      "lineNbr": 303,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-09-28T16:02:22Z",
      "side": 1,
      "message": "Please make this comment shorter and more specific: it should focus on _what_ properties are being checked, not _how_ they are being checked. (Does this verify that concurrent calls to `Clear` and `Store` do not produce data races? Something else?)\n\nThe comment doesn\u0027t need to include the details about the specific goroutines, because we can read the code to figure that out if the test fails.",
      "range": {
        "startLine": 303,
        "startChar": 23,
        "endLine": 303,
        "endChar": 68
      },
      "revId": "4af232e67733f7599cfcdeb4ddebebb120ba95db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "248b4a84_bc459974",
        "filename": "src/sync/map_test.go",
        "patchSetId": 28
      },
      "lineNbr": 303,
      "author": {
        "id": 63133
      },
      "writtenOn": "2023-09-29T02:31:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a74cee4_c58f450f",
      "range": {
        "startLine": 303,
        "startChar": 23,
        "endLine": 303,
        "endChar": 68
      },
      "revId": "4af232e67733f7599cfcdeb4ddebebb120ba95db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}