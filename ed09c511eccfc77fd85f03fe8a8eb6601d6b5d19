{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b595a79e_9d219f06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-21T08:24:23Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003ded09c511",
      "tag": "autogenerated:trybots~beginning",
      "revId": "ed09c511eccfc77fd85f03fe8a8eb6601d6b5d19",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4dfcd415_81f787cf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-21T08:34:23Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "b595a79e_9d219f06",
      "tag": "autogenerated:trybots~happy",
      "revId": "ed09c511eccfc77fd85f03fe8a8eb6601d6b5d19",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c5fb893_7ea6eaa1",
        "filename": "src/runtime/debug.go",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 5021
      },
      "writtenOn": "2021-06-21T10:58:00Z",
      "side": 1,
      "message": "It looks like the update of this variable is now protected by sched.lock so either this read need to be protected by sched.lock too, or the update and this read protected by atomic operations.",
      "revId": "ed09c511eccfc77fd85f03fe8a8eb6601d6b5d19",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4659d20_ed910cca",
        "filename": "src/runtime/debug.go",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-06-21T18:43:24Z",
      "side": 1,
      "message": "I think it will be clearest to use atomic operations for both uses of ncgocall.",
      "parentUuid": "6c5fb893_7ea6eaa1",
      "revId": "ed09c511eccfc77fd85f03fe8a8eb6601d6b5d19",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b192fc6e_7a38f59e",
        "filename": "src/runtime/debug.go",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 34474
      },
      "writtenOn": "2021-06-22T01:05:26Z",
      "side": 1,
      "message": "Update. But I wonder why iterates over allm does not need protection.",
      "parentUuid": "b4659d20_ed910cca",
      "revId": "ed09c511eccfc77fd85f03fe8a8eb6601d6b5d19",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d9d70a3_737e6578",
        "filename": "src/runtime/debug.go",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-06-22T23:37:57Z",
      "side": 1,
      "message": "I suppose that it\u0027s technically possible that while an M is being destroyed we might double count the number of cgo calls that it made.  I\u0027m not sure how much to worry about that.",
      "parentUuid": "b192fc6e_7a38f59e",
      "revId": "ed09c511eccfc77fd85f03fe8a8eb6601d6b5d19",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}