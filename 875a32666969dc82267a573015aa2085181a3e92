{
  "comments": [
    {
      "key": {
        "uuid": "dc14878a_5344ee5e",
        "filename": "src/cmd/compile/internal/ssa/gen/rulegen.go",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 5143
      },
      "writtenOn": "2016-05-24T23:20:45Z",
      "side": 1,
      "message": "May as well just call ruleLog with rule.loc and let it add the \"rewrite \" text (or whatever). Then all the formatting logic is in a single function.",
      "revId": "875a32666969dc82267a573015aa2085181a3e92",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc14878a_1321d69c",
        "filename": "src/cmd/compile/internal/ssa/rewrite.go",
        "patchSetId": 1
      },
      "lineNbr": 363,
      "author": {
        "id": 5143
      },
      "writtenOn": "2016-05-24T23:20:45Z",
      "side": 1,
      "message": "logRule? logRuleUse? logRuleTrigger? ruleLog is a noun.",
      "revId": "875a32666969dc82267a573015aa2085181a3e92",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc14878a_f3a51a55",
        "filename": "src/cmd/compile/internal/ssa/rewrite.go",
        "patchSetId": 1
      },
      "lineNbr": 366,
      "author": {
        "id": 5143
      },
      "writtenOn": "2016-05-24T23:20:45Z",
      "side": 1,
      "message": "My main use for logging in the past is seeing the exactly number of times a rewrite rule triggers. That helps me see the impact as I adjust the rule to try to cover more cases.\n\nHow about instead we record counts (map[string]int) and then flush the accumulated log data at the end of every rewrite pass? The flush would be a no-op when logging isn\u0027t enabled--maybe controlled by a global var written in the generated code. The flushed data could still be line oriented for easy command line processing, e.g. \"rulefile:ruleline count\" or some such. (Maybe even \"path/to/pkg.funcname rulefile:ruleline count\"?) The consumer of these log files could then discard the counts or sum them as desired.",
      "revId": "875a32666969dc82267a573015aa2085181a3e92",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcf7d3e0_6c550a42",
        "filename": "src/cmd/compile/internal/ssa/rewrite.go",
        "patchSetId": 1
      },
      "lineNbr": 366,
      "author": {
        "id": 5200
      },
      "writtenOn": "2016-05-25T23:07:34Z",
      "side": 1,
      "message": "I just got rid of the deduping.  The raw size from all.bash is only 600MB.  Maybe if I really cared I could use a zipwriter.",
      "parentUuid": "dc14878a_f3a51a55",
      "revId": "875a32666969dc82267a573015aa2085181a3e92",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc14878a_b3fd624b",
        "filename": "src/cmd/compile/internal/ssa/rewrite.go",
        "patchSetId": 1
      },
      "lineNbr": 381,
      "author": {
        "id": 5143
      },
      "writtenOn": "2016-05-24T23:20:45Z",
      "side": 1,
      "message": "Yes, we need to handle this. I think it\u0027d be easier to introduce an envvar that all.bash and make.bash respect and which they use to run everything in serial. They would detect that envvar and convert it into:\n\n* the -p flag to cmd/go\n* the appropriate flag to disable parallel tests during regular test runs\n* the appropriate flag for serial runs in testing/run.go (I\u0027m pretty sure one exists)",
      "revId": "875a32666969dc82267a573015aa2085181a3e92",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fccf8b9c_b55da070",
        "filename": "src/cmd/compile/internal/ssa/rewrite.go",
        "patchSetId": 1
      },
      "lineNbr": 381,
      "author": {
        "id": 10961
      },
      "writtenOn": "2016-05-25T11:38:09Z",
      "side": 1,
      "message": "AIUI write(2)s with O_APPEND to files are atomic, i.e. not interleaved, for all practical purposes, including on Windows, excluding NFSv4 or earlier, so if the WriteString action can translate to a single write(2) you could avoid ditching parallel.",
      "parentUuid": "dc14878a_b3fd624b",
      "revId": "875a32666969dc82267a573015aa2085181a3e92",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcf7d3e0_6ccaaa5c",
        "filename": "src/cmd/compile/internal/ssa/rewrite.go",
        "patchSetId": 1
      },
      "lineNbr": 381,
      "author": {
        "id": 5200
      },
      "writtenOn": "2016-05-25T23:07:34Z",
      "side": 1,
      "message": "I\u0027m going to leave this as a TODO for now. It\u0027s quite a big change.  Rule logging isn\u0027t critical, if some output gets corrupted that\u0027s ok.",
      "parentUuid": "fccf8b9c_b55da070",
      "revId": "875a32666969dc82267a573015aa2085181a3e92",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fccf8b9c_9562a426",
        "filename": "src/cmd/compile/internal/ssa/rewrite.go",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 10961
      },
      "writtenOn": "2016-05-25T11:38:09Z",
      "side": 1,
      "message": "Is it better to have these before the function that uses them so I\u0027ve already seen their definitions?",
      "range": {
        "startLine": 392,
        "startChar": 0,
        "endLine": 393,
        "endChar": 21
      },
      "revId": "875a32666969dc82267a573015aa2085181a3e92",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcf7d3e0_8cf4c694",
        "filename": "src/cmd/compile/internal/ssa/rewrite.go",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 5200
      },
      "writtenOn": "2016-05-25T23:07:34Z",
      "side": 1,
      "message": "I don\u0027t think it matters that much.  Ideally we declare it inside the function ala C\u0027s static, but Go doesn\u0027t have that.  I always prefer to put exported things first (\"exported\" in this case means used by another file).",
      "parentUuid": "fccf8b9c_9562a426",
      "revId": "875a32666969dc82267a573015aa2085181a3e92",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}