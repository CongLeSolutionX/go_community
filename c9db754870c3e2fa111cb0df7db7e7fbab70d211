{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "88dfd271_078cc315",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2022-09-07T17:07:34Z",
      "side": 1,
      "message": "TRY\u003dlinux-386-longtest,linux-amd64-noopt",
      "revId": "c9db754870c3e2fa111cb0df7db7e7fbab70d211",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e076ec9_d4f2a9a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-07T17:18:58Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dc9db7548\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "c9db754870c3e2fa111cb0df7db7e7fbab70d211",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac656f7f_7b12efc3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-07T17:32:11Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "8e076ec9_d4f2a9a5",
      "tag": "autogenerated:trybots~happy",
      "revId": "c9db754870c3e2fa111cb0df7db7e7fbab70d211",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f2e7562_6716d53d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-09-07T17:48:34Z",
      "side": 1,
      "message": "thanks for the change!\n\nhowever, now that ~everything is an atomic.\u003cwhatever\u003e, is the extra alignment still necessary at all? can we just get rid of the alignment fields (same for the next CL)",
      "revId": "c9db754870c3e2fa111cb0df7db7e7fbab70d211",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32583970_fdaa66aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2022-09-07T17:53:41Z",
      "side": 1,
      "message": "Could you please elaborate more? What\u0027s \"everything\" mean?\n\nDo \"next CL\" refer to CL 429119? If yes, you can see get rid of the alignment fields cause trybot failed.",
      "parentUuid": "5f2e7562_6716d53d",
      "revId": "c9db754870c3e2fa111cb0df7db7e7fbab70d211",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6aed0fd9_b41300d6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-09-07T17:57:53Z",
      "side": 1,
      "message": "oops, sorry yes I meant that one. and yeah, I see there\u0027s still something that relies on things being aligned to 8 bytes.\n\nbased on that trybot failure, it looks like if we change mspanset to use the new atomic types we might just be able to get rid of the uint32 fields altogether, without additional alignment?",
      "parentUuid": "32583970_fdaa66aa",
      "revId": "c9db754870c3e2fa111cb0df7db7e7fbab70d211",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba35c312_9d432fa1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-09-07T17:58:37Z",
      "side": 1,
      "message": "ugh, no, sorry I meant CL 429117 originally. but now I looked at CL 429119 and saw the failure. :)",
      "parentUuid": "6aed0fd9_b41300d6",
      "revId": "c9db754870c3e2fa111cb0df7db7e7fbab70d211",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65f2e6ae_f4e99c3d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2022-09-07T18:20:49Z",
      "side": 1,
      "message": "In any case, I mean explicitly make the struct 8-byte alignment is better. The fact that this CL uses `_ [0]atomic.Int64` because it\u0027s guaranteed to have 8-byte alignment. We should not rely to `atomic.\u003cwhatever\u003e`.\n\nMoreover, when https://github.com/golang/go/issues/19057 land, we can simply replace `[0]atomic.Int64` with proper `AlignedN` type.",
      "parentUuid": "ba35c312_9d432fa1",
      "revId": "c9db754870c3e2fa111cb0df7db7e7fbab70d211",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b9b621d_20cfdd7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-09-07T18:25:35Z",
      "side": 1,
      "message": "\u003e We should not rely to  atomic.\u003cwhatever\u003e .\n\nI\u0027m not sure I understand, because that *does* guarantee the necessary alignment. if we eliminate the remaining reasons why fields don\u0027t just have the correct alignment intrinsically, there\u0027s no need to add `_ [0]atomic.Int64`. IIUC, the last such thing in mheap is mcentral, specifically mSpanSet. am I misunderstanding something?",
      "parentUuid": "65f2e6ae_f4e99c3d",
      "revId": "c9db754870c3e2fa111cb0df7db7e7fbab70d211",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a50012a6_535a2f86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2022-09-07T18:31:19Z",
      "side": 1,
      "message": "So for this code:\n\n```\ntype mheap struct {\n\t_ sys.NotInHeap\n\n\t// lock must only be acquired on the system stack, otherwise a g\n\t// could self-deadlock if its stack grows with the lock held.\n\tlock mutex\n\n\tpages pageAlloc // page allocation data structure\n```\n\nWhat will guarantee that `pages` will have 8-byte alignment? Before this CL, we have:\n\n```\n_ uint32 // 8-byte align pages so its alignment is consistent with tests.\n\n\npages pageAlloc // page allocation data structure\n```\n\nBy making `pageAlloc` alignment itself, `mheap` don\u0027t have to add the padding field.",
      "parentUuid": "4b9b621d_20cfdd7c",
      "revId": "c9db754870c3e2fa111cb0df7db7e7fbab70d211",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8666b38b_dc5c4edd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-09-07T18:36:40Z",
      "side": 1,
      "message": "AFAICT pageAlloc only requires that alignment for `chunks` now, right? but I think that comment about `chunks` having to be atomic is now stale.\n\n(I missed this particular detail earlier, but my point is that I would prefer to just make the alignment requirements unnecessary by using types that are intrinsically aligned correctly, rather than swapping out the fields for a top-level alignment; it\u0027s still prone to breaking AFAICT, though perhaps a bit less.)",
      "parentUuid": "a50012a6_535a2f86",
      "revId": "c9db754870c3e2fa111cb0df7db7e7fbab70d211",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef84f531_1aea4e80",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-09-07T18:58:21Z",
      "side": 1,
      "message": "to be clear, I\u0027m not asking you to do this, I\u0027m just saying that I don\u0027t think we\u0027re very far away from having everything just be aligned intrinsically, so that we don\u0027t need *any* additional alignment annotations. as a result, I\u0027d rather just resolve that than switch. I\u0027m working on it now. mSpanSet is definitely the most complicated part, but it\u0027s doable.",
      "parentUuid": "8666b38b_dc5c4edd",
      "revId": "c9db754870c3e2fa111cb0df7db7e7fbab70d211",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bd7210f_91375fc4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-07T19:35:42Z",
      "side": 1,
      "message": "And maybe the same deal here - we just don\u0027t need the explicit alignment at all anymore?\n",
      "revId": "c9db754870c3e2fa111cb0df7db7e7fbab70d211",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}