{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bafceae5_6fd11ac6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 21345
      },
      "writtenOn": "2021-01-21T07:35:40Z",
      "side": 1,
      "message": "Could you help to review this patch? Thank you.",
      "revId": "9ebe8359e0cfa279773da0b765cec2dd26189634",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "145a32ad_252356bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 21345
      },
      "writtenOn": "2021-01-21T07:54:24Z",
      "side": 1,
      "message": "\u003e Patch Set 1: TryBot-Result-1\n\u003e \n\u003e 1 of 21 TryBots failed:\n\u003e Failed on windows-386-2008: https://storage.googleapis.com/go-build-log/9ebe8359/windows-386-2008_d035806c.log\n\u003e \n\u003e Consult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\nDoes anyone know the reason for the failure? It seems to have nothing to do with my patch. Thank you.",
      "revId": "9ebe8359e0cfa279773da0b765cec2dd26189634",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "305df567_7d5322bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9646
      },
      "writtenOn": "2021-01-21T08:37:02Z",
      "side": 1,
      "message": "Test failure is unrelated (golang.org/issue/42637).",
      "parentUuid": "145a32ad_252356bc",
      "revId": "9ebe8359e0cfa279773da0b765cec2dd26189634",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6d92a28_bc7a06d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 21345
      },
      "writtenOn": "2021-01-21T08:57:58Z",
      "side": 1,
      "message": "Thank you.",
      "parentUuid": "305df567_7d5322bc",
      "revId": "9ebe8359e0cfa279773da0b765cec2dd26189634",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1fa8089c_5c917a26",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-01-21T17:23:19Z",
      "side": 1,
      "message": "R\u003dgo1.17\n\n",
      "revId": "9ebe8359e0cfa279773da0b765cec2dd26189634",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a290467_8ca1b2af",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 1
      },
      "lineNbr": 3210,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-01-21T17:23:19Z",
      "side": 1,
      "message": "The code difference here suggests it should be a separate case.",
      "revId": "9ebe8359e0cfa279773da0b765cec2dd26189634",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbd4b247_b01d7453",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 1
      },
      "lineNbr": 3210,
      "author": {
        "id": 21345
      },
      "writtenOn": "2021-01-25T11:53:07Z",
      "side": 1,
      "message": "Yes, it is better to put them in a separate case. But I found it is difficult to do this. Because the C_RSP class inclues C_REG class, C_REG inlcudes C_ZCON, if we add a new encoding item like {AADD, C_SHIFT, C_RSP, C_NONE, C_RSP, 107, 4, 0, 0, 0}, and we have the current item {AADD, C_SHIFT, C_REG, C_NONE, C_REG, 3, 4, 0, 0, 0}, if we have an instruction \"ADD R1\u003c\u003c2, R2, R4\", does the assembler encode it as case 107? Or should it be encoded as case 3? Thank you.",
      "parentUuid": "2a290467_8ca1b2af",
      "revId": "9ebe8359e0cfa279773da0b765cec2dd26189634",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}