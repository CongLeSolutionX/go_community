{
  "comments": [
    {
      "key": {
        "uuid": "506daeeb_891d4568",
        "filename": "src/regexp/all_test.go",
        "patchSetId": 3
      },
      "lineNbr": 496,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-04-16T16:32:55Z",
      "side": 1,
      "message": "You could use strings.Repeat to build this.",
      "revId": "71af845e901aba456f4c6d7d37d76e40986b67a6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "707552b8_87b456e6",
        "filename": "src/regexp/all_test.go",
        "patchSetId": 3
      },
      "lineNbr": 496,
      "author": {
        "id": 5270
      },
      "writtenOn": "2015-04-16T19:56:16Z",
      "side": 1,
      "message": "I forgot to export the latest version of the test. I don\u0027t think this applies any more.",
      "parentUuid": "506daeeb_891d4568",
      "revId": "71af845e901aba456f4c6d7d37d76e40986b67a6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "506daeeb_09293583",
        "filename": "src/regexp/all_test.go",
        "patchSetId": 3
      },
      "lineNbr": 504,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-04-16T16:32:55Z",
      "side": 1,
      "message": "Comment here that this used to panic and reference issue 10319. Then you can simplify the comment up top to something like:\n\n// Check that the same machine can be used with the standard matcher\n// and then the backtracker when there are no captures.",
      "revId": "71af845e901aba456f4c6d7d37d76e40986b67a6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "707552b8_47be3ec6",
        "filename": "src/regexp/all_test.go",
        "patchSetId": 3
      },
      "lineNbr": 504,
      "author": {
        "id": 5270
      },
      "writtenOn": "2015-04-16T19:56:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "506daeeb_09293583",
      "revId": "71af845e901aba456f4c6d7d37d76e40986b67a6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d080bec6_0ae59d4c",
        "filename": "src/regexp/backtrack.go",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 5206
      },
      "writtenOn": "2015-04-16T19:15:57Z",
      "side": 1,
      "message": "I don\u0027t understand why it\u0027s correct to test reqcap here.\n\nI don\u0027t understand why the reset method takes both ncap and reqcap parameters.  But it\u0027s clear that the reset method sets the length of the cap slice based on ncap, not reqcap.  Testing reqcap here, rather than len(b.cap), implies that there is some unstated requirement that, in the reset method, if reqcap \u003e 0, then ncap \u003e 1.  Either we should make that requirement explicit somewhere (perhaps I missed it) or this code should be testing len(b.cap).",
      "revId": "71af845e901aba456f4c6d7d37d76e40986b67a6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d080bec6_adbfe342",
        "filename": "src/regexp/backtrack.go",
        "patchSetId": 3
      },
      "lineNbr": 282,
      "author": {
        "id": 5270
      },
      "writtenOn": "2015-04-16T19:56:16Z",
      "side": 1,
      "message": "Looking over this, I don\u0027t think reset needs both ncap and reqcap. So I changed it to only take ncap. And reqcap is true when ncap \u003e 0 which means that len(b.cap) \u003e\u003d 2. I also added a comment on reqcap.\n\nIs that more clear? If not, I could change the tests to check len(b.cap).",
      "parentUuid": "d080bec6_0ae59d4c",
      "revId": "71af845e901aba456f4c6d7d37d76e40986b67a6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}