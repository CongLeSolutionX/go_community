{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2796326b_640ede4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-06-22T22:32:33Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d1a1ae39d\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72423b80_82cf51a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-06-22T22:45:11Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "2796326b_640ede4d",
      "tag": "autogenerated:trybots~happy",
      "revId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6eb4c43a_948fba05",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-06-22T22:51:52Z",
      "side": 1,
      "message": "It seems that this might give us a different set of problems for tests that decide to call t.Log(\"\u003d\u003d\u003d Run\").  Am I wrong about that?  Do we not care?",
      "revId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b1caf2a_f46952e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 57938
      },
      "writtenOn": "2022-06-23T22:18:08Z",
      "side": 1,
      "message": "Technically I think we already had problems with that log specifically -- any log line starting with an update string would be parsed as that update, even if it was just a random log. But, we are introducing a new set of problems for tests that log the update string in the middle of a message (i.e. t.Log(\"some info \u003d\u003d\u003d Run\")).\n\nI think this is a worthy tradeoff -- I can\u0027t think of a good use case where you\u0027d need a log with one of these magic strings, but I can think of lots of situations where logging happens async/contains newlines/otherwise garbles the output format, breaking the current update parsing.",
      "parentUuid": "6eb4c43a_948fba05",
      "revId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1267c971_8131ce6c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 57938
      },
      "writtenOn": "2022-07-01T04:36:20Z",
      "side": 1,
      "message": "from github:\n\n    We have two unlikely scenarios; which is less likely?\n\nI would argue that consumers intentionally logging a magic string is much, much less likely (and much more easily fixed) than loggers outputting trailing newlines or logging things concurrently with the test logger. Based on the linked github issue, several similar issues (https://github.com/golang/go/issues/38063, https://github.com/golang/go/issues/33419), and conversations with the gotestsum maintainers (https://github.com/gotestyourself/gotestsum/issues/141, https://github.com/gotestyourself/gotestsum/pull/253), I felt confident that folks were fairly aligned on this being a clear solution to this problem. Is there anything I can do to lend further confidence here?\n\n    We are currently in a release freeze for the 1.19 release.\n\nSounds good. When should I check back for a review? ",
      "revId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39118037_66e1f20e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-07-01T04:37:43Z",
      "side": 1,
      "message": "\u003e Sounds good. When should I check back for a review?\n\nAfter 1.19 is released.  Thanks.",
      "parentUuid": "1267c971_8131ce6c",
      "revId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "285341a7_bb778ee3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 57938
      },
      "writtenOn": "2022-08-08T13:03:54Z",
      "side": 1,
      "message": "Looks like 1.19 was released on 8/2. Congrats! Would it be possible to get a review on this change now?",
      "parentUuid": "39118037_66e1f20e",
      "revId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6a8deb0_d299fc60",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 57938
      },
      "writtenOn": "2022-08-08T13:03:54Z",
      "side": 1,
      "message": "Just checking back in post-1.19 release!",
      "revId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa308034_7f92cfd0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-08-18T03:06:39Z",
      "side": 1,
      "message": "If https://go.dev/issue/54378 is fixed then this may be unnecessary.  Putting this on hold for that issue.",
      "revId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78e1b2ee_f112307e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5056
      },
      "writtenOn": "2022-10-14T15:54:03Z",
      "side": 1,
      "message": "Separate from #54378, this isn\u0027t the right fix for tests that print partial lines to stdout. It will lead to many more false positives and confusion along the lines of #23036. I will send a separate CL that will fix the issue.",
      "revId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8dc25e6a_3c13b510",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 57938
      },
      "writtenOn": "2022-10-15T16:36:20Z",
      "side": 1,
      "message": "Awesome, thanks! I’d love to follow along with the new CL whenever it’s ready.",
      "parentUuid": "78e1b2ee_f112307e",
      "revId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae059f52_0776d5fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5056
      },
      "writtenOn": "2022-10-17T16:09:48Z",
      "side": 1,
      "message": "Hoping to mail it in the next day or two. Gopherbot will ping #26325 when I do.",
      "parentUuid": "8dc25e6a_3c13b510",
      "revId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one Code-Review+2 is required. Self review is not allowed."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Holds",
        "description": {
          "value": "Changes with a Hold+1 vote are not submittable."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "NOT label:Hold\u003d1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"NOT label:Hold=1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Hold=1"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1a1ae39d61d755cb1ae69d5d6509c6ce8982d8b4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}