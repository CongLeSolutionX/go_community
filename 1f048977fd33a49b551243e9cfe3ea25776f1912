{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5e6e1bbc_1b5a12fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-04-13T19:40:38Z",
      "side": 1,
      "message": "In this sentence I think it would be clearer to refer to haveIdenticalUnderlyingType rather than reflect.ConvertibleTo, since haveIdenticalUnderlyingType is called in other cases, such as AssignableTo.\n\nAlso please break the long line.",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aff55d40_3e782b63",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 38208
      },
      "writtenOn": "2021-04-14T04:23:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e6e1bbc_1b5a12fe",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "150b4275_21fbb25b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 38208
      },
      "writtenOn": "2021-04-13T15:13:42Z",
      "side": 1,
      "message": "https://play.golang.org/p/prRCOrQXQPW could reproduce the issue, it will raise panic message similar like:\n\n```\nruntime: goroutine stack exceeds 1000000000-byte limit\nruntime: sp\u003d0xc020608350 stack\u003d[0xc020608000, 0xc040608000]\nfatal error: stack overflow\n\nruntime stack:\nruntime.throw(0x125ed43, 0xe)\n\t/Users/jinzhu/Projects/jinzhu/go/src/runtime/panic.go:1191 +0x74\nruntime.newstack()\n\t/Users/jinzhu/Projects/jinzhu/go/src/runtime/stack.go:1086 +0x6a5\nruntime.morestack()\n\t/Users/jinzhu/Projects/jinzhu/go/src/runtime/asm_amd64.s:465 +0x8b\n\ngoroutine 260 [running]:\nreflect.(*rtype).Elem(0x1209ee0, 0x0, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:903 +0x1ab fp\u003d0xc020608360 sp\u003d0xc020608358 pc\u003d0x10c284b\nreflect.haveIdenticalUnderlyingType(0x1209ee0, 0x1209ea0, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1665 +0x405 fp\u003d0xc020608440 sp\u003d0xc020608360 pc\u003d0x10c6be5\nreflect.haveIdenticalType(0x13a9a60, 0x1209ee0, 0x13a9a60, 0x1209ea0, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1606 +0x192 fp\u003d0xc020608498 sp\u003d0xc020608440 pc\u003d0x10c67b2\nreflect.haveIdenticalUnderlyingType(0x1232500, 0x1232460, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1683 +0x7b7 fp\u003d0xc020608578 sp\u003d0xc020608498 pc\u003d0x10c6f97\nreflect.haveIdenticalType(0x13a9a60, 0x1232500, 0x13a9a60, 0x1232460, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1606 +0x192 fp\u003d0xc0206085d0 sp\u003d0xc020608578 pc\u003d0x10c67b2\nreflect.haveIdenticalUnderlyingType(0x1209ee0, 0x1209ea0, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1665 +0x47b fp\u003d0xc0206086b0 sp\u003d0xc0206085d0 pc\u003d0x10c6c5b\nreflect.haveIdenticalType(0x13a9a60, 0x1209ee0, 0x13a9a60, 0x1209ea0, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1606 +0x192 fp\u003d0xc020608708 sp\u003d0xc0206086b0 pc\u003d0x10c67b2\nreflect.haveIdenticalUnderlyingType(0x1232500, 0x1232460, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1683 +0x7b7 fp\u003d0xc0206087e8 sp\u003d0xc020608708 pc\u003d0x10c6f97\nreflect.haveIdenticalType(0x13a9a60, 0x1232500, 0x13a9a60, 0x1232460, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1606 +0x192 fp\u003d0xc020608840 sp\u003d0xc0206087e8 pc\u003d0x10c67b2\nreflect.haveIdenticalUnderlyingType(0x1209ee0, 0x1209ea0, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1665 +0x47b fp\u003d0xc020608920 sp\u003d0xc020608840 pc\u003d0x10c6c5b\nreflect.haveIdenticalType(0x13a9a60, 0x1209ee0, 0x13a9a60, 0x1209ea0, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1606 +0x192 fp\u003d0xc020608978 sp\u003d0xc020608920 pc\u003d0x10c67b2\nreflect.haveIdenticalUnderlyingType(0x1232500, 0x1232460, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1683 +0x7b7 fp\u003d0xc020608a58 sp\u003d0xc020608978 pc\u003d0x10c6f97\nreflect.haveIdenticalType(0x13a9a60, 0x1232500, 0x13a9a60, 0x1232460, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1606 +0x192 fp\u003d0xc020608ab0 sp\u003d0xc020608a58 pc\u003d0x10c67b2\nreflect.haveIdenticalUnderlyingType(0x1209ee0, 0x1209ea0, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1665 +0x47b fp\u003d0xc020608b90 sp\u003d0xc020608ab0 pc\u003d0x10c6c5b\nreflect.haveIdenticalType(0x13a9a60, 0x1209ee0, 0x13a9a60, 0x1209ea0, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1606 +0x192 fp\u003d0xc020608be8 sp\u003d0xc020608b90 pc\u003d0x10c67b2\nreflect.haveIdenticalUnderlyingType(0x1232500, 0x1232460, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1683 +0x7b7 fp\u003d0xc020608cc8 sp\u003d0xc020608be8 pc\u003d0x10c6f97\nreflect.haveIdenticalType(0x13a9a60, 0x1232500, 0x13a9a60, 0x1232460, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1606 +0x192 fp\u003d0xc020608d20 sp\u003d0xc020608cc8 pc\u003d0x10c67b2\nreflect.haveIdenticalUnderlyingType(0x1209ee0, 0x1209ea0, 0x0, 0xc040607c00, 0x0)\n\t/Users/jinzhu/Projects/jinzhu/go/src/reflect/type.go:1665 +0x47b fp\u003d0xc020608e00 sp\u003d0xc020608d20 pc\u003d0x10c6c5b\n```",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da1cd838_9dc9425e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-04-13T19:40:38Z",
      "side": 1,
      "message": "An entirely different way to fix this problem might be to change the compiler to always set the pkgPath field of relect.structType.  Currently it only sets that field if the struct contains an unexported field.\n\nCan you open an issue for this if there isn\u0027t one open already, so that we can discuss fixes?  Thanks.",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c84f483e_341fa5f5",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-04-13T19:40:38Z",
      "side": 1,
      "message": "The reflect package is already imported using a dot import.  Just change \"reflect.ValueOf\" to simply \"ValueOf\" in the new code.",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24b7762b_46d5387c",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 38208
      },
      "writtenOn": "2021-04-14T04:23:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c84f483e_341fa5f5",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "794dc9d2_966552d9",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-04-13T19:40:38Z",
      "side": 1,
      "message": "Most of these tests use types defines in this package.  Is is necessary to define these types in different packages?\n\nAnd if they are in different packages, I don\u0027t see any reason that they must both be \"package example\".",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b4f94d3_b4e4b840",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 38208
      },
      "writtenOn": "2021-04-14T04:23:07Z",
      "side": 1,
      "message": "\u003e Is is necessary to define these types in different packages?\n\nIt is not Convertible if it is defined in same package.\n\n\u003e I don\u0027t see any reason that they must both be \"package example\".\n\nThanks for the suggestion, renamed the package name to `example1` and `example2`",
      "parentUuid": "794dc9d2_966552d9",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33981fb5_01bb1a0f",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 3
      },
      "lineNbr": 7242,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-04-13T19:40:38Z",
      "side": 1,
      "message": "It seems to me that this is not correct.  If I use this example in a standalone program\n\n\tvar s1 example1.MyStruct\n\ts2 :\u003d example2.MyStruct(s1)\n\nI get a compiler error:\n\nmain.go:12:25: cannot convert s1 (type \"x.mod/example\".MyStruct) to type \"x.mod/example2\".MyStruct\n\nThat is, the types are not convertible, and ConvertibleTo should return false.",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a6e4be8_4a094dd1",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 3
      },
      "lineNbr": 7242,
      "author": {
        "id": 38208
      },
      "writtenOn": "2021-04-14T04:23:07Z",
      "side": 1,
      "message": "Added a test case to the pull request, if two structs having same structure, we can use reflect Convert one to another, e.g:\n\n```\nfunc TestConvertibleTo(t *testing.T) {\n\tt1 :\u003d ValueOf(example1.MyStruct{}).Type()\n\tt2 :\u003d ValueOf(example2.MyStruct{}).Type()\n\tif !t1.ConvertibleTo(t2) {\n\t\tt.Fatalf(\"(%s).ConvertibleTo(%s) \u003d false, want true\", t1, t2)\n\t}\n\n\tv1 :\u003d example1.MyStruct{\n\t\tName: \"hello\",\n\t\tMyStruct: \u0026example1.MyStruct{\n\t\t\tName: \"world\",\n\t\t},\n\t\tMyStructs: []example1.MyStruct{\n\t\t\t{Name: \"hello world 1\"},\n\t\t\t{Name: \"hello world 2\"},\n\t\t},\n\t}\n\n\tv2, ok :\u003d ValueOf(v1).Convert(t2).Interface().(example2.MyStruct)\n\n\tif !ok {\n\t\tt.Fatalf(\"(%s).Convert(%s) failed\", t1, t2)\n\t}\n\n\tif fmt.Sprintf(\"%+v\", v2) !\u003d fmt.Sprintf(\"%+v\", v1) {\n\t\tt.Fatalf(\"(%s).Convert(%s) got %+v, expecting %+v\", t1, t2, v2, v1)\n\t}\n}\n```",
      "parentUuid": "33981fb5_01bb1a0f",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bece643_30e8fc65",
        "filename": "src/reflect/type.go",
        "patchSetId": 3
      },
      "lineNbr": 1684,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-04-13T19:40:38Z",
      "side": 1,
      "message": "You are mapping to bool and you only store true, so just write\n    if compared[ckey] {",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d071627_805f323f",
        "filename": "src/reflect/type.go",
        "patchSetId": 3
      },
      "lineNbr": 1684,
      "author": {
        "id": 38208
      },
      "writtenOn": "2021-04-14T04:23:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2bece643_30e8fc65",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "165f440a_34d28161",
        "filename": "src/reflect/type.go",
        "patchSetId": 3
      },
      "lineNbr": 1686,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-04-13T19:40:38Z",
      "side": 1,
      "message": "No need for \"else\" after \"continue\".",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4d8a7c4_a7b7156f",
        "filename": "src/reflect/type.go",
        "patchSetId": 3
      },
      "lineNbr": 1686,
      "author": {
        "id": 38208
      },
      "writtenOn": "2021-04-14T04:23:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "165f440a_34d28161",
      "revId": "1f048977fd33a49b551243e9cfe3ea25776f1912",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}