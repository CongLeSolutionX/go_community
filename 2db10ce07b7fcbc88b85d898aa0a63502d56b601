{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8aa8117e_fc5ed23e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-18T23:24:21Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d2db10ce0\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "2db10ce07b7fcbc88b85d898aa0a63502d56b601",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9de7faa9_830c5819",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-18T23:34:59Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "8aa8117e_fc5ed23e",
      "tag": "autogenerated:trybots~happy",
      "revId": "2db10ce07b7fcbc88b85d898aa0a63502d56b601",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfdfd7d9_f04c9321",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-18T23:41:06Z",
      "side": 1,
      "message": "Thank you Mauri for this change! Please see my comment about carefully ensuring that we don\u0027t introduce new unexpected changes, please see https://www.hyrumslaw.com/\n\nThank you for the review Mauri!",
      "revId": "2db10ce07b7fcbc88b85d898aa0a63502d56b601",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32263369_b4c835a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-18T23:49:22Z",
      "side": 1,
      "message": "Please see the updated error message to `\"http: attempting to traverse a non-directory\"`",
      "revId": "2db10ce07b7fcbc88b85d898aa0a63502d56b601",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12263957_0bf32a47",
        "filename": "src/net/http/fs.go",
        "patchSetId": 8
      },
      "lineNbr": 84,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-18T23:41:06Z",
      "side": 1,
      "message": "The above is gonna cause an unexpected behavioral change which will break functionality for users who previously got a mapOpenError for file open failures and here is the description:\nIf we encounter a file permission error or something like a drive partition prooblem, the error returning will be misleading.\n\n\nWe need to handle the case error case as we would with directory issues so:\n\n```go\n     if fi, _ :\u003d os.Stat(dir); fi !\u003d nil \u0026\u0026 !fi.IsDir() {\n          return nil, errors.New(\"http: attempting to open a non-directory file\")\n     }\n```\n     \n and this way any permission failures will fall back to line 86 and then pass back\n the proper and well expected error.",
      "range": {
        "startLine": 81,
        "startChar": 1,
        "endLine": 84,
        "endChar": 2
      },
      "revId": "2db10ce07b7fcbc88b85d898aa0a63502d56b601",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2fb4fab_12d480d5",
        "filename": "src/net/http/fs.go",
        "patchSetId": 8
      },
      "lineNbr": 84,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-18T23:49:22Z",
      "side": 1,
      "message": "We can make my suggested error more prescriptive with:\n\n```go\n  \"http: attempting to traverse a non-directory\"\n```",
      "parentUuid": "12263957_0bf32a47",
      "range": {
        "startLine": 81,
        "startChar": 1,
        "endLine": 84,
        "endChar": 2
      },
      "revId": "2db10ce07b7fcbc88b85d898aa0a63502d56b601",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "904064a5_be2dfd9d",
        "filename": "src/net/http/fs_test.go",
        "patchSetId": 8
      },
      "lineNbr": 1683,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-18T23:41:06Z",
      "side": 1,
      "message": "Please add a newline after this.",
      "revId": "2db10ce07b7fcbc88b85d898aa0a63502d56b601",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e14309b_7906f493",
        "filename": "src/net/http/fs_test.go",
        "patchSetId": 8
      },
      "lineNbr": 1694,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-18T23:41:06Z",
      "side": 1,
      "message": "```go\nif g, w :\u003d res.StatusCode, StatusInternalServerError; g !\u003d w {\n    t.Errorf(\"StatusCode mismatch: got %d, want: %d\", g, w)\n}\n```",
      "range": {
        "startLine": 1692,
        "startChar": 1,
        "endLine": 1694,
        "endChar": 2
      },
      "revId": "2db10ce07b7fcbc88b85d898aa0a63502d56b601",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}