{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "01fc3ea3_7700069f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-26T04:05:27Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003df2ea5ed8\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "f2ea5ed8fd0e4a97d4052bf23e45eaff1c42984a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57bad79e_4cc6e9c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-26T04:05:27Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "5fe1899e_2769c36a",
      "tag": "autogenerated:trybots~beginning",
      "revId": "f2ea5ed8fd0e4a97d4052bf23e45eaff1c42984a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1e5896c_a7576518",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-26T04:16:52Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "01fc3ea3_7700069f",
      "tag": "autogenerated:trybots~happy",
      "revId": "f2ea5ed8fd0e4a97d4052bf23e45eaff1c42984a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80d0108a_5c456570",
        "filename": "src/cmd/go/internal/load/pkg.go",
        "patchSetId": 3
      },
      "lineNbr": 3010,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-26T14:13:00Z",
      "side": 1,
      "message": "I did not expect this transition to occur in this function, and I\u0027m worried that clearing the environment from the process itself will mask typestate bugs.\nCan we instead move it closer to the point where we invoke the executables?\n\n----\n\nWe\u0027re already modifying `$PATH` and `$PWD` in `go generate` and `go test`, and this seems like it naturally fits with those:\n- https://cs.opensource.google/go/go/+/master:src/cmd/go/internal/test/test.go;l\u003d1359-1360;drc\u003d558301a5cb8c87dab8a82db096b4ed5c12610a7d\n- https://cs.opensource.google/go/go/+/master:src/cmd/go/internal/generate/generate.go;l\u003d365-366;drc\u003d93d9035c9e8b129578d3a177fd90eb308e44a597\n\n----\n\nIt looks like `go run` uses `base.RunStdin`, which restores `cfg.OrigEnv`:\nhttps://cs.opensource.google/go/go/+/refs/heads/master:src/cmd/go/internal/base/base.go;l\u003d177;drc\u003df4086d36862d8fd41af90356c894d04d3ff58203\n\nSo perhaps the other environment modification should happen there.",
      "range": {
        "startLine": 3007,
        "startChar": 0,
        "endLine": 3010,
        "endChar": 22
      },
      "revId": "f2ea5ed8fd0e4a97d4052bf23e45eaff1c42984a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e70fb56d_edeedabd",
        "filename": "src/cmd/go/internal/load/pkg.go",
        "patchSetId": 3
      },
      "lineNbr": 3010,
      "author": {
        "id": 5056
      },
      "writtenOn": "2023-05-30T13:56:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80d0108a_5c456570",
      "range": {
        "startLine": 3007,
        "startChar": 0,
        "endLine": 3010,
        "endChar": 22
      },
      "revId": "f2ea5ed8fd0e4a97d4052bf23e45eaff1c42984a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7ea3b0a_9bc3e1fc",
        "filename": "src/cmd/go/internal/tool/tool.go",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-26T14:13:00Z",
      "side": 1,
      "message": "I wonder if `runTool` should be adjusting `$PATH` the way that `go test` and `go generate` do. If the tool calls out to a `go` command, we really want it to be exactly this one.\n\nSo instead of clearing the switch environment, maybe we should adjust `PATH` (using `base.AppendPATH`) and also set `GOTOOLCHAIN\u003dlocal` to prevent further switches entirely?",
      "revId": "f2ea5ed8fd0e4a97d4052bf23e45eaff1c42984a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd2ebc24_c7fc80bb",
        "filename": "src/cmd/go/internal/tool/tool.go",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 5056
      },
      "writtenOn": "2023-05-30T13:52:51Z",
      "side": 1,
      "message": "Perhaps but I don\u0027t think we should do it in this CL, and perhaps not even for Go 1.21.",
      "parentUuid": "c7ea3b0a_9bc3e1fc",
      "revId": "f2ea5ed8fd0e4a97d4052bf23e45eaff1c42984a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63246d78_fb5aa1b6",
        "filename": "src/cmd/go/internal/tool/tool.go",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 5056
      },
      "writtenOn": "2023-05-30T15:18:34Z",
      "side": 1,
      "message": "I don\u0027t believe we have any \u0027go tool\u0027 that themselves run go commands, except maybe \u0027go tool pprof\u0027. I think we can leave dealing with those to the Go 1.22 cycle.\n\nAlso, for the review record, we discussed go test and go generate off-Gerrit last week and concluded they should not set GOTOOLCHAIN\u003dlocal:\n\nIf the go:generate rule is something like go run p@latest, then it probably does need to be able to fetch a new toolchain. And if the current go is the first one in $PATH it should only need to switch versions if the version required by the generator is newer than the version indicated for the CWD.\n\nIf we\u0027re running go test, we already know (by invariant) that the main module\u0027s go version is \u003e\u003d the go version in whatever module we found the test, so the main module\u0027s toolchain should not need to switch again unless the test is using go run pkg@version on some version that its own go.mod doesn\u0027t support.\n\nSo in both of those cases we probably do actually want to allow an upgrade.",
      "parentUuid": "fd2ebc24_c7fc80bb",
      "revId": "f2ea5ed8fd0e4a97d4052bf23e45eaff1c42984a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}