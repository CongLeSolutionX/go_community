{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6ded14a7_5525e194",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-10-12T22:06:25Z",
      "side": 1,
      "message": "It also starts accepting /* comments before +build lines, which should be mentioned here and probably deserves a release note.",
      "revId": "ea9adef5671f29508b5258a8ef889b3eae7e9f1a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1461eb75_96bd68c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 5056
      },
      "writtenOn": "2020-10-13T00:53:33Z",
      "side": 1,
      "message": "I don\u0027t believe it does that.\n\nIt accepts /* */ comments before //go:build lines,\nbut the behavior of // +build lines is meant to be unchanged.\nCompare for example these two tests:\n\n\t{\n\t\tname: \"ValidGoBuild\",\n\t\tcontent: \"// +build yes\\n\\n\" +\n\t\t\t\"//go:build no\\n\" +\n\t\t\t\"package main\\n\",\n\t\ttags:        map[string]bool{\"yes\": true},\n\t\tshouldBuild: true,\n\t},\n\n\t{\n\t\tname: \"MissingBuild2\",\n\t\tcontent: \"/* */\\n\" +\n\t\t\t\"// +build yes\\n\\n\" +\n\t\t\t\"//go:build no\\n\" +\n\t\t\t\"package main\\n\",\n\t\ttags:        map[string]bool{},\n\t\tshouldBuild: false,\n\t\terr:         errGoBuildWithoutBuild,\n\t},\n\nThe difference is that the /* */ stops the search for the // +build in the second example, provoking an error about a missing // +build line.\n\nMaybe I am missing something more subtle though.\n(I think if I made the changes you suggested on #1516\nthen that change might happen, but it\u0027s a goal to avoid such a change.)",
      "parentUuid": "6ded14a7_5525e194",
      "revId": "ea9adef5671f29508b5258a8ef889b3eae7e9f1a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0393035c_a2bd0365",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-10-13T01:00:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1461eb75_96bd68c9",
      "revId": "ea9adef5671f29508b5258a8ef889b3eae7e9f1a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bfda042_af15ef1e",
        "filename": "src/go/build/build.go",
        "patchSetId": 2
      },
      "lineNbr": 1516,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-10-12T22:06:25Z",
      "side": 1,
      "message": "I think you have to test inSlashStar here, and also three lines down.",
      "revId": "ea9adef5671f29508b5258a8ef889b3eae7e9f1a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9b0259c_66c4e4ef",
        "filename": "src/go/build/build.go",
        "patchSetId": 2
      },
      "lineNbr": 1516,
      "author": {
        "id": 5056
      },
      "writtenOn": "2020-10-13T00:53:33Z",
      "side": 1,
      "message": "inSlashStar\u003d\u003dtrue implies ended\u003d\u003dtrue, because /* ends the search for // +build.\nOr, contrapositively, !ended implies !inSlashStar.",
      "parentUuid": "0bfda042_af15ef1e",
      "revId": "ea9adef5671f29508b5258a8ef889b3eae7e9f1a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e408827_a968a4f4",
        "filename": "src/go/build/build.go",
        "patchSetId": 2
      },
      "lineNbr": 1516,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-10-13T01:00:17Z",
      "side": 1,
      "message": "I guess I did misunderstand.  A couple of comments might help.",
      "parentUuid": "c9b0259c_66c4e4ef",
      "revId": "ea9adef5671f29508b5258a8ef889b3eae7e9f1a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}