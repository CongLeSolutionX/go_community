{
  "comments": [
    {
      "key": {
        "uuid": "b27c0e77_9ab0d4d3",
        "filename": "src/go/build/deps_test.go",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 19560
      },
      "writtenOn": "2018-08-23T07:34:37Z",
      "side": 1,
      "message": "Is this still needed? After this CL no non-test code in runtime/internal/atomic seems to use it.",
      "range": {
        "startLine": 41,
        "startChar": 39,
        "endLine": 41,
        "endChar": 61
      },
      "revId": "b25179fe67bf3148f12a5a9aeba897ca10b3f50a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "297b02ed_4c198402",
        "filename": "src/runtime/internal/atomic/atomic_arm.go",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 19560
      },
      "writtenOn": "2018-08-23T07:34:37Z",
      "side": 1,
      "message": "Could/should cpu.CacheLineSize be used here? Also in some other cases below.",
      "range": {
        "startLine": 34,
        "startChar": 6,
        "endLine": 34,
        "endChar": 39
      },
      "revId": "b25179fe67bf3148f12a5a9aeba897ca10b3f50a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cba0889c_d021b6a7",
        "filename": "src/runtime/internal/atomic/atomic_arm.go",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 16006
      },
      "writtenOn": "2018-08-23T08:58:23Z",
      "side": 1,
      "message": "Currently its the same but it might not be in the future. e.g. when padding due to cacheline prefetching should be larger than a cacheline or cachelinepad needs to be more conservative due other architectural deviations (multiple cores with different cache line sizes). \n\nCacheLineSize might also become a dynamically detected variable and we would not be able to use it for type definitions then.",
      "parentUuid": "297b02ed_4c198402",
      "range": {
        "startLine": 34,
        "startChar": 6,
        "endLine": 34,
        "endChar": 39
      },
      "revId": "b25179fe67bf3148f12a5a9aeba897ca10b3f50a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1a4ff27_25ba8b40",
        "filename": "src/runtime/internal/atomic/atomic_arm.go",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 19560
      },
      "writtenOn": "2018-08-23T09:04:12Z",
      "side": 1,
      "message": "Thanks for the explanation.",
      "parentUuid": "cba0889c_d021b6a7",
      "range": {
        "startLine": 34,
        "startChar": 6,
        "endLine": 34,
        "endChar": 39
      },
      "revId": "b25179fe67bf3148f12a5a9aeba897ca10b3f50a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ed44093_6a537540",
        "filename": "src/runtime/internal/atomic/atomic_arm.go",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 16006
      },
      "writtenOn": "2018-08-23T09:14:50Z",
      "side": 1,
      "message": "We could add CacheLinePadSize const if this feels to clunky.",
      "parentUuid": "cba0889c_d021b6a7",
      "range": {
        "startLine": 34,
        "startChar": 6,
        "endLine": 34,
        "endChar": 39
      },
      "revId": "b25179fe67bf3148f12a5a9aeba897ca10b3f50a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}