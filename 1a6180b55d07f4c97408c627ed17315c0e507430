{
  "comments": [
    {
      "key": {
        "uuid": "5bae0b2a_8711b6c8",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 9
      },
      "lineNbr": 626,
      "author": {
        "id": 17092
      },
      "writtenOn": "2020-07-22T18:00:58Z",
      "side": 1,
      "message": "Happy to leave this for another time, but what would you think about extracting and generalizing this into internal/par? Rather than queueing *loadPkg, it could queue a func(), and we could pass in a bound pkg.load. That would let us remove loader.startLoad from this package. Given its name, it feels strange that method starts a goroutine that loads other packages on the queue.\n\nMaybe this is just reinventing par.Work though? Is it better for the concurrency logic to be inlined more directly so it\u0027s clear what\u0027s happening?",
      "revId": "1a6180b55d07f4c97408c627ed17315c0e507430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92f933e2_ae020ba0",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 9
      },
      "lineNbr": 626,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-07-22T19:31:16Z",
      "side": 1,
      "message": "Hmm, that\u0027s an interesting point. There are two major distinctions between this workqueue and par.Work:\n\n1. This workqueue allows work to complete and resume arbitrarily many times on demand, whereas par.Work requires a separate Do call for each idle-to-active transition. (That is: this workqueue allows the caller to poll its idle/active state as an effect, whereas par.Work requires the caller to instead push that state transition explicitly.)\n\n2. par.Work requires comparable work items and implicitly deduplicates them, whereas this workqueue leaves deduplication up to the caller.\n\nI\u0027m open to extracting this as a standalone API (and may in fact _need_ to do so in a followup CL), but I\u0027d like to have more than one call site before I do that (to help ensure that it\u0027s really the right abstraction).",
      "parentUuid": "5bae0b2a_8711b6c8",
      "revId": "1a6180b55d07f4c97408c627ed17315c0e507430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "033aa557_2ac49650",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 9
      },
      "lineNbr": 656,
      "author": {
        "id": 10033
      },
      "writtenOn": "2020-07-29T22:35:38Z",
      "side": 1,
      "message": "I\u0027ve found myself getting confused when talking about what all level we\u0027re on and which edges we\u0027re transitively following. This means that we transitively close over all \"test of\" and \"import of\" edges right?",
      "range": {
        "startLine": 652,
        "startChar": 0,
        "endLine": 656,
        "endChar": 52
      },
      "revId": "1a6180b55d07f4c97408c627ed17315c0e507430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb738aa4_8aaec2fd",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 9
      },
      "lineNbr": 656,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-08-04T03:49:10Z",
      "side": 1,
      "message": "Correct.",
      "parentUuid": "033aa557_2ac49650",
      "range": {
        "startLine": 652,
        "startChar": 0,
        "endLine": 656,
        "endChar": 52
      },
      "revId": "1a6180b55d07f4c97408c627ed17315c0e507430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd8ea6ee_582e79bf",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 9
      },
      "lineNbr": 848,
      "author": {
        "id": 10033
      },
      "writtenOn": "2020-07-29T22:35:38Z",
      "side": 1,
      "message": "Should we change this comment? Before, the test was queued at the end of (*loader).pkg, after queueing all the imports, but now the test is queued in (*loader).loadAll, the caller of this function.",
      "range": {
        "startLine": 848,
        "startChar": 3,
        "endLine": 848,
        "endChar": 45
      },
      "revId": "1a6180b55d07f4c97408c627ed17315c0e507430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "297d3495_c8573496",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 9
      },
      "lineNbr": 848,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-08-04T03:49:10Z",
      "side": 1,
      "message": "Done, thanks.",
      "parentUuid": "dd8ea6ee_582e79bf",
      "range": {
        "startLine": 848,
        "startChar": 3,
        "endLine": 848,
        "endChar": 45
      },
      "revId": "1a6180b55d07f4c97408c627ed17315c0e507430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7688669_a118b6de",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 9
      },
      "lineNbr": 1003,
      "author": {
        "id": 10033
      },
      "writtenOn": "2020-07-29T22:35:38Z",
      "side": 1,
      "message": "It wasn\u0027t clear to me on first reading what was happening here: that ld.pkg above marks the loader as non-idle by grabbing the token and ld.startLoad\u0027s goroutine returns the token once the queue is empty (or the package was in ld.pkgCache, so that the loader stays idle).\n\nI\u0027m wondering if there could be a comment here clarifying the contract between loadAll and ld.pkg w.r.t ld.idle and ld.pkgLoaded?",
      "range": {
        "startLine": 1001,
        "startChar": 2,
        "endLine": 1003,
        "endChar": 9
      },
      "revId": "1a6180b55d07f4c97408c627ed17315c0e507430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab0cc093_d4f9c346",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 9
      },
      "lineNbr": 1003,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-08-04T03:49:10Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "a7688669_a118b6de",
      "range": {
        "startLine": 1001,
        "startChar": 2,
        "endLine": 1003,
        "endChar": 9
      },
      "revId": "1a6180b55d07f4c97408c627ed17315c0e507430",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}