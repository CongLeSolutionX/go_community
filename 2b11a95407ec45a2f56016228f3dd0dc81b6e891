{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "341ceb85_747f553c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 30195
      },
      "writtenOn": "2024-08-22T11:13:57Z",
      "side": 1,
      "message": "probably a duplicate of https://go-review.googlesource.com/c/go/+/563575",
      "revId": "2b11a95407ec45a2f56016228f3dd0dc81b6e891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df40a4bb_b2c0e9c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 3300238
      },
      "writtenOn": "2024-08-22T11:18:14Z",
      "side": 1,
      "message": "\u003e probably a duplicate of https://go-review.googlesource.com/c/go/+/563575\n\nI think the idea is different here: MPTCP is enabled by default *only* on the server side, not everywhere. I think it makes sense to start doing that.",
      "parentUuid": "341ceb85_747f553c",
      "revId": "2b11a95407ec45a2f56016228f3dd0dc81b6e891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b54a467_8eec0aa1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-08-22T18:10:09Z",
      "side": 1,
      "message": "This change will need a release notes in try in GOROOT/doc/next.",
      "revId": "2b11a95407ec45a2f56016228f3dd0dc81b6e891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47e30054_a211b3f3",
        "filename": "src/net/dial.go",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-08-22T18:10:09Z",
      "side": 1,
      "message": "In general we want every GODEBUG to have a way to \"set the old behavior\".  Over in internal/godebugs/table.go this is recorded in the Old field.  Before this change, we could set the entry in table.go to something like {Changed: 24; Old: \"0\"}.  But if we split the GODEBUG handling in this way, we don\u0027t have a valid value for Changed.",
      "revId": "2b11a95407ec45a2f56016228f3dd0dc81b6e891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}