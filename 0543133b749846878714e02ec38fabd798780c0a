{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "78e71538_28abfed7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 21345
      },
      "writtenOn": "2021-11-18T11:08:51Z",
      "side": 1,
      "message": "Commercial hardware with SVE feature support may be released next year. Considering that users will want to add SVE assembly support for optimization, we hope to predefine the assembly syntax so that users can have clear and consistent patterns. Thank you.",
      "revId": "0543133b749846878714e02ec38fabd798780c0a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f7f88f9_ee5e8aac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-11-18T16:53:56Z",
      "side": 1,
      "message": "The syntax looks okay overall. Thanks.\n\nR\u003dgo1.19",
      "revId": "0543133b749846878714e02ec38fabd798780c0a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "691c4131_ebb16a59",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-11-18T16:53:56Z",
      "side": 1,
      "message": "Remove quotes, just use words. Most of this doc doesn\u0027t quote things like this.",
      "range": {
        "startLine": 293,
        "startChar": 22,
        "endLine": 293,
        "endChar": 50
      },
      "revId": "0543133b749846878714e02ec38fabd798780c0a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d979e16_c3b74545",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 21345
      },
      "writtenOn": "2021-11-23T09:35:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "691c4131_ebb16a59",
      "range": {
        "startLine": 293,
        "startChar": 22,
        "endLine": 293,
        "endChar": 50
      },
      "revId": "0543133b749846878714e02ec38fabd798780c0a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7db44e24_c344a885",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-11-18T16:53:56Z",
      "side": 1,
      "message": "Is this literally \"VL\"? What does it stand for? Maybe it needs an explanation somewhere.",
      "range": {
        "startLine": 297,
        "startChar": 16,
        "endLine": 297,
        "endChar": 18
      },
      "revId": "0543133b749846878714e02ec38fabd798780c0a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "602279df_6a818690",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 21345
      },
      "writtenOn": "2021-11-23T09:35:47Z",
      "side": 1,
      "message": "When included as part of the assembler syntax for an instruction, MUL VL indicates that the specified immediate index value is multiplied by the size of the addressed vector or predicate in memory, measured in bytes, irrespective of predication. \n\nWhen used in pseudocode, the symbol VL represents the vector length, measured in bits.\n\nI will add the explanation for it.\n\nThank you.",
      "parentUuid": "7db44e24_c344a885",
      "range": {
        "startLine": 297,
        "startChar": 16,
        "endLine": 297,
        "endChar": 18
      },
      "revId": "0543133b749846878714e02ec38fabd798780c0a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "004e49ec_c7cb61ec",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-11-18T16:53:56Z",
      "side": 1,
      "message": "What is a pattern? What does it look like?",
      "range": {
        "startLine": 322,
        "startChar": 41,
        "endLine": 322,
        "endChar": 50
      },
      "revId": "0543133b749846878714e02ec38fabd798780c0a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e9ca32a_4ba1b90b",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 21345
      },
      "writtenOn": "2021-11-23T09:35:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "004e49ec_c7cb61ec",
      "range": {
        "startLine": 322,
        "startChar": 41,
        "endLine": 322,
        "endChar": 50
      },
      "revId": "0543133b749846878714e02ec38fabd798780c0a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c1d9380_2df4e7ff",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 335,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-11-18T16:53:56Z",
      "side": 1,
      "message": "Does all the A plus B below mean a memory location at address A+B, or just plainly adding two numbers? The syntax below makes sense if it is a memory location.",
      "revId": "0543133b749846878714e02ec38fabd798780c0a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6aa8544_21e4ca6d",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 335,
      "author": {
        "id": 21345
      },
      "writtenOn": "2021-11-23T09:35:47Z",
      "side": 1,
      "message": "All of them mean a memory locationm, but the address is not simply A+B.\n\nFor example: scalar plus vector, the instruction \"LD1B { \u003cZt\u003e.D }, \u003cPg\u003e/Z, [\u003cXn|SP\u003e, \u003cZm\u003e.D]\"\n\nbase \u003d Xn\noffset \u003d Zm\n\nfor e from 0 to VL/64\n  addr \u003d base + offset[e*64+64-1:e*64]\n  result[e*64_64-1:e*64] \u003d load[addr]\nZt \u003d result\n\nThank you.",
      "parentUuid": "4c1d9380_2df4e7ff",
      "revId": "0543133b749846878714e02ec38fabd798780c0a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "231c9347_e521dd76",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 347,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-11-18T16:53:56Z",
      "side": 1,
      "message": "In this doc GNU syntax usually use lowercase. Can this be lowercase? Also MUL in a few other places.",
      "range": {
        "startLine": 347,
        "startChar": 100,
        "endLine": 347,
        "endChar": 103
      },
      "revId": "0543133b749846878714e02ec38fabd798780c0a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3e64a10_fe5dc7bb",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 347,
      "author": {
        "id": 21345
      },
      "writtenOn": "2021-11-23T09:35:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "231c9347_e521dd76",
      "range": {
        "startLine": 347,
        "startChar": 100,
        "endLine": 347,
        "endChar": 103
      },
      "revId": "0543133b749846878714e02ec38fabd798780c0a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}