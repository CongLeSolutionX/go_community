{
  "comments": [
    {
      "key": {
        "uuid": "abf2aa7a_364147e7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-04-06T23:04:45Z",
      "side": 1,
      "message": "are they unused because somebody was working on plumbing them around to get rid of global variables, and this CL is actively fighting that parallel cleanup effort?\n\nI don\u0027t know, but sounds vaguely familiar or at least likely.",
      "revId": "8fc4dc31701bc3617451c179a5995dc670072c5c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0c7adb1_dc131209",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 13550
      },
      "writtenOn": "2018-04-07T13:13:15Z",
      "side": 1,
      "message": "You might be right, so I did a bit of digging.\n\nThe work to massively get rid of globals happened in mid 2016, and these ctxt parameters have been added and removed since then. It doesn\u0027t seem like this refactoring effort has been ongoing in the past year, so I doubt I\u0027d be interrupting anything.\n\nAlso worth pointing out that none of these functions currently depend on any global variables, so it\u0027s more likely that the ctxt parameters stopped being necessary or weren\u0027t necessary to begin with.\n\nStill happy to rever this part if you\u0027d prefer, though.",
      "parentUuid": "abf2aa7a_364147e7",
      "revId": "8fc4dc31701bc3617451c179a5995dc670072c5c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ba22f02_11e58c99",
        "filename": "src/cmd/link/internal/ld/lib.go",
        "patchSetId": 1
      },
      "lineNbr": 487,
      "author": {
        "id": 5206
      },
      "writtenOn": "2018-04-11T14:36:23Z",
      "side": 1,
      "message": "In some later cleanup we could use the second range argument here, rather than using dynexp[i] below.  I expect there are other similar cases.",
      "revId": "8fc4dc31701bc3617451c179a5995dc670072c5c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13f95b0a_7000f1b7",
        "filename": "src/cmd/link/internal/ld/lib.go",
        "patchSetId": 1
      },
      "lineNbr": 2258,
      "author": {
        "id": 25422
      },
      "writtenOn": "2018-04-06T21:42:58Z",
      "side": 1,
      "message": "I this more idiomatic than iota with +1?\n\n visiting markKind \u003d iota + 1\n visited",
      "range": {
        "startLine": 2256,
        "startChar": 0,
        "endLine": 2258,
        "endChar": 8
      },
      "revId": "8fc4dc31701bc3617451c179a5995dc670072c5c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca44c468_7921bb7a",
        "filename": "src/cmd/link/internal/ld/lib.go",
        "patchSetId": 1
      },
      "lineNbr": 2258,
      "author": {
        "id": 13550
      },
      "writtenOn": "2018-04-06T21:45:03Z",
      "side": 1,
      "message": "Oh, I\u0027m not sure. I\u0027d prefer it this way slightly, as all the lines with names are exactly the same.",
      "parentUuid": "13f95b0a_7000f1b7",
      "range": {
        "startLine": 2256,
        "startChar": 0,
        "endLine": 2258,
        "endChar": 8
      },
      "revId": "8fc4dc31701bc3617451c179a5995dc670072c5c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}