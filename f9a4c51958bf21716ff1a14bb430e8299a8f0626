{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c4e04587_a6422290",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-12T15:51:59Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003df9a4c519\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "f9a4c51958bf21716ff1a14bb430e8299a8f0626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65886c1d_16b89be2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-12T18:21:42Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-mips64-rtrk\n* linux-mips64le-rtrk\n",
      "parentUuid": "c4e04587_a6422290",
      "tag": "autogenerated:trybots~happy",
      "revId": "f9a4c51958bf21716ff1a14bb430e8299a8f0626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8db849dd_d70df9fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 61713
      },
      "writtenOn": "2023-05-18T04:29:09Z",
      "side": 1,
      "message": "Can you help me review this CL, thanks.",
      "revId": "f9a4c51958bf21716ff1a14bb430e8299a8f0626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ae98bd1_e914e12e",
        "filename": "src/cmd/compile/internal/ssa/_gen/MIPS64.rules",
        "patchSetId": 5
      },
      "lineNbr": 365,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-05-12T15:51:45Z",
      "side": 1,
      "message": "ZeroExt32to64 is an integer operation. In this code it is applied on a float32 value, which is weird. Should the inner type be uint32?",
      "range": {
        "startLine": 365,
        "startChar": 65,
        "endLine": 365,
        "endChar": 109
      },
      "revId": "f9a4c51958bf21716ff1a14bb430e8299a8f0626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ad97d7a_10c4e23b",
        "filename": "src/cmd/compile/internal/ssa/_gen/MIPS64.rules",
        "patchSetId": 5
      },
      "lineNbr": 365,
      "author": {
        "id": 61713
      },
      "writtenOn": "2023-05-13T12:49:08Z",
      "side": 1,
      "message": "The previous errors were caused by sign extension performed by MIPS64 by default (you can see that the errors occurred in test cases where negative values of floating-point numbers were taken, and the higher bits were filled with 0xffffffff). So I have to use ZeroExt32to64 to ensure the upper 32 bits are filled with zeros.\nThe val will be moved form FPR to GPR, so I think it\u0027s a float32 value. After the move action, val in GPR will be a word value, and it can be treated as a integer value. This is just my thinking.\nAfter all, if you want, I will change it. Thanks.",
      "parentUuid": "4ae98bd1_e914e12e",
      "range": {
        "startLine": 365,
        "startChar": 65,
        "endLine": 365,
        "endChar": 109
      },
      "revId": "f9a4c51958bf21716ff1a14bb430e8299a8f0626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f8539e4_bce8e722",
        "filename": "src/cmd/compile/internal/ssa/_gen/MIPS64.rules",
        "patchSetId": 5
      },
      "lineNbr": 365,
      "author": {
        "id": 61713
      },
      "writtenOn": "2023-05-18T04:29:09Z",
      "side": 1,
      "message": "Mark as resolved.",
      "parentUuid": "9ad97d7a_10c4e23b",
      "range": {
        "startLine": 365,
        "startChar": 65,
        "endLine": 365,
        "endChar": 109
      },
      "revId": "f9a4c51958bf21716ff1a14bb430e8299a8f0626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e8561fc_3a7959d7",
        "filename": "src/cmd/compile/internal/ssa/_gen/MIPS64Ops.go",
        "patchSetId": 5
      },
      "lineNbr": 254,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-05-18T15:22:49Z",
      "side": 1,
      "message": "It would be good to specify the extension here. Presumably this sign extends, which is why you need the zero extension in the rules?",
      "revId": "f9a4c51958bf21716ff1a14bb430e8299a8f0626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "652ed1c6_c6d6d559",
        "filename": "src/cmd/compile/internal/ssa/_gen/MIPS64Ops.go",
        "patchSetId": 5
      },
      "lineNbr": 254,
      "author": {
        "id": 61713
      },
      "writtenOn": "2023-05-19T04:08:03Z",
      "side": 1,
      "message": "This instrcuion only moves data from FPR to GPR. And MIPS64 always do sign extension performed on a non-64-bit value, so I think we can\u0027t specify the extension here, but only to zero extension in the rules.",
      "parentUuid": "2e8561fc_3a7959d7",
      "revId": "f9a4c51958bf21716ff1a14bb430e8299a8f0626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45b8e939_b8d39a3b",
        "filename": "test/codegen/math.go",
        "patchSetId": 5
      },
      "lineNbr": 158,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-05-18T15:22:49Z",
      "side": 1,
      "message": "I don\u0027t think these tests are really specific enough, as MOVV is also the opcode for a load?\n(Make sure these fail if you turn your rewrites off.)",
      "revId": "f9a4c51958bf21716ff1a14bb430e8299a8f0626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "651ef02d_c3e95070",
        "filename": "test/codegen/math.go",
        "patchSetId": 5
      },
      "lineNbr": 158,
      "author": {
        "id": 61713
      },
      "writtenOn": "2023-05-19T04:08:03Z",
      "side": 1,
      "message": "I tried revert this rewrite on my local, and it did not cause test fail. Should i revert change on `math.go` and update pachset?",
      "parentUuid": "45b8e939_b8d39a3b",
      "revId": "f9a4c51958bf21716ff1a14bb430e8299a8f0626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}