{
  "comments": [
    {
      "key": {
        "uuid": "ed8f893d_0b5506c3",
        "filename": "src/cmd/compile/internal/gc/main.go",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-02-22T21:16:23Z",
      "side": 1,
      "message": "We shouldn\u0027t add a new top-level flag for this. It would be much better to put it in the debugtab at the top so it hangs off the existing -d flag. That currently doesn\u0027t accept strings, but I would argue that you\u0027re overloading this anyway with the special \"pctoinline\" value. Instead, I would say leave the existing PC-value table debugging code as is (we can improve that separately if desired) and make a separate int-typed debug flag to enable dumping of the inline tree.",
      "revId": "0ccaff2ebee907e76c34fecfb6cd2a14819b729e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "169bbba2_c5571bd6",
        "filename": "src/cmd/compile/internal/gc/main.go",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 16260
      },
      "writtenOn": "2017-02-23T16:49:51Z",
      "side": 1,
      "message": "The -pcln flag can take pctospadj, pctofile, pctoline, or pctoinline as an argument.  We could even let -pcln take multiple tables as arguments: -pcln pctofile,pctoline.  I suppose we could get the same functionality with -d, but that would require more code and globals.  What\u0027s the downside of adding another flag?",
      "parentUuid": "ed8f893d_0b5506c3",
      "revId": "0ccaff2ebee907e76c34fecfb6cd2a14819b729e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13ede07e_c2910d5e",
        "filename": "src/cmd/compile/internal/gc/main.go",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-02-23T17:12:18Z",
      "side": 1,
      "message": "pctoinline is the only one of these that I see (which is why I suggested the boolean-valued -d flag). Are the others in a different CL?\n\nThe disadvantage of adding a flag is that 1) there are already way too many flags and 2) these flags all show up in go tool compile -h which means they should generally be user-focused, not compiler-developer-focused. The proliferation of debugging flags is why we added -d for developer-focused flags.\n\nI\u0027ve got a CL to add support for string-valued -d flags. Should I send that?",
      "parentUuid": "169bbba2_c5571bd6",
      "revId": "0ccaff2ebee907e76c34fecfb6cd2a14819b729e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9244392_dd3087d2",
        "filename": "src/cmd/compile/internal/gc/main.go",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 16260
      },
      "writtenOn": "2017-02-23T19:38:54Z",
      "side": 1,
      "message": "\u003e pctoinline is the only one of these that I see (which is why I suggested the boolean-valued -d flag). Are the others in a different CL?\n\nThese are all supported by this CL.  See line 27 in obj/pcln.go.\n\n\u003e I\u0027ve got a CL to add support for string-valued -d flags. Should I send that?\n\nYeah. I\u0027ll use that.",
      "parentUuid": "13ede07e_c2910d5e",
      "revId": "0ccaff2ebee907e76c34fecfb6cd2a14819b729e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}