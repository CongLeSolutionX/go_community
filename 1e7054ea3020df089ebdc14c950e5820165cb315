{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0ff9a712_1f9297ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-14T05:29:20Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d1e7054ea",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1e7054ea3020df089ebdc14c950e5820165cb315",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57b1e313_5246a8b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-14T05:29:20Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "66e2a5c2_ed93491f",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1e7054ea3020df089ebdc14c950e5820165cb315",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b46283a_84c1a813",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-14T05:41:15Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "0ff9a712_1f9297ac",
      "tag": "autogenerated:trybots~happy",
      "revId": "1e7054ea3020df089ebdc14c950e5820165cb315",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "784f0a95_05fd3fea",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 2590,
      "author": {
        "id": 52648
      },
      "writtenOn": "2022-02-14T14:50:51Z",
      "side": 1,
      "message": "You probably dont want to mention the constraints package in the spec right now",
      "revId": "1e7054ea3020df089ebdc14c950e5820165cb315",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbda95b6_32e5df90",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 2610,
      "author": {
        "id": 52648
      },
      "writtenOn": "2022-02-14T14:50:51Z",
      "side": 1,
      "message": "It\u0027s not clear if \"number\" is sufficient here - should they be the same names? Or is the mapping done positionally? Is this something that should be explicitly mentioned?",
      "revId": "1e7054ea3020df089ebdc14c950e5820165cb315",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3e70647_7ce787c6",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 2645,
      "author": {
        "id": 52648
      },
      "writtenOn": "2022-02-14T14:50:51Z",
      "side": 1,
      "message": "Should this say something about some type params referring to others? (this is unlike function parameter lists AFAIU)\n\nAre there specific rules this must follow - e.g. here E is used first and defined later; does this order matter?",
      "revId": "1e7054ea3020df089ebdc14c950e5820165cb315",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4f3908b_c9f8aa14",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 2706,
      "author": {
        "id": 52648
      },
      "writtenOn": "2022-02-14T14:50:51Z",
      "side": 1,
      "message": "Just a bit above you mention that [P *C] is a potential ambiguity without the interface{}, it\u0027s not clear to me what the nuance is that makes this not an ambiguity.",
      "revId": "1e7054ea3020df089ebdc14c950e5820165cb315",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b95d42f1_7ee4dbc2",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 2909,
      "author": {
        "id": 52648
      },
      "writtenOn": "2022-02-14T18:48:09Z",
      "side": 1,
      "message": "Here too, don\u0027t use `constraints.Ordered`",
      "revId": "1e7054ea3020df089ebdc14c950e5820165cb315",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea33618b_76fca548",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 2997,
      "author": {
        "id": 52648
      },
      "writtenOn": "2022-02-14T18:48:09Z",
      "side": 1,
      "message": "I find the \"except...\" part between the commas hard to parse.",
      "revId": "1e7054ea3020df089ebdc14c950e5820165cb315",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "220afb6b_58677a2c",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4496,
      "author": {
        "id": 52648
      },
      "writtenOn": "2022-02-14T18:48:09Z",
      "side": 1,
      "message": "Maybe I\u0027m missing something, but doesn\u0027t this first sentence just repeat what was already said above?\n\n\"Function argument type inference infers type arguments from function arguments: if a function parameter is declared with a type T that uses type parameters, unifying the type of the corresponding function argument with T may infer type arguments for the type parameters used by T. \"",
      "revId": "1e7054ea3020df089ebdc14c950e5820165cb315",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa761f83_43f68041",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4555,
      "author": {
        "id": 52648
      },
      "writtenOn": "2022-02-14T18:48:09Z",
      "side": 1,
      "message": "Another constraints.Ordered usage",
      "revId": "1e7054ea3020df089ebdc14c950e5820165cb315",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}