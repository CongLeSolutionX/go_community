{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "556c5034_83a62017",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-01-18T01:01:50Z",
      "side": 1,
      "message": "It seems this CL breaks cmd/go\u0027s TestScript/mod_outside on the longtest builders.",
      "revId": "8a27154bcdb657fd172e77ba19ac0a5dccb996fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69c4d71c_7c935244",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-01-18T01:44:46Z",
      "side": 1,
      "message": "If I add a line \"env CGO_ENABLED\u003d0\" before \"! stale cmd/addr2line\" then the test passes.  But that seems fragile.  CC @bcmills@google.com",
      "parentUuid": "556c5034_83a62017",
      "revId": "8a27154bcdb657fd172e77ba19ac0a5dccb996fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ccfdb68f_210ba36a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-01-18T15:17:52Z",
      "side": 1,
      "message": "I think we should just remove that part of the test (mailed as CL 461689; see the commit message on that change for my reasoning).",
      "parentUuid": "69c4d71c_7c935244",
      "revId": "8a27154bcdb657fd172e77ba19ac0a5dccb996fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4c96081_3f47be56",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 30903
      },
      "writtenOn": "2023-01-22T14:43:31Z",
      "side": 1,
      "message": "Looks like this CL is causing the toolchain build process fails on iOS.\n\nhttps://build.golang.org/log/fe7dc38047bccedcf67640847ff602864fabc40b",
      "revId": "8a27154bcdb657fd172e77ba19ac0a5dccb996fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f05ac96d_13b0d1d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-01-23T15:16:41Z",
      "side": 1,
      "message": "I see what appear to be two separate issues in the builder output.\n\n- There are a lot of `loadinternal: cannot find runtime/cgo` messages emitted by the linker (filed as #57961), but since the build proceeds past them I infer that they do not cause the linker to exit with an error status. \n\n- Building and running the `archive/tar` test (which happens to be the first test in the run) consistently times out (filed as #57962), but due to #53201 I can\u0027t tell at what point in the build/test cycle that happens, let alone why.",
      "parentUuid": "a4c96081_3f47be56",
      "revId": "8a27154bcdb657fd172e77ba19ac0a5dccb996fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e85cfec_166f3e3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-01-23T15:21:34Z",
      "side": 1,
      "message": "Would it be possible to force cgo for the iOS builder? Does setting CGO_ENABLED\u003d1 in the environment on the builder work?\n\nPreviously almost all binaries on iOS are cgo binaries, and there are probably places assuming that is true. Non-cgo binaries may work (some bootstrap binaries were non-cgo), but may not be well tested and supported.\n\nFrom user\u0027s perspective, user mostly won\u0027t build a toolchain running _on_ iOS. They will build a toolchain on macOS then cross compile to iOS. So enabling cgo shouldn\u0027t hurt reproducibility for the toolchain that user uses.",
      "parentUuid": "a4c96081_3f47be56",
      "revId": "8a27154bcdb657fd172e77ba19ac0a5dccb996fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5487bb1e_bae6a974",
        "filename": "src/cmd/dist/build.go",
        "patchSetId": 12
      },
      "lineNbr": 308,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-01-23T15:16:41Z",
      "side": 1,
      "message": "Hmm, should `ios` be included in this list too?",
      "revId": "8a27154bcdb657fd172e77ba19ac0a5dccb996fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e6d5937_442049dd",
        "filename": "src/cmd/dist/build.go",
        "patchSetId": 12
      },
      "lineNbr": 561,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-01-23T15:16:41Z",
      "side": 1,
      "message": "It looks like this line was comment out at PS9. Was that intentional?",
      "revId": "8a27154bcdb657fd172e77ba19ac0a5dccb996fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}