{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a4ffe9a1_90bc87aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-09-09T17:53:28Z",
      "side": 1,
      "message": "Thanks for the reviews!  I\u0027ll wait on checking in until we figure out the compilation differences with unified.",
      "revId": "957aaa43b15f016c412dcb8c892db1834940645a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51a67305_f5c39faa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-09T17:53:44Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d957aaa43",
      "tag": "autogenerated:trybots~beginning",
      "revId": "957aaa43b15f016c412dcb8c892db1834940645a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5afae8be_34865804",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-09T18:07:02Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "51a67305_f5c39faa",
      "tag": "autogenerated:trybots~happy",
      "revId": "957aaa43b15f016c412dcb8c892db1834940645a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "558c69b4_7d01b244",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-09-10T05:01:10Z",
      "side": 1,
      "message": "The unified IR failure seems related to this CL\u0027s change to start exporting the Def field on OAS nodes, but I can\u0027t immediately make sense of why. I do know the ODCL/OAS handling quirk has been there since at least bexport days. And while I\u0027m not a fan of it either, I think there\u0027s latent other code that assumes it works that way.\n\nAre there test cases that necessitate the changes to the OAS* import/export logic? If not, I\u0027d prefer we leave it alone for now, or at least split out into a separate CL.\n\nThe changes to fix \u0027select\u0027 statements (i.e., importing/exporting OSELRECV\u0027s n.Init list, and the change to walk/order.go) seem right, but I think they need tests.",
      "revId": "957aaa43b15f016c412dcb8c892db1834940645a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}