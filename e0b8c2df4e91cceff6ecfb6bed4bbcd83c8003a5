{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ff079ef2_82723772",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-17T04:57:20Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "bbe51310_54502414",
      "tag": "autogenerated:trybots~beginning",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a57eff95_37975252",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-17T04:57:20Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003de0b8c2df\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8954df81_5e6a3671",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-17T05:05:37Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "a57eff95_37975252",
      "tag": "autogenerated:trybots~happy",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cdc4455b_838a09e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 24096
      },
      "writtenOn": "2023-06-24T18:50:42Z",
      "side": 1,
      "message": "General ping on this.",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4af49b1f_b242fce7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5305
      },
      "writtenOn": "2023-07-05T22:38:24Z",
      "side": 1,
      "message": "I don\u0027t know what, if anything, should change here. I\u0027m fairly certain logging errors from writing to the response is not the right choice.\n\nBy my count, there are three calls to `logf` in `net/http` right now; one can only occur in tests, and two are for internal error conditions. Adding a `logf` call for a condition expected to occur in normal server operations does not seem like something we should do.",
      "parentUuid": "cdc4455b_838a09e2",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bf05e0c_3a4be3b2",
        "filename": "src/net/http/fs.go",
        "patchSetId": 2
      },
      "lineNbr": 335,
      "author": {
        "id": 5305
      },
      "writtenOn": "2023-02-17T18:54:54Z",
      "side": 1,
      "message": "What about errors here?\n\nOr on content.Seek, or on the io.ReadFull above used to do Content-Type sniffing, or every other place in this function that returns an error?",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e56c1de_6056d339",
        "filename": "src/net/http/fs.go",
        "patchSetId": 2
      },
      "lineNbr": 335,
      "author": {
        "id": 24096
      },
      "writtenOn": "2023-02-18T02:22:11Z",
      "side": 1,
      "message": "The errors from content.Seek and io.CopyN are still handled in some form. I do think that we should handle the error from io.ReadFull. Are there any other places where the error is not handled?",
      "parentUuid": "4bf05e0c_3a4be3b2",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4145ff67_dd789c51",
        "filename": "src/net/http/fs.go",
        "patchSetId": 2
      },
      "lineNbr": 335,
      "author": {
        "id": 5305
      },
      "writtenOn": "2023-03-07T19:57:22Z",
      "side": 1,
      "message": "Handled in some form, but the form is very different from what\u0027s being added below--returning a non-200 status to a client vs. logging to the server error log.\n\nMy first concern here is still that logging an error just because a client dropped its connection (which is an entirely expected event) doesn\u0027t seem right.",
      "parentUuid": "8e56c1de_6056d339",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50284f50_5f241ec5",
        "filename": "src/net/http/fs.go",
        "patchSetId": 2
      },
      "lineNbr": 335,
      "author": {
        "id": 24096
      },
      "writtenOn": "2023-03-08T03:55:00Z",
      "side": 1,
      "message": "In our case, it wasn\u0027t the client, but AWS itself which sent a bad response and closed it. Therefore the problem was that it affected all clients, and there was nothing logged anywhere. So there was no way of knowing what was the exact error message thrown by AWS.\n\nThat is what I am trying to solve here. Happy to use any other solution that you recommend.",
      "parentUuid": "4145ff67_dd789c51",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28f75d6e_4fffdd2f",
        "filename": "src/net/http/fs.go",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 5305
      },
      "writtenOn": "2023-02-17T18:54:54Z",
      "side": 1,
      "message": "Also responded on #58556, which might be a better place to discuss the right behavior here:\n \nLogging any error from io.CopyN doesn\u0027t seem right, given that the most likely cause of an error is going to be the client going away while writing the response body to it.",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one Code-Review+2 is required. Self review is not allowed."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Holds",
        "description": {
          "value": "Changes with a Hold+1 vote are not submittable."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "NOT label:Hold\u003d1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"NOT label:Hold=1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Hold=1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable, unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:allow-unresolved-comments"]}
      },
      "patchSetCommitId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Wait-Release",
        "description": {
          "value": "Changes with the hashtag wait-release cannot be submitted."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "hashtag:wait-release"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:wait-release"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:wait-release"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "TryBots-Pass",
        "description": {
          "value": "Changes must pass TryBots unless TryBot-Bypass+1 is set."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config -label:TryBot-Result\u003dMAX"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:TryBot-Bypass\u003dMAX"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config -label:TryBot-Result=MAX"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:TryBot-Result=MAX"],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:TryBot-Bypass=MAX"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}