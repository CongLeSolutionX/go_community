{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ff079ef2_82723772",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-17T04:57:20Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "bbe51310_54502414",
      "tag": "autogenerated:trybots~beginning",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a57eff95_37975252",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-17T04:57:20Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003de0b8c2df\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8954df81_5e6a3671",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-17T05:05:37Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "a57eff95_37975252",
      "tag": "autogenerated:trybots~happy",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bf05e0c_3a4be3b2",
        "filename": "src/net/http/fs.go",
        "patchSetId": 2
      },
      "lineNbr": 335,
      "author": {
        "id": 5305
      },
      "writtenOn": "2023-02-17T18:54:54Z",
      "side": 1,
      "message": "What about errors here?\n\nOr on content.Seek, or on the io.ReadFull above used to do Content-Type sniffing, or every other place in this function that returns an error?",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e56c1de_6056d339",
        "filename": "src/net/http/fs.go",
        "patchSetId": 2
      },
      "lineNbr": 335,
      "author": {
        "id": 24096
      },
      "writtenOn": "2023-02-18T02:22:11Z",
      "side": 1,
      "message": "The errors from content.Seek and io.CopyN are still handled in some form. I do think that we should handle the error from io.ReadFull. Are there any other places where the error is not handled?",
      "parentUuid": "4bf05e0c_3a4be3b2",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4145ff67_dd789c51",
        "filename": "src/net/http/fs.go",
        "patchSetId": 2
      },
      "lineNbr": 335,
      "author": {
        "id": 5305
      },
      "writtenOn": "2023-03-07T19:57:22Z",
      "side": 1,
      "message": "Handled in some form, but the form is very different from what\u0027s being added below--returning a non-200 status to a client vs. logging to the server error log.\n\nMy first concern here is still that logging an error just because a client dropped its connection (which is an entirely expected event) doesn\u0027t seem right.",
      "parentUuid": "8e56c1de_6056d339",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28f75d6e_4fffdd2f",
        "filename": "src/net/http/fs.go",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 5305
      },
      "writtenOn": "2023-02-17T18:54:54Z",
      "side": 1,
      "message": "Also responded on #58556, which might be a better place to discuss the right behavior here:\n \nLogging any error from io.CopyN doesn\u0027t seem right, given that the most likely cause of an error is going to be the client going away while writing the response body to it.",
      "revId": "e0b8c2df4e91cceff6ecfb6bed4bbcd83c8003a5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}