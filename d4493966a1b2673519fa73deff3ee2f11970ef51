{
  "comments": [
    {
      "key": {
        "uuid": "0815ed86_34bc77e2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-11-12T00:38:53Z",
      "side": 1,
      "message": "for what?",
      "revId": "d4493966a1b2673519fa73deff3ee2f11970ef51",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23200579_9978157f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 13550
      },
      "writtenOn": "2017-11-12T13:31:46Z",
      "side": 1,
      "message": "this is what I meant by \"I botched the commit summary\" :)",
      "parentUuid": "0815ed86_34bc77e2",
      "revId": "d4493966a1b2673519fa73deff3ee2f11970ef51",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c09b7fb4_62bc96b7",
        "filename": "src/runtime/iface.go",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-11-12T00:38:53Z",
      "side": 1,
      "message": "It looks like there are 6 \u0026TypeAssertionError{...} expressions in iface.go. Should they all be changed to use fullString instead of string?",
      "revId": "d4493966a1b2673519fa73deff3ee2f11970ef51",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7909f2ce_fb3e89d2",
        "filename": "src/runtime/iface.go",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 13550
      },
      "writtenOn": "2017-11-12T13:31:46Z",
      "side": 1,
      "message": "I was going to say, \"this is only useful when we are printing two types, since otherwise the two type strings may be equal and confusing\".\n\nHowever, your comment has got me thinking. In the case where there are the two types foo.Bar and foo.Bar, from package paths p1, and p2, a message containing just one of the two type strings could still be confusing.\n\nIf I see a message like \"cannot assign value of interface{} to foo.Bar\", it can be hard to tell which foo.Bar it actually means.\n\nBut surely, we don\u0027t want all user-facing type strings to have the full package path. When we are printing two we can strip the common parts, but if we\u0027re printing just one type in a message, there is no other type to simplify with.",
      "parentUuid": "c09b7fb4_62bc96b7",
      "revId": "d4493966a1b2673519fa73deff3ee2f11970ef51",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}