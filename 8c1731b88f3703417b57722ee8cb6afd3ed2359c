{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2f6fdee4_46fcbd69",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-10-02T23:19:58Z",
      "side": 1,
      "message": "First look.",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbd6dc32_9d46db74",
        "filename": "src/internal/syscall/unix/at.go",
        "patchSetId": 16
      },
      "lineNbr": 51,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-10-02T23:19:58Z",
      "side": 1,
      "message": "This will panic if len(buf) \u003d\u003d 0.  That is not consistent with how syscall.Readlink behaves.  It should instead pass a non-nil pointer and a length of zero.",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b35e2894_fff641ef",
        "filename": "src/internal/syscall/unix/at.go",
        "patchSetId": 16
      },
      "lineNbr": 51,
      "author": {
        "id": 5305
      },
      "writtenOn": "2024-10-03T22:24:54Z",
      "side": 1,
      "message": "Done. Why can\u0027t we pass a nil pointer in the length-zero case?",
      "parentUuid": "bbd6dc32_9d46db74",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18d87f1b_14d3d95b",
        "filename": "src/internal/syscall/unix/at.go",
        "patchSetId": 16
      },
      "lineNbr": 51,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-10-03T22:44:54Z",
      "side": 1,
      "message": "We probably could, we\u0027re just following the C standard rules for library functions, which is that is invalid to pass a NULL pointer unless the function explicitly permits NULL (see, for example, C11 standard section 7.1.4).",
      "parentUuid": "b35e2894_fff641ef",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82ea4fcf_8a7c1290",
        "filename": "src/internal/syscall/unix/at_darwin.go",
        "patchSetId": 16
      },
      "lineNbr": 24,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-10-02T23:19:58Z",
      "side": 1,
      "message": "You don\u0027t use this anything.  Same for mkdiratTrap below.",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e02b6474_4c75ef3a",
        "filename": "src/internal/syscall/unix/at_darwin.go",
        "patchSetId": 16
      },
      "lineNbr": 24,
      "author": {
        "id": 5305
      },
      "writtenOn": "2024-10-03T22:24:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82ea4fcf_8a7c1290",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9bd326f_0f4fc929",
        "filename": "src/internal/syscall/unix/at_darwin.go",
        "patchSetId": 16
      },
      "lineNbr": 28,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-10-02T23:19:58Z",
      "side": 1,
      "message": "Don\u0027t panic if len(buf) \u003d\u003d 0.",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24a388fc_ee604967",
        "filename": "src/internal/syscall/unix/at_darwin.go",
        "patchSetId": 16
      },
      "lineNbr": 28,
      "author": {
        "id": 5305
      },
      "writtenOn": "2024-10-03T22:24:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c9bd326f_0f4fc929",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f36deb57_889c92f2",
        "filename": "src/internal/syscall/unix/at_libc.go",
        "patchSetId": 16
      },
      "lineNbr": 79,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-10-02T23:19:58Z",
      "side": 1,
      "message": "Don\u0027t panic if len(buf) \u003d\u003d 0.",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0b99fb8_8a0606a6",
        "filename": "src/internal/syscall/unix/at_libc.go",
        "patchSetId": 16
      },
      "lineNbr": 79,
      "author": {
        "id": 5305
      },
      "writtenOn": "2024-10-03T22:24:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f36deb57_889c92f2",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f0e2899_6bf99850",
        "filename": "src/internal/syscall/unix/at_linux.go",
        "patchSetId": 16
      },
      "lineNbr": 34,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-10-02T23:19:58Z",
      "side": 1,
      "message": "MIPS systems use different values here.",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da5845c6_34f49739",
        "filename": "src/internal/syscall/unix/at_linux.go",
        "patchSetId": 16
      },
      "lineNbr": 34,
      "author": {
        "id": 5305
      },
      "writtenOn": "2024-10-03T22:24:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f0e2899_6bf99850",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fdd1ea2_35925b48",
        "filename": "src/internal/syscall/unix/at_openbsd.go",
        "patchSetId": 16
      },
      "lineNbr": 42,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-10-02T23:19:58Z",
      "side": 1,
      "message": "Don\u0027t crash.",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc3f0c85_7e28b4b9",
        "filename": "src/internal/syscall/unix/at_openbsd.go",
        "patchSetId": 16
      },
      "lineNbr": 42,
      "author": {
        "id": 5305
      },
      "writtenOn": "2024-10-03T22:24:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2fdd1ea2_35925b48",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0a562d8_eb820e30",
        "filename": "src/os/root.go",
        "patchSetId": 16
      },
      "lineNbr": 20,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-10-02T23:19:58Z",
      "side": 1,
      "message": "\"Files may be symbolic links\" ?",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5c80389_274ffe25",
        "filename": "src/os/root.go",
        "patchSetId": 16
      },
      "lineNbr": 20,
      "author": {
        "id": 5305
      },
      "writtenOn": "2024-10-03T22:24:54Z",
      "side": 1,
      "message": "\"Methods on Root will follow symbolic links\", maybe?\n\nI want to be clear that the rules apply to symlinks appearing anywhere in the resolution process. (As opposed to O_NOFOLLOW only applying to the last path step.)",
      "parentUuid": "c0a562d8_eb820e30",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d9880ca_3cc55ff4",
        "filename": "src/os/root.go",
        "patchSetId": 16
      },
      "lineNbr": 186,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-10-02T23:19:58Z",
      "side": 1,
      "message": "This looks like the existing os.IsPathSeparator function.",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64c04fe9_4319c6f9",
        "filename": "src/os/root.go",
        "patchSetId": 16
      },
      "lineNbr": 186,
      "author": {
        "id": 5305
      },
      "writtenOn": "2024-10-03T22:24:54Z",
      "side": 1,
      "message": "I completely forgot that os has that function as well.",
      "parentUuid": "5d9880ca_3cc55ff4",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b6c6b10_8a80bbf5",
        "filename": "src/os/root_openat.go",
        "patchSetId": 16
      },
      "lineNbr": 58,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-10-02T23:19:58Z",
      "side": 1,
      "message": "Then set r.f \u003d nil so that we crash faster on use after Close.",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f41fa21_1387b37d",
        "filename": "src/os/root_openat.go",
        "patchSetId": 16
      },
      "lineNbr": 58,
      "author": {
        "id": 5305
      },
      "writtenOn": "2024-10-03T22:24:54Z",
      "side": 1,
      "message": "I think we want to return errors after Close, not crash.\n\nWe do have a problem here if we use a Root after or concurrently Close, though. I\u0027ve fixed it by exporting internal/poll.FD.incref, but there are some other possible approaches to take. If exporting incref seems okay to you, I\u0027ll clean up the references to the unexported form in internal/poll.\n\nAdded a test for use-after-close.",
      "parentUuid": "9b6c6b10_8a80bbf5",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ba7cb45_13689e49",
        "filename": "src/os/root_openat.go",
        "patchSetId": 16
      },
      "lineNbr": 58,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-10-03T22:44:54Z",
      "side": 1,
      "message": "Hmmm.  What we\u0027ve done in the past is moved all the detailed functions into internal/poll, and let it handle the reference counts.  For example, the code in the os package doesn\u0027t call syscall.Read (not counting plan9), it is internal/poll that makes the actual system call.  Is that feasible in this case?",
      "parentUuid": "1f41fa21_1387b37d",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ab9c8a9_445c2440",
        "filename": "src/os/root_openat.go",
        "patchSetId": 16
      },
      "lineNbr": 58,
      "author": {
        "id": 5305
      },
      "writtenOn": "2024-10-04T03:15:18Z",
      "side": 1,
      "message": "Perhaps the problem is that I\u0027m using a poll.FD at all. We don\u0027t need to poll this FD. The only reason we\u0027ve got a poll.FD is because it was simple to use a File to represent the root\u0027s fd.\n\nChanged things around a bit to stop using a File at all. Now we just have a fd (or Handle, on Windows).\n\nThe downside is that Root now needs to do its own synchronization to avoid closing an in-use fd, but that\u0027s not too bad. And now there are fewer interacting layers (Root, File, poll.FD).",
      "parentUuid": "1ba7cb45_13689e49",
      "revId": "8c1731b88f3703417b57722ee8cb6afd3ed2359c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}