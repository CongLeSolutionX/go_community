{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2935650b_a07fcebb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-19T11:12:17Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003df38d5118\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3226817e_b5d3881c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-19T11:23:55Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "2935650b_a07fcebb",
      "tag": "autogenerated:trybots~happy",
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88346579_d3e6c580",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13550
      },
      "writtenOn": "2022-08-23T19:53:32Z",
      "side": 1,
      "message": "I am reminded now that perhaps I can CC you for go/printer and go/parser perf reviews, as these probably help gopls too :) Please let me know if you\u0027re not interested in these or don\u0027t have the time, and I\u0027ll happily just defer to Robert.",
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6193e830_71fb6336",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-08-23T20:11:34Z",
      "side": 1,
      "message": "Nice performance improvement.",
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8009a2cc_9ab3964f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13550
      },
      "writtenOn": "2022-08-23T20:17:38Z",
      "side": 1,
      "message": "What do you think about the 16KiB init buffer, by the way? I wanted something large enough to cover the majority of small-to-medium Go files, but not so large that it would meaningfully increase peak memory usage in regular tools.",
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d9cff2f_e62b31d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-08-23T20:38:30Z",
      "side": 1,
      "message": "Assuming most inputs are complete files, not fragments, the size seems reasonable: it\u0027s about the 83rd percentile of file sizes in the standard library. But you might want to validate that assumption by (e.g.) measuring the size distribution in a typical gopls session, as I think gopls prints a lot of fragments for hover information and signature help. You might also consider using a sync pool for buffers, like fmt.Sprintf does. That would reduce the churn considerably.",
      "parentUuid": "8009a2cc_9ab3964f",
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afd736c0_0ff477e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13550
      },
      "writtenOn": "2022-08-24T10:11:14Z",
      "side": 1,
      "message": "I\u0027m going to skip using a pool for now - I prefer to leave it as a last resort option :) One buffer allocation per file print doesn\u0027t seem particularly worrying either, as we currently have ~3k other allocations in place for the benchmark. I think Sprintf is different, as most Sprintf calls are much cheaper and should allocate way less.",
      "parentUuid": "1d9cff2f_e62b31d7",
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42d53965_00107160",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-08-24T16:09:41Z",
      "side": 1,
      "message": "Fair enough about not using a pool, but my bigger concern is that the benchmark measures only complete files, whereas it may be more common in production (or in gopls at least) for the workload to be only a single declaration.",
      "parentUuid": "afd736c0_0ff477e4",
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2259af91_9def3a2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-08-24T18:07:35Z",
      "side": 1,
      "message": "This comment was marked as resolved, so if you\u0027re ok with this CL, Alan, please feel free to submit. Thanks.",
      "parentUuid": "42d53965_00107160",
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "063ddbb5_feff51b0",
        "filename": "src/go/printer/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 1823,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-08-23T20:11:34Z",
      "side": 1,
      "message": "Ambiguous pronouns. How about:\n\n// We don\u0027t actually need the output of the nested printer,\n// but it must append its bytes somewhere. Lend it the\n// slack portion of our output buffer.",
      "range": {
        "startLine": 1823,
        "startChar": 3,
        "endLine": 1823,
        "endChar": 52
      },
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffbaba43_862f49e2",
        "filename": "src/go/printer/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 1823,
      "author": {
        "id": 13550
      },
      "writtenOn": "2022-08-23T20:17:38Z",
      "side": 1,
      "message": "what does \"slack portion\" mean? how about \"unused portion\", which is perhaps easier to understand?",
      "parentUuid": "063ddbb5_feff51b0",
      "range": {
        "startLine": 1823,
        "startChar": 3,
        "endLine": 1823,
        "endChar": 52
      },
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96ee6246_0afe671b",
        "filename": "src/go/printer/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 1823,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-08-23T20:38:30Z",
      "side": 1,
      "message": "Agreed, that\u0027s better.",
      "parentUuid": "ffbaba43_862f49e2",
      "range": {
        "startLine": 1823,
        "startChar": 3,
        "endLine": 1823,
        "endChar": 52
      },
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "363f2f33_603eb2ce",
        "filename": "src/go/printer/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 1823,
      "author": {
        "id": 13550
      },
      "writtenOn": "2022-08-24T10:11:14Z",
      "side": 1,
      "message": "Thanks, done. Not sure how I ended up with that old sentence, I must have been a bit tired.",
      "parentUuid": "96ee6246_0afe671b",
      "range": {
        "startLine": 1823,
        "startChar": 3,
        "endLine": 1823,
        "endChar": 52
      },
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da68e576_b2df0c00",
        "filename": "src/go/printer/printer.go",
        "patchSetId": 1
      },
      "lineNbr": 1332,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-08-23T20:11:34Z",
      "side": 1,
      "message": "Move this into p.init()?",
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6eb34b92_7768d841",
        "filename": "src/go/printer/printer.go",
        "patchSetId": 1
      },
      "lineNbr": 1332,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-08-23T20:22:03Z",
      "side": 1,
      "message": "On that note, I wonder if we should just make this nil and check when we append. There\u0027s maybe a dozen places where we append to printer.output. I suspect having an \u0027if\u0027 around the appends (sometimes it\u0027s multiple ones) won\u0027t make a significant difference compared to the append itself. That should speed up the uses of the printer where we don\u0027t care about the output even more.\n\n(Presumably we never look at those bytes until the end, but I haven\u0027t verified.)",
      "range": {
        "startLine": 1332,
        "startChar": 3,
        "endLine": 1332,
        "endChar": 9
      },
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0135e6e_00c4b0de",
        "filename": "src/go/printer/printer.go",
        "patchSetId": 1
      },
      "lineNbr": 1332,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-08-23T20:41:55Z",
      "side": 1,
      "message": "I don\u0027t think that would work: it\u0027s only by appending to the internal buffer that we have anything to write to the external io.Writer on L1369. Also the logic depends on the length of the slice (see e.g. writeCommentPrefix).",
      "parentUuid": "6eb34b92_7768d841",
      "range": {
        "startLine": 1332,
        "startChar": 3,
        "endLine": 1332,
        "endChar": 9
      },
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d9e489c_f373c34d",
        "filename": "src/go/printer/printer.go",
        "patchSetId": 1
      },
      "lineNbr": 1332,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-08-23T20:45:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a0135e6e_00c4b0de",
      "range": {
        "startLine": 1332,
        "startChar": 3,
        "endLine": 1332,
        "endChar": 9
      },
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8db3613_176bd0ef",
        "filename": "src/go/printer/printer.go",
        "patchSetId": 1
      },
      "lineNbr": 1332,
      "author": {
        "id": 13550
      },
      "writtenOn": "2022-08-24T10:11:14Z",
      "side": 1,
      "message": "I thought the same as Robert early on, but also bailed rather quickly for the reasons that Alan suggests. At the end of the day, appending bytes is relatively cheap when compared to everything else that the printer does, especially if we preallocate enough space that append-grows won\u0027t be common.",
      "parentUuid": "7d9e489c_f373c34d",
      "range": {
        "startLine": 1332,
        "startChar": 3,
        "endLine": 1332,
        "endChar": 9
      },
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90af07a5_7d62db72",
        "filename": "src/go/printer/printer.go",
        "patchSetId": 1
      },
      "lineNbr": 1332,
      "author": {
        "id": 13550
      },
      "writtenOn": "2022-08-24T10:11:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da68e576_b2df0c00",
      "revId": "f38d51180af63ca4a3da8f36b65c71ecacf061e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}