{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1d38aebd_9a41cd40",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-10-02T00:40:01Z",
      "side": 1,
      "message": "The failure here is due to a new error reported by the type checker and with that the a gopls test is failing. @adonovan@google.com: suggestions?",
      "revId": "3289a764e95d189795ad2261c7b51d4bd239d170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "123a10c6_f01dc34f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-10-02T14:58:59Z",
      "side": 1,
      "message": "The gopls test will need to be adjusted. Three approaches are:\n\n1. make the test require go1.24:\n\n   -- flags --\n   -min_go\u003dgo1.24\n\n   and add the expectation @diag(\"x\", re\"undefined\").\n\n2. make the test require \u003c\u003dgo1.23 and leave it alone. I don\u0027t think we have a -max_go flag though.\n\n3. Ignore the extra diagnostic, which is Go version-dependent:\n\n   -- flags --\n   -ignore_extra_diags\n\n\nI think #3 is simplest. There should be a comment though.",
      "parentUuid": "1d38aebd_9a41cd40",
      "revId": "3289a764e95d189795ad2261c7b51d4bd239d170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}