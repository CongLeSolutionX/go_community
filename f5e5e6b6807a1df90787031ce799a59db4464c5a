{
  "comments": [
    {
      "key": {
        "uuid": "d3ae0d65_8931bdf5",
        "filename": "src/cmd/compile/internal/gc/racewalk.go",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 5400
      },
      "writtenOn": "2015-06-29T20:09:30Z",
      "side": 1,
      "message": "This fails to instrument assignments to *p in the following program:\n\npackage a\n\nfunc baz() (int, int)\n\nfunc bar(p *int) {\n\t*p, *p \u003d baz()\n}",
      "revId": "f5e5e6b6807a1df90787031ce799a59db4464c5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3ae0d65_a92ef994",
        "filename": "src/cmd/compile/internal/gc/racewalk.go",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 5400
      },
      "writtenOn": "2015-06-29T20:09:30Z",
      "side": 1,
      "message": "isstack looks too broad, it returns true for temps, PAUTO and PPARAM. I think this needs to check exactly for OINDREG/REGSP.\nBut taking into account the previous comment, it may be irrelevant.",
      "range": {
        "startLine": 159,
        "startChar": 48,
        "endLine": 159,
        "endChar": 54
      },
      "revId": "f5e5e6b6807a1df90787031ce799a59db4464c5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3b791b3_0ad93b1c",
        "filename": "src/cmd/compile/internal/gc/racewalk.go",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 5400
      },
      "writtenOn": "2015-06-29T20:15:26Z",
      "side": 1,
      "message": "In this case we can insert instrumentation _after_ the stack reading sequence. Since that sequence does not contain any calls, instrumentation is still properly sequenced against calls (potentially containing synchronization).\nInstrumentation won\u0027t be executed if one of the assignments trigger nil deref, but we can ignore this case.",
      "parentUuid": "d3ae0d65_8931bdf5",
      "revId": "f5e5e6b6807a1df90787031ce799a59db4464c5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7361e11e_73e92032",
        "filename": "src/cmd/compile/internal/gc/racewalk.go",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 5056
      },
      "writtenOn": "2015-06-29T20:30:46Z",
      "side": 1,
      "message": "Can you send me a test case to add to this CL? This passes all the current tests. I\u0027m happy to fix it, but I need a target to aim for. Email is fine, no need for a CL.",
      "parentUuid": "d3ae0d65_8931bdf5",
      "revId": "f5e5e6b6807a1df90787031ce799a59db4464c5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7361e11e_53eea43b",
        "filename": "src/cmd/compile/internal/gc/racewalk.go",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 5056
      },
      "writtenOn": "2015-06-29T20:30:46Z",
      "side": 1,
      "message": "Will try that once there is a test case.",
      "parentUuid": "f3b791b3_0ad93b1c",
      "revId": "f5e5e6b6807a1df90787031ce799a59db4464c5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b367d930_78a3bd8a",
        "filename": "src/cmd/compile/internal/gc/racewalk.go",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 5400
      },
      "writtenOn": "2015-06-30T10:43:08Z",
      "side": 1,
      "message": "It is impossible to write a test that shows difference between isstack vs OINDREG/REGSP check, because today all OAS after OCALL in an OBLOCK copy out return values from stack, so they all are OINDREG/REGSP. But isstack still seems wrong.\nMaybe you can just assert that N.Right of OAS is OINDREG/REGSP.",
      "parentUuid": "d3ae0d65_a92ef994",
      "range": {
        "startLine": 159,
        "startChar": 48,
        "endLine": 159,
        "endChar": 54
      },
      "revId": "f5e5e6b6807a1df90787031ce799a59db4464c5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}