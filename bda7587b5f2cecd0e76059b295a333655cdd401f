{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "38ea2452_06c2c2e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-05-12T14:31:12Z",
      "side": 1,
      "message": "As a  matter of style, it\u0027s normally better to check len(s) \u003e 0 rather than s !\u003d nil, because it encourages the equivalent of a nil slice and an empty slice.  As a rule of thumb, the only time you should use !\u003d nil for a slice is when there is an intentional distinction between a nil slice and an empty slice.",
      "revId": "bda7587b5f2cecd0e76059b295a333655cdd401f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc03ea52_02783a01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-12T14:31:30Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dbda7587b",
      "tag": "autogenerated:trybots~beginning",
      "revId": "bda7587b5f2cecd0e76059b295a333655cdd401f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2673cf3_7314bff6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-12T14:42:55Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "bc03ea52_02783a01",
      "tag": "autogenerated:trybots~happy",
      "revId": "bda7587b5f2cecd0e76059b295a333655cdd401f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14514644_eb7dd12e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 51858
      },
      "writtenOn": "2021-05-12T15:06:45Z",
      "side": 1,
      "message": "len(b.Controls) is 2, so len(b.Controls) \u003e 0 is always true, maybe this check is not needed\n\nbecause of the following dereference, I think the nil check is useful",
      "parentUuid": "38ea2452_06c2c2e0",
      "revId": "bda7587b5f2cecd0e76059b295a333655cdd401f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c92a22a_8143c866",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-05-12T15:13:22Z",
      "side": 1,
      "message": "If you want to remove the \u003e 0 test, remove it.  Don\u0027t change it into a !\u003d nil check.  If it is possible that the slice \u003d\u003d nil, we should test for that case by testing len() \u003e 0.  Thanks.",
      "parentUuid": "14514644_eb7dd12e",
      "revId": "bda7587b5f2cecd0e76059b295a333655cdd401f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2f651aa_4ef793f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 51858
      },
      "writtenOn": "2021-05-12T15:24:01Z",
      "side": 1,
      "message": "through the definition of type Block: Controls [2]*Value, b.Controls can not be nil if we do not change this definition\n\nbut the following: b.Controls[0].Op \u003d\u003d OpMakeResult, if we do not check b.Controls[0], maybe nil dereference may happen\n\ndid I miss something?",
      "parentUuid": "9c92a22a_8143c866",
      "revId": "bda7587b5f2cecd0e76059b295a333655cdd401f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}