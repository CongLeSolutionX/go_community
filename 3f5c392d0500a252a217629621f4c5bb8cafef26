{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2a5ea370_5be8ac3e",
        "filename": "src/net/http/fs.go",
        "patchSetId": 2
      },
      "lineNbr": 717,
      "author": {
        "id": 5305
      },
      "writtenOn": "2022-08-29T21:45:21Z",
      "side": 1,
      "message": "This is changing ServeFile to reject any name which contains a .. path component. That\u0027s far too broad; `ServeFile(w, r, \"../foo\")` is fine, because the path is static and not derived from an untrusted source.",
      "revId": "3f5c392d0500a252a217629621f4c5bb8cafef26",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4c6191d_50055596",
        "filename": "src/net/http/fs.go",
        "patchSetId": 2
      },
      "lineNbr": 717,
      "author": {
        "id": 51238
      },
      "writtenOn": "2022-08-30T02:03:13Z",
      "side": 1,
      "message": "I think `for _, ent :\u003d range strings.FieldsFunc(v, isSlashRune) {` in `containsDotDot` only checks for paths whose names are exactly `..` . As `{\"/file/a..\", \"testdata/file\", 200}` in the test case, it passes the check.\n\ndo you mean that it still broad?",
      "parentUuid": "2a5ea370_5be8ac3e",
      "revId": "3f5c392d0500a252a217629621f4c5bb8cafef26",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a37e5a3_e4384a21",
        "filename": "src/net/http/fs.go",
        "patchSetId": 2
      },
      "lineNbr": 717,
      "author": {
        "id": 51238
      },
      "writtenOn": "2022-08-30T02:08:42Z",
      "side": 1,
      "message": "As stated in the original test case and comment, I\u0027m not quite sure, but I think \"ServeFile\" should reject any request where the directory contains \"..\".",
      "parentUuid": "c4c6191d_50055596",
      "revId": "3f5c392d0500a252a217629621f4c5bb8cafef26",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f7612d3_a9ddde22",
        "filename": "src/net/http/fs.go",
        "patchSetId": 2
      },
      "lineNbr": 717,
      "author": {
        "id": 5305
      },
      "writtenOn": "2022-11-01T21:10:52Z",
      "side": 1,
      "message": "I\u0027m not talking about `/file/a..`, but the literal name `../foo`.\n\n`ServeFile(w, r, \"../foo\")` passes a `name` parameter that contains a `..` path element. That\u0027s fine, the name is a static string and not derived from an untrusted source. I don\u0027t think we can change `ServeFile` to reject that filename.",
      "parentUuid": "8a37e5a3_e4384a21",
      "revId": "3f5c392d0500a252a217629621f4c5bb8cafef26",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}