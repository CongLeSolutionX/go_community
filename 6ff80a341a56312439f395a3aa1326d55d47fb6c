{
  "comments": [
    {
      "key": {
        "uuid": "d8266dc4_b4b8f8b5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 5076
      },
      "writtenOn": "2017-09-22T06:50:22Z",
      "side": 1,
      "message": "net/http: remove IPv6 zone identifier from the key for persistent connections",
      "range": {
        "startLine": 7,
        "startChar": 10,
        "endLine": 7,
        "endChar": 74
      },
      "revId": "6ff80a341a56312439f395a3aa1326d55d47fb6c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e90eee21_5b614852",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 5076
      },
      "writtenOn": "2017-09-22T06:50:22Z",
      "side": 1,
      "message": "A client",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 6
      },
      "revId": "6ff80a341a56312439f395a3aa1326d55d47fb6c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd4e7447_3c8d5898",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 5076
      },
      "writtenOn": "2017-09-22T06:50:22Z",
      "side": 1,
      "message": "http://[IPv6 link-local address%zone ID]/",
      "range": {
        "startLine": 10,
        "startChar": 47,
        "endLine": 10,
        "endChar": 65
      },
      "revId": "6ff80a341a56312439f395a3aa1326d55d47fb6c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cd1bfe4_b39ded1d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 5076
      },
      "writtenOn": "2017-09-22T06:50:22Z",
      "side": 1,
      "message": "IPv6 link-local address",
      "range": {
        "startLine": 12,
        "startChar": 42,
        "endLine": 12,
        "endChar": 60
      },
      "revId": "6ff80a341a56312439f395a3aa1326d55d47fb6c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94b9d489_f7c0ecfa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 5076
      },
      "writtenOn": "2017-09-22T06:50:22Z",
      "side": 1,
      "message": "redirection",
      "range": {
        "startLine": 13,
        "startChar": 28,
        "endLine": 13,
        "endChar": 36
      },
      "revId": "6ff80a341a56312439f395a3aa1326d55d47fb6c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64892163_2c96021c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 5076
      },
      "writtenOn": "2017-09-22T06:50:22Z",
      "side": 1,
      "message": "as per RFC 6874",
      "range": {
        "startLine": 15,
        "startChar": 45,
        "endLine": 15,
        "endChar": 55
      },
      "revId": "6ff80a341a56312439f395a3aa1326d55d47fb6c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db7d55d3_51832452",
        "filename": "src/net/http/proxy_test.go",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 5076
      },
      "writtenOn": "2017-09-22T06:50:22Z",
      "side": 1,
      "message": "move this line to the bottom, also https:\n\n        {\"\", \"http\", \"[fe80::1%zone]\", \"|http|[fe80::1]\"},\n        {\"\", \"https\", \"[fe80::1%zone]\", \"|https|[fe80::1]\"},\n}",
      "range": {
        "startLine": 54,
        "startChar": 1,
        "endLine": 54,
        "endChar": 48
      },
      "revId": "6ff80a341a56312439f395a3aa1326d55d47fb6c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af91284a_43cffee2",
        "filename": "src/net/http/transport.go",
        "patchSetId": 4
      },
      "lineNbr": 1288,
      "author": {
        "id": 5076
      },
      "writtenOn": "2017-09-22T06:50:22Z",
      "side": 1,
      "message": "still not sure whether this change is safe. what happens when the client has two connections simultaneously like the following?\nhttp://[fe80::1%zone1]/ and http://[fe80::1%zone2]/",
      "range": {
        "startLine": 1288,
        "startChar": 15,
        "endLine": 1288,
        "endChar": 40
      },
      "revId": "6ff80a341a56312439f395a3aa1326d55d47fb6c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3284700_093d5c23",
        "filename": "src/net/http/transport.go",
        "patchSetId": 4
      },
      "lineNbr": 1288,
      "author": {
        "id": 5065
      },
      "writtenOn": "2017-09-23T03:15:21Z",
      "side": 1,
      "message": "Yeah, I\u0027m also worried about that.",
      "parentUuid": "af91284a_43cffee2",
      "range": {
        "startLine": 1288,
        "startChar": 15,
        "endLine": 1288,
        "endChar": 40
      },
      "revId": "6ff80a341a56312439f395a3aa1326d55d47fb6c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd69b12b_6d4b2f4e",
        "filename": "src/net/http/transport.go",
        "patchSetId": 4
      },
      "lineNbr": 1288,
      "author": {
        "id": 22895
      },
      "writtenOn": "2017-09-23T06:16:10Z",
      "side": 1,
      "message": "I tested this situation. Two requests will both be sent to one server. And libcurl has the same behavior.\n\nThe code is\n\n package main\n\n import (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"net/http\"\n )\n\n const ip \u003d \"fe80::1234\"\n\n func request(zone string) {\n\turl :\u003d fmt.Sprintf(\"http://[%v%%25%v]:8888\", ip, zone)\n\tresponse, err :\u003d http.Get(url)\n\tif err !\u003d nil {\n\t\tpanic(err)\n\t}\n\tdefer response.Body.Close()\n\tbody, err :\u003d ioutil.ReadAll(response.Body)\n\tif err !\u003d nil {\n\t\tpanic(err)\n\t}\n\tlog.Println(string(body))\n }\n\n func main() {\n\trequest(\"en0\")\n\trequest(\"en4\")\n }\n\nlibcurl:\n\n #include \u003cstdio.h\u003e\n #include \u003ccurl/curl.h\u003e\n\n int main() {\n    CURL *curl;\n    const char* url1 \u003d \"http://[fe80::1234%25en0]:8888\";\n    const char* url2 \u003d \"http://[fe80::1234%25en4]:8888\";\n    curl_global_init(CURL_GLOBAL_DEFAULT);\n    curl \u003d curl_easy_init();\n    curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, 1);\n\n    curl_easy_setopt(curl, CURLOPT_URL, url1);\n    printf(\"   %d\\n\", curl_easy_perform(curl));\n    curl_easy_setopt(curl, CURLOPT_URL, url2);\n    printf(\"   %d\\n\", curl_easy_perform(curl));\n\n    curl_easy_cleanup(curl);\n    curl_global_cleanup();\n    return 0;\n }",
      "parentUuid": "e3284700_093d5c23",
      "range": {
        "startLine": 1288,
        "startChar": 15,
        "endLine": 1288,
        "endChar": 40
      },
      "revId": "6ff80a341a56312439f395a3aa1326d55d47fb6c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a140703_dc026799",
        "filename": "src/net/http/transport.go",
        "patchSetId": 4
      },
      "lineNbr": 1288,
      "author": {
        "id": 22895
      },
      "writtenOn": "2017-09-23T06:43:08Z",
      "side": 1,
      "message": "The posted change is the cURL way to resolve the issue.\nThere are other solutions.\n\n1. Add zone ID at this line and then send the second request.\nhttps://github.com/golang/go/blob/6872a8e1c9904af5f6c23e42e01b027c8cd1c813/src/net/http/client.go#L534\n\n2. Add zone ID in the outgoing request and let server to response it. This is behavior of Python and Java 8 HTTP client.\n(I\u0027m not suggesting this. I just list other implementation\u0027s behavior)\n\n3. When establishing the TCP connection, select a default zone for it. This is behavior of Java 8/9 TCP Socket implementation.\nIf en0 is the default, a request to \u0027http://[fe80::1234]/\u0027 will be sent to en0 by Java.\nA Request to \u0027http://[fe80::1234%en1]/\u0027 will be sent to en1 but the second request will be sent to en0. (Java 9 removes zone ID from outgoing request)\n\nDepending on how to write server code, Go 1.9, cURL, Python, Java 8 and Java 9 can give many different results.\nMaybe IETF should specify how to handle this.",
      "parentUuid": "dd69b12b_6d4b2f4e",
      "range": {
        "startLine": 1288,
        "startChar": 15,
        "endLine": 1288,
        "endChar": 40
      },
      "revId": "6ff80a341a56312439f395a3aa1326d55d47fb6c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}