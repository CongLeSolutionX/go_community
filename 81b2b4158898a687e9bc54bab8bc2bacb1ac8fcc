{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ac2b6aaa_c4e0a6ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6320
      },
      "writtenOn": "2021-06-16T14:28:13Z",
      "side": 1,
      "message": "Do you have a testcase that reproduces the problem? I\u0027m also wondering if R0 could be a problem since Go code assumes it contains the value 0 and the VDSO generated code could clobber it.",
      "revId": "81b2b4158898a687e9bc54bab8bc2bacb1ac8fcc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bdb34a99_7af61df2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5470
      },
      "writtenOn": "2021-06-16T14:41:16Z",
      "side": 1,
      "message": "The test added in the following CL will cover this: https://go-review.googlesource.com/c/go/+/192937",
      "parentUuid": "ac2b6aaa_c4e0a6ae",
      "revId": "81b2b4158898a687e9bc54bab8bc2bacb1ac8fcc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24224121_56278fb9",
        "filename": "src/runtime/sys_linux_ppc64x.s",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 36863
      },
      "writtenOn": "2021-06-16T14:57:46Z",
      "side": 1,
      "message": "Trivial nit, should the hard tabs be preserved?",
      "revId": "81b2b4158898a687e9bc54bab8bc2bacb1ac8fcc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c2c19b9_4103a3f7",
        "filename": "src/runtime/sys_linux_ppc64x.s",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5470
      },
      "writtenOn": "2021-06-17T18:03:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24224121_56278fb9",
      "revId": "81b2b4158898a687e9bc54bab8bc2bacb1ac8fcc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f02550c_59fd8edb",
        "filename": "src/runtime/sys_linux_ppc64x.s",
        "patchSetId": 2
      },
      "lineNbr": 248,
      "author": {
        "id": 36863
      },
      "writtenOn": "2021-06-16T14:57:46Z",
      "side": 1,
      "message": "This looks strange, is it not meant to be \"JMP finish\"?",
      "range": {
        "startLine": 248,
        "startChar": 1,
        "endLine": 248,
        "endChar": 16
      },
      "revId": "81b2b4158898a687e9bc54bab8bc2bacb1ac8fcc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8f005d5_5e1e3ae4",
        "filename": "src/runtime/sys_linux_ppc64x.s",
        "patchSetId": 2
      },
      "lineNbr": 248,
      "author": {
        "id": 5470
      },
      "writtenOn": "2021-06-16T15:01:50Z",
      "side": 1,
      "message": "Yes, you\u0027re correct this should be a JMP, I will update.",
      "parentUuid": "9f02550c_59fd8edb",
      "range": {
        "startLine": 248,
        "startChar": 1,
        "endLine": 248,
        "endChar": 16
      },
      "revId": "81b2b4158898a687e9bc54bab8bc2bacb1ac8fcc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a76ac468_4f4f5753",
        "filename": "src/runtime/sys_linux_ppc64x.s",
        "patchSetId": 2
      },
      "lineNbr": 248,
      "author": {
        "id": 5470
      },
      "writtenOn": "2021-06-16T15:17:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8f005d5_5e1e3ae4",
      "range": {
        "startLine": 248,
        "startChar": 1,
        "endLine": 248,
        "endChar": 16
      },
      "revId": "81b2b4158898a687e9bc54bab8bc2bacb1ac8fcc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe250de5_8ecdd621",
        "filename": "src/runtime/sys_linux_ppc64x.s",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 36863
      },
      "writtenOn": "2021-06-16T15:33:04Z",
      "side": 1,
      "message": "I think the finish label will need fixed up to handle the non-vdso path.",
      "range": {
        "startLine": 279,
        "startChar": 5,
        "endLine": 279,
        "endChar": 11
      },
      "revId": "81b2b4158898a687e9bc54bab8bc2bacb1ac8fcc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67281f25_622409ce",
        "filename": "src/runtime/sys_linux_ppc64x.s",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 5470
      },
      "writtenOn": "2021-06-16T16:21:40Z",
      "side": 1,
      "message": "Yeah, good catch. I didn\u0027t modify it initially because on glance that seemed to be how the arm64 version behaved, but I think there\u0027s some differences there.\n\nI\u0027ve added a new label \"return\" which the syscall fallback can JMP to.",
      "parentUuid": "fe250de5_8ecdd621",
      "range": {
        "startLine": 279,
        "startChar": 5,
        "endLine": 279,
        "endChar": 11
      },
      "revId": "81b2b4158898a687e9bc54bab8bc2bacb1ac8fcc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6e752cc_607791eb",
        "filename": "src/runtime/sys_linux_ppc64x.s",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 5470
      },
      "writtenOn": "2021-06-17T18:03:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67281f25_622409ce",
      "range": {
        "startLine": 279,
        "startChar": 5,
        "endLine": 279,
        "endChar": 11
      },
      "revId": "81b2b4158898a687e9bc54bab8bc2bacb1ac8fcc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}