{
  "comments": [
    {
      "key": {
        "uuid": "2b39d2b4_e13e8e0c",
        "filename": "src/net/dial.go",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 5076
      },
      "writtenOn": "2016-04-15T03:10:42Z",
      "side": 1,
      "message": "I have a question, it\u0027s not related net.DialContext directly, though.\n\nMy concern with DialContext is how we should represent a customer transport stack using context.Context. I can imagine a few typical examples like the following:\n \n 1. HTTP over TLS over TCP for DANE host\n 1.1. control plane for host/service/auth discovery\n   - DNS over TLS over TCP or DNS over UDP\n 1.2. forwarding plane\n  - HTTP/[12] over TLS over TCP\n \n 2. WebSocket over (HTTP/1 over) TLS over TCP for DANE host\n 2.1. control plane for host/service/auth discovery\n  - DNS over TLS over TCP or DNS over UDP\n  - WebSocket over HTTP/1 over TLS over TCP // first-half of forwarding plane setup\n 2.2. forwarding plane\n  - WebSocket over TLS over TCP\n \nWhat\u0027s your plan on above examples?\n\nJust adding a few fields to http.Transport to make http.Transport as a central control entity?\n \n client :\u003d http.Client{Transport: \u0026http.Transport{\n        DialContext: // new field for net.DialContext\n        DialTLSContext: // new field for tls.\u003cnew context-aware function\u003e\n }}",
      "range": {
        "startLine": 285,
        "startChar": 0,
        "endLine": 286,
        "endChar": 24
      },
      "revId": "b9e8d59bc654bc50a2fa88a72b517d677e4f101e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b39d2b4_4113e2ed",
        "filename": "src/net/dial.go",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-04-15T04:50:15Z",
      "side": 1,
      "message": "The plan is to add net/http.Transport.Dialer (a *net.Dialer) which takes precedence over Transport.Dial. The *http.Request\u0027s Context is then passed down the chain.",
      "parentUuid": "2b39d2b4_e13e8e0c",
      "range": {
        "startLine": 285,
        "startChar": 0,
        "endLine": 286,
        "endChar": 24
      },
      "revId": "b9e8d59bc654bc50a2fa88a72b517d677e4f101e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b39d2b4_16c84294",
        "filename": "src/net/dial.go",
        "patchSetId": 2
      },
      "lineNbr": 290,
      "author": {
        "id": 5206
      },
      "writtenOn": "2016-04-15T21:10:50Z",
      "side": 1,
      "message": "I see that you have more or less copied this sentence, but I don\u0027t know what it means.  At least the earlier version has /all/all types/, which would be an improvement.",
      "revId": "b9e8d59bc654bc50a2fa88a72b517d677e4f101e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "083414db_52c4b4b3",
        "filename": "src/net/dial.go",
        "patchSetId": 2
      },
      "lineNbr": 290,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-04-15T21:45:24Z",
      "side": 1,
      "message": "Actually I just deleted the last two sentences. It\u0027s not even true that the context\u0027s error is returned: they\u0027re always wrapped in OpError anyway, and they\u0027re mapped to the nearest semantically identical error. But even that will likely change later. So I\u0027m going to say nothing for now. People won\u0027t use this unless they know what a context is for. We can add more docs later.",
      "parentUuid": "2b39d2b4_16c84294",
      "revId": "b9e8d59bc654bc50a2fa88a72b517d677e4f101e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "083414db_d27664da",
        "filename": "src/net/fd_unix.go",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5206
      },
      "writtenOn": "2016-04-15T21:10:50Z",
      "side": 1,
      "message": "DELETEME",
      "revId": "b9e8d59bc654bc50a2fa88a72b517d677e4f101e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "083414db_f2b28056",
        "filename": "src/net/fd_unix.go",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-04-15T21:45:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "083414db_d27664da",
      "revId": "b9e8d59bc654bc50a2fa88a72b517d677e4f101e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "083414db_b24bd855",
        "filename": "src/net/hook.go",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 5206
      },
      "writtenOn": "2016-04-15T21:10:50Z",
      "side": 1,
      "message": "Why did you change simply setting testHookDialTCP to dialTCP?",
      "revId": "b9e8d59bc654bc50a2fa88a72b517d677e4f101e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "083414db_522dd441",
        "filename": "src/net/hook.go",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-04-15T21:45:24Z",
      "side": 1,
      "message": "Because I thought these were terrible.\n\nThey have confused me for as long as I\u0027ve worked in this code and I thought it was time for them to die, and while I was here touching this anyway for context, I cleaned it up.\n\nI could revert, but I\u0027d rather not. I\u0027d rather keep cleaning (in another CL) and making things named \"testHook\" be optional and not be the actual guts of the implementation.",
      "parentUuid": "083414db_b24bd855",
      "revId": "b9e8d59bc654bc50a2fa88a72b517d677e4f101e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "083414db_f29de032",
        "filename": "src/net/lookup_unix.go",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 5206
      },
      "writtenOn": "2016-04-15T21:10:50Z",
      "side": 1,
      "message": "We don\u0027t want to release Go 1.7 without fixing this.  Can you open an issue for it?",
      "revId": "b9e8d59bc654bc50a2fa88a72b517d677e4f101e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "083414db_b24518f5",
        "filename": "src/net/lookup_unix.go",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-04-15T21:45:24Z",
      "side": 1,
      "message": "https://github.com/golang/go/issues/15321",
      "parentUuid": "083414db_f29de032",
      "revId": "b9e8d59bc654bc50a2fa88a72b517d677e4f101e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "083414db_92a45c7b",
        "filename": "src/net/lookup_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 5206
      },
      "writtenOn": "2016-04-15T21:10:50Z",
      "side": 1,
      "message": "I think we don\u0027t want to release 1.7 without implementing a timeout here.",
      "revId": "b9e8d59bc654bc50a2fa88a72b517d677e4f101e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "083414db_95aa0694",
        "filename": "src/net/lookup_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-04-15T21:45:24Z",
      "side": 1,
      "message": "I\u0027ve just implemented them in this CL.",
      "parentUuid": "083414db_92a45c7b",
      "revId": "b9e8d59bc654bc50a2fa88a72b517d677e4f101e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "083414db_75b9daec",
        "filename": "src/net/lookup_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-04-15T21:45:24Z",
      "side": 1,
      "message": "done",
      "revId": "b9e8d59bc654bc50a2fa88a72b517d677e4f101e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}