{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5e451227_e99d5d81",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-21T08:41:25Z",
      "side": 1,
      "message": "cmd/compile: show types in generics type arguments/parameters mismatch",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "063db9b1_4df0210b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 66688
      },
      "writtenOn": "2023-11-23T16:00:46Z",
      "side": 1,
      "message": "Emmanuel - I like the message even I wish that same. However mismatch is the number of arguments only but not on their types,which I felt be overlapping against existing error and it was handled already.\n\nMay be shall I change it like this ? - cmd/compile: show mismatch on the number of type arguments for the generic types.",
      "parentUuid": "5e451227_e99d5d81",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7976c28_d2546217",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-21T08:41:25Z",
      "side": 1,
      "message": "This change improves the user experience of mismatched\narguments/parameters for generics. It now displays:\n   have: (current_types)\n   want: (expected_types)\n\nmatching what’s displayed when we have mismatches for\nnon-generics.",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39391a1c_a1429ea5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 66688
      },
      "writtenOn": "2023-11-23T16:01:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7976c28_d2546217",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1cb88c78_4dc82320",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-21T08:41:25Z",
      "side": 1,
      "message": "Thank you for this change Raghvender. I’ve added a suggestion to improve the code and fix the pluralization in error messages so no more “1 arguments”. We shall also need to add a test inside test/fixedbugs which also happens to have examples that you can get inspiration for: please run: ls -rt and it’ll show you most recent changes closer to the end of your terminal.",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98a1660e_01a9e6af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-21T08:41:40Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dcba52c0f\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be050f2f_a4127812",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-21T08:47:33Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003dcba52c0f\nFailed on linux-amd64-boringcrypto: https://storage.googleapis.com/go-build-log/cba52c0f/linux-amd64-boringcrypto_a380389f.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "98a1660e_01a9e6af",
      "tag": "autogenerated:trybots~progress",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38708e93_0a678c52",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-21T08:53:16Z",
      "side": 1,
      "message": "12 of 46 TryBots failed.\nFailed on linux-amd64-boringcrypto: https://storage.googleapis.com/go-build-log/cba52c0f/linux-amd64-boringcrypto_a380389f.log\nFailed on linux-amd64-newinliner: https://storage.googleapis.com/go-build-log/cba52c0f/linux-amd64-newinliner_f6acd62f.log\nFailed on js-wasm-node18: https://storage.googleapis.com/go-build-log/cba52c0f/js-wasm-node18_cac6e270.log\nFailed on freebsd-amd64-12_3: https://storage.googleapis.com/go-build-log/cba52c0f/freebsd-amd64-12_3_c2726478.log\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/cba52c0f/linux-amd64_db91a2ba.log\nFailed on windows-amd64-2016: https://storage.googleapis.com/go-build-log/cba52c0f/windows-amd64-2016_e7bce7d3.log\nFailed on wasip1-wasm-wasmtime: https://storage.googleapis.com/go-build-log/cba52c0f/wasip1-wasm-wasmtime_1c4699db.log\nFailed on linux-arm64: https://storage.googleapis.com/go-build-log/cba52c0f/linux-arm64_896119da.log\nFailed on linux-386: https://storage.googleapis.com/go-build-log/cba52c0f/linux-386_310cdb10.log\nFailed on openbsd-amd64-72: https://storage.googleapis.com/go-build-log/cba52c0f/openbsd-amd64-72_8d7943bb.log\nFailed on windows-386-2016: https://storage.googleapis.com/go-build-log/cba52c0f/windows-386-2016_9c4a660e.log\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/cba52c0f/linux-amd64-race_f9d51991.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "98a1660e_01a9e6af",
      "tag": "autogenerated:trybots~failed",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0988e20_b4b1f2fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-11-21T21:58:30Z",
      "side": 1,
      "message": "Looks like a number of tests need to be updated.",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ade1649_5e3d7a5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 66688
      },
      "writtenOn": "2023-11-22T03:36:18Z",
      "side": 1,
      "message": "Sure Findley. Though I have come across many a times of those messages in many go files(Which was initial helpful search text for the fix), somehow my go test ./... or all.bat missed that or I went that unnoticed and in-addition to that I forgot to mentioned that in my check-in message too.\n\nSorry about that I will have it fixed.",
      "parentUuid": "d0988e20_b4b1f2fc",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df08912a_7298bedf",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-21T08:41:25Z",
      "side": 1,
      "message": "This could use refactoring by inversion and early returns, and also fixing the pluralization right, so please:\n```go\n      if len(targs) \u003d\u003d len(tparams) {\n             return true\n      }\n\n      if check \u003d\u003d nil {\n             panic(fmt.Sprintf(\"%v: got %s but %s\",\n                     pos, pluralize(len(targs), “argument”),\n                     pluralize(len(tparams)), “type parameter”)\n      }\n\n      var err error_\n      err.code \u003d WrongTypeArgCount\n      err.errorf(pos, \"not enough type arguments for type T\")\n      err.errorf(nopos, \"have %s\", check.typesSummary(targs, false))\n      err.errorf(nopos, \"want %s\", check.typesSummary(genTypes(tparams), false))\n      check.report(\u0026err)\n      return false\n}\n\nfunc pluralize(n int, singularSuffix string) (str string) {\n      str \u003d fmt.Sprintf(“%d %s”, n, singularSuffix)\n      if n !\u003d 1 {\n              str +\u003d “s”\n      }\n      return\n}\n```",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e45d89d_9c7f5200",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-11-21T21:58:30Z",
      "side": 1,
      "message": "Thanks. Yes, this seems resonable, though I doubt that `pluralize` is worth it for the panic message. (\"1 type arguments\" is probably good enough for a panic).",
      "parentUuid": "df08912a_7298bedf",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27699c27_07c3e9f3",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 66688
      },
      "writtenOn": "2023-11-22T03:41:22Z",
      "side": 1,
      "message": "Sure I will work on that.",
      "parentUuid": "4e45d89d_9c7f5200",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f33725e_b80ba264",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-11-21T21:58:30Z",
      "side": 1,
      "message": "What if len(targs) \u003e len(tparams)? Don\u0027t we need state \"too many\" instead of \"not enough\"?",
      "range": {
        "startLine": 173,
        "startChar": 20,
        "endLine": 173,
        "endChar": 45
      },
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe3b5863_4a6a2486",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 66688
      },
      "writtenOn": "2023-11-22T17:08:40Z",
      "side": 1,
      "message": "Valid scenario. I will add that.",
      "parentUuid": "0f33725e_b80ba264",
      "range": {
        "startLine": 173,
        "startChar": 20,
        "endLine": 173,
        "endChar": 45
      },
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "874e3f35_03173789",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-11-22T17:12:44Z",
      "side": 1,
      "message": "Thanks.\n\nAside: because of the way Gerrit works, every time you respond to a comment it puts reviewers in the attention set, and removes you from the attention set. This is somewhat cumbersome for folks who use the attention set to manage their review queue. Therefore, it is common practice to address several comments at the same time.",
      "parentUuid": "fe3b5863_4a6a2486",
      "range": {
        "startLine": 173,
        "startChar": 20,
        "endLine": 173,
        "endChar": 45
      },
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf1e9ca7_c418a2a5",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 66688
      },
      "writtenOn": "2023-11-23T16:02:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "874e3f35_03173789",
      "range": {
        "startLine": 173,
        "startChar": 20,
        "endLine": 173,
        "endChar": 45
      },
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90f43531_9f1cd707",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-11-21T21:58:30Z",
      "side": 1,
      "message": "This should be \"type arguments\"",
      "range": {
        "startLine": 179,
        "startChar": 32,
        "endLine": 179,
        "endChar": 41
      },
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47f12ab1_c59d6e88",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 2
      },
      "lineNbr": 184,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-21T08:41:25Z",
      "side": 1,
      "message": "Please update this godoc.",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3064db5a_67940515",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 2
      },
      "lineNbr": 184,
      "author": {
        "id": 66688
      },
      "writtenOn": "2023-11-23T16:01:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47f12ab1_c59d6e88",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2f1c441_42e7ca48",
        "filename": "src/cmd/compile/internal/types2/typexpr.go",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-11-21T21:58:30Z",
      "side": 1,
      "message": "Does this change also need to be reflected in go/types?\n\nPlease replace the old validateTArgLen, rather than write a new function, as I believe it is unused.",
      "range": {
        "startLine": 466,
        "startChar": 11,
        "endLine": 466,
        "endChar": 31
      },
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "474e0b1b_89d6eba2",
        "filename": "src/cmd/compile/internal/types2/typexpr.go",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 66688
      },
      "writtenOn": "2023-11-22T03:58:12Z",
      "side": 1,
      "message": "I don\u0027t know. But validateTArgLen is generated in types through validateTArgLen in types2 and has hierarchical calls in types/typexpr.go which is needed for non-generic types (I believe). So I didn\u0027t touch that.\n\nMay be running all tests will bring a clarity of unused calls I reckon. If it can be replaced I will.\n\nThanks",
      "parentUuid": "d2f1c441_42e7ca48",
      "range": {
        "startLine": 466,
        "startChar": 11,
        "endLine": 466,
        "endChar": 31
      },
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97458c27_d0313421",
        "filename": "src/go/types/instantiate.go",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-21T08:41:25Z",
      "side": 1,
      "message": "Please see my reviews for this method’s refactoring and correct pluralization.",
      "revId": "cba52c0fad9475b775c8083f05317d476b5b3df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}