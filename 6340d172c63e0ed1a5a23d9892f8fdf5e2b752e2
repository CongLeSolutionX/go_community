{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9b30dd11_f85171df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-01-24T21:40:51Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d6340d172\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "6340d172c63e0ed1a5a23d9892f8fdf5e2b752e2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dea42d8_6513fd5d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-01-24T21:40:51Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "820d925b_8c8084d4",
      "tag": "autogenerated:trybots~beginning",
      "revId": "6340d172c63e0ed1a5a23d9892f8fdf5e2b752e2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e9441f9_fe7696f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-01-24T22:00:40Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "9b30dd11_f85171df",
      "tag": "autogenerated:trybots~happy",
      "revId": "6340d172c63e0ed1a5a23d9892f8fdf5e2b752e2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8765ef35_f404238a",
        "filename": "src/cmd/compile/internal/devirtualize/devirtualize.go",
        "patchSetId": 10
      },
      "lineNbr": 88,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-01-24T21:52:15Z",
      "side": 1,
      "message": "I think these -m changes are fine, but they\u0027re kind of distracting while trying to read the rest of the CL. I think they\u0027d be nice to split out separately.",
      "revId": "6340d172c63e0ed1a5a23d9892f8fdf5e2b752e2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c170cd2_42e6f820",
        "filename": "src/cmd/compile/internal/gc/main.go",
        "patchSetId": 10
      },
      "lineNbr": 279,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-01-24T21:52:15Z",
      "side": 1,
      "message": "This is being applied after inlining, so how does this make sure we get the right loop semantics when cross-package inlining is applied?\n\nI think we need to record during unified IR writing which loop semantics a function needs; and then during unified IR reading, we create the appropriate loop.",
      "revId": "6340d172c63e0ed1a5a23d9892f8fdf5e2b752e2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}