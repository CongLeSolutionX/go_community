{
  "comments": [
    {
      "key": {
        "uuid": "0db38f2d_c55da653",
        "filename": "src/cmd/compile/internal/arm64/ssa.go",
        "patchSetId": 3
      },
      "lineNbr": 570,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-02-01T19:45:27Z",
      "side": 1,
      "message": "Adding REG_ARNG seems unclear to me. It happens to work because the constants have certain values. Maybe\n(v.Args[0].Reg() - arm64.REG_F0 + arm64.REG_V0) | arm64.REG_ARNG | arm64.ARNG_8B\u003c\u003c15\n\nBetter to introduce a helper function.",
      "range": {
        "startLine": 570,
        "startChar": 46,
        "endLine": 570,
        "endChar": 62
      },
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "046eab57_bcc400d1",
        "filename": "src/cmd/compile/internal/arm64/ssa.go",
        "patchSetId": 3
      },
      "lineNbr": 570,
      "author": {
        "id": 25702
      },
      "writtenOn": "2018-02-02T19:39:16Z",
      "side": 1,
      "message": "I\u0027m not sure I understood this comment. Isn\u0027t arm64.ARNG_8B always 0? This seems to work for VCNT but for VUADDLV it throws this error message:\ninvalid arrangement: 00024 (...go/src/math/bits/bits.go:115)    VUADDLV V0.D1, V0",
      "parentUuid": "0db38f2d_c55da653",
      "range": {
        "startLine": 570,
        "startChar": 46,
        "endLine": 570,
        "endChar": 62
      },
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d768f34d_b8b6340f",
        "filename": "src/cmd/compile/internal/arm64/ssa.go",
        "patchSetId": 3
      },
      "lineNbr": 570,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-02-05T17:05:40Z",
      "side": 1,
      "message": "arm64.ARNG_8B is always 0. But I don\u0027t think we want everyone who works on this code to remember the value.\n\nMy suggestion was just an example, which may be not accurate (I did not try it, sorry). Perhaps\n(v.Args[0].Reg() - arm64.REG_F0) \u0026 31 + arm64.REG_ARNG + ((arm64.ARNG_8B \u0026 15) \u003c\u003c 5) ?\n(copied from the assemler)",
      "parentUuid": "046eab57_bcc400d1",
      "range": {
        "startLine": 570,
        "startChar": 46,
        "endLine": 570,
        "endChar": 62
      },
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96345a3b_07fa8d5e",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64.rules",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 25702
      },
      "writtenOn": "2018-02-01T18:13:27Z",
      "side": 1,
      "message": "The return type for OnesCount is int. So should this be of type Int32?",
      "range": {
        "startLine": 89,
        "startChar": 30,
        "endLine": 89,
        "endChar": 39
      },
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8a220d2_e7eb5c17",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64.rules",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-02-01T19:45:27Z",
      "side": 1,
      "message": "This should be the same as the original type.\n(PopCount64 \u003ct\u003e x) -\u003e (FMOVDfpgp \u003ct\u003e ...)\n\nSame below.",
      "parentUuid": "96345a3b_07fa8d5e",
      "range": {
        "startLine": 89,
        "startChar": 30,
        "endLine": 89,
        "endChar": 39
      },
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9702aae1_3d1a6445",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64.rules",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 25702
      },
      "writtenOn": "2018-02-02T19:39:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b8a220d2_e7eb5c17",
      "range": {
        "startLine": 89,
        "startChar": 30,
        "endLine": 89,
        "endChar": 39
      },
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86141ce1_1db320fb",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64.rules",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-02-01T19:45:27Z",
      "side": 1,
      "message": "Remove this space.",
      "range": {
        "startLine": 91,
        "startChar": 135,
        "endLine": 91,
        "endChar": 136
      },
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f046782_06f43c6c",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64.rules",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 25702
      },
      "writtenOn": "2018-02-02T19:39:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "86141ce1_1db320fb",
      "range": {
        "startLine": 91,
        "startChar": 135,
        "endLine": 91,
        "endChar": 136
      },
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdf82246_4e278d90",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64.rules",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-02-01T19:45:27Z",
      "side": 1,
      "message": "Maybe also add the other direction?",
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37d6bd03_76504db2",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64.rules",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 25702
      },
      "writtenOn": "2018-02-02T19:39:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bdf82246_4e278d90",
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "143b812a_f1e3c0a6",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64.rules",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-02-01T19:45:27Z",
      "side": 1,
      "message": "Remove one blank line.",
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2d147cc_fcb50633",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64.rules",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 25702
      },
      "writtenOn": "2018-02-02T19:39:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "143b812a_f1e3c0a6",
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8d229bf_f444ac53",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64Ops.go",
        "patchSetId": 3
      },
      "lineNbr": 212,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-02-05T17:05:40Z",
      "side": 1,
      "message": "This is not accurate. It does not do a 64-bit pop count. Instead, it does pop count for each 8-bit unit and stores the result in each 8-bit unit. This is not the same as a 64-bit pop count. We need to make this clear.",
      "range": {
        "startLine": 212,
        "startChar": 65,
        "endLine": 212,
        "endChar": 89
      },
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb10d368_1cd5a1dc",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64Ops.go",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-02-01T19:45:27Z",
      "side": 1,
      "message": "As commented before, \"vector element\" is unclear. How big is one element and how many elements are there? Need to be explicit.",
      "range": {
        "startLine": 213,
        "startChar": 87,
        "endLine": 213,
        "endChar": 101
      },
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27b4c40e_3186e3b6",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64Ops.go",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-02-01T19:45:27Z",
      "side": 1,
      "message": "What about the high bits? Undefined? If so, the rewriting rule doesn\u0027t look right then.",
      "range": {
        "startLine": 213,
        "startChar": 158,
        "endLine": 213,
        "endChar": 181
      },
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f1b7fd8_f5322cde",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64Ops.go",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 25702
      },
      "writtenOn": "2018-02-02T19:39:16Z",
      "side": 1,
      "message": "we can have several arrangements like 8bytes in a 64bit value or 16bytes in a 128bit value 4 halfwords in a 64 bit value or 8 halfwords in a 128bit value etc...",
      "parentUuid": "bb10d368_1cd5a1dc",
      "range": {
        "startLine": 213,
        "startChar": 87,
        "endLine": 213,
        "endChar": 101
      },
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73324dbe_6c6e0ccc",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64Ops.go",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-02-05T17:05:40Z",
      "side": 1,
      "message": "I understand that the machine instruction has multiple forms. But for this particular SSA Op that is used in the rewriting rule to do pop count, it only operates on the 8B form. We need to make this information clear and specific.",
      "parentUuid": "0f1b7fd8_f5322cde",
      "range": {
        "startLine": 213,
        "startChar": 87,
        "endLine": 213,
        "endChar": 101
      },
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30be3de2_6ec5e949",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 3
      },
      "lineNbr": 598,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-02-01T19:45:27Z",
      "side": 1,
      "message": "This seems not right. VADDV produces result in a single V register, not an arrangement.",
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cec3e5a_eea2dc63",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 3
      },
      "lineNbr": 598,
      "author": {
        "id": 25702
      },
      "writtenOn": "2018-02-02T19:39:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "30be3de2_6ec5e949",
      "revId": "0bf848d812b7700a1ff683103053b095573d0328",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}