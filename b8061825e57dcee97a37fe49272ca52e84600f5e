{
  "comments": [
    {
      "key": {
        "uuid": "90905637_831f9e28",
        "filename": "src/runtime/mgc.go",
        "patchSetId": 9
      },
      "lineNbr": 952,
      "author": {
        "id": 5200
      },
      "writtenOn": "2020-03-02T20:36:30Z",
      "side": 0,
      "message": "Hmmm, alignment here may now depend on the experiment build tag.\nMight need to use a struct of varying layout defined in the lockrank_enabled.go and lockrank_disable.go files.",
      "revId": "b8061825e57dcee97a37fe49272ca52e84600f5e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90056c12_a12779aa",
        "filename": "src/runtime/mgc.go",
        "patchSetId": 9
      },
      "lineNbr": 952,
      "author": {
        "id": 28783
      },
      "writtenOn": "2020-03-04T02:03:08Z",
      "side": 0,
      "message": "Since I have two different structs based on the build tag, I can add an extra 4-byte pad in the mutex with the lock rank, so the \u0027mutex\u0027 struct has the same alignment (4-byte aligned, not 8-byte aligned, and size divisible by 4 but not 8) in the lock ranking case as for the normal non-lock-ranking case.  So, I was able to get rid of all these alignment changes!\n\nThanks for the suggestion!",
      "parentUuid": "90905637_831f9e28",
      "revId": "b8061825e57dcee97a37fe49272ca52e84600f5e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ee0a64a_16b4b976",
        "filename": "src/runtime/mheap.go",
        "patchSetId": 9
      },
      "lineNbr": 73,
      "author": {
        "id": 5200
      },
      "writtenOn": "2020-03-02T20:36:30Z",
      "side": 0,
      "message": "Same here.\n\nOr are you relying on your 64-bit alignment CL here?",
      "revId": "b8061825e57dcee97a37fe49272ca52e84600f5e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f33a9642_012e3b97",
        "filename": "src/runtime/mheap.go",
        "patchSetId": 9
      },
      "lineNbr": 73,
      "author": {
        "id": 28783
      },
      "writtenOn": "2020-03-04T02:03:08Z",
      "side": 0,
      "message": "Fixed as you suggested above (appropriate extra padding for the mutex definition used when lock ranking).  I don\u0027t intend or want to depend on the 64-bit alignment CL.",
      "parentUuid": "2ee0a64a_16b4b976",
      "revId": "b8061825e57dcee97a37fe49272ca52e84600f5e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b390dc26_6dc55f58",
        "filename": "src/runtime/runtime.go",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 5200
      },
      "writtenOn": "2020-03-02T20:36:30Z",
      "side": 0,
      "message": "Same here.",
      "revId": "b8061825e57dcee97a37fe49272ca52e84600f5e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ec6b296_a0afbf13",
        "filename": "src/runtime/runtime.go",
        "patchSetId": 9
      },
      "lineNbr": 18,
      "author": {
        "id": 28783
      },
      "writtenOn": "2020-03-04T02:03:08Z",
      "side": 0,
      "message": "Fixed as you suggested above (appropriate extra padding for the mutex definition used when lock ranking).",
      "parentUuid": "b390dc26_6dc55f58",
      "revId": "b8061825e57dcee97a37fe49272ca52e84600f5e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}