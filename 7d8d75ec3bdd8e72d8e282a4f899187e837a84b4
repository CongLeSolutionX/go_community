{
  "comments": [
    {
      "key": {
        "uuid": "52899aee_b9f42250",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 25391
      },
      "writtenOn": "2020-07-07T19:06:08Z",
      "side": 1,
      "message": "this is awesome. it\u0027s one of the few page allocator functions I actually see in profiles.",
      "range": {
        "startLine": 11,
        "startChar": 62,
        "endLine": 11,
        "endChar": 70
      },
      "revId": "7d8d75ec3bdd8e72d8e282a4f899187e837a84b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05e198b8_56a4a13a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5200
      },
      "writtenOn": "2020-07-07T18:12:16Z",
      "side": 1,
      "message": "Found a better way to do this while thinking about findBitRange64.\nPTAL.\n",
      "revId": "7d8d75ec3bdd8e72d8e282a4f899187e837a84b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bac51730_f97feca0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2020-07-07T19:06:08Z",
      "side": 1,
      "message": "LGTM",
      "revId": "7d8d75ec3bdd8e72d8e282a4f899187e837a84b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee9ceff0_71a6bf64",
        "filename": "src/runtime/mpallocbits.go",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 25391
      },
      "writtenOn": "2020-07-07T19:06:08Z",
      "side": 1,
      "message": "this entire section is very clever, especially the observation that the minimum length of 1-runs doubles. my mind is blown.",
      "range": {
        "startLine": 177,
        "startChar": 5,
        "endLine": 178,
        "endChar": 62
      },
      "revId": "7d8d75ec3bdd8e72d8e282a4f899187e837a84b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da72d73e_c37f81d2",
        "filename": "src/runtime/mpallocbits.go",
        "patchSetId": 3
      },
      "lineNbr": 186,
      "author": {
        "id": 25391
      },
      "writtenOn": "2020-07-07T19:06:08Z",
      "side": 1,
      "message": "is this necessary for correctness? IIRC p should never exceed 63, and it doesn\u0027t look like there\u0027s a panic inserted like there is for signed shifts. or is this to give the compiler some extra info (since p is updated to j below, so the compiler can\u0027t use any inference from max)?",
      "range": {
        "startLine": 186,
        "startChar": 15,
        "endLine": 186,
        "endChar": 23
      },
      "revId": "7d8d75ec3bdd8e72d8e282a4f899187e837a84b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}