{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e2948e7f_cd1dc89c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-06-02T21:57:39Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d9760e68f\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5fd04a52_add665e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-06-02T21:57:39Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "66694c1c_25cb825d",
      "tag": "autogenerated:trybots~beginning",
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ff66935_ced5b2d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-06-02T22:05:48Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d9760e68f\nFailed on windows-386-2012: https://storage.googleapis.com/go-build-log/9760e68f/windows-386-2012_9d130bc4.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "e2948e7f_cd1dc89c",
      "tag": "autogenerated:trybots~progress",
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3221ce86_81c85100",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-06-02T22:23:36Z",
      "side": 1,
      "message": "15 of 31 TryBots failed.\nFailed on windows-386-2012: https://storage.googleapis.com/go-build-log/9760e68f/windows-386-2012_9d130bc4.log\nFailed on linux-386: https://storage.googleapis.com/go-build-log/9760e68f/linux-386_29d38f61.log\nFailed on misc-compile-mips: https://storage.googleapis.com/go-build-log/9760e68f/misc-compile-mips_03b3ab5d.log\nFailed on misc-compile-mipsle: https://storage.googleapis.com/go-build-log/9760e68f/misc-compile-mipsle_b3a95afa.log\nFailed on linux-arm-aws: https://storage.googleapis.com/go-build-log/9760e68f/linux-arm-aws_57a6565d.log\nFailed on misc-compile-windows-arm: https://storage.googleapis.com/go-build-log/9760e68f/misc-compile-windows-arm_be1f1d05.log\nFailed on misc-compile-netbsd: https://storage.googleapis.com/go-build-log/9760e68f/misc-compile-netbsd_3966366d.log\nFailed on misc-compile-openbsd-arm: https://storage.googleapis.com/go-build-log/9760e68f/misc-compile-openbsd-arm_19de609e.log\nFailed on misc-compile-openbsd: https://storage.googleapis.com/go-build-log/9760e68f/misc-compile-openbsd_beead17b.log\nFailed on misc-compile-netbsd-arm: https://storage.googleapis.com/go-build-log/9760e68f/misc-compile-netbsd-arm_322bb7b1.log\nFailed on misc-compile-plan9: https://storage.googleapis.com/go-build-log/9760e68f/misc-compile-plan9_39055f2e.log\nFailed on misc-compile-freebsd: https://storage.googleapis.com/go-build-log/9760e68f/misc-compile-freebsd_1dd670f7.log\nFailed on windows-386-2008: https://storage.googleapis.com/go-build-log/9760e68f/windows-386-2008_adee7822.log\nFailed on misc-compile-other-2: https://storage.googleapis.com/go-build-log/9760e68f/misc-compile-other-2_5cc93eb2.log\nFailed on android-amd64-emu: https://storage.googleapis.com/go-build-log/9760e68f/android-amd64-emu_246c2ebc.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "e2948e7f_cd1dc89c",
      "tag": "autogenerated:trybots~failed",
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10c01369_90bff3e2",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 2
      },
      "lineNbr": 352,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-06-03T16:34:31Z",
      "side": 1,
      "message": "Is this outer cast required?",
      "range": {
        "startLine": 352,
        "startChar": 25,
        "endLine": 352,
        "endChar": 31
      },
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f01f686c_234789bd",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 2
      },
      "lineNbr": 367,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-06-03T16:34:31Z",
      "side": 1,
      "message": "I think this is also possible for durations \u003c\u003c 2.3yr if the program has been running for ~2.3yr.\n\nTo make the numbers easier in my example, lets assume we are using a uint8, with 7 bits of timestamp and 1 bit of type.\n\nWe can store up to 128ns in the timestamp, but can fail to calculate the difference with far shorter durations.\n\nSuppose:\n\n  start \u003d 120 \u003d\u003d 0b01111000\n  now   \u003d 130 \u003d\u003d 0b10000010\n  \n  reconstructed start uses the top bit from now, so:\n  0b11111000 \u003d\u003d 248\n  \n  130 - 248 \u003c 0, so we return 0\n  \nIn this case the difference is only 10ns, far less than the 128ns range, but we still can\u0027t compute the real duration.\n\nThe same could happen here right around the 2.3yr edge. Actual durations are generally short, so this should only cause a very short hiccup that recovers quickly, but both this comment and the commit message are misleading in making it sound like a duration must be \u003e2.3yr to be problematic.\n\nEdit: also note my comment below. Since nanotime() is generally time since boot, the 2.3yr edge is from machine boot, not process start, which makes it even more likely to hit. We could address that by subtracting process boot time from timestamps.\n\nEdit 2: Can we just use 4 bits for the type (we only need 2 right now, but 16 events ought to be more than enough for future growth)? I feel more comfortable saying that most machines probably won\u0027t run for \u003e36yr. They probably at least need to reboot once for 2038 ðŸ˜Š.",
      "range": {
        "startLine": 366,
        "startChar": 81,
        "endLine": 367,
        "endChar": 54
      },
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6beade55_6f883513",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 2
      },
      "lineNbr": 371,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-06-03T16:34:31Z",
      "side": 1,
      "message": "\"we\u0027re assuming that less than 2^56 nanoseconds have passed **since the monotonic clock started**\" is the core part missing here.",
      "range": {
        "startLine": 370,
        "startChar": 45,
        "endLine": 371,
        "endChar": 16
      },
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b436e4e2_730f4e8e",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 2
      },
      "lineNbr": 386,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-06-03T16:34:31Z",
      "side": 1,
      "message": "Too bad we don\u0027t have\n\n  type SixtyFour[T ~uint64|~int64] struct {\n    value T\n  }\n\nSo we could use limiterEventStamp directly ðŸ˜Š",
      "range": {
        "startLine": 386,
        "startChar": 7,
        "endLine": 386,
        "endChar": 20
      },
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a25aa9aa_26cd291b",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 2
      },
      "lineNbr": 394,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-06-03T16:34:31Z",
      "side": 1,
      "message": "Why?\n\nBecause descheduling the running goroutine is implicitly ending the event, right?",
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2c1266b_f04dc669",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 2
      },
      "lineNbr": 394,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-06-03T16:34:31Z",
      "side": 1,
      "message": "limiterEvent.stop?",
      "range": {
        "startLine": 394,
        "startChar": 53,
        "endLine": 394,
        "endChar": 69
      },
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ddcf488_560e4f3f",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 2
      },
      "lineNbr": 421,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-06-03T16:34:31Z",
      "side": 1,
      "message": "See above.",
      "range": {
        "startLine": 420,
        "startChar": 42,
        "endLine": 421,
        "endChar": 39
      },
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6df69567_dd37700d",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-06-03T16:34:31Z",
      "side": 1,
      "message": "Better yet, can we also pass the expected event type and throw on mismatch?",
      "range": {
        "startLine": 432,
        "startChar": 40,
        "endLine": 432,
        "endChar": 76
      },
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8282734c_c5c00774",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 2
      },
      "lineNbr": 441,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-06-03T16:34:31Z",
      "side": 1,
      "message": "limiterEvent.stop",
      "range": {
        "startLine": 441,
        "startChar": 10,
        "endLine": 441,
        "endChar": 26
      },
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8eb5afa9_296d9caa",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 2
      },
      "lineNbr": 469,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-06-03T16:34:31Z",
      "side": 1,
      "message": "This should be unreachable due to the throw above, right?",
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d34c5919_4751ff30",
        "filename": "src/runtime/mgcmark.go",
        "patchSetId": 2
      },
      "lineNbr": 549,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-06-03T16:34:31Z",
      "side": 1,
      "message": "Perhaps comment why this might be false (e.g., we are doing an assist in an idle worker)",
      "range": {
        "startLine": 549,
        "startChar": 1,
        "endLine": 549,
        "endChar": 18
      },
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70a50a11_f17a30e3",
        "filename": "src/runtime/mgcmark.go",
        "patchSetId": 2
      },
      "lineNbr": 602,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-06-03T16:34:31Z",
      "side": 1,
      "message": "Should stop() call update?",
      "revId": "9760e68f3a73add0329d230a6e21398800af8aa4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}