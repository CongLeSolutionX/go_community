{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "465e494c_fb194e36",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5056
      },
      "writtenOn": "2023-08-07T13:34:16Z",
      "side": 1,
      "message": "Thanks for the PR.\n\nThis is an API change and would require a proposal first (https://go.dev/s/proposal). However, fair warning, I am skeptical about making this change. Probably ParseBool already accepts too many possibilities; it\u0027s unclear whether we should add more.",
      "revId": "342bbda684be698e57e6ae3665b7690171846fe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43f16b47_c7d010e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-08-07T20:41:54Z",
      "side": 1,
      "message": "In particular at least \"true\" and \"false\" and their variants are part of the Go language itself.  \"yes\" and \"no\" are not part of Go.  We shouldn\u0027t add more cases where the Go standard library is English-specific.",
      "parentUuid": "465e494c_fb194e36",
      "revId": "342bbda684be698e57e6ae3665b7690171846fe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2b6de42_0af30ba8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 58333
      },
      "writtenOn": "2023-08-07T23:55:56Z",
      "side": 1,
      "message": "Thank you for sharing your thoughts!\n\nI understand the concerns about the proposed API change. While adding more possibilities could raise questions about the function\u0027s scope, there are some benefits to consider. Including user-friendly keywords like \"yes,\" \"no,\" \"y,\" and \"n\" could make the function more flexible without making it complex.\n\nAdding \"yes\" and \"no\" helps the function work better in different languages and with more readable inputs. This doesn\u0027t mean we\u0027re making it only for English â€“ it\u0027s about handling data that\u0027s not always standard.\n\nRegarding the proposal, if you\u0027re comfortable with it, I can create a GitHub proposal that links back to this pull request. This way, we can continue discussing it here. Your input is valuable!",
      "revId": "342bbda684be698e57e6ae3665b7690171846fe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18a3dc0b_5a3ddbc3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-08-08T00:34:09Z",
      "side": 1,
      "message": "You are certainly free to make a proposal, but I\u0027m skeptical that it will be accepted.  This seems like a feature that should live outside of the standard library.",
      "parentUuid": "c2b6de42_0af30ba8",
      "revId": "342bbda684be698e57e6ae3665b7690171846fe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "271c6e98_3f23020c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 58333
      },
      "writtenOn": "2023-08-09T22:54:32Z",
      "side": 1,
      "message": "Thank you for your feedback. I\u0027ll close the PR as per your suggestion. If you have any further thoughts or see potential for the feature in the future, please don\u0027t hesitate to reach out. I appreciate your time and consideration.",
      "revId": "342bbda684be698e57e6ae3665b7690171846fe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one Code-Review+2 is required. Self review is not allowed."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "342bbda684be698e57e6ae3665b7690171846fe5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "342bbda684be698e57e6ae3665b7690171846fe5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "342bbda684be698e57e6ae3665b7690171846fe5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Holds",
        "description": {
          "value": "Changes with a Hold+1 vote are not submittable."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "NOT label:Hold\u003d1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"NOT label:Hold=1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Hold=1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "342bbda684be698e57e6ae3665b7690171846fe5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable, unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "342bbda684be698e57e6ae3665b7690171846fe5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Wait-Release",
        "description": {
          "value": "Changes with the hashtag wait-release cannot be submitted."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "hashtag:wait-release"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:wait-release"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:wait-release"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "342bbda684be698e57e6ae3665b7690171846fe5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "342bbda684be698e57e6ae3665b7690171846fe5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "TryBots-Pass",
        "description": {
          "value": "Changes must pass TryBots unless TryBot-Bypass+1 is set."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config -label:TryBot-Result\u003dMAX"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:TryBot-Bypass\u003dMAX"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config -label:TryBot-Result=MAX"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config","label:TryBot-Result=MAX"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:TryBot-Bypass=MAX"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:TryBot-Bypass=MAX"]}
      },
      "patchSetCommitId": "342bbda684be698e57e6ae3665b7690171846fe5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}