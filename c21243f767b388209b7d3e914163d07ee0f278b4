{
  "comments": [
    {
      "key": {
        "uuid": "10c50af8_8451ba5c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 5143
      },
      "writtenOn": "2018-06-01T04:02:15Z",
      "side": 1,
      "message": "d?",
      "revId": "c21243f767b388209b7d3e914163d07ee0f278b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81b28194_6f4996e2",
        "filename": "src/runtime/map_fast32.go",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 5143
      },
      "writtenOn": "2018-06-01T04:02:15Z",
      "side": 1,
      "message": "Add comment:\n\n// Search for existing key.",
      "revId": "c21243f767b388209b7d3e914163d07ee0f278b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e2d2b34_c14822d6",
        "filename": "src/runtime/map_fast32.go",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 5143
      },
      "writtenOn": "2018-06-01T04:02:15Z",
      "side": 1,
      "message": "I think this could be clearer (and generate better code) as a plain for loop. Something like (untested):\n\ni :\u003d -1\nfor {\n  i \u003d bytealg.IndexByte[i+1:], top)\n  if i \u003d\u003d -1 {\n    break\n  }\n  k :\u003d ...\n  if i \u003d\u003d bucketCnt-1 {\n    break\n  }\n  i++\n}",
      "revId": "c21243f767b388209b7d3e914163d07ee0f278b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d7ebd22_102d53d9",
        "filename": "src/runtime/map_fast32.go",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 5143
      },
      "writtenOn": "2018-06-01T04:02:15Z",
      "side": 1,
      "message": "Pity there\u0027s no way (I see) to structure this and the preceding if statement in a way that the compiler can do a single BTR instruction and use the flags to decide whether to throw. (Maybe there\u0027s a way, though. Want to check?)\n\nAlso, if drchase/aclements make throw inlineable in 1.12, we can refactor out this bit as (*hmap).doneWriting, which would again make the code easier to follow.",
      "revId": "c21243f767b388209b7d3e914163d07ee0f278b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d88b0495_65fee566",
        "filename": "src/runtime/map_fast32.go",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 5143
      },
      "writtenOn": "2018-06-01T04:02:15Z",
      "side": 1,
      "message": "Comment:\n\n// No existing key. Find an empty slot for insertion.",
      "revId": "c21243f767b388209b7d3e914163d07ee0f278b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "901fdb6d_36c3a97b",
        "filename": "src/runtime/map_fast32.go",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 5143
      },
      "writtenOn": "2018-06-01T04:02:15Z",
      "side": 1,
      "message": "May as well do the same three part for loop here as above?",
      "revId": "c21243f767b388209b7d3e914163d07ee0f278b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}