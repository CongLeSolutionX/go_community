{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d03d908f_eff087eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-21T13:02:05Z",
      "side": 1,
      "message": "I spotted some possible problems.\n\nThese findings are based on simple heuristics. If a finding appears wrong, briefly reply here saying so. Otherwise, please address any problems and update the GitHub PR. When complete, mark this comment as \u0027Done\u0027 and click the [blue \u0027Reply\u0027 button](https://go.dev/wiki/GerritBot#i-left-a-reply-to-a-comment-in-gerrit-but-no-one-but-me-can-see-it) above.\n\nPossible problems detected:\n  1. Lines in the commit message should be wrapped at ~76 characters unless needed for things like URLs or tables. You have a 200 character line.\n\nThe commit title and commit message body come from the GitHub PR title and description, and must be edited in the GitHub web interface (not via git). For instructions, see [here](https://go.dev/wiki/GerritBot/#how-does-gerritbot-determine-the-final-commit-message). For guidelines on commit messages for the Go project, see [here](https://go.dev/doc/contribute#commit_messages).\n\n\n(In general for Gerrit code reviews, the change author is expected to [log in to Gerrit](https://go-review.googlesource.com/login/) with a Gmail or other Google account and then close out each piece of feedback by marking it as \u0027Done\u0027 if implemented as suggested or otherwise reply to each review comment. See the [Review](https://go.dev/doc/contribute#review) section of the Contributing Guide for details.)",
      "revId": "068dd93eaada694707e4279baf22888225a9c243",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3996d2d0_3bbdf9c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 37209
      },
      "writtenOn": "2023-11-21T13:05:25Z",
      "side": 1,
      "message": "I am adding you as a reviewer because you helped with my other CL on ServeContent and ranges.",
      "revId": "068dd93eaada694707e4279baf22888225a9c243",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b09b180_37a7361f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 37209
      },
      "writtenOn": "2023-11-21T13:10:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d03d908f_eff087eb",
      "revId": "068dd93eaada694707e4279baf22888225a9c243",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40850d1f_a012b84a",
        "filename": "src/net/http/fs.go",
        "patchSetId": 1
      },
      "lineNbr": 576,
      "author": {
        "id": 37209
      },
      "writtenOn": "2023-11-21T13:10:20Z",
      "side": 1,
      "message": "@dneil: I started on this to fix responses on invalid range request, but I realized the issue is much wider and it is about all errors returned from ServeContent API. This fix makes a list of common headers but maybe a better approach would be to simply wipe all pre-set headers before calling Error?\n\nAnyway, I am opening this to get feedback. I also have to add some tests but I am not sure how detailed should they be. Should I just make another test function to check if headers are removed on an error, or should I check response headers in all existing tests which return errors?",
      "revId": "068dd93eaada694707e4279baf22888225a9c243",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}