{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e8043d18_e3cfaa1e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5210
      },
      "writtenOn": "2020-12-01T17:40:16Z",
      "side": 1,
      "message": "Thanks.",
      "revId": "5912343179f694a1c1f04a07930dd825ba3b64ac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9182e93c_777da3d8",
        "filename": "test/cannotassign.go",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-12-01T17:34:02Z",
      "side": 1,
      "message": "Should these be `(...)?` instead of `[...]`?",
      "revId": "5912343179f694a1c1f04a07930dd825ba3b64ac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ed4b217_6ee38179",
        "filename": "test/cannotassign.go",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 5210
      },
      "writtenOn": "2020-12-01T17:40:16Z",
      "side": 1,
      "message": "No. Currently, types2 doesn\u0027t print the (strings are immutable) part, so it\u0027s optional in the ERROR regexp.\n\nEventually I will revisit these error messages. I am keeping track of these CLs.",
      "parentUuid": "9182e93c_777da3d8",
      "revId": "5912343179f694a1c1f04a07930dd825ba3b64ac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e5fccf7_a7a384f8",
        "filename": "test/cannotassign.go",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-12-01T17:48:05Z",
      "side": 1,
      "message": "I\u0027m not familiar with using `[...]` for optional error message text. How does that work? I thought this would be a normal regexp character class match.",
      "parentUuid": "5ed4b217_6ee38179",
      "revId": "5912343179f694a1c1f04a07930dd825ba3b64ac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c302ffa_6b9b7e88",
        "filename": "test/cannotassign.go",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 5210
      },
      "writtenOn": "2020-12-01T17:52:35Z",
      "side": 1,
      "message": "Duh! You\u0027re right of course (I\u0027m confusing ebnf with regexp). Not sure how this worked in the first place. Will fix.",
      "parentUuid": "8e5fccf7_a7a384f8",
      "revId": "5912343179f694a1c1f04a07930dd825ba3b64ac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bc1390b_3fe762ec",
        "filename": "test/cannotassign.go",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-12-01T18:08:03Z",
      "side": 1,
      "message": ":-)",
      "parentUuid": "0c302ffa_6b9b7e88",
      "revId": "5912343179f694a1c1f04a07930dd825ba3b64ac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}