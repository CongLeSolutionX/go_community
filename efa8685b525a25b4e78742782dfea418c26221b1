{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f6e34cd9_882d8a23",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-16T17:45:10Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003defa8685b\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "efa8685b525a25b4e78742782dfea418c26221b1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72c9ff4c_50828ae6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-16T17:50:14Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003defa8685b\nFailed on freebsd-amd64-12_3: https://storage.googleapis.com/go-build-log/efa8685b/freebsd-amd64-12_3_8313e34b.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "f6e34cd9_882d8a23",
      "tag": "autogenerated:trybots~progress",
      "revId": "efa8685b525a25b4e78742782dfea418c26221b1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c1e2fbd_4a3a0476",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-16T17:55:28Z",
      "side": 1,
      "message": "9 of 45 TryBots failed.\nFailed on freebsd-amd64-12_3: https://storage.googleapis.com/go-build-log/efa8685b/freebsd-amd64-12_3_8313e34b.log\nFailed on js-wasm-node18: https://storage.googleapis.com/go-build-log/efa8685b/js-wasm-node18_0438accf.log\nFailed on linux-amd64-boringcrypto: https://storage.googleapis.com/go-build-log/efa8685b/linux-amd64-boringcrypto_e9e80597.log\nFailed on linux-arm64: https://storage.googleapis.com/go-build-log/efa8685b/linux-arm64_a790d560.log\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/efa8685b/linux-amd64_634d8415.log\nFailed on linux-386: https://storage.googleapis.com/go-build-log/efa8685b/linux-386_cd3d64f9.log\nFailed on openbsd-amd64-72: https://storage.googleapis.com/go-build-log/efa8685b/openbsd-amd64-72_7756f412.log\nFailed on wasip1-wasm-wazero: https://storage.googleapis.com/go-build-log/efa8685b/wasip1-wasm-wazero_13c8aa44.log\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/efa8685b/linux-amd64-race_84532489.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "f6e34cd9_882d8a23",
      "tag": "autogenerated:trybots~failed",
      "revId": "efa8685b525a25b4e78742782dfea418c26221b1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46aad8b1_4a3bf6c8",
        "filename": "src/cmd/gofmt/gofmt.go",
        "patchSetId": 1
      },
      "lineNbr": 289,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-16T18:08:42Z",
      "side": 1,
      "message": "os.Rename is fiendishly flaky on Windows.\n\nGiven that we already have the new and old contents of the file in RAM, it seems more robust to write back the previous contents in-place. Taking a page from `cmd/go/internal/lockedfile.Transform`, that might look like:\n\n```\nf, err :\u003d os.Open(filename)\nif err !\u003d nil {\n\treturn err\n}\nif n, err :\u003d f.WriteAt(res, 0); err !\u003d nil {\n\t// Make a best effort to restore the original file contents.\n\t_, err2 :\u003d f.WriteAt(src, 0)\n\tif err2 \u003d\u003d nil {\n\t\tif n \u003c len(src) || f.Truncate(len(src)) \u003d\u003d nil {\n\t\t\t// Successfully restored the old contents, so we can discard the backup.\n\t\t\tos.Remove(bakname)\n\t\t}\n\t}\n\treturn err\n}\nif len(res) \u003e len(src) {\n\t// We successfully wrote the new contents.\n\t// Now shrink the file to the correct length.\n\tif err :\u003d f.Truncate(len(res)); err !\u003d nil {\n\t\t// The new contents are in place, but the file may have some trailing garbage.\n\t\t// Don\u0027t bother trying to restore the original contents,\n\t\t// because truncating back to the original length is likely to fail too.\n\t\treturn err\n\t}\n}\nif err :\u003d os.Remove(bakname); err !\u003d nil {\n\treturn err\n}\n```\n\nThat would also preserve file attributes that aren\u0027t reflected in the Mode bits, such as owner, group, ACLs, etc.",
      "range": {
        "startLine": 287,
        "startChar": 0,
        "endLine": 289,
        "endChar": 33
      },
      "revId": "efa8685b525a25b4e78742782dfea418c26221b1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}