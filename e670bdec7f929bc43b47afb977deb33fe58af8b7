{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "44d06e88_988915c7",
        "filename": "src/internal/trace/v2/reader.go",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 12120
      },
      "writtenOn": "2024-02-22T18:50:10Z",
      "side": 1,
      "message": "mini-nit: I don\u0027t see any bugs, but it seems odd to me that this queue is only used for the one extra event case. IMO, the more intuitive cases would be:\n\n* `advance` does not return anything except an error. It puts all new events on the queue, and callers should drain the queue before calling advance again.\n* Alternatively, the queue is completely hidden inside `advance`. The first thing `advance` does it return something from the queue if non-empty.",
      "revId": "e670bdec7f929bc43b47afb977deb33fe58af8b7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5c9c2c2_9f5680b3",
        "filename": "src/internal/trace/v2/reader.go",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 25391
      },
      "writtenOn": "2024-02-23T23:35:26Z",
      "side": 1,
      "message": "you\u0027re right, this is definitely awkward. I took your first suggestion and ran with it. I think it\u0027s an improvement. (your second suggestion intrigued me as well, but this gets awkward because we\u0027re passing in all the components of an Event, but not actually an Event. part of ordering.advance\u0027s job is to complete the Event.)",
      "parentUuid": "44d06e88_988915c7",
      "revId": "e670bdec7f929bc43b47afb977deb33fe58af8b7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}