{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aadc5eee_d533a528",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 32560
      },
      "writtenOn": "2021-02-27T13:33:33Z",
      "side": 1,
      "message": "this looks right to me, but I would like to see a bit of cleanup before +2.",
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "441ccd6f_bd509844",
        "filename": "src/cmd/compile/internal/abi/abiutils.go",
        "patchSetId": 5
      },
      "lineNbr": 310,
      "author": {
        "id": 32560
      },
      "writtenOn": "2021-02-27T13:33:33Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 310,
        "startChar": 6,
        "endLine": 310,
        "endChar": 9
      },
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ba679d4_7f6d9b7e",
        "filename": "src/cmd/compile/internal/abi/abiutils.go",
        "patchSetId": 5
      },
      "lineNbr": 310,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-02-28T23:07:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "441ccd6f_bd509844",
      "range": {
        "startLine": 310,
        "startChar": 6,
        "endLine": 310,
        "endChar": 9
      },
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c556ad0c_d9259eed",
        "filename": "src/cmd/compile/internal/ssa/debug.go",
        "patchSetId": 5
      },
      "lineNbr": 904,
      "author": {
        "id": 32560
      },
      "writtenOn": "2021-02-27T13:33:33Z",
      "side": 1,
      "message": "if hasOpArg(v) || /*etc*/",
      "range": {
        "startLine": 904,
        "startChar": 8,
        "endLine": 904,
        "endChar": 69
      },
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a2f142b_7853348b",
        "filename": "src/cmd/compile/internal/ssa/debug.go",
        "patchSetId": 5
      },
      "lineNbr": 904,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-02-28T23:07:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c556ad0c_d9259eed",
      "range": {
        "startLine": 904,
        "startChar": 8,
        "endLine": 904,
        "endChar": 69
      },
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c64f1347_b810cbe3",
        "filename": "src/cmd/compile/internal/ssa/stackalloc.go",
        "patchSetId": 5
      },
      "lineNbr": 437,
      "author": {
        "id": 32560
      },
      "writtenOn": "2021-02-27T13:33:33Z",
      "side": 1,
      "message": "this feels poorly named to me. I\u0027d expect this function to be checking for v.Op\u003dOpArg, and things like line 160 wouldn\u0027t be needed. Can we have a name that captures that IntReg, and FloatReg are also true?",
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03e806cc_6edcc488",
        "filename": "src/cmd/compile/internal/ssa/stackalloc.go",
        "patchSetId": 5
      },
      "lineNbr": 437,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-02-28T23:07:56Z",
      "side": 1,
      "message": "hasAnyArgOp, hasArgOpXXX?\nI\u0027ll start with hasAnyArgOp, see how that feels.",
      "parentUuid": "c64f1347_b810cbe3",
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac87403a_e9fca6cc",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 7474,
      "author": {
        "id": 32560
      },
      "writtenOn": "2021-02-27T13:33:33Z",
      "side": 1,
      "message": "not used... dunno if you want to move to relevant change.",
      "range": {
        "startLine": 7474,
        "startChar": 5,
        "endLine": 7474,
        "endChar": 13
      },
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d439f216_b0b0c8b4",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 7474,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-02-28T23:07:56Z",
      "side": 1,
      "message": "Out for now, will wait for it to be needed.",
      "parentUuid": "ac87403a_e9fca6cc",
      "range": {
        "startLine": 7474,
        "startChar": 5,
        "endLine": 7474,
        "endChar": 13
      },
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0200c3ac_21576e3a",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 7486,
      "author": {
        "id": 32560
      },
      "writtenOn": "2021-02-27T13:33:33Z",
      "side": 1,
      "message": "docstring doesn\u0027t match.",
      "range": {
        "startLine": 7486,
        "startChar": 0,
        "endLine": 7486,
        "endChar": 1
      },
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1103f5a4_237fd5ba",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 7486,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-02-28T23:07:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0200c3ac_21576e3a",
      "range": {
        "startLine": 7486,
        "startChar": 0,
        "endLine": 7486,
        "endChar": 1
      },
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "875ab080_6719e27c",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 7491,
      "author": {
        "id": 32560
      },
      "writtenOn": "2021-02-27T13:33:33Z",
      "side": 1,
      "message": "Want to use SlotAutoVar, or not use it in AddrForParamSlot?",
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c37d09b0_66a2cca3",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 7491,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-02-28T23:07:56Z",
      "side": 1,
      "message": "Removed SlotAutoVar for now.",
      "parentUuid": "875ab080_6719e27c",
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12e7dbce_c9222881",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 7496,
      "author": {
        "id": 32560
      },
      "writtenOn": "2021-02-27T13:33:33Z",
      "side": 1,
      "message": "could add extraOffset here.",
      "range": {
        "startLine": 7496,
        "startChar": 12,
        "endLine": 7496,
        "endChar": 15
      },
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46b3f7e1_0a6a9067",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 7500,
      "author": {
        "id": 32560
      },
      "writtenOn": "2021-02-27T13:33:33Z",
      "side": 1,
      "message": "could invert this condition, put it at the beginning of the function, and just build return value with:\n\n  return obj.Addr {\n    Type:\n    Reg:\n    // etc.\n  }\n\nprobably cleanest.",
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "932b85b7_8290cbdd",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 7500,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-02-28T23:07:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46b3f7e1_0a6a9067",
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "987f77b0_502f4413",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 7507,
      "author": {
        "id": 32560
      },
      "writtenOn": "2021-02-27T13:33:33Z",
      "side": 1,
      "message": "docstring doesn\u0027t match.",
      "range": {
        "startLine": 7507,
        "startChar": 3,
        "endLine": 7507,
        "endChar": 14
      },
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee6fe6c0_f0f1aca2",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 7507,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-02-28T23:07:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "987f77b0_502f4413",
      "range": {
        "startLine": 7507,
        "startChar": 3,
        "endLine": 7507,
        "endChar": 14
      },
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81248087_7d219268",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 7509,
      "author": {
        "id": 32560
      },
      "writtenOn": "2021-02-27T13:33:33Z",
      "side": 1,
      "message": "Not used in this change. Not going to beat you up on that, but when it does get used, the naming feels off to me. The name feels like it returns the address, but it really modifies it instead.",
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45e06671_1d20589d",
        "filename": "src/cmd/internal/obj/x86/obj6.go",
        "patchSetId": 5
      },
      "lineNbr": 648,
      "author": {
        "id": 32560
      },
      "writtenOn": "2021-02-27T13:33:33Z",
      "side": 1,
      "message": "can you explain why you\u0027re not checking if regABI is enabled? It feels like we need to that, rather than checking AMD64.",
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19868775_2784016b",
        "filename": "src/cmd/internal/obj/x86/obj6.go",
        "patchSetId": 5
      },
      "lineNbr": 648,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-02-28T23:07:56Z",
      "side": 1,
      "message": "Does this comment look better?\n\n// Using this register means that stacksplit works w/ //go:registerparams even when objabi.Regabi_enabled \u003d\u003d 0\n\nThe larger plan here is that the compiler should support //go:registerparams even w/o the experiment turned off, so that we have more options for porting/testing.",
      "parentUuid": "45e06671_1d20589d",
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9de6815_13aa1592",
        "filename": "src/cmd/internal/obj/x86/obj6.go",
        "patchSetId": 5
      },
      "lineNbr": 1034,
      "author": {
        "id": 32560
      },
      "writtenOn": "2021-02-27T13:33:33Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 1034,
        "startChar": 25,
        "endLine": 1034,
        "endChar": 28
      },
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "033ef6f9_ff7ec398",
        "filename": "src/cmd/internal/obj/x86/obj6.go",
        "patchSetId": 5
      },
      "lineNbr": 1034,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-02-28T23:07:56Z",
      "side": 1,
      "message": "Propose:\n\n// for 64-bit, stay away from register ABI parameter registers, even w/o GOEXPERIMENT\u003dregabi\n\nSame goal -- support \"cross compilation\" for testing/development.",
      "parentUuid": "b9de6815_13aa1592",
      "range": {
        "startLine": 1034,
        "startChar": 25,
        "endLine": 1034,
        "endChar": 28
      },
      "revId": "f59b651d9107f0c32feeb6cdf686ee0857e7612f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}