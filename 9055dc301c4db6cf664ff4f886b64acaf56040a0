{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f862354b_e818d373",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 36863
      },
      "writtenOn": "2021-08-26T13:23:02Z",
      "side": 1,
      "message": "TRY\u003dppc64le,ppc64",
      "revId": "9055dc301c4db6cf664ff4f886b64acaf56040a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4c0f88d_ffd81b4a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-26T13:23:15Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d9055dc30",
      "tag": "autogenerated:trybots~beginning",
      "revId": "9055dc301c4db6cf664ff4f886b64acaf56040a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e72f616_1eaa4396",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-26T13:53:26Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-ppc64-buildlet\n* linux-ppc64le-buildlet\n",
      "parentUuid": "f4c0f88d_ffd81b4a",
      "tag": "autogenerated:trybots~happy",
      "revId": "9055dc301c4db6cf664ff4f886b64acaf56040a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5a58070_9deef7b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6320
      },
      "writtenOn": "2021-08-26T15:32:18Z",
      "side": 1,
      "message": "Honestly, I don\u0027t think it makes sense to change all VSX instructions to accept F regs. I think allowing the VS \u003c-\u003e V reg swap is a good change and will be useful, but allowing F regs in all cases is confusing.\n\nFor example if you are doing computation in an F reg and then try to do an STXV of that F reg you are storing 16 bytes where 8 of those bytes are undefined. I\u0027d like to look through all the VSX vector operations and consider whether they all make sense for F regs.",
      "revId": "9055dc301c4db6cf664ff4f886b64acaf56040a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18e04134_76ab3598",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 36863
      },
      "writtenOn": "2021-08-26T16:08:37Z",
      "side": 1,
      "message": "It\u0027s mixed, you will find examples of both. Notably there are many scalar vsx FP instructions, thus it does have utility. xxsel can be useful in such contexts, etc. \n\nThis also helps simplify the optab against trivial extended mnemonics like those of the GPR/VSR moves.\n\nEffective code review and testing should call out dubious and incorrect usage.",
      "revId": "9055dc301c4db6cf664ff4f886b64acaf56040a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "906ae9e2_13591030",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6320
      },
      "writtenOn": "2021-09-09T20:39:21Z",
      "side": 1,
      "message": "I disagree that we should use VSregs and Fregs interchangeably for all VSX instructions. Because it simplifies the optab implementation is not a good enough reason. The purpose of the assembler is to assemble what is valid and reject what is not and not expect/depend that reviewers find incorrect usage. For example if someone loads an FPR then uses that FPR in a VSX store instruction garbage is stored into the 2nd slot. I don\u0027t see why we would allow that. I agree there are a few that make sense, MTVSRD and similar ones come to mind and only those should be allowed.",
      "parentUuid": "18e04134_76ab3598",
      "revId": "9055dc301c4db6cf664ff4f886b64acaf56040a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e4dabce_428d5246",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 36863
      },
      "writtenOn": "2021-09-09T21:28:01Z",
      "side": 1,
      "message": "It simplifies handwritten ASM. Note there are VSX instructions which load/store a portion of the register, the register naming doesn\u0027t absolve the reviewer from understanding what the opcode is doing.\n\nOf the top of my head, chacha_ppc64le.s and p256_asm_ppc64le.s demonstrate (IMHO awkward) workarounds to interchangeability of VSX vs FPR vs VR registers.\n\ngoasm doesn\u0027t provide a succinct way to express this.",
      "parentUuid": "906ae9e2_13591030",
      "revId": "9055dc301c4db6cf664ff4f886b64acaf56040a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}