{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "69f8a3ef_93e2d9bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-10T23:17:31Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d66c4fdce",
      "tag": "autogenerated:trybots~beginning",
      "revId": "66c4fdcea9f79aa70797d0c6e1f4772deb1e98a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9514c7e1_3e3460dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-10T23:31:16Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "69f8a3ef_93e2d9bd",
      "tag": "autogenerated:trybots~happy",
      "revId": "66c4fdcea9f79aa70797d0c6e1f4772deb1e98a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bf0e4a3_f9db0ac6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5615
      },
      "writtenOn": "2022-05-10T23:51:57Z",
      "side": 1,
      "message": "Thanks Ian. I wonder whether the fs.WalkDirFunc documentation could also use an update. It says the following:\n\n  The path argument contains the argument to WalkDir as a prefix. That is, if\n  WalkDir is called with root argument \"dir\" and finds a file named \"a\" in\n  that directory, the walk function will be called with argument \"dir/a\".\n\nThis isn\u0027t strictly true if we\u0027re getting called via filepath.WalkDir. By contrast, the filepath.WalkFunc documentation has the same paragraph, but then tempers its claims with the subsequent paragraph:\n\n  The directory and file are joined with Join, which may clean the directory\n  name: if Walk is called with the root argument \"x/../dir\" and finds a file\n  named \"a\" in that directory, the walk function will be called with argument\n  \"dir/a\", not \"x/../dir/a\".",
      "revId": "66c4fdcea9f79aa70797d0c6e1f4772deb1e98a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c473a60_7efedd78",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-05-11T00:10:57Z",
      "side": 1,
      "message": "My preference is that we keep fs.WalkDirFunc the same, and add any language about exceptions to filepath.WalkDir.  If you stick to io/fs, you will see only slash paths, and that is what the fs.WalkDirFunc reflects.  It\u0027s a bit weird that filepath.WalkDir uses fs.WalkDirFunc, and I think that\u0027s where we should keep the odd docs.",
      "parentUuid": "7bf0e4a3_f9db0ac6",
      "revId": "66c4fdcea9f79aa70797d0c6e1f4772deb1e98a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f38cf32b_61862a8e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5615
      },
      "writtenOn": "2022-05-11T00:42:13Z",
      "side": 1,
      "message": "OK, that sounds good to me.\n\nActually, fs.WalkDir calls path.Join which does a Clean as well. The bit about the root being a prefix isn\u0027t strictly true (in a textual sense) independent of whether we\u0027re using filepath.WalkDir or fs.WalkDir. That can be addressed (or not) separately.",
      "parentUuid": "7c473a60_7efedd78",
      "revId": "66c4fdcea9f79aa70797d0c6e1f4772deb1e98a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a9ca57b_b3b44c71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-05-12T22:37:08Z",
      "side": 1,
      "message": "I guess I think let\u0027s do that separately.  I\u0027m not sure whether there is something to say there.  Thanks.",
      "parentUuid": "f38cf32b_61862a8e",
      "revId": "66c4fdcea9f79aa70797d0c6e1f4772deb1e98a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0130c9e3_e46ae65d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6005
      },
      "writtenOn": "2022-09-14T14:18:56Z",
      "side": 1,
      "message": "Thanks.",
      "revId": "66c4fdcea9f79aa70797d0c6e1f4772deb1e98a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one Code-Review+2 is required. Self review is not allowed."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "66c4fdcea9f79aa70797d0c6e1f4772deb1e98a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "66c4fdcea9f79aa70797d0c6e1f4772deb1e98a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "66c4fdcea9f79aa70797d0c6e1f4772deb1e98a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Holds",
        "description": {
          "value": "Changes with a Hold+1 vote are not submittable."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "NOT label:Hold\u003d1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"NOT label:Hold=1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Hold=1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "66c4fdcea9f79aa70797d0c6e1f4772deb1e98a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "66c4fdcea9f79aa70797d0c6e1f4772deb1e98a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}