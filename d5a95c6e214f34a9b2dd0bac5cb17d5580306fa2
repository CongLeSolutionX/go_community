{
  "comments": [
    {
      "key": {
        "uuid": "09fbcdcf_4e1f086f",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64.rules",
        "patchSetId": 1
      },
      "lineNbr": 990,
      "author": {
        "id": 5200
      },
      "writtenOn": "2018-05-31T21:48:04Z",
      "side": 1,
      "message": "MOVLQZX as well?\n\nLooks like we currently handle the MOVLQZX case with:\n(MOVLQZX x) \u0026\u0026 zeroUpper32Bits(x,3) -\u003e x\nWhere zeroUpper32Bits has a special case for OpArg.\n\nWe should probably do all these cases the same way, for consistency\u0027s sake.",
      "revId": "d5a95c6e214f34a9b2dd0bac5cb17d5580306fa2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d36b726_178d1471",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64.rules",
        "patchSetId": 1
      },
      "lineNbr": 990,
      "author": {
        "id": 26817
      },
      "writtenOn": "2018-05-31T22:00:06Z",
      "side": 1,
      "message": "I\u0027ve add MOVLQZX rule, but we still need OpArg case in zeroUpper32Bits, because it is recursive.",
      "parentUuid": "09fbcdcf_4e1f086f",
      "revId": "d5a95c6e214f34a9b2dd0bac5cb17d5580306fa2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4806068_ee911c81",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64.rules",
        "patchSetId": 1
      },
      "lineNbr": 990,
      "author": {
        "id": 5200
      },
      "writtenOn": "2018-05-31T22:08:50Z",
      "side": 1,
      "message": "If the zeroUpper32Bits method is stronger, then we should use that instead of the rules currently in this CL.\nDefine zeroUpper48Bits and zeroUpper56Bits, and use them to get rid of MOVWQZX and MOVBQZX, respectively.",
      "parentUuid": "5d36b726_178d1471",
      "revId": "d5a95c6e214f34a9b2dd0bac5cb17d5580306fa2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}