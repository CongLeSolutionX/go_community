{
  "comments": [
    {
      "key": {
        "uuid": "35f0ecaf_b7f5c649",
        "filename": "src/cmd/go/internal/modcmd/verify.go",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 17092
      },
      "writtenOn": "2020-04-24T14:01:05Z",
      "side": 1,
      "message": "Channeling bcmills, move the semaphore lock outside the goroutine. The semaphore should not only prevent goroutines from competing for limited resources, but it should also prevent the creation of goroutines that can\u0027t immediately do work.",
      "revId": "be2dbfa305ed20d56d4994d7bff22c9e2d36a3af",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae8abaa0_e9b1bb3f",
        "filename": "src/cmd/go/internal/modcmd/verify.go",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 13550
      },
      "writtenOn": "2020-04-24T14:18:42Z",
      "side": 1,
      "message": "Good idea, though then that makes chanOK break, since its buffer is not big enough to hold all results.\n\nDo we simply use make(chan bool, len(mods))? Or do we just fall back to a waitgroup and a make([]bool, len(mods))?",
      "parentUuid": "35f0ecaf_b7f5c649",
      "revId": "be2dbfa305ed20d56d4994d7bff22c9e2d36a3af",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}