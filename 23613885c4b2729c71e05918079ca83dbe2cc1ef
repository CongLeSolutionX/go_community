{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "15ebb7e6_a08530af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-12T16:57:03Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "429c13b9_6dbbd2fe",
      "tag": "autogenerated:trybots~beginning",
      "revId": "23613885c4b2729c71e05918079ca83dbe2cc1ef",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f218a3f_00772078",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-12T16:57:03Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d23613885",
      "tag": "autogenerated:trybots~beginning",
      "revId": "23613885c4b2729c71e05918079ca83dbe2cc1ef",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6d8ddfa_114a35c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-12T17:11:01Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "2f218a3f_00772078",
      "tag": "autogenerated:trybots~happy",
      "revId": "23613885c4b2729c71e05918079ca83dbe2cc1ef",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11eda8b6_7e1e7d3d",
        "filename": "src/runtime/pprof/uname_linux_test.go",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-11-12T17:08:51Z",
      "side": 1,
      "message": "(nit) Rather that tracking the `last` index explicitly, I think this would be a bit clearer as a slice:\n\n\tbuf :\u003d make([]byte, 0, len(uname.Release))\n\tfor _, b :\u003d range uname.Release {\n\t\tif b \u003d\u003d 0 {\n\t\t\tbreak\n\t\t}\n\t\tbuf \u003d append(buf, byte(b))\n\t}\n\trl :\u003d string(buf)\n\n(That also eliminates the hard-coded length, although that\u0027s admittedly unlikely to break.)",
      "revId": "23613885c4b2729c71e05918079ca83dbe2cc1ef",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}