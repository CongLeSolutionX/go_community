{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b9d3e5aa_0139b24f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-04T21:26:57Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d2a403462\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9016ab06_126327aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-04T21:37:11Z",
      "side": 1,
      "message": "1 of 45 TryBots failed.\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/2a403462/linux-amd64-race_5b9af582.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "b9d3e5aa_0139b24f",
      "tag": "autogenerated:trybots~failed",
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db64a773_5b6d0eba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6005
      },
      "writtenOn": "2023-05-04T23:10:29Z",
      "side": 1,
      "message": "Thanks.\n\n(Reviewed in a local checkout because Gerrit disables \"expand all\" with this many files changed.)",
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89bcef76_beeea800",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6005
      },
      "writtenOn": "2023-05-04T23:23:54Z",
      "side": 1,
      "message": "This is #56881. I\u0027ll give it another try, otherwise maybe it\u0027s worth using TryBot-Bypass.",
      "parentUuid": "9016ab06_126327aa",
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f02eb27_05238095",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-04T23:27:45Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d2a403462\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7ca0606_15e84075",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-04T23:37:26Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "4f02eb27_05238095",
      "tag": "autogenerated:trybots~happy",
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d13eaaa_be3a733b",
        "filename": "src/cmd/cgo/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 6005
      },
      "writtenOn": "2023-05-04T23:10:29Z",
      "side": 1,
      "message": "misc/cgo/gmp remains the only directory in misc/cgo at the end of this stack.\nJust confirming if it\u0027s intentionally out of scope rather than accidentally missed? (Okay if so.)",
      "range": {
        "startLine": 29,
        "startChar": 47,
        "endLine": 29,
        "endChar": 59
      },
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "332899d0_7c64df55",
        "filename": "src/cmd/cgo/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-05-05T17:05:30Z",
      "side": 1,
      "message": "misc/cgo/gmp isn\u0027t a test, it\u0027s just an example (I guess?), so it felt odd to move it to cmd/cgo/testdata.",
      "parentUuid": "7d13eaaa_be3a733b",
      "range": {
        "startLine": 29,
        "startChar": 47,
        "endLine": 29,
        "endChar": 59
      },
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "945cf357_3eeef5a2",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 1
      },
      "lineNbr": 851,
      "author": {
        "id": 6005
      },
      "writtenOn": "2023-05-04T23:10:29Z",
      "side": 1,
      "message": "Having \u0027testdata\u0027 in the import path has the effect of those packages (and their tests) not being included with import path patterns like \u0027cmd/cgo/...\u0027 or \u0027cmd\u0027, but I understand that is desired for the purpose of this CL, since they\u0027re still being registered as dist tests.\n\nhttps://pkg.go.dev/cmd/go#hdr-Test_packages includes:\n\n\u003e The go tool will ignore a directory named \"testdata\", making it available to hold ancillary data needed by the tests.\n\nI\u0027ve interpreted the directory to be meant for non-code data that normal Go package tests could use. I\u0027m less familiar with using it to hold test code to be invoked with \u0027go test\u0027, but as long as it works and @bcmills@google.com doesn\u0027t have objections, it seems fine to me. (And if go command support for Go packages inside \u0027testdata\u0027 changes, they can just move.)",
      "range": {
        "startLine": 851,
        "startChar": 56,
        "endLine": 851,
        "endChar": 64
      },
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "773bcb5c_4601a9ed",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 1
      },
      "lineNbr": 851,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-05T12:23:08Z",
      "side": 1,
      "message": "The one possible wrinkle with packages in `testdata` is that they are not scanned by `go mod tidy` unless they are imported by some other package or test outside of the `testdata` directory.\n\nIn this case I don\u0027t expect these tests to have any dependencies of their own outside of `src` and `cmd`, so hopefully that won\u0027t be a problem.",
      "parentUuid": "945cf357_3eeef5a2",
      "range": {
        "startLine": 851,
        "startChar": 56,
        "endLine": 851,
        "endChar": 64
      },
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "158ed64c_8c417911",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 1
      },
      "lineNbr": 851,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-05-05T17:05:30Z",
      "side": 1,
      "message": "Right, that is the intent of putting them in testdata. One *downside* of doing this is that today you can say \"go test ./...\" in misc to test all of these with default flags and it\u0027s now much less obvious how to do that.",
      "parentUuid": "773bcb5c_4601a9ed",
      "range": {
        "startLine": 851,
        "startChar": 56,
        "endLine": 851,
        "endChar": 64
      },
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1e9d91e_45f0afc5",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 1
      },
      "lineNbr": 851,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-05T17:11:34Z",
      "side": 1,
      "message": "I think we could keep `go test ./...` working without adding `main` packages to `cmd`. The approach would be to put the `_test.go` source files in a non-`testdata` package (such as `cmd/cgo/internal/testshared/shared_test.go`), but make sure all of the non-`_test.go` files are in `testdata` subdirectories.\n\nThat would add some test packages to `go list cmd`, but given the number of `internal` packages already there that\u0027s probably ok. The important thing is that we want to avoid adding any non-test `package main` to `cmd`, since that would install the binary in `$GOROOT/pkg/tool`.",
      "parentUuid": "158ed64c_8c417911",
      "range": {
        "startLine": 851,
        "startChar": 56,
        "endLine": 851,
        "endChar": 64
      },
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bf6365e_f9e52886",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 1
      },
      "lineNbr": 851,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-05-05T18:42:07Z",
      "side": 1,
      "message": "Just to clarify and make sure I understand what you\u0027re getting at: I think you\u0027re proposing that we move, say, misc/cgo/stdio to, say, cmd/cgo/internal/stdio (or maybe teststdio). Then in dist, because these tests run with complicated conditions and often non-default build flags, we\u0027d add these test packages to the registerStdTestSpecially set to exclude them from running as part of the std cmd tests, and continue to register them specially. (Ideally we can reduce some of the special registration logic, but that can be follow-up work.)\n\nMost of these tests already consist entirely of _test.go files. A few are messier: nocgo, test, and testtls have non-_test.go files in them. I\u0027m not sure how you\u0027re thinking we would deal with these. These are structured to have all `import \"C\"` blocks in non-_test.go files because you can\u0027t `import \"C\"` in _test.go files, but these functions are usually used directly from test code also in the package, so we can\u0027t just move non-_test.go files into testdata.",
      "parentUuid": "a1e9d91e_45f0afc5",
      "range": {
        "startLine": 851,
        "startChar": 56,
        "endLine": 851,
        "endChar": 64
      },
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "479d677e_b587c374",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 1
      },
      "lineNbr": 851,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-05-05T18:44:00Z",
      "side": 1,
      "message": "\u003e I\u0027m not sure how you\u0027re thinking we would deal with these.\n\nActually, none of these are package main. Does that mean it\u0027s a non-issue? It would add some test packages to `go list cmd`, as you said, but won\u0027t install new binaries.",
      "parentUuid": "1bf6365e_f9e52886",
      "range": {
        "startLine": 851,
        "startChar": 56,
        "endLine": 851,
        "endChar": 64
      },
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5be5e711_2c7dd33a",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 1
      },
      "lineNbr": 851,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-05-05T20:51:43Z",
      "side": 1,
      "message": "The latest PS moves these to cmd/cgo/internal instead. I haven\u0027t gotten to the \"weird\" ones yet, but this does seem to work for the easy cases. PTAL.",
      "parentUuid": "479d677e_b587c374",
      "range": {
        "startLine": 851,
        "startChar": 56,
        "endLine": 851,
        "endChar": 64
      },
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff69e4e6_0709d93d",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 1
      },
      "lineNbr": 851,
      "author": {
        "id": 6005
      },
      "writtenOn": "2023-05-05T21:28:13Z",
      "side": 1,
      "message": "It looks great to me. I consider it a further improvement now that they\u0027ve ended up being normal internal Go packages with tests (that are registered specially). Thanks.\n\nLooked over PS 4 and didn\u0027t spot problems.",
      "parentUuid": "5be5e711_2c7dd33a",
      "range": {
        "startLine": 851,
        "startChar": 56,
        "endLine": 851,
        "endChar": 64
      },
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00b3abf3_aa48c08c",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 1
      },
      "lineNbr": 851,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-05-06T02:14:36Z",
      "side": 1,
      "message": "So, moving misc/cgo/test to cmd/cgo/internal/test causes \"go install cmd\" to now build that package. That\u0027s a bit unnecessary, but the real problem happens when make.bash builds all packages and commands with (apparently) CGO_ENABLED\u003d0. This causes a slew of errors like:\n\npackage cmd/cgo/internal/test\n\timports cmd/cgo/internal/test/gcc68255: build constraints exclude all Go files in /home/austin/go.dev/src/cmd/cgo/internal/test/gcc68255\n\nI\u0027m not entirely sure what the rules of CGO_ENABLED\u003d0 are. There are no obvious build constraints in gcc68255, but the only .go file contains import \"C\", so I\u0027m guessing that implicitly creates a build constraint. But cmd/cgo/internal/test also contains several sources that import \"C\", so I\u0027m surprised it\u0027s trying to build that. Maybe it\u0027s only excluding the files that import \"C\" and doesn\u0027t get to the point where that causes lots of other build errors?",
      "parentUuid": "ff69e4e6_0709d93d",
      "range": {
        "startLine": 851,
        "startChar": 56,
        "endLine": 851,
        "endChar": 64
      },
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0aeb14fc_3c0ea090",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 1
      },
      "lineNbr": 851,
      "author": {
        "id": 6005
      },
      "writtenOn": "2023-05-06T02:29:51Z",
      "side": 1,
      "message": "Would it work to make that package test-only? That is, add \"_test\" to all of its source files. I\u0027d expect then it not to get installed via \u0027go install cmd\u0027 (nor listed via \u0027go list cmd\u0027) but do the test as usual via go test (where we don\u0027t try to do it with CGO_ENABLED\u003d0)?",
      "parentUuid": "00b3abf3_aa48c08c",
      "range": {
        "startLine": 851,
        "startChar": 56,
        "endLine": 851,
        "endChar": 64
      },
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fda617a9_732ed428",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 1
      },
      "lineNbr": 851,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-05-06T02:31:23Z",
      "side": 1,
      "message": "We could do that with some of the files (though I\u0027m not sure I want to tease that apart...), but we can\u0027t make all of them _test.go because _test.go files can\u0027t import \"C\" (unfortunately; a lot of this complexity would be avoided if they could)",
      "parentUuid": "0aeb14fc_3c0ea090",
      "range": {
        "startLine": 851,
        "startChar": 56,
        "endLine": 851,
        "endChar": 64
      },
      "revId": "2a403462dfd58cb2e8141ed9352cb7ff411a8d96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}