{
  "comments": [
    {
      "key": {
        "uuid": "e3e9cd6a_986482ca",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 977,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-01-11T01:08:04Z",
      "side": 1,
      "message": "My 2c: my preference is to stay with \"embedded field\". This is the alternative term we already had, so it shouldn\u0027t introduce any new confusion stemming from informal use of \"embed\". Whereas I can imagine users might be confused that \"embedded type\" is a special kind of field, not type.",
      "range": {
        "startLine": 977,
        "startChar": 72,
        "endLine": 977,
        "endChar": 85
      },
      "revId": "b6048b6eeb5338be77875f6523ea7b44d73fc9d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77ce7af1_0863e735",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 977,
      "author": {
        "id": 5015
      },
      "writtenOn": "2017-01-11T01:13:24Z",
      "side": 1,
      "message": "Although I am OK with \"embedded type\", I am sympathetic to Matthew\u0027s position. For me what matters most is consistency, combined with what works best with the rest of the spec and the changes to come.",
      "parentUuid": "e3e9cd6a_986482ca",
      "revId": "b6048b6eeb5338be77875f6523ea7b44d73fc9d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3d8490b_914ebcd0",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 977,
      "author": {
        "id": 5210
      },
      "writtenOn": "2017-01-11T01:30:17Z",
      "side": 1,
      "message": "I\u0027m also sympathetic to that position but it does seem to me at least that \u0027embedded type\u0027 more clearly expresses what\u0027s going on (ignoring historic use of terminology).\n\nFor instance, just looking below, when using \u0027embedded field\u0027 we have to still refer to the type of the field, while when using \u0027embedded type\u0027 we know much more directly that we are talking about a type. In other words, using \u0027embedded type\u0027 simplified the language in the spec.\n\nMore generally, we have various examples of embedded types in the spec and what we enumerate in those examples is the actual types. Thus talking about a type rather than a field seems quite a bit clearer.\n\nI\u0027d suggest that before we get stuck here, let\u0027s see how the subsequent CLs shape up. We can make a final decision when we have complete coverage of type aliases in the spec.\n\nI\u0027m ok with a tentative +1 (unless there\u0027s bigger issues with this change) and I will wait with submission until the end.",
      "parentUuid": "77ce7af1_0863e735",
      "revId": "b6048b6eeb5338be77875f6523ea7b44d73fc9d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}