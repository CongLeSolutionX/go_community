{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e9123e1c_b7312fff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-05-24T18:46:29Z",
      "side": 1,
      "message": "I think it is better to handle this in the go command. For example, there are platforms where cgo and external linking are required. If cgo is disabled, we should fail immediately (instead of compiling all the code then fail at link time). Thanks.\n",
      "revId": "07e948196f3e3b29fa59ca6a6c4aaf853e0fd828",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e94f0305_6eab6f69",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12555
      },
      "writtenOn": "2021-05-24T19:15:55Z",
      "side": 1,
      "message": "I think instead that the go command should continue to compile all the code.  This is very useful in order to check if a package is compatible with the target.\n\nHowever it may avoid calling the linker.",
      "parentUuid": "e9123e1c_b7312fff",
      "revId": "07e948196f3e3b29fa59ca6a6c4aaf853e0fd828",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80bd1acb_534d9158",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-05-24T19:50:27Z",
      "side": 1,
      "message": "It might be okay to still compile the code. But I think it should be the go command to error out in this case, not the linker.",
      "parentUuid": "e94f0305_6eab6f69",
      "revId": "07e948196f3e3b29fa59ca6a6c4aaf853e0fd828",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67d52adf_91cf84fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12555
      },
      "writtenOn": "2021-05-25T14:14:22Z",
      "side": 1,
      "message": "Actually I have a solution that is very simple; instead of trying to deduce if cross compiling is possible with an external linker, just allow the user to explicitly disable the use of an external linker.\n\nA simple change is to check if the -extld flag is `os.DevNull`; if it is true then report an error like \"use of external linker is disabled\".\n\nThe -extld\u003d/dev/null can be explicitly set by the user or by the go tool.\n\nWhat do you think?\n\nThanks.",
      "parentUuid": "80bd1acb_534d9158",
      "revId": "07e948196f3e3b29fa59ca6a6c4aaf853e0fd828",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f94a4f33_73a28590",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-05-25T15:03:50Z",
      "side": 1,
      "message": "Yeah, I remember there is some earlier discussion about setting CC to some nonexistent path when cgo is disabled (which I think will propagate to extld). This seems reasonable to me.\n\nI don\u0027t think cmd/link should check for any specific path of extld. If external linker works, it just works. If it does not, the external linking step will just fail.",
      "parentUuid": "67d52adf_91cf84fd",
      "revId": "07e948196f3e3b29fa59ca6a6c4aaf853e0fd828",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "964c6790_2e2cb314",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12555
      },
      "writtenOn": "2021-05-25T16:00:49Z",
      "side": 1,
      "message": "The problem is the user experience.\n\nI\u0027m currently using github.com/perillo/go-portable to run\n`go build -o /dev/null` on all supported platforms.\n\nI don\u0027t want to cross compile, I just want to know if my code is portable.\n\nIf cmd/link invokes an external linker (gcc), it will report a lot of errors, and this will probably confuse the user.",
      "parentUuid": "f94a4f33_73a28590",
      "revId": "07e948196f3e3b29fa59ca6a6c4aaf853e0fd828",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1965a4a5_b5cdd3b1",
        "filename": "src/cmd/link/internal/ld/lib.go",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 12555
      },
      "writtenOn": "2021-05-24T06:49:20Z",
      "side": 1,
      "message": "It may be possible that runtime/cgo is missing due to a bug in the build system.\nMaybe the code should check if CGO_ENABLED\u003d0 ?",
      "revId": "07e948196f3e3b29fa59ca6a6c4aaf853e0fd828",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d42bd36_36bdf846",
        "filename": "src/cmd/link/internal/ld/lib.go",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-05-24T18:46:29Z",
      "side": 1,
      "message": "This is not right. It is possible that runtime/cgo package is not loaded but external linking may still work (see #31544).",
      "parentUuid": "1965a4a5_b5cdd3b1",
      "revId": "07e948196f3e3b29fa59ca6a6c4aaf853e0fd828",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb2b0159_43d464e1",
        "filename": "src/cmd/link/internal/ld/lib.go",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 12555
      },
      "writtenOn": "2021-05-24T19:15:55Z",
      "side": 1,
      "message": "Thanks.",
      "parentUuid": "7d42bd36_36bdf846",
      "revId": "07e948196f3e3b29fa59ca6a6c4aaf853e0fd828",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c98c3e9_331b735d",
        "filename": "src/cmd/link/internal/ld/lib.go",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 12555
      },
      "writtenOn": "2021-05-24T19:20:09Z",
      "side": 1,
      "message": "Is it possible for the linker to check if external linking will work when cross compiling?",
      "parentUuid": "cb2b0159_43d464e1",
      "revId": "07e948196f3e3b29fa59ca6a6c4aaf853e0fd828",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "590ccbcf_c559bfc5",
        "filename": "src/cmd/link/internal/ld/lib.go",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-05-24T19:50:27Z",
      "side": 1,
      "message": "External linking will work at cross compilation if CC is the right C cross compiler. I\u0027m not sure what do you mean by \"check\".",
      "parentUuid": "2c98c3e9_331b735d",
      "revId": "07e948196f3e3b29fa59ca6a6c4aaf853e0fd828",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "063ff8be_2bdb569f",
        "filename": "src/cmd/link/internal/ld/lib.go",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 12555
      },
      "writtenOn": "2021-05-25T14:14:22Z",
      "side": 1,
      "message": "By check I mean to check if the external linker is actually able to cross compile to the specified target.\n\nHowever I tried several solutions, but it is too complex if not impossible.",
      "parentUuid": "590ccbcf_c559bfc5",
      "revId": "07e948196f3e3b29fa59ca6a6c4aaf853e0fd828",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e85c4f1a_210bf829",
        "filename": "src/cmd/link/internal/ld/lib.go",
        "patchSetId": 1
      },
      "lineNbr": 559,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-05-25T15:03:50Z",
      "side": 1,
      "message": "Thanks. But see above. I don\u0027t think we want to check for the external linker (besides doing the real linking).",
      "parentUuid": "063ff8be_2bdb569f",
      "revId": "07e948196f3e3b29fa59ca6a6c4aaf853e0fd828",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}