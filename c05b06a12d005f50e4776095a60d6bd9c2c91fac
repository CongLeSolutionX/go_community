{
  "comments": [
    {
      "key": {
        "uuid": "4399f850_70d7067d",
        "filename": "src/runtime/proc.go",
        "patchSetId": 14
      },
      "lineNbr": 2063,
      "author": {
        "id": 5400
      },
      "writtenOn": "2017-06-29T06:11:55Z",
      "side": 1,
      "message": "can\u0027t it happen that when procs blocks netpollWaiters\u003d\u003d0, but then later when we need poller (netpollWaiters\u003e0) nobody is polling, so the notification will be arbitrary delayed?",
      "revId": "c05b06a12d005f50e4776095a60d6bd9c2c91fac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84088cec_fe7822a1",
        "filename": "src/runtime/proc.go",
        "patchSetId": 14
      },
      "lineNbr": 2063,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-06-29T16:17:31Z",
      "side": 1,
      "message": "It can\u0027t be arbitrarily delayed, because the sysmon thread will still poll the network periodically.\n\nAlso, when a g blocks on netpoll, it increments netpollWaiters in the unlockf function passed to gopark.  So the m will call gopark to stop the g, and then look for more work.  At that point, netpollWaiters \u003e 0, so if there is nothing else to do the m will block in netpoll.\n\nSo as far as I can see this reduces to the behavior we had before.",
      "parentUuid": "4399f850_70d7067d",
      "revId": "c05b06a12d005f50e4776095a60d6bd9c2c91fac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}