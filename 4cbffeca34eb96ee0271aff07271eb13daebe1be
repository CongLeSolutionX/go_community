{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c2a09b60_7961833e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 34725
      },
      "writtenOn": "2023-02-07T12:56:30Z",
      "side": 1,
      "message": "TRY\u003dlinux",
      "revId": "4cbffeca34eb96ee0271aff07271eb13daebe1be",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b35b84c_d1def1f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-07T12:56:47Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d4cbffeca\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "4cbffeca34eb96ee0271aff07271eb13daebe1be",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a80f5bc7_86c0de36",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-07T12:56:47Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "c9bc1f79_e141a59f",
      "tag": "autogenerated:trybots~beginning",
      "revId": "4cbffeca34eb96ee0271aff07271eb13daebe1be",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9cf0f301_08f2a4a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-07T13:08:13Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64\n",
      "parentUuid": "6b35b84c_d1def1f1",
      "tag": "autogenerated:trybots~happy",
      "revId": "4cbffeca34eb96ee0271aff07271eb13daebe1be",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6117c9a8_30b66fa2",
        "filename": "src/net/splice_test.go",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-02-07T23:08:11Z",
      "side": 1,
      "message": "This looks like a t.Run just calls another t.Run.  Seems simpler to move this t.Run line into TestSplice.",
      "revId": "4cbffeca34eb96ee0271aff07271eb13daebe1be",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df38f51e_309d7317",
        "filename": "src/net/splice_test.go",
        "patchSetId": 9
      },
      "lineNbr": 104,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-02-07T23:08:11Z",
      "side": 1,
      "message": "Use a name like testFile, not test1.",
      "revId": "4cbffeca34eb96ee0271aff07271eb13daebe1be",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ee21381_8b850c30",
        "filename": "src/net/splice_test.go",
        "patchSetId": 9
      },
      "lineNbr": 105,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-02-07T23:08:11Z",
      "side": 1,
      "message": "Instead of using os.CreateTemp create a known file name inside t.Tempdir.",
      "revId": "4cbffeca34eb96ee0271aff07271eb13daebe1be",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e15eb6bb_38f110e5",
        "filename": "src/net/splice_test.go",
        "patchSetId": 9
      },
      "lineNbr": 121,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-02-07T23:08:11Z",
      "side": 1,
      "message": "The man page says that splice only works if one of the descriptors is a pipe.  That doesn\u0027t seem to be true here.  Why does this help?",
      "revId": "4cbffeca34eb96ee0271aff07271eb13daebe1be",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb7bc11e_c200d08b",
        "filename": "src/net/splice_test.go",
        "patchSetId": 9
      },
      "lineNbr": 126,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-02-07T23:08:11Z",
      "side": 1,
      "message": "For this new code let\u0027s use got/want as suggested at https://github.com/golang/go/wiki/CodeReviewComments#useful-test-failures.  Thanks.",
      "revId": "4cbffeca34eb96ee0271aff07271eb13daebe1be",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dec272e3_8a04c94c",
        "filename": "src/os/readfrom_linux.go",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-02-07T23:08:11Z",
      "side": 1,
      "message": "Let\u0027s move this into a new method, as you\u0027ve done with copyFileRange, so that this method just calls two new ones.",
      "revId": "4cbffeca34eb96ee0271aff07271eb13daebe1be",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e957e1ea_bbf70ac1",
        "filename": "src/os/readfrom_linux.go",
        "patchSetId": 9
      },
      "lineNbr": 65,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-02-07T23:08:11Z",
      "side": 1,
      "message": "Using a lengthy if statement like this is harder to read.  Just pull out assignment to ok from the if statement.",
      "revId": "4cbffeca34eb96ee0271aff07271eb13daebe1be",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93184d61_637d88bf",
        "filename": "src/os/readfrom_linux.go",
        "patchSetId": 9
      },
      "lineNbr": 81,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-02-07T23:08:11Z",
      "side": 1,
      "message": "The names errSyscall and errSplice make them seem like the same kind of thing, but they are not.  Other code seems to use the name sc rather than errSyscall.",
      "revId": "4cbffeca34eb96ee0271aff07271eb13daebe1be",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04a42460_5e74c0a3",
        "filename": "src/os/readfrom_linux.go",
        "patchSetId": 9
      },
      "lineNbr": 87,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-02-07T23:08:11Z",
      "side": 1,
      "message": "This is too hacky.  We need to do something cleaner here.",
      "revId": "4cbffeca34eb96ee0271aff07271eb13daebe1be",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}