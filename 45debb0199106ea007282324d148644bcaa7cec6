{
  "comments": [
    {
      "key": {
        "uuid": "4ad0b73b_1b036395",
        "filename": "src/go/importer/importer.go",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 5195
      },
      "writtenOn": "2016-01-07T18:45:36Z",
      "side": 1,
      "message": "This should be \"\", not \".\", to disable vendoring.\nOtherwise the meaning of an import declaration in a source file becomes a function of the tool\u0027s working directory, which is not correct.",
      "range": {
        "startLine": 63,
        "startChar": 24,
        "endLine": 63,
        "endChar": 27
      },
      "revId": "45debb0199106ea007282324d148644bcaa7cec6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ad0b73b_fbc66799",
        "filename": "src/go/importer/importer.go",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 5195
      },
      "writtenOn": "2016-01-07T18:45:36Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 81,
        "startChar": 24,
        "endLine": 81,
        "endChar": 27
      },
      "revId": "45debb0199106ea007282324d148644bcaa7cec6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ad0b73b_dbcbaba1",
        "filename": "src/go/internal/gcimporter/bimport.go",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 5195
      },
      "writtenOn": "2016-01-07T18:45:36Z",
      "side": 1,
      "message": "how about parsePackageBytes or something informative?",
      "revId": "45debb0199106ea007282324d148644bcaa7cec6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa1773d7_5f343cb0",
        "filename": "src/go/internal/gcimporter/bimport.go",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 5210
      },
      "writtenOn": "2016-01-07T20:52:10Z",
      "side": 1,
      "message": "I reverted these gratuitous changes. Leaving old name for now. It\u0027s an internal package.",
      "parentUuid": "4ad0b73b_dbcbaba1",
      "revId": "45debb0199106ea007282324d148644bcaa7cec6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ad0b73b_9bd5333f",
        "filename": "src/go/types/api.go",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 5195
      },
      "writtenOn": "2016-01-07T18:45:36Z",
      "side": 1,
      "message": "\"supports vendoring\"\nIt\u0027s no longer an experiment.",
      "revId": "45debb0199106ea007282324d148644bcaa7cec6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa1773d7_5f819c69",
        "filename": "src/go/types/api.go",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 5210
      },
      "writtenOn": "2016-01-07T20:52:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ad0b73b_9bd5333f",
      "revId": "45debb0199106ea007282324d148644bcaa7cec6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ad0b73b_7bdb7772",
        "filename": "src/go/types/api.go",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 5195
      },
      "writtenOn": "2016-01-07T18:45:36Z",
      "side": 1,
      "message": "\"\"",
      "revId": "45debb0199106ea007282324d148644bcaa7cec6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa1773d7_ffdc309e",
        "filename": "src/go/types/api.go",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 5210
      },
      "writtenOn": "2016-01-07T20:52:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ad0b73b_7bdb7772",
      "revId": "45debb0199106ea007282324d148644bcaa7cec6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ad0b73b_5bd8bb73",
        "filename": "src/go/types/api.go",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 5195
      },
      "writtenOn": "2016-01-07T18:45:36Z",
      "side": 1,
      "message": "\"Two calls to Import with the same path and srcDir return the same package.\"",
      "revId": "45debb0199106ea007282324d148644bcaa7cec6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa1773d7_bfe6b862",
        "filename": "src/go/types/api.go",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 5210
      },
      "writtenOn": "2016-01-07T20:52:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ad0b73b_5bd8bb73",
      "revId": "45debb0199106ea007282324d148644bcaa7cec6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ad0b73b_5bbf9be8",
        "filename": "src/go/types/resolver.go",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 5195
      },
      "writtenOn": "2016-01-07T18:45:36Z",
      "side": 1,
      "message": "pkg.path is not the same as srcDir.\n\nIn the go/build API, srcDir must be an actual directory, interpreted relative to the process\u0027s cwd.\n\nObviously we don\u0027t have that information available in the type checker.  That means we have the choice of adding types.Package.Dir as a first-class property of a package; this value would be used as the srcDir.  Or, we can change the specification of Importer2 so that the srcDir parameter is actually the canonical package path of the package that contains the import declaration.   I\u0027m not sure yet which is preferable.\n\nIt\u0027s not clear from the vendor experiment spec whether the vendor check is allowed to find a package that lives beneath a different workspace root directory.  It doesn\u0027t seem sensible to do that, and the logic of the implementation won\u0027t allow it, but the spec doesn\u0027t say.  \n\nUsing the package path (not directory) in Importer2 will make it impossible to perform this check.",
      "revId": "45debb0199106ea007282324d148644bcaa7cec6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}