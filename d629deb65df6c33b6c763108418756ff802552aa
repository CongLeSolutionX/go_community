{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f8dad6d9_974daf1b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-07T02:24:36Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dd629deb6\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "d629deb65df6c33b6c763108418756ff802552aa",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2dcef41c_2d37b288",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-07T02:35:29Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "f8dad6d9_974daf1b",
      "tag": "autogenerated:trybots~happy",
      "revId": "d629deb65df6c33b6c763108418756ff802552aa",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4c44132_f2272af7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-10T15:20:03Z",
      "side": 1,
      "message": "Thanks.",
      "revId": "d629deb65df6c33b6c763108418756ff802552aa",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15e747a1_a5e27adf",
        "filename": "src/cmd/compile/internal/walk/builtin.go",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-10T15:20:03Z",
      "side": 1,
      "message": "Maybe add a comment mentioning n\u003d\u003dnil is clearing an empty array.",
      "revId": "d629deb65df6c33b6c763108418756ff802552aa",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0247ea2b_ae9de18e",
        "filename": "src/cmd/compile/internal/walk/builtin.go",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 14665
      },
      "writtenOn": "2023-07-10T15:27:25Z",
      "side": 1,
      "message": "I think you mean an array which take zero memory:\n\n```\npackage main\n\nvar V \u003d make([]struct{}, 10)\n\nfunc main() {\n\tclear(V)\n}\n```\n\nThe array has 10 elems, but it take zero memory, so `clear(V)` does nothing.",
      "parentUuid": "15e747a1_a5e27adf",
      "revId": "d629deb65df6c33b6c763108418756ff802552aa",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9ba5139_36ab8854",
        "filename": "src/cmd/compile/internal/walk/builtin.go",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 14665
      },
      "writtenOn": "2023-07-10T15:30:19Z",
      "side": 1,
      "message": "Something like this:\n\n```\nif n :\u003d arrayClear(n.X.Pos(), n.X, nil); n !\u003d nil {\n\treturn n\n}\n// If n \u003d\u003d nil, we are clearing an array which takes zero memory, do nothing.\nreturn ir.NewBlockStmt(n.Pos(), nil)\n```",
      "parentUuid": "0247ea2b_ae9de18e",
      "revId": "d629deb65df6c33b6c763108418756ff802552aa",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7e010f2_9e832c34",
        "filename": "src/cmd/compile/internal/walk/builtin.go",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-10T15:31:05Z",
      "side": 1,
      "message": "Yes, thanks. I think it is helpful to note that clear is no-op in this case so we can safely drop it.",
      "parentUuid": "0247ea2b_ae9de18e",
      "revId": "d629deb65df6c33b6c763108418756ff802552aa",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}