{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "67b1528a_b29afbfd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-08-02T22:17:39Z",
      "side": 1,
      "message": "Minimal API to provide access to per-file versions.\ngo/types API hidden for now (requires proposal).",
      "revId": "2a57c0214c835e9d2aced2a231a547db9accb8e8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5207a660_2a4751af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-02T22:17:49Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d2a57c021\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "2a57c0214c835e9d2aced2a231a547db9accb8e8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fb088ec_aa998745",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-02T22:17:49Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "62f6145c_fe93d2f1",
      "tag": "autogenerated:trybots~beginning",
      "revId": "2a57c0214c835e9d2aced2a231a547db9accb8e8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39ef21bf_e9d7d01e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-02T22:29:45Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "5207a660_2a4751af",
      "tag": "autogenerated:trybots~happy",
      "revId": "2a57c0214c835e9d2aced2a231a547db9accb8e8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22ecc17c_ffebbec8",
        "filename": "src/go/types/api.go",
        "patchSetId": 2
      },
      "lineNbr": 292,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-08-02T22:38:33Z",
      "side": 1,
      "message": "One thing I\u0027m a little puzzled at, is how does a client get their hands on a *token.File, given a token.Pos?  It seems like we\u0027ve outsourced the binary search to the api clients, plus they\u0027ll need the FileSet that we didn\u0027t want to tie to the Info.\n\nI\u0027m also a little bothered about exposing this as a map instead of via a method; I understand that this allows clients to avoid the overhead of this map (is it usually large) but then exposes the implementation.\n\nI had imagined something more like\n\n```\n\t// fileVersions maps a file to the file\u0027s Go version.\n\t// If the file doesn\u0027t specify a version and Config.GoVersion is not\n\t// given, the reported version is the zero version (Major, Minor \u003d 0, 0).\n\tfileVersions []baseAndVersion\n}\n\ntype baseAndVersion struct {\n\tbase    int\n\tversion GoVersion\n}\n\n// GoVersionOf returns the Go version that applies to the position.\n// This is the version specified in a file\u0027s build tag if there is one,\n// otherwise the version specified in a go.mod file,\n// otherwise zero.\nfunc (info *Info) GoVersionOf(pos token.Pos) GoVersion {\n\ti :\u003d sort.Search(len(info.fileVersions), func(i int) bool { return info.fileVersions[i].base \u003c\u003d int(pos) })\n\treturn info.fileVersions[i].version\n}\n```\n\nwhere the code that accumulates these finishes by sorting a baseAndVersion slice into descending-base order.  Can access it directly with a Pos, no need for api client to binary search, no exposure of Files or FileSet.",
      "range": {
        "startLine": 292,
        "startChar": 19,
        "endLine": 292,
        "endChar": 30
      },
      "revId": "2a57c0214c835e9d2aced2a231a547db9accb8e8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c9f6937_dfb20f51",
        "filename": "src/go/types/api.go",
        "patchSetId": 2
      },
      "lineNbr": 292,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-08-02T22:42:36Z",
      "side": 1,
      "message": "go/types clients will already have a token.FileSet because they need that to parse and interpret positions anyway. I don\u0027t see a problem here.",
      "parentUuid": "22ecc17c_ffebbec8",
      "range": {
        "startLine": 292,
        "startChar": 19,
        "endLine": 292,
        "endChar": 30
      },
      "revId": "2a57c0214c835e9d2aced2a231a547db9accb8e8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}