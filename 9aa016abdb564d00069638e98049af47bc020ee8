{
  "comments": [
    {
      "key": {
        "uuid": "ff936423_cdeeb418",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-04-28T18:57:50Z",
      "side": 1,
      "message": "Why not?\n\nI\u0027m not opposed to the new code, and I agree with \"more clearly race-free\" wording below, but it\u0027s not obvious to me that the current code is racy. Intuitively, we\u0027re only setting Opt for parameters and local variables within a function, and those shouldn\u0027t be referenced by SSA in other functions, so I don\u0027t see the race.",
      "revId": "9aa016abdb564d00069638e98049af47bc020ee8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2d9de9d_b54ca8b2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5143
      },
      "writtenOn": "2017-04-28T19:03:18Z",
      "side": 1,
      "message": "Two reasons:\n\n1. SetHasOpt modifies Node.flags, which is read concurrently. This is #20144. I\u0027m sure about this.\n2. I think some param nodes might end up being shared between closures and their containing functions. I\u0027m not entirely sure about this, but once I started worrying about it, it seemed easier and safer just to switch away entirely.",
      "parentUuid": "ff936423_cdeeb418",
      "revId": "9aa016abdb564d00069638e98049af47bc020ee8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b7fc813_9bd20277",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-04-28T19:35:25Z",
      "side": 1,
      "message": "Sigh, I missed HasOpt/HasVal moved to flags.",
      "parentUuid": "b2d9de9d_b54ca8b2",
      "revId": "9aa016abdb564d00069638e98049af47bc020ee8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}