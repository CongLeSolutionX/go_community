{
  "comments": [
    {
      "key": {
        "uuid": "236e327b_e951d5ec",
        "filename": "src/encoding/gob/codec_test.go",
        "patchSetId": 3
      },
      "lineNbr": 1479,
      "author": {
        "id": 6480
      },
      "writtenOn": "2015-04-07T23:33:45Z",
      "side": 1,
      "message": "Maybe defer a recover and fail gently when it does rather than just out and out panicking?",
      "range": {
        "startLine": 1479,
        "startChar": 5,
        "endLine": 1479,
        "endChar": 27
      },
      "revId": "0d2f9e24bb464ee47ef93b21715299a4645d01db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0303eebf_f8c3d187",
        "filename": "src/encoding/gob/codec_test.go",
        "patchSetId": 3
      },
      "lineNbr": 1479,
      "author": {
        "id": 5015
      },
      "writtenOn": "2015-04-08T03:31:42Z",
      "side": 1,
      "message": "Not worth it. A panic is fine. the other tests do that.",
      "parentUuid": "236e327b_e951d5ec",
      "range": {
        "startLine": 1479,
        "startChar": 5,
        "endLine": 1479,
        "endChar": 27
      },
      "revId": "0d2f9e24bb464ee47ef93b21715299a4645d01db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0303eebf_d8c88da5",
        "filename": "src/encoding/gob/codec_test.go",
        "patchSetId": 3
      },
      "lineNbr": 1487,
      "author": {
        "id": 5015
      },
      "writtenOn": "2015-04-08T03:31:42Z",
      "side": 1,
      "message": "did you look at the example i pointed you to? all you need here if i understand correctly is\n\n       data :\u003d []byte{0x01, 0x00, 0x01, 0x00}\n\td :\u003d NewDecoder(bytes.NewReader(data))\n\nin time i might turn these examples into a single table-driven test but do it this way for now",
      "range": {
        "startLine": 1487,
        "startChar": 6,
        "endLine": 1487,
        "endChar": 16
      },
      "revId": "0d2f9e24bb464ee47ef93b21715299a4645d01db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63a66a29_0bf47dd2",
        "filename": "src/encoding/gob/codec_test.go",
        "patchSetId": 3
      },
      "lineNbr": 1487,
      "author": {
        "id": 5505
      },
      "writtenOn": "2015-04-08T20:14:44Z",
      "side": 1,
      "message": "I wrote it this way in an attempt to expose that one actually had to run d.Decode(\u0026foo) twice to expose the bug. Obviously that explanation should be improved. \n\nShould I do that in a comment inside the test or in the commit message?",
      "parentUuid": "0303eebf_d8c88da5",
      "range": {
        "startLine": 1487,
        "startChar": 6,
        "endLine": 1487,
        "endChar": 16
      },
      "revId": "0d2f9e24bb464ee47ef93b21715299a4645d01db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0303eebf_38cee9ae",
        "filename": "src/encoding/gob/codec_test.go",
        "patchSetId": 3
      },
      "lineNbr": 1492,
      "author": {
        "id": 5015
      },
      "writtenOn": "2015-04-08T03:31:42Z",
      "side": 1,
      "message": "why are you doing this twice? the code is the same.",
      "range": {
        "startLine": 1492,
        "startChar": 1,
        "endLine": 1492,
        "endChar": 3
      },
      "revId": "0d2f9e24bb464ee47ef93b21715299a4645d01db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63a66a29_4bee8500",
        "filename": "src/encoding/gob/codec_test.go",
        "patchSetId": 3
      },
      "lineNbr": 1492,
      "author": {
        "id": 5505
      },
      "writtenOn": "2015-04-08T20:14:44Z",
      "side": 1,
      "message": "When running d.Decode(\u0026foo) the first time the decoder stops after []byte{0x01,0x00} and reports an errBadType. Running d.Decode(\u0026foo) again on exactly the same input sequence should give another errBadType, but instead caused a panic because decoderMap wasn\u0027t cleaned up properly.\n\nShould I instead write it as a for loop?",
      "parentUuid": "0303eebf_38cee9ae",
      "range": {
        "startLine": 1492,
        "startChar": 1,
        "endLine": 1492,
        "endChar": 3
      },
      "revId": "0d2f9e24bb464ee47ef93b21715299a4645d01db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}