{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6e22edba_ac747c7a",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 2
      },
      "lineNbr": 431,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-07-25T15:47:35Z",
      "side": 1,
      "message": "No need to pass in the `name` argument â€” the `t.Skip` log message will already be associated with the test.",
      "range": {
        "startLine": 431,
        "startChar": 34,
        "endLine": 431,
        "endChar": 38
      },
      "revId": "819d23aad94fe9e43530e978224a25b248bf6a7d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fbbbd31_f5b8a335",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 2
      },
      "lineNbr": 431,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-07-25T15:47:35Z",
      "side": 1,
      "message": "Name this `mustHaveSMBClient` instead of `checkEnableSMB`.\n\n(We are checking whether the SMB client is already enabled, not checking that we can enable it ourselves.)",
      "range": {
        "startLine": 431,
        "startChar": 5,
        "endLine": 431,
        "endChar": 19
      },
      "revId": "819d23aad94fe9e43530e978224a25b248bf6a7d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "363dd0e9_c02b1bfd",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-07-25T15:47:35Z",
      "side": 1,
      "message": "```suggestion\n\tcmd :\u003d exec.Command(\"sc\", \"query\", \"mrxsmb20\")\n```\n\nhttps://learn.microsoft.com/en-us/windows-server/storage/file-server/troubleshoot/detect-enable-and-disable-smbv1-v2-v3?tabs\u003dclient#smb-v2v3-on-smb-client notes that:\n\u003e SMBv1 has significant security vulnerabilities, and we strongly encourage you not to use it. SMB 1.0 isn\u0027t installed by default in any edition of Windows 11 or Windows Server 2019 and later.\n\nSo I would expect this test to use SMBv2 or SMBv3.\n\nhttps://learn.microsoft.com/en-us/windows-server/storage/file-server/troubleshoot/detect-enable-and-disable-smbv1-v2-v3?tabs\u003dclient#smb-v2v3-on-smb-client\nsays that the SMB v2/v3 service is `mrxsmb20`, not `mrxsmb10`. So I suspect that is the service we should check for here.",
      "revId": "819d23aad94fe9e43530e978224a25b248bf6a7d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9cdb479_846e5ef7",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 2
      },
      "lineNbr": 434,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-07-25T15:47:35Z",
      "side": 1,
      "message": "Add:\n```go\nif len(s) \u003e 0 {\n\tt.Logf(\"%v:\\n%s\", cmd, s)\n}\n```\n\n(so that someone can debug an unexpected skip or failure)",
      "revId": "819d23aad94fe9e43530e978224a25b248bf6a7d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49864160_21ac03c2",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 2
      },
      "lineNbr": 436,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-07-25T15:47:35Z",
      "side": 1,
      "message": "```suggestion\n\t\t\tt.Skip(\"skipping: %v: %v\", cmd, err)\n```",
      "revId": "819d23aad94fe9e43530e978224a25b248bf6a7d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cadc2919_41be28fc",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 2
      },
      "lineNbr": 445,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-07-25T15:47:35Z",
      "side": 1,
      "message": "If the SMB service is not running but is configured to auto-start, will this show a different status?\n\nI think we should only call this function if the call to `os.Stat(UNCPath)` has already failed: if I understand correctly, the `os.Stat` call should start the service if it is start-on-demand, so the state should be reliable after that point.",
      "revId": "819d23aad94fe9e43530e978224a25b248bf6a7d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33916765_4df2bb5a",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 2
      },
      "lineNbr": 452,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-07-25T15:47:35Z",
      "side": 1,
      "message": "`regexp.MustCompile`, since the regexp is a constant string and we expect it to be valid.",
      "range": {
        "startLine": 452,
        "startChar": 24,
        "endLine": 452,
        "endChar": 31
      },
      "revId": "819d23aad94fe9e43530e978224a25b248bf6a7d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95045232_059f56cb",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 2
      },
      "lineNbr": 452,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-07-25T15:47:35Z",
      "side": 1,
      "message": "(nit) `` `STATE\\s+.*\\s+RUNNING` `` (so that this wouldn\u0027t match strings like \u0027STATE : X NOT_RUNNING`)",
      "range": {
        "startLine": 452,
        "startChar": 38,
        "endLine": 452,
        "endChar": 45
      },
      "revId": "819d23aad94fe9e43530e978224a25b248bf6a7d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d3152e0_1b1c35ba",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 2
      },
      "lineNbr": 457,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-07-25T15:47:35Z",
      "side": 1,
      "message": "```suggestion\n\t\tt.Skip(\"skipping: SMB client mrxsmb20 is not in state RUNNING\")\n```",
      "revId": "819d23aad94fe9e43530e978224a25b248bf6a7d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}