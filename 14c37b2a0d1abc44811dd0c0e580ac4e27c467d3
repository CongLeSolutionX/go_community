{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0d1e07c6_4580e530",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-04-21T11:04:55Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d14c37b2a",
      "tag": "autogenerated:trybots~beginning",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93fdf611_1a0565cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-04-21T11:19:07Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "0d1e07c6_4580e530",
      "tag": "autogenerated:trybots~happy",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4bdb871f_3a47fd6a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5056
      },
      "writtenOn": "2021-04-21T15:56:49Z",
      "side": 1,
      "message": "LGTM but please give Rob, Ian, and Robert some time to weigh in.\n",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf5bba45_d431d361",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 6715,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-04-21T16:53:12Z",
      "side": 1,
      "message": "Above the spec says \"ArbitraryType\".  Should this be \"ArbitraryIntegerType\"?",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afb04099_b680c913",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 6715,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-04-21T20:10:14Z",
      "side": 1,
      "message": "I\u0027m fine with that, but it\u0027s a bit long/wordy IMO. E.g., we use the phrases \"any type\" and \"integer type\" in the spec, but never \"any integer type\". And this type name is just for documentation purposes.",
      "parentUuid": "bf5bba45_d431d361",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3bc7b79_6dee71fc",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 6715,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-04-21T22:12:14Z",
      "side": 1,
      "message": "I\u0027m ok with IntegerType here. We usually refer to an \"integer type\" when we mean any integer type. Also, ArbitraryIntegerType is a bit long.",
      "parentUuid": "bf5bba45_d431d361",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82a844fa_b058a319",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 6776,
      "author": {
        "id": 5056
      },
      "writtenOn": "2021-04-21T15:56:49Z",
      "side": 1,
      "message": "s/untyped/untyped integer/",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79670722_78c34e54",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 6776,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-04-21T20:10:14Z",
      "side": 1,
      "message": "For context, the phrasing \"must be of integer type or an untyped constant\" is the wording already used for arguments to \"make\" and non-map index expressions. Do you mean to suggest this wording should differ?",
      "parentUuid": "82a844fa_b058a319",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2456f754_34e56cd0",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 6776,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-04-21T22:12:14Z",
      "side": 1,
      "message": "The wording for \"make\" is:\n\nA constant size argument must be non-negative and representable by a value of type int; if it is an untyped constant it is given type int.\n\nI think what is missing here is the representability part (and of course it can be negative).",
      "parentUuid": "79670722_78c34e54",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65e49bf8_17e8f1dc",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 6781,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-04-21T16:53:12Z",
      "side": 1,
      "message": "This is precise but not especially clear.  What if we say\n\nThe function Slice returns a slice whose backing array starts at ptr and whose length and capacity are len: (*[len]ArbitraryType)(unsafe.Pointer(ptr))[:].\n\nSimilarly above we could say\n\nThe function Add adds len to ptr, returning the updated pointer: unsafe.Pointer(uintptr(ptr) + uintptr(len)).",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38a5ff7f_206e9354",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 6781,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-04-21T20:10:14Z",
      "side": 1,
      "message": "Thanks, I like those expanded descriptions.\n\nOne thing to confirm: I used the code wording to (hopefully) make it unambiguous that nil pointers will panic (because \"(*[N]T)(nil)[:]\" panics). Do you think that\u0027s still unambiguous with the two descriptions?",
      "parentUuid": "65e49bf8_17e8f1dc",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dbc46ca_6685c1fb",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 6781,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-04-21T20:27:05Z",
      "side": 1,
      "message": "Personally I think it\u0027s worth adding a sentence mentioning the panic case.",
      "parentUuid": "38a5ff7f_206e9354",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "970b1aed_aa29b5aa",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 6781,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-04-21T20:38:08Z",
      "side": 1,
      "message": "Okay, in the next patch set I\u0027ll update the final sentence to \"If **ptr is nil or** len is negative at run time, a run-time panic occurs.\" unless anyone has a better suggestion.",
      "parentUuid": "8dbc46ca_6685c1fb",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31e09118_bf998410",
        "filename": "doc/go_spec.html",
        "patchSetId": 1
      },
      "lineNbr": 6781,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-04-21T22:12:14Z",
      "side": 1,
      "message": "I agree. Be explicit about panics.",
      "parentUuid": "970b1aed_aa29b5aa",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e002dd45_5f183ecf",
        "filename": "src/unsafe/unsafe.go",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-04-21T16:53:12Z",
      "side": 1,
      "message": "ArbitraryIntegerType?",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f7c12ba_a30818e2",
        "filename": "src/unsafe/unsafe.go",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-04-21T16:53:12Z",
      "side": 1,
      "message": "Similar comments as on the spec.",
      "revId": "14c37b2a0d1abc44811dd0c0e580ac4e27c467d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}