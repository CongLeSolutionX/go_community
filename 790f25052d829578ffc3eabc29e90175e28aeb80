{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f9bc50ab_2571a222",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-02-14T05:38:48Z",
      "side": 1,
      "message": "It would probably also a good idea to add arm to TestLargeTextSectionSplitting to ensure this code is working correctly (and does not get broken again in the future).",
      "revId": "790f25052d829578ffc3eabc29e90175e28aeb80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49fb25fc_2d136d09",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-02-14T14:25:43Z",
      "side": 1,
      "message": "This is a good suggestion. I\u0027ll send a followup CL.",
      "parentUuid": "f9bc50ab_2571a222",
      "revId": "790f25052d829578ffc3eabc29e90175e28aeb80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b973e061_7c88fca7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-02-14T14:38:19Z",
      "side": 1,
      "message": "Sent https://go-review.googlesource.com/c/go/+/468035",
      "parentUuid": "49fb25fc_2d136d09",
      "revId": "790f25052d829578ffc3eabc29e90175e28aeb80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52399361_208d400f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-02-17T16:20:56Z",
      "side": 1,
      "message": "Sorry for being late (I was OOO). I\u0027m not sure I really understand the nature of the failure and/or the fix. I\u0027m not sure we really need to split the text sections on ARM. Is the relocation from a Go text symbol to runtime.duffcopy? If so, and if the call is too far, the Go linker is supposed to generate a trampoline and make it an indirect call, so the C linker shouldn\u0027t see such a relocation, even if the total size of the text section is big. Does it not work correctly? Or it is some other call, not from a Go text symbol to another? Thanks.",
      "revId": "790f25052d829578ffc3eabc29e90175e28aeb80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9acadd9c_2468be02",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-02-17T17:02:18Z",
      "side": 1,
      "message": "Thanks for the explanation.  Yes, both the source of the call (github.com/aws/aws-sdk-go/service/ec2.(*DescribeInstanceStatusInput).GoString) and the target (runtime.duffcopy) are Go functions, so I suppose you are right, it seems that existing trampoline generation should kick in and handle this case. My mistake. Splitting the text sections does work around the problem, but if this is supposed to be handled by the existing tramp generation then this CL is not the right way to go.\n\nThe relocation in question coming out of the compiler looks kind of interesting:\n\n```\n\trel 0+0 t\u003d23 type:github.com/aws/aws-sdk-go/service/ec2.DescribeInstanceStatusInput+0\n\trel 44+4 t\u003d8 runtime.duffcopy+eb0000ea\n\trel 56+4 t\u003d8 runtime.duffcopy+eb0000ea\n\trel 76+4 t\u003d8 runtime.convT+ebfffffe\n```\n\nThat is a large offset there.",
      "parentUuid": "52399361_208d400f",
      "revId": "790f25052d829578ffc3eabc29e90175e28aeb80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecb74466_d745a4dc",
        "filename": "src/cmd/link/internal/ld/data.go",
        "patchSetId": 4
      },
      "lineNbr": 2538,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-02-14T05:38:48Z",
      "side": 1,
      "message": "The splitting requirements for both PPC64 and Darwin/ARM64 are documented in the comment above - worth adding documentation for ARM as well?",
      "range": {
        "startLine": 2538,
        "startChar": 5,
        "endLine": 2538,
        "endChar": 22
      },
      "revId": "790f25052d829578ffc3eabc29e90175e28aeb80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ae92fb1_f70dc5b3",
        "filename": "src/cmd/link/internal/ld/data.go",
        "patchSetId": 4
      },
      "lineNbr": 2538,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-02-14T14:25:43Z",
      "side": 1,
      "message": "I\u0027ll include this fix in my follow-up CL.",
      "parentUuid": "ecb74466_d745a4dc",
      "range": {
        "startLine": 2538,
        "startChar": 5,
        "endLine": 2538,
        "endChar": 22
      },
      "revId": "790f25052d829578ffc3eabc29e90175e28aeb80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}