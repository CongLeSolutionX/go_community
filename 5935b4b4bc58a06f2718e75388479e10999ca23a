{
  "comments": [
    {
      "key": {
        "uuid": "52422502_be888719",
        "filename": "misc/cgo/testcarchive/carchive_test.go",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-11-20T15:41:16Z",
      "side": 1,
      "message": "This is also going to create a _obj directory in the current working directory.  This function should probably remove that.  Or use a -objdir argument to put the generated files somewhere else, and then remove that directory.",
      "revId": "5935b4b4bc58a06f2718e75388479e10999ca23a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "725ed7ff_662f0b32",
        "filename": "misc/cgo/testcarchive/carchive_test.go",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-11-20T18:40:53Z",
      "side": 1,
      "message": "Thanks, indeed it does.\n\nThe _obj directory ended up in the test\u0027s GOPATH, which isn\u0027t terrible (since that gets cleaned up at the end of the test) but adds noise when debugging with -testwork.\n\nAdded an explicit -objdir to clean it out more aggressively.",
      "parentUuid": "52422502_be888719",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "5935b4b4bc58a06f2718e75388479e10999ca23a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4cc5428d_6dc95dbd",
        "filename": "misc/cgo/testcarchive/carchive_test.go",
        "patchSetId": 1
      },
      "lineNbr": 273,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-11-20T15:41:16Z",
      "side": 1,
      "message": "Why can\u0027t we just `go install p`?",
      "revId": "5935b4b4bc58a06f2718e75388479e10999ca23a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1fff5f4_a2ed18a1",
        "filename": "misc/cgo/testcarchive/carchive_test.go",
        "patchSetId": 1
      },
      "lineNbr": 273,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-11-20T15:44:19Z",
      "side": 1,
      "message": "I tried that first, but it does not seem to generate the header file as a side effect.\n\n(As far as I can tell, `go install` only writes out headers with `-buildmode\u003dc-archive` or `-buildmode\u003dc-shared`, and those both reject non-`main` packages.)",
      "parentUuid": "4cc5428d_6dc95dbd",
      "revId": "5935b4b4bc58a06f2718e75388479e10999ca23a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4d496f0_938688aa",
        "filename": "misc/cgo/testcarchive/carchive_test.go",
        "patchSetId": 1
      },
      "lineNbr": 273,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-11-20T15:57:27Z",
      "side": 1,
      "message": "Hmmm, this does seem pretty dreadful but I guess we can\u0027t do anything better for 1.14.  Want to open an issue for this problem?",
      "parentUuid": "e1fff5f4_a2ed18a1",
      "revId": "5935b4b4bc58a06f2718e75388479e10999ca23a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6090dad_9d6cf347",
        "filename": "misc/cgo/testcarchive/carchive_test.go",
        "patchSetId": 1
      },
      "lineNbr": 273,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-11-20T18:40:53Z",
      "side": 1,
      "message": "Filed as https://golang.org/issue/35715.",
      "parentUuid": "a4d496f0_938688aa",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "5935b4b4bc58a06f2718e75388479e10999ca23a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}