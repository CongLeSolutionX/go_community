{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5361b4df_b206ea7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-03T16:59:10Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dc864a907\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "c864a9079ff3939c801f3040a27ffaef2a569ee4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78e1a7ef_a331cd04",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-03T17:09:34Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "5361b4df_b206ea7c",
      "tag": "autogenerated:trybots~happy",
      "revId": "c864a9079ff3939c801f3040a27ffaef2a569ee4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c8ac7bb_c37093f0",
        "filename": "src/cmd/compile/internal/inline/inl.go",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-05-04T23:18:02Z",
      "side": 1,
      "message": "nit: vis is no longer self-recursive, so you could just write:\n\n```\nir.Visit(fn, func(n ir.Node) {\n  ...\n})\n```",
      "range": {
        "startLine": 254,
        "startChar": 0,
        "endLine": 255,
        "endChar": 28
      },
      "revId": "c864a9079ff3939c801f3040a27ffaef2a569ee4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85559af4_1b1fde27",
        "filename": "src/cmd/compile/internal/inline/inl.go",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-05-05T12:22:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c8ac7bb_c37093f0",
      "range": {
        "startLine": 254,
        "startChar": 0,
        "endLine": 255,
        "endChar": 28
      },
      "revId": "c864a9079ff3939c801f3040a27ffaef2a569ee4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a35d76c8_03bdfd4c",
        "filename": "src/cmd/compile/internal/inline/inl.go",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-05-04T23:18:02Z",
      "side": 1,
      "message": "nit: there are two places that assign to liveFuncs; it would be simpler I think to have just one:\n\n```\nmarkLiveFuncs \u003d func(fn *ir.Func) {\n  if liveFuncs[fn] {\n    return\n  }\n  liveFuncs[fn] \u003d true\n  ir.Visit(fn, func(n ir.Node) {\n    if clo, ok :\u003d n.(*ir.ClosureExpr); ok {\n      markLiveFuncs(clo.Func)\n    }\n  })\n}\n```",
      "range": {
        "startLine": 257,
        "startChar": 0,
        "endLine": 258,
        "endChar": 31
      },
      "revId": "c864a9079ff3939c801f3040a27ffaef2a569ee4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d13dce9_fc57682e",
        "filename": "src/cmd/compile/internal/inline/inl.go",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-05-05T12:22:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a35d76c8_03bdfd4c",
      "range": {
        "startLine": 257,
        "startChar": 0,
        "endLine": 258,
        "endChar": 31
      },
      "revId": "c864a9079ff3939c801f3040a27ffaef2a569ee4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}