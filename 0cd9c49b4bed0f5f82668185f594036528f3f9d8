{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "36c5b8bb_f15cb4b8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-03-02T22:29:56Z",
      "side": 1,
      "message": "(This will need a backport to the 1.18 release branch once merged.)",
      "revId": "0cd9c49b4bed0f5f82668185f594036528f3f9d8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30f2d6f4_ad35d7dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-03-02T22:19:12Z",
      "side": 1,
      "message": "TRY\u003dlongtest,windows-amd64-longtest",
      "revId": "0cd9c49b4bed0f5f82668185f594036528f3f9d8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b825e7c0_8176d9b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-02T22:19:22Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d0cd9c49b",
      "tag": "autogenerated:trybots~beginning",
      "revId": "0cd9c49b4bed0f5f82668185f594036528f3f9d8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab2a91a1_8184bf96",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-02T22:32:25Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n* windows-amd64-longtest\n",
      "parentUuid": "b825e7c0_8176d9b1",
      "tag": "autogenerated:trybots~happy",
      "revId": "0cd9c49b4bed0f5f82668185f594036528f3f9d8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95d1cb0c_9735548c",
        "filename": "src/cmd/go/internal/modload/init.go",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-03-02T23:35:15Z",
      "side": 1,
      "message": "When does this get triggered? We\u0027re avoiding InitWorkfile being called for NoRoot from `go run` through the changes in runRun, right? (As far as I see, the only other NoRoot case is in runInstall, and it has an early return before InitWorkfile is called.",
      "revId": "0cd9c49b4bed0f5f82668185f594036528f3f9d8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "779bfe1c_47611b4b",
        "filename": "src/cmd/go/internal/modload/init.go",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-03-03T02:46:08Z",
      "side": 1,
      "message": "It doesn\u0027t get triggered today.\n\nThe InitWorkFile part of this change is just defense in depth / future-proofing. Semantically, `NoRoot` mode should cause `InitWorkfile` to ignore the work file even if that combination never occurs organically today.\n\n(You could envision an alternate change in `run.go` that moved the calls to `modload.InitWorkfile` and `modload.Init` into an unconditional section instead of putting the `InitWorkfile` call in the `else` branch. As far as I can tell, that alternate version of the change ought to be correct too â€” but I didn\u0027t take that route because it seemed a bit more risky.)",
      "parentUuid": "95d1cb0c_9735548c",
      "revId": "0cd9c49b4bed0f5f82668185f594036528f3f9d8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}