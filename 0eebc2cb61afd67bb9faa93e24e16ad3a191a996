{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ea12cadd_58894e93",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 20,
      "author": {
        "id": 5167
      },
      "writtenOn": "2021-09-02T18:59:19Z",
      "side": 1,
      "message": "Are you saying that the linker treats them as Forwarder RVA exports even with the underscore? (This would seem to be a problem for essentially all Go symbols if so.)",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dfce272_b01ef0d3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 20,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-09-02T19:10:37Z",
      "side": 1,
      "message": "No. I mean only for \"go.buildid\", which is STEXT, and \"type.*\" which is STYPE, they are not prefixed with underscore. I guess other symbols of those kinds are also affected. But the failed test in trybot did not show any symbols other than \"go.buildid\" and \"type.*\"",
      "parentUuid": "ea12cadd_58894e93",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f5fed19_90920229",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 20,
      "author": {
        "id": 5167
      },
      "writtenOn": "2021-09-17T21:06:47Z",
      "side": 1,
      "message": "Okay. I think the commit message could be clearer about this, but let\u0027s resolve underscore prefixing all symbols first.",
      "parentUuid": "2dfce272_b01ef0d3",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "203d53e0_8aab8e55",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 5167
      },
      "writtenOn": "2021-09-02T18:59:19Z",
      "side": 1,
      "message": "If I\u0027m not mistaken, we had to add underscore prefixes for Mach-O, and I think we did it to all symbols (Cherry, do you know?). Unless it actually breaks something, I\u0027d much rather just consistently add underscores to everything for object formats that expect that.",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "204a49a4_454c35c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-09-02T19:10:37Z",
      "side": 1,
      "message": "AFAIK, we only add the underscore prefix for windoes/386",
      "parentUuid": "203d53e0_8aab8e55",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f11c5369_8ad63087",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 5167
      },
      "writtenOn": "2021-09-17T21:06:47Z",
      "side": 1,
      "message": "Sorry, that\u0027s not really what I was asking.\n\nRather than hack around this for a few symbols that seem to cause problems on windows/386, I would rather just prefix *all* symbols on windows/386. We already do this on some platforms. For example, here\u0027s where we do it for Mach-O: https://github.com/golang/go/blob/974b0166d6a7c20b98f7e517e49197bea46fc5e2/src/cmd/link/internal/ld/macho.go#L1045",
      "parentUuid": "204a49a4_454c35c8",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a3efeb0_65f21e7c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-09-18T02:21:50Z",
      "side": 1,
      "message": "Seems we also did it con windows/386 for a while until CL 35076.\n\nHi Alex, would you mind giving us your opinion on this?",
      "parentUuid": "f11c5369_8ad63087",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51914d98_e45cfc4f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 5070
      },
      "writtenOn": "2021-09-19T02:03:59Z",
      "side": 1,
      "message": "What in particular would you like my opinion about?\n\nI tried reading this CL description, and I don\u0027t understand what this CL is about. Perhaps it is just me being slow.\n\nI also tried looking at your code changes, but there are just too many changes for me to gather the essence of your change.",
      "parentUuid": "9a3efeb0_65f21e7c",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa97baa2_b729f69d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-09-19T02:11:43Z",
      "side": 1,
      "message": "Hi Alex, the only part concern is \"src/cmd/link/internal/ld/pe.go\". To summary:\n\n - This Cl change the compiler generated symbol from using \".\" to \":\", so \"go.builid\" now becomes \"go:builid\".\n - With this change, on windows/386, the external linker complains that \"go:buildid\" symbol not found\n - I found that on windows/386, we are adding \"_\" prefix for some symbols, but not for \"go:buildid\".\n - The test works so far, because \"go.buildid\" are seen as a Forwarder RVA export symbol (due to the \".\" in name).\n - I propose to do a hack for \"go.buildid\" only, that mean it now becomes \"_go:buildid\", but Austin thinks that it\u0027s better to just prefix all external symbols with \"_\"\n \nI found we were doing that for almost external symbols on windows/386, until you changed them in CL 35076. So I want to ask you whether it\u0027s safe to just prefix all external symbols with \"_\" on windows/386?",
      "parentUuid": "51914d98_e45cfc4f",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00d64461_d95ee5ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-14T15:03:57Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d0eebc2cb",
      "tag": "autogenerated:trybots~beginning",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6358e75a_159b46d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-14T15:15:53Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "00d64461_d95ee5ca",
      "tag": "autogenerated:trybots~happy",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b56959c_fc823ba7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-08-16T03:29:04Z",
      "side": 1,
      "message": "A gentle ping!\n\nSince when we missed this for a few releases, and this is better to land at the early cycle as soon as possible IMHO.",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6cb5d8aa_5fbc1086",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-08-16T17:11:12Z",
      "side": 1,
      "message": "Seems okay to me for cmd/compile.",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2fd3f73_fea8309f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-08-16T22:36:38Z",
      "side": 1,
      "message": "Is this going to change the names that appear in the symbol table and in the debugging information?\n\nIf it does I\u0027m concnerned that this might break various user scripts and also Delve and gdb.  Can you at least see whether Delve\u0027s tests continue to pass with this change?  Thanks.",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9f42745_12695809",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-08-17T06:20:55Z",
      "side": 1,
      "message": "\u003e Is this going to change the names that appear in the symbol table and in the debugging information?\n\nI think so.\n\n\u003e If it does I\u0027m concnerned that this might break various user scripts and also Delve and gdb.  Can you at least see whether Delve\u0027s tests continue to pass with this change?  Thanks.\n\nFor now, I can\u0027t verify yet, because delve is currently broken with tip: https://github.com/go-delve/delve/issues/2661\n\nNote that run delve test with go1.17 is ok, I will re-verify after above delve issue solved.",
      "parentUuid": "f2fd3f73_fea8309f",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1e04996_bf4ee690",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-08-17T14:21:32Z",
      "side": 1,
      "message": "delve maintainer sad that this change will not be a problem: https://github.com/go-delve/delve/issues/2661#issuecomment-900300185\n\nI think we can continue doing review process",
      "parentUuid": "c9f42745_12695809",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51730a12_d19eedfe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-09-02T15:10:17Z",
      "side": 1,
      "message": "Kindly ping guys for this",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d07f478f_29d779ad",
        "filename": "src/cmd/compile/internal/noder/import.go",
        "patchSetId": 15
      },
      "lineNbr": 436,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-08-16T17:11:12Z",
      "side": 1,
      "message": "nit: `if base.ReservedImports[path] { ... }`?",
      "range": {
        "startLine": 435,
        "startChar": 1,
        "endLine": 436,
        "endChar": 17
      },
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "545907e6_1c514442",
        "filename": "src/cmd/compile/internal/noder/import.go",
        "patchSetId": 15
      },
      "lineNbr": 436,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-09-03T08:46:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d07f478f_29d779ad",
      "range": {
        "startLine": 435,
        "startChar": 1,
        "endLine": 436,
        "endChar": 17
      },
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29fd0154_efc9f123",
        "filename": "src/debug/gosym/symtab.go",
        "patchSetId": 15
      },
      "lineNbr": 42,
      "author": {
        "id": 5167
      },
      "writtenOn": "2021-09-02T18:59:19Z",
      "side": 1,
      "message": "debug/gosym is intended to work on older Go binaries as well, so I think you have to look for both \".\" and \":\".",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcc9dd83_50098272",
        "filename": "src/debug/gosym/symtab.go",
        "patchSetId": 15
      },
      "lineNbr": 42,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-09-02T19:10:37Z",
      "side": 1,
      "message": "Hmm, ah right, so we need to change the prefix base on go version.",
      "parentUuid": "29fd0154_efc9f123",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "657e8917_4a351fb3",
        "filename": "src/debug/gosym/symtab.go",
        "patchSetId": 15
      },
      "lineNbr": 42,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-09-03T08:45:15Z",
      "side": 1,
      "message": "Hmm, I\u0027m a bit confused, if we still look for both \".\" and \":\", then a symbol like \"go.uber.org/zap/buffer.(*Buffer).AppendString\" is still be reported as empty package. Can we introduce new method to reflect the new change instead, something like Sym.PackageName18()?",
      "parentUuid": "bcc9dd83_50098272",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee978d29_29a3be74",
        "filename": "src/debug/gosym/symtab.go",
        "patchSetId": 15
      },
      "lineNbr": 42,
      "author": {
        "id": 5167
      },
      "writtenOn": "2021-09-17T21:06:47Z",
      "side": 1,
      "message": "Hmm, that\u0027s true. I don\u0027t think introducing a new method is a good solution because clients of this package aren\u0027t going to know any better which method to call, and most of them just won\u0027t get updated at all. I\u0027m not sure what the right answer here is. gosym does do some version sniffing. Maybe that could be applied here, too?",
      "parentUuid": "657e8917_4a351fb3",
      "revId": "0eebc2cb61afd67bb9faa93e24e16ad3a191a996",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}