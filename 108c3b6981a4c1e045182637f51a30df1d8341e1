{
  "comments": [
    {
      "key": {
        "uuid": "2b74727a_78a6bd82",
        "filename": "src/fmt/format.go",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 10961
      },
      "writtenOn": "2016-04-17T09:41:20Z",
      "side": 1,
      "message": "Haven\u0027t checked, but is similar adjustment needed for the \"0\" of %#o, including tests?  As a reader of the code, I\u0027d assume that should be near the 0x/%#x adjustment here.",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 231,
        "endChar": 35
      },
      "revId": "108c3b6981a4c1e045182637f51a30df1d8341e1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "680e702a_d74bfc2d",
        "filename": "src/fmt/format.go",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 5846
      },
      "writtenOn": "2016-04-17T10:04:18Z",
      "side": 1,
      "message": "I can check again (with C) but last time i did i thought that o only adds a 0 if there is not already a 0 in the front. So doing prec-- here would produce one less 0 then required by width if there is more than one 0 in the front. So it should be fine if width already adds a 0 and later o does not instead. But we can add test cases for that.",
      "parentUuid": "2b74727a_78a6bd82",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 231,
        "endChar": 35
      },
      "revId": "108c3b6981a4c1e045182637f51a30df1d8341e1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b74727a_b8d695c7",
        "filename": "src/fmt/format.go",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 10961
      },
      "writtenOn": "2016-04-17T10:52:13Z",
      "side": 1,
      "message": "Is this meant to be matching C?\n\nfmt says of #: \"add leading 0 for octal (%#o), 0x for hex (%#x)\", ignoring their values.  The playground has \"%#o\" give \"0\", not \"00\", which could still match the documentation, and \"%#x\" give \"0x0\".\n\nPOSIX, according to fprintf(3p) here, says of \"%#o\": \"it increases the precision (if necessary) to force the first digit of the result to be zero\", so that\u0027s more explicitly saying 0 is \"0\".  For \"%#x\": \"a non-zero result shall have 0x (or 0X) prefixed to it\"; that differs from Go\u0027s documentation and behaviour.  And that\u0027s fine, I just think it shows C isn\u0027t the definition.",
      "parentUuid": "680e702a_d74bfc2d",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 231,
        "endChar": 35
      },
      "revId": "108c3b6981a4c1e045182637f51a30df1d8341e1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}