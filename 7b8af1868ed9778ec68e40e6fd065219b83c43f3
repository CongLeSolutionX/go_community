{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dd0f6eca_3880315a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-28T21:03:01Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "74ea76b8_84786087",
      "tag": "autogenerated:trybots~beginning",
      "revId": "7b8af1868ed9778ec68e40e6fd065219b83c43f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "201f9f0f_5b4b3e72",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-28T21:03:01Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d7b8af186",
      "tag": "autogenerated:trybots~beginning",
      "revId": "7b8af1868ed9778ec68e40e6fd065219b83c43f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24b99417_36d2c5af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-28T21:18:18Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "201f9f0f_5b4b3e72",
      "tag": "autogenerated:trybots~happy",
      "revId": "7b8af1868ed9778ec68e40e6fd065219b83c43f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8f740d9_e46e8b10",
        "filename": "src/cmd/compile/internal/amd64/versions_test.go",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-10-04T20:00:02Z",
      "side": 1,
      "message": "Is this trying to check what version of GOAMD64 was used to compile this binary? If so, I think this can fail if the user overrides GOAMD64 at make.bash time?\n\nProbably fine for now, but add a TODO to instead test for \"amd64 \u0026\u0026 !amd64.v2\" after #45454 is fixed?",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 36,
        "endChar": 2
      },
      "revId": "7b8af1868ed9778ec68e40e6fd065219b83c43f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52c18b60_55e35008",
        "filename": "src/cmd/compile/internal/amd64/versions_test.go",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 5200
      },
      "writtenOn": "2021-10-05T16:33:43Z",
      "side": 1,
      "message": "Does the make.bash override still set the environment variable?\nIn any case, I\u0027ll add a note.",
      "parentUuid": "b8f740d9_e46e8b10",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 36,
        "endChar": 2
      },
      "revId": "7b8af1868ed9778ec68e40e6fd065219b83c43f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e335f57_9958e408",
        "filename": "src/cmd/compile/internal/amd64/versions_test.go",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-10-05T18:21:46Z",
      "side": 1,
      "message": "\u003e Does the make.bash override still set the environment variable?\n\ncmd/go will explicitly set the environment variable when invoking cmd/compile, etc. if not already set by the user, but not when running the test binaries.",
      "parentUuid": "52c18b60_55e35008",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 36,
        "endChar": 2
      },
      "revId": "7b8af1868ed9778ec68e40e6fd065219b83c43f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb8dbab9_69cdc949",
        "filename": "src/cmd/compile/internal/amd64/versions_test.go",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-10-04T20:00:02Z",
      "side": 1,
      "message": "`strings.Count(parts[2], \" \") + 1`?",
      "range": {
        "startLine": 130,
        "startChar": 7,
        "endLine": 130,
        "endChar": 53
      },
      "revId": "7b8af1868ed9778ec68e40e6fd065219b83c43f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d8ccbb6_cc4610ad",
        "filename": "src/cmd/compile/internal/amd64/versions_test.go",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 5200
      },
      "writtenOn": "2021-10-05T16:33:43Z",
      "side": 1,
      "message": "objdump uses spaces \"4c 29 e8\" whereas go tool objdump doesn\u0027t \"4c29e8\". I\u0027d like to support both.\n\nHow about (len(parts[2]) - strings.Count(parts[2], \" \")) / 2",
      "parentUuid": "bb8dbab9_69cdc949",
      "range": {
        "startLine": 130,
        "startChar": 7,
        "endLine": 130,
        "endChar": 53
      },
      "revId": "7b8af1868ed9778ec68e40e6fd065219b83c43f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17a69de3_22383e1e",
        "filename": "src/cmd/compile/internal/amd64/versions_test.go",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-10-05T18:21:46Z",
      "side": 1,
      "message": "Ah, I see. Yeah, either way seems good then.",
      "parentUuid": "0d8ccbb6_cc4610ad",
      "range": {
        "startLine": 130,
        "startChar": 7,
        "endLine": 130,
        "endChar": 53
      },
      "revId": "7b8af1868ed9778ec68e40e6fd065219b83c43f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "985dfc29_1004538f",
        "filename": "src/cmd/compile/internal/amd64/versions_test.go",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-10-04T20:00:02Z",
      "side": 1,
      "message": "Is \"2\" here short for \"to\"? If so, maybe just write it out?\n\nI read it as the opcodes for \"feature 2\" at first, thinking it was related to \"v2\".",
      "range": {
        "startLine": 205,
        "startChar": 4,
        "endLine": 205,
        "endChar": 19
      },
      "revId": "7b8af1868ed9778ec68e40e6fd065219b83c43f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d333e8f_6166b587",
        "filename": "src/cmd/compile/internal/amd64/versions_test.go",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 5200
      },
      "writtenOn": "2021-10-05T16:33:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "985dfc29_1004538f",
      "range": {
        "startLine": 205,
        "startChar": 4,
        "endLine": 205,
        "endChar": 19
      },
      "revId": "7b8af1868ed9778ec68e40e6fd065219b83c43f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}