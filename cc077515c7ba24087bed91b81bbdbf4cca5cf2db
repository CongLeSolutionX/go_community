{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ec26be7b_cf6c63a7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-07-24T18:41:07Z",
      "side": 1,
      "message": "s/type/support type/",
      "range": {
        "startLine": 7,
        "startChar": 5,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49a03ffd_4e5ed305",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 44473
      },
      "writtenOn": "2024-07-25T23:17:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec26be7b_cf6c63a7",
      "range": {
        "startLine": 7,
        "startChar": 5,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7250b095_e05db958",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-07-24T18:41:07Z",
      "side": 1,
      "message": "As written this sounds like ObjAlias also writes type parameters, but at a different place. Maybe:\n\nThis CL adds a new unified IR export data tag `ObjGenericAlias` used to encode generic (type parameterized) type aliases. The encoding is similar to the one for `ObjAlias` except that it also includes space for the type parameters of the generic alias.\n\nWe cannot simply re-use the existing tag (`ObjAlias`) and add type parameter information because that would break a) old tools that don\u0027t anticipate type parameters in the encoding, or updated tools that do anticipate type parameters but don\u0027t find then in older binaries.\n\nAn analogous change is made in the (indexed) iimporters and iexporter.",
      "range": {
        "startLine": 10,
        "startChar": 47,
        "endLine": 12,
        "endChar": 28
      },
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73842126_74d4fa2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-07-24T18:41:07Z",
      "side": 1,
      "message": "Looks pretty good.",
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f669316_25282e03",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 7
      },
      "lineNbr": 329,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-07-24T18:41:07Z",
      "side": 1,
      "message": "Thus comment could be clearer. Also, not clear to me why it\u0027s a TODO.\nAlso, should s/typ/rhs/ for clarity?",
      "fixSuggestions": [
        {
          "fixId": "2145b900_42c4ff71",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/compile/internal/importer/iimport.go",
              "range": {
                "startLine": 329,
                "startChar": 0,
                "endLine": 332,
                "endChar": 0
              },
              "replacement": "\t\t// The rhs of a type alias declaration is not a named type.\n\t\trhs :\u003d r.typ()\n\t\tobj :\u003d types2.NewTypeName(pos, r.currPkg, name, rhs)\n\t\talias :\u003d types2.NewAlias(obj, rhs)\n"
            }
          ]
        }
      ],
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d22d481e_b45491a9",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 7
      },
      "lineNbr": 329,
      "author": {
        "id": 44473
      },
      "writtenOn": "2024-07-25T23:17:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f669316_25282e03",
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3905a19f_de9cb915",
        "filename": "src/cmd/compile/internal/importer/ureader.go",
        "patchSetId": 7
      },
      "lineNbr": 227,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-07-24T18:41:07Z",
      "side": 1,
      "message": "Let\u0027s change this to:\n\n```\nif typ \u003d\u003d nil {\n\tbase.Fatalf(\"doTyp returned nil for info\u003d%v\", info)\n}\n```\n\nto match the change made in CL 585399 in reader.go.",
      "range": {
        "startLine": 227,
        "startChar": 2,
        "endLine": 227,
        "endChar": 20
      },
      "fixSuggestions": [
        {
          "fixId": "165b74be_b08ae627",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/compile/internal/importer/ureader.go",
              "range": {
                "startLine": 227,
                "startChar": 0,
                "endLine": 228,
                "endChar": 0
              },
              "replacement": "\t\tif typ \u003d\u003d nil {\n\t\t\tbase.Fatalf(\"doTyp returned nil for info\u003d%v\", info)\n\t\t}\n"
            }
          ]
        }
      ],
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bebfcc26_ed059800",
        "filename": "src/cmd/compile/internal/importer/ureader.go",
        "patchSetId": 7
      },
      "lineNbr": 227,
      "author": {
        "id": 44473
      },
      "writtenOn": "2024-07-25T23:17:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3905a19f_de9cb915",
      "range": {
        "startLine": 227,
        "startChar": 2,
        "endLine": 227,
        "endChar": 20
      },
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e53367b_2531bf35",
        "filename": "src/cmd/compile/internal/noder/writer.go",
        "patchSetId": 7
      },
      "lineNbr": 852,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-07-24T18:41:07Z",
      "side": 1,
      "message": "s/t/rhs/ for clarity",
      "range": {
        "startLine": 852,
        "startChar": 3,
        "endLine": 852,
        "endChar": 4
      },
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee0a9821_3a210851",
        "filename": "src/cmd/compile/internal/noder/writer.go",
        "patchSetId": 7
      },
      "lineNbr": 852,
      "author": {
        "id": 44473
      },
      "writtenOn": "2024-07-25T23:17:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e53367b_2531bf35",
      "range": {
        "startLine": 852,
        "startChar": 3,
        "endLine": 852,
        "endChar": 4
      },
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76039a27_af5c7598",
        "filename": "src/cmd/internal/testdir/testdir_test.go",
        "patchSetId": 7
      },
      "lineNbr": 585,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-07-24T18:41:07Z",
      "side": 1,
      "message": "s/the //\n\nto match the other comments",
      "range": {
        "startLine": 585,
        "startChar": 24,
        "endLine": 585,
        "endChar": 27
      },
      "fixSuggestions": [
        {
          "fixId": "dce37a3f_a87ac3eb",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/internal/testdir/testdir_test.go",
              "range": {
                "startLine": 585,
                "startChar": 0,
                "endLine": 586,
                "endChar": 0
              },
              "replacement": "\t\tcase \"-gomod\": // set go.mod contents\n"
            }
          ]
        }
      ],
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "374ac9c6_5672d3f4",
        "filename": "src/cmd/internal/testdir/testdir_test.go",
        "patchSetId": 7
      },
      "lineNbr": 585,
      "author": {
        "id": 44473
      },
      "writtenOn": "2024-07-25T23:17:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76039a27_af5c7598",
      "range": {
        "startLine": 585,
        "startChar": 24,
        "endLine": 585,
        "endChar": 27
      },
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1aeaadb3_918de214",
        "filename": "test/fixedbugs/issue68526.dir/a/a.go",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-07-24T18:41:07Z",
      "side": 1,
      "message": "Is it important to have a G here? If not, just use `struct{ f T }`.\n\nAlternatively, add both cases (using A1, A2).",
      "fixSuggestions": [
        {
          "fixId": "15693771_566154b3",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "test/fixedbugs/issue68526.dir/a/a.go",
              "range": {
                "startLine": 9,
                "startChar": 0,
                "endLine": 10,
                "endChar": 0
              },
              "replacement": "type A[T any] \u003d struct{ F T }\n"
            },
            {
              "path": "test/fixedbugs/issue68526.dir/a/a.go",
              "range": {
                "startLine": 11,
                "startChar": 0,
                "endLine": 12,
                "endChar": 0
              },
              "replacement": "type A1[T any] \u003d struct{ F T }\ntype A2[T any] \u003d struct{ F T }\n"
            }
          ]
        }
      ],
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4d163c8_08ecaaa2",
        "filename": "test/fixedbugs/issue68526.dir/a/a.go",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 44473
      },
      "writtenOn": "2024-07-25T23:17:44Z",
      "side": 1,
      "message": "I thought G was significant, but I no longer think it is.",
      "parentUuid": "1aeaadb3_918de214",
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fe75a78_e5f01477",
        "filename": "test/fixedbugs/issue68526.dir/main.go",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-07-24T18:41:07Z",
      "side": 1,
      "message": "s/concrete/concrete type/",
      "fixSuggestions": [
        {
          "fixId": "e2009893_87bfc17a",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "test/fixedbugs/issue68526.dir/main.go",
              "range": {
                "startLine": 25,
                "startChar": 0,
                "endLine": 26,
                "endChar": 0
              },
              "replacement": "\t\tpanic(\"zero value of alias and concrete type not identical\")\n"
            }
          ]
        }
      ],
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e6cd47e_9bb8f6fa",
        "filename": "test/fixedbugs/issue68526.dir/main.go",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 44473
      },
      "writtenOn": "2024-07-25T23:17:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4fe75a78_e5f01477",
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b63efa04_d9c6de99",
        "filename": "test/fixedbugs/issue68526.dir/main.go",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-07-24T18:41:07Z",
      "side": 1,
      "message": "s/are distinct types/not distinct/\n\n(to match the panic message above which uses \"not identical\")",
      "range": {
        "startLine": 29,
        "startChar": 48,
        "endLine": 29,
        "endChar": 66
      },
      "fixSuggestions": [
        {
          "fixId": "b5005b43_9ee2249d",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "test/fixedbugs/issue68526.dir/main.go",
              "range": {
                "startLine": 29,
                "startChar": 0,
                "endLine": 30,
                "endChar": 0
              },
              "replacement": "\t\tpanic(\"zero value of a.G[string] and a.G[int] are not distinct\")\n"
            }
          ]
        }
      ],
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45a26e5e_7a8a248a",
        "filename": "test/fixedbugs/issue68526.dir/main.go",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 44473
      },
      "writtenOn": "2024-07-25T23:17:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b63efa04_d9c6de99",
      "range": {
        "startLine": 29,
        "startChar": 48,
        "endLine": 29,
        "endChar": 66
      },
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a9c56a7_d41525f4",
        "filename": "test/fixedbugs/issue68526.dir/main.go",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-07-24T18:41:07Z",
      "side": 1,
      "message": "Hm. I guess we cannot change this but it would be nice if %T would actually print the alias name.",
      "fixSuggestions": [
        {
          "fixId": "2205dd6a_6b58aa35",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "test/fixedbugs/issue68526.dir/main.go",
              "range": {
                "startLine": 32,
                "startChar": 0,
                "endLine": 33,
                "endChar": 0
              },
              "replacement": "\tif got, want :\u003d fmt.Sprintf(\"%T\", astr), \"a.A[string]\"; got !\u003d want {\n"
            }
          ]
        }
      ],
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b92c2219_048890f8",
        "filename": "test/fixedbugs/issue68526.go",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-07-24T18:41:07Z",
      "side": 1,
      "message": "s/of of/for/\n\nbut it\u0027s also fine to leave this comment away - the issue number is in the file and the issue is clear",
      "range": {
        "startLine": 7,
        "startChar": 31,
        "endLine": 7,
        "endChar": 33
      },
      "fixSuggestions": [
        {
          "fixId": "af488d21_9b6ee956",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "test/fixedbugs/issue68526.go",
              "range": {
                "startLine": 7,
                "startChar": 0,
                "endLine": 10,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b3a9dc5_47e3b592",
        "filename": "test/fixedbugs/issue68526.go",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 44473
      },
      "writtenOn": "2024-07-25T23:17:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b92c2219_048890f8",
      "range": {
        "startLine": 7,
        "startChar": 31,
        "endLine": 7,
        "endChar": 33
      },
      "revId": "cc077515c7ba24087bed91b81bbdbf4cca5cf2db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}