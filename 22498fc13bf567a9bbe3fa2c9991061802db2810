{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "de8efc01_aa9d7d34",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-29T19:53:41Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d22498fc1",
      "tag": "autogenerated:trybots~beginning",
      "revId": "22498fc13bf567a9bbe3fa2c9991061802db2810",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00a2925f_849f636c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-29T20:11:24Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "de8efc01_aa9d7d34",
      "tag": "autogenerated:trybots~happy",
      "revId": "22498fc13bf567a9bbe3fa2c9991061802db2810",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd781500_96479772",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-06-30T14:53:50Z",
      "side": 1,
      "message": "LGTM, this is a nice change!",
      "revId": "22498fc13bf567a9bbe3fa2c9991061802db2810",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b7c35f6_4505d417",
        "filename": "src/cmd/compile/internal/types2/interface.go",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-06-30T14:53:50Z",
      "side": 1,
      "message": "Eh? So then why not complete it eagerly?\n\nShould this instead be in the check.later call below?",
      "range": {
        "startLine": 98,
        "startChar": 1,
        "endLine": 98,
        "endChar": 75
      },
      "revId": "22498fc13bf567a9bbe3fa2c9991061802db2810",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fb172b6_6140799d",
        "filename": "src/cmd/compile/internal/types2/interface.go",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-06-30T14:53:50Z",
      "side": 1,
      "message": "The name and signature of this function are confusing to me at first.\n\nSince this mutates ityp, it feels like it should be a method on *Interface. Maybe Interface.computeTypeSet(*Checker, syntax.Pos)",
      "range": {
        "startLine": 127,
        "startChar": 5,
        "endLine": 127,
        "endChar": 15
      },
      "revId": "22498fc13bf567a9bbe3fa2c9991061802db2810",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fde0463_c3fab1a1",
        "filename": "src/cmd/compile/internal/types2/interface.go",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-06-30T14:53:50Z",
      "side": 1,
      "message": "I was wondering what the key was to making this CL work, and I suppose this is it.\n\nI\u0027m still a little worried about correctness, as it\u0027s not obvious (to me at least) that all premature accesses of typeSet result in some sort of cycle error.\n\nWe could perhaps capture premature accesses on ityp, and report them when checker is non-nil. Do you think something like this would be worthwhile?",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 140,
        "endChar": 2
      },
      "revId": "22498fc13bf567a9bbe3fa2c9991061802db2810",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e54c2d6_355254a6",
        "filename": "src/cmd/compile/internal/types2/sanitize.go",
        "patchSetId": 5
      },
      "lineNbr": 115,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-06-30T14:53:50Z",
      "side": 1,
      "message": "We\u0027ll eliminate sanitization, I hope!",
      "range": {
        "startLine": 115,
        "startChar": 15,
        "endLine": 115,
        "endChar": 48
      },
      "revId": "22498fc13bf567a9bbe3fa2c9991061802db2810",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "429eb9d7_76063624",
        "filename": "src/cmd/compile/internal/types2/type.go",
        "patchSetId": 5
      },
      "lineNbr": 267,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-06-30T14:53:50Z",
      "side": 1,
      "message": "Not necessarily for this CL, but should this be a *TypeName?",
      "range": {
        "startLine": 267,
        "startChar": 11,
        "endLine": 267,
        "endChar": 17
      },
      "revId": "22498fc13bf567a9bbe3fa2c9991061802db2810",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a25200e5_5a3b0375",
        "filename": "src/cmd/compile/internal/types2/type.go",
        "patchSetId": 5
      },
      "lineNbr": 396,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-06-30T14:53:50Z",
      "side": 1,
      "message": "Why is this even necessary? If we never access the type set, we can save work by not computing it here.",
      "range": {
        "startLine": 396,
        "startChar": 1,
        "endLine": 396,
        "endChar": 12
      },
      "revId": "22498fc13bf567a9bbe3fa2c9991061802db2810",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}