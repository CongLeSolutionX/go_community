{
  "comments": [
    {
      "key": {
        "uuid": "582a52ea_ef44eef0",
        "filename": "src/cmd/compile/internal/gc/const.go",
        "patchSetId": 1
      },
      "lineNbr": 1410,
      "author": {
        "id": 5440
      },
      "writtenOn": "2019-08-05T20:22:08Z",
      "side": 1,
      "message": "(nit: \"adds\" was right here; not sure why I changed this. Will fix after trybots finish.)",
      "range": {
        "startLine": 1410,
        "startChar": 7,
        "endLine": 1410,
        "endChar": 10
      },
      "revId": "37a06557d3bcabfdecf066a45b02205cfa8412e0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2d5c04d_ef794f39",
        "filename": "src/cmd/compile/internal/gc/const.go",
        "patchSetId": 1
      },
      "lineNbr": 1410,
      "author": {
        "id": 5440
      },
      "writtenOn": "2019-08-05T20:34:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "582a52ea_ef44eef0",
      "range": {
        "startLine": 1410,
        "startChar": 7,
        "endLine": 1410,
        "endChar": 10
      },
      "revId": "37a06557d3bcabfdecf066a45b02205cfa8412e0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db850ca7_969120f9",
        "filename": "src/cmd/compile/internal/gc/const.go",
        "patchSetId": 1
      },
      "lineNbr": 1410,
      "author": {
        "id": 5137
      },
      "writtenOn": "2019-08-05T20:44:41Z",
      "side": 1,
      "message": "I think perhaps you thought it was a typo \"add adds\" :)",
      "parentUuid": "582a52ea_ef44eef0",
      "range": {
        "startLine": 1410,
        "startChar": 7,
        "endLine": 1410,
        "endChar": 10
      },
      "revId": "37a06557d3bcabfdecf066a45b02205cfa8412e0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28d48a86_ce753ec3",
        "filename": "src/cmd/compile/internal/gc/const.go",
        "patchSetId": 1
      },
      "lineNbr": 1479,
      "author": {
        "id": 5137
      },
      "writtenOn": "2019-08-05T20:44:41Z",
      "side": 1,
      "message": "Nice!",
      "revId": "37a06557d3bcabfdecf066a45b02205cfa8412e0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3696eb25_64921cdd",
        "filename": "test/fixedbugs/issue33460.go",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 5137
      },
      "writtenOn": "2019-08-05T20:44:41Z",
      "side": 1,
      "message": "While this is nice to ensure edits don\u0027t require also changing the error expectation,\nit might be better to hardcode a line number for easy auditing and also to ensure that we\nfail loudly.",
      "revId": "37a06557d3bcabfdecf066a45b02205cfa8412e0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "417758b0_eaeacdf7",
        "filename": "test/fixedbugs/issue33460.go",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 5440
      },
      "writtenOn": "2019-08-05T21:05:30Z",
      "side": 1,
      "message": "Sorry, I think I disagree. I think \"LINE-1\" is easier to review than hard coding \"issue33460:20\".\n\nI\u0027m not sure I understand your point about ensuring we fail loudly. \"LINE-n\" match failures fail just as loudly as any other.",
      "parentUuid": "3696eb25_64921cdd",
      "revId": "37a06557d3bcabfdecf066a45b02205cfa8412e0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55b8deb5_c2343e68",
        "filename": "test/fixedbugs/issue33460.go",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 5137
      },
      "writtenOn": "2019-08-05T20:44:41Z",
      "side": 1,
      "message": "Let\u0027s also add a test for map literals since the message now displays\nthe previous definition e.g.\n\nfunc mp() {\n\tconst s \u003d \"a\"\n\tm :\u003d map[string]int{\n\t\t\"a\": 10,\n\t\t\"b\": 11,\n\t\t\"a\": 12,\n\t\ts:   14,\n\t}\n\t_ \u003d m\n}",
      "revId": "37a06557d3bcabfdecf066a45b02205cfa8412e0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8faa214_c9ffc6cf",
        "filename": "test/fixedbugs/issue33460.go",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 5137
      },
      "writtenOn": "2019-08-05T20:48:37Z",
      "side": 1,
      "message": "Rather, I meant:\n\nfunc m() {\n\tconst s \u003d \"a\"\n\tm :\u003d map[string]int{\n\t\t\"a\": 10,\n\t\t\"b\": 11,\n\t\t\"a\": 12, // ERROR \"previous key at.+33\"\n\t\ts:   14, // ERROR \"previous key at.+33\"\n\t}\n\t_ \u003d m\n}",
      "parentUuid": "55b8deb5_c2343e68",
      "revId": "37a06557d3bcabfdecf066a45b02205cfa8412e0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d702363_59b3eff7",
        "filename": "test/fixedbugs/issue33460.go",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 5440
      },
      "writtenOn": "2019-08-05T21:05:30Z",
      "side": 1,
      "message": "Good idea. Done, slightly differently to exercise both references back to named and anonymous constant keys.",
      "parentUuid": "55b8deb5_c2343e68",
      "revId": "37a06557d3bcabfdecf066a45b02205cfa8412e0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d37a522_9cd09125",
        "filename": "test/fixedbugs/issue33460.go",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 5440
      },
      "writtenOn": "2019-08-05T21:06:19Z",
      "side": 1,
      "message": "[Forgot to mark resolved.]",
      "parentUuid": "1d702363_59b3eff7",
      "revId": "37a06557d3bcabfdecf066a45b02205cfa8412e0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}