{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "510c348c_f2032498",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 6320
      },
      "writtenOn": "2021-03-16T21:42:23Z",
      "side": 1,
      "message": "I think this is a little misleading because the problem is not limited to the GCC thread sanitizer. I think it could happen when linking Go code with any C library if it used enough TLS. So you are not just fixing the GCC thread sanitizer testcase but possibly other Go programs linking against C libraries using cgo.",
      "revId": "711a0b566632709b1b2c87b43662dce565a74627",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4af8e1fb_7e7fe8d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 6320
      },
      "writtenOn": "2021-03-16T21:42:23Z",
      "side": 1,
      "message": "Instead of saying \"replace the usage\" I think this might be a bit clearer to say you are changing the mapping of R_POWER_TLS_LE from R_PPC64_TPREL16 to the pair R_PPC64_TPREL16_HA/LO. This allows for 32 bit relocation instead of only 16.",
      "revId": "711a0b566632709b1b2c87b43662dce565a74627",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "becad732_e221bf0e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 6320
      },
      "writtenOn": "2021-03-16T21:42:23Z",
      "side": 1,
      "message": "What shared code do you mean? Code compiled with -shared or code that is common to several uses.",
      "revId": "711a0b566632709b1b2c87b43662dce565a74627",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ada3272_9231f0e7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 6320
      },
      "writtenOn": "2021-03-16T21:42:23Z",
      "side": 1,
      "message": "For your last sentence, you are referring to AIX, right? Do they only create static binaries?",
      "revId": "711a0b566632709b1b2c87b43662dce565a74627",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d50bc2d_b9a54ff9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 6320
      },
      "writtenOn": "2021-03-16T21:42:23Z",
      "side": 1,
      "message": "We still see one error on this test after this fix goes in I believe. Use \u0027Updates\u0027 instead of \u0027Fixes\u0027 so the issue doesn\u0027t close and we can address the other error.",
      "revId": "711a0b566632709b1b2c87b43662dce565a74627",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb90ed4c_40c062f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 36863
      },
      "writtenOn": "2021-03-16T19:03:36Z",
      "side": 1,
      "message": "TRY\u003dppc64,ppc64le,aix-ppc64,linux-ppc64le-power9osu",
      "revId": "711a0b566632709b1b2c87b43662dce565a74627",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baf2ff89_85bbc75b",
        "filename": "src/runtime/race_ppc64le.s",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 6320
      },
      "writtenOn": "2021-03-16T21:42:23Z",
      "side": 1,
      "message": "I don\u0027t think this is just an offset to TLS anymore. R10 now contains the full address of the tls_g slot including the R13 value.",
      "revId": "711a0b566632709b1b2c87b43662dce565a74627",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}