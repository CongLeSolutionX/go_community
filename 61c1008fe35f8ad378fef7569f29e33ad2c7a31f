{
  "comments": [
    {
      "key": {
        "uuid": "83a9b87e_fd35d218",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 5137
      },
      "writtenOn": "2020-09-08T03:24:56Z",
      "side": 1,
      "message": "We don\u0027t use Markdown in Go CL messages, despite them coming from Github, perhaps:\n\nAllows users to check:\n    errors.Is(err, \u0026json.SyntaxError{})\nwhich is the recommended way of checking for kinds of errors.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 121
      },
      "revId": "61c1008fe35f8ad378fef7569f29e33ad2c7a31f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6abea6b_ce421384",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13550
      },
      "writtenOn": "2020-09-06T10:17:48Z",
      "side": 1,
      "message": "I started reviewing this and was about to argue about the API design, but then thought that GitHub would be a better place to do so: https://github.com/golang/go/issues/5901#issuecomment-687747107",
      "revId": "61c1008fe35f8ad378fef7569f29e33ad2c7a31f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc4dcaf6_a33ffb2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13550
      },
      "writtenOn": "2020-09-06T10:18:13Z",
      "side": 1,
      "message": "Eugh, completely wrong CL, I\u0027m sorry. This was meant for https://go-review.googlesource.com/c/go/+/212998.",
      "revId": "61c1008fe35f8ad378fef7569f29e33ad2c7a31f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e37ee4a0_dd94d0d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2020-09-08T03:24:56Z",
      "side": 1,
      "message": "Great to catch you here, Carlos! I\u0027ve made a suggestion here about the code, please take a look and thank you.",
      "revId": "61c1008fe35f8ad378fef7569f29e33ad2c7a31f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94eef479_b74bed5e",
        "filename": "src/encoding/json/scanner_test.go",
        "patchSetId": 1
      },
      "lineNbr": 200,
      "author": {
        "id": 5137
      },
      "writtenOn": "2020-09-08T03:24:56Z",
      "side": 1,
      "message": "Perhaps let\u0027s make this reflect usage of wrapping, but also the second one is unnecessary\nas it would be a unit test for errors.Is not related to SyntaxError:\n\n  ierr :\u003d fmt.Errorf(\"apackage: %w: failed to parse struct\", \u0026SyntaxError{\"some error\", 43})\n  if !errors.Is(err, \u0026SyntaxError{}) {\n     t.Fatalf(\"%v should be unwrapped to a SyntaxError\", err)\n  }",
      "range": {
        "startLine": 193,
        "startChar": 1,
        "endLine": 200,
        "endChar": 2
      },
      "revId": "61c1008fe35f8ad378fef7569f29e33ad2c7a31f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}