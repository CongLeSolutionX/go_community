{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "511d0d5c_c3d00835",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-11T13:52:02Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003de3f7dd5b\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "e3f7dd5bd584f542dd9ffd944cb6165888395ddc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f740e77_03d0011d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-11T13:52:02Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "fe39cd07_757f435f",
      "tag": "autogenerated:trybots~beginning",
      "revId": "e3f7dd5bd584f542dd9ffd944cb6165888395ddc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c8d7785_a160d15d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-11T14:00:45Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003de3f7dd5b\nFailed on windows-386-2016: https://storage.googleapis.com/go-build-log/e3f7dd5b/windows-386-2016_355b8cb2.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "511d0d5c_c3d00835",
      "tag": "autogenerated:trybots~progress",
      "revId": "e3f7dd5bd584f542dd9ffd944cb6165888395ddc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfaf88e8_f1695ced",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-11T14:04:01Z",
      "side": 1,
      "message": "1 of 45 TryBots failed.\nFailed on windows-386-2016: https://storage.googleapis.com/go-build-log/e3f7dd5b/windows-386-2016_355b8cb2.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "511d0d5c_c3d00835",
      "tag": "autogenerated:trybots~failed",
      "revId": "e3f7dd5bd584f542dd9ffd944cb6165888395ddc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ff1a0a9_cd998747",
        "filename": "src/syscall/syscall_windows.go",
        "patchSetId": 10
      },
      "lineNbr": 89,
      "author": {
        "id": 34993
      },
      "writtenOn": "2023-05-11T14:22:45Z",
      "side": 1,
      "message": "@bcmills@google.com any idea of how to make `unsafe.Slice(p, 1\u003c\u003c31-1)` happy on 32-bits? Is this even legit?",
      "revId": "e3f7dd5bd584f542dd9ffd944cb6165888395ddc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37775b6d_2394bf83",
        "filename": "src/syscall/syscall_windows.go",
        "patchSetId": 10
      },
      "lineNbr": 89,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-11T16:26:46Z",
      "side": 1,
      "message": "It\u0027s not possible to use `unsafe.Slice` unless you know the exact length.\n\nI guess we could just scan the string twice? It\u0027s already in cache for short strings, and for long strings the overhead of doing the double-scan is probably still better than the overhead to copy the slice during a realloc. ðŸ˜…\n\n```\n\tend :\u003d unsafe.Pointer(p)\n\tn :\u003d 0\n\tfor *(*uint16)(end) !\u003d 0 {\n\t\tend \u003d unsafe.Pointer(uintptr(end) + unsafe.Sizeof(*p))\n\t\tn++\n\t}\n\treturn UTF16ToString(unsafe.Slice(p, n))\n```\n\nLooks like the unexported `utf16PtrToString` is only used in `(*SID).String` anyway.",
      "parentUuid": "4ff1a0a9_cd998747",
      "revId": "e3f7dd5bd584f542dd9ffd944cb6165888395ddc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67e62f7b_a05a14b4",
        "filename": "src/syscall/wtf8_windows.go",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-11T14:29:45Z",
      "side": 1,
      "message": "Since the caller sums up `runeLen` to figure out the length to allocate, I think it would be cleaner not to allow `runeLen` to ever return -1.\n\n(It never does for any `rune` derived from a `uint16` code unit, but that fact is not locally obvious here.)",
      "revId": "e3f7dd5bd584f542dd9ffd944cb6165888395ddc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20d4d3f6_b6672547",
        "filename": "src/syscall/wtf8_windows.go",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 34993
      },
      "writtenOn": "2023-05-11T15:27:03Z",
      "side": 1,
      "message": "Having this logic in a separate function adds more complexity than it solves, will move it back to `UTF16ToString`",
      "parentUuid": "67e62f7b_a05a14b4",
      "revId": "e3f7dd5bd584f542dd9ffd944cb6165888395ddc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}