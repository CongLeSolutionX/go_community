{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "674deea6_01e76b17",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-01-10T21:22:07Z",
      "side": 1,
      "message": "Does this make a difference on any benchmarks?",
      "revId": "ab318aa1e9d44e0cadccb965b8a65df635bef227",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf7bf2f6_b418b69d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 55528
      },
      "writtenOn": "2022-01-14T00:43:10Z",
      "side": 1,
      "message": "Hey Ian,\n\nI think it is slightly faster when you skip the copy.\n\n```\npackage some_test\n\nimport (\n\t\"testing\"\n)\n\ntype sometest struct {\n\tb []byte\n\tr int\n\tw int\n}\n\nfunc BenchmarkSkip(b *testing.B) {\n\tvar t \u003d sometest{\n\t\tb: make([]byte, 4096),\n\t\tr: 42,\n\t\tw: 42,\n\t}\n\n\tfor i :\u003d 0; i \u003c 4e9; i++ {\n\t\tif t.r !\u003d t.w {\n\t\t\tcopy(t.b, t.b[t.r:t.w])\n\t\t}\n\t}\n}\n\nfunc BenchmarkCopy(b *testing.B) {\n\tvar t \u003d sometest{\n\t\tb: make([]byte, 4096),\n\t\tr: 42,\n\t\tw: 42,\n\t}\n\n\tfor i :\u003d 0; i \u003c 4e9; i++ {\n\t\tcopy(t.b, t.b[t.r:t.w])\n\t}\n}\n\n```\n\nI get similar results consistently:\n\n```\ncpu: Intel(R) Core(TM) i7-4770HQ CPU @ 2.20GHz\nBenchmarkSkip-8                1        1806765449 ns/op\nBenchmarkCopy-8                1        10831641555 ns/op\n```",
      "parentUuid": "674deea6_01e76b17",
      "revId": "ab318aa1e9d44e0cadccb965b8a65df635bef227",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af1b4919_1077e42c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-01-14T18:33:40Z",
      "side": 1,
      "message": "Thanks, but that is not a benchmark for the code that is being changed here.  The bufio package already has benchmarks.  Does this change make any change in those benchmarks?  Or can you add a new benchmark in this change that shows a difference.  Thanks.",
      "parentUuid": "cf7bf2f6_b418b69d",
      "revId": "ab318aa1e9d44e0cadccb965b8a65df635bef227",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecdd60fb_e3540c83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 55528
      },
      "writtenOn": "2022-01-19T08:16:49Z",
      "side": 1,
      "message": "Hey Ian,\n\nThis should only potentially be a problem if the buffer is too small. I noticed  benchmarks don\u0027t cover this case, but after trying couple of times I couldn\u0027t see a big difference. When the if condition is added, it\u0027s faster but it\u0027s almost unnoticeable for a benchmark that could finish in reasonable time. If I try with  larger data and smaller buffers, the difference increases then. But not sure if those scenarios are very realistic. For the default buffer size, the difference is unnoticeable on my machine.",
      "parentUuid": "af1b4919_1077e42c",
      "revId": "ab318aa1e9d44e0cadccb965b8a65df635bef227",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a7cd00c_b56a0d2a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-01-19T21:49:50Z",
      "side": 1,
      "message": "Thanks.  If the change is not noticeable in practice then I don\u0027t think we should make this change, as the current code is simpler.",
      "parentUuid": "ecdd60fb_e3540c83",
      "revId": "ab318aa1e9d44e0cadccb965b8a65df635bef227",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}