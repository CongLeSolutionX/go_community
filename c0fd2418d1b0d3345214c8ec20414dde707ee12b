{
  "comments": [
    {
      "key": {
        "uuid": "02f5a7ef_bb18c600",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 28
      },
      "lineNbr": 739,
      "author": {
        "id": 5200
      },
      "writtenOn": "2019-10-28T17:45:22Z",
      "side": 1,
      "message": "This type isn\u0027t used in any runtime API - should it just live in the test files?",
      "revId": "c0fd2418d1b0d3345214c8ec20414dde707ee12b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbf9fe9c_966a87f7",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 28
      },
      "lineNbr": 739,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-28T18:37:26Z",
      "side": 1,
      "message": "this one was kind of a pickle.\n\nideally yes, it would just live in test files (and it used to), but 2 CLs from now we want to be able to initialize a pageAlloc struct without reaching down into details in test files.\n\nI don\u0027t know what the right thing to do about that is.",
      "parentUuid": "02f5a7ef_bb18c600",
      "revId": "c0fd2418d1b0d3345214c8ec20414dde707ee12b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37765f3d_00498751",
        "filename": "src/runtime/mallocbits.go",
        "patchSetId": 28
      },
      "lineNbr": 16,
      "author": {
        "id": 5200
      },
      "writtenOn": "2019-10-28T17:45:22Z",
      "side": 1,
      "message": "The math here will compile better if you use uint instead of int.\n(Or use \u003e\u003e6 and \u002663)",
      "revId": "c0fd2418d1b0d3345214c8ec20414dde707ee12b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dba0a28d_e975f102",
        "filename": "src/runtime/mallocbits.go",
        "patchSetId": 28
      },
      "lineNbr": 93,
      "author": {
        "id": 5200
      },
      "writtenOn": "2019-10-28T17:45:22Z",
      "side": 1,
      "message": "duplicate \"as well as\"",
      "range": {
        "startLine": 93,
        "startChar": 45,
        "endLine": 93,
        "endChar": 57
      },
      "revId": "c0fd2418d1b0d3345214c8ec20414dde707ee12b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "751856b8_9dc8e89f",
        "filename": "src/runtime/mallocbits.go",
        "patchSetId": 28
      },
      "lineNbr": 102,
      "author": {
        "id": 5200
      },
      "writtenOn": "2019-10-28T17:45:22Z",
      "side": 1,
      "message": "s/that index/the index returned as the first result/",
      "range": {
        "startLine": 102,
        "startChar": 69,
        "endLine": 102,
        "endChar": 73
      },
      "revId": "c0fd2418d1b0d3345214c8ec20414dde707ee12b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcfb7d33_50ac3b0d",
        "filename": "src/runtime/mallocbits.go",
        "patchSetId": 28
      },
      "lineNbr": 143,
      "author": {
        "id": 5200
      },
      "writtenOn": "2019-10-28T17:45:22Z",
      "side": 1,
      "message": "You might as well call this newSearchIdx.",
      "range": {
        "startLine": 143,
        "startChar": 6,
        "endLine": 143,
        "endChar": 16
      },
      "revId": "c0fd2418d1b0d3345214c8ec20414dde707ee12b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b6e4bad_c9c1f705",
        "filename": "src/runtime/mallocbits.go",
        "patchSetId": 28
      },
      "lineNbr": 202,
      "author": {
        "id": 5200
      },
      "writtenOn": "2019-10-28T17:45:22Z",
      "side": 1,
      "message": "You could just return start, nSearchIdx here.",
      "revId": "c0fd2418d1b0d3345214c8ec20414dde707ee12b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eec66687_d7deec74",
        "filename": "src/runtime/mallocbits.go",
        "patchSetId": 28
      },
      "lineNbr": 244,
      "author": {
        "id": 5200
      },
      "writtenOn": "2019-10-28T17:45:22Z",
      "side": 1,
      "message": "\u003e\u003d ?",
      "range": {
        "startLine": 244,
        "startChar": 56,
        "endLine": 244,
        "endChar": 57
      },
      "revId": "c0fd2418d1b0d3345214c8ec20414dde707ee12b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae221587_377865d1",
        "filename": "src/runtime/mallocbits_test.go",
        "patchSetId": 28
      },
      "lineNbr": 38,
      "author": {
        "id": 5200
      },
      "writtenOn": "2019-10-28T17:45:22Z",
      "side": 1,
      "message": "You an define BitRange here.",
      "revId": "c0fd2418d1b0d3345214c8ec20414dde707ee12b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}