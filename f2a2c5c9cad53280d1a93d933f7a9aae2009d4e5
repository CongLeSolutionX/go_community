{
  "comments": [
    {
      "key": {
        "uuid": "12f62bf6_ffb80f6d",
        "filename": "src/internal/poll/fd_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 757,
      "author": {
        "id": 5340
      },
      "writtenOn": "2018-08-14T10:45:39Z",
      "side": 1,
      "message": "FD.Pwrite implements the io.WriterAt, and follows the same convention (errors only if less bytes were written). \n\nBut I have two confusing data points to add: first, os/(*File).WriteAt does a loop to write all bytes, so it looks like the underlying implementation shouldn\u0027t do that (not sure why os/(*File).WriteAt loops, while os/(*File).Write doesn\u0027t); second, (*FD).Pwrite in fd_unix.go loops as well, even though it would look like it\u0027s not required? Maybe Ian can help here?",
      "revId": "f2a2c5c9cad53280d1a93d933f7a9aae2009d4e5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5c740e4_be0646d6",
        "filename": "src/internal/poll/fd_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 807,
      "author": {
        "id": 5340
      },
      "writtenOn": "2018-08-14T10:45:39Z",
      "side": 1,
      "message": "io.WriterTo also has the same guarantees, so it looks like this needs to loop as well.",
      "revId": "f2a2c5c9cad53280d1a93d933f7a9aae2009d4e5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15f007a8_dda412d9",
        "filename": "src/internal/poll/fd_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 1063,
      "author": {
        "id": 5340
      },
      "writtenOn": "2018-08-14T10:45:39Z",
      "side": 1,
      "message": "Not sure about WriteMsg, but I wouldn\u0027t be surprised if most Write* interfaces follow the io.Writer convention.",
      "revId": "f2a2c5c9cad53280d1a93d933f7a9aae2009d4e5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}