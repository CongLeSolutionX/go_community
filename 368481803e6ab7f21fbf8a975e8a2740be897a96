{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5d0828d3_db13db6d",
        "filename": "src/cmd/asm/internal/asm/testdata/ppc64.s",
        "patchSetId": 4
      },
      "lineNbr": 696,
      "author": {
        "id": 36863
      },
      "writtenOn": "2024-11-07T20:34:11Z",
      "side": 1,
      "message": "For the quadword variant instructions, only even value registers are valid (despite the opcode being able to encode odd value). These are even+odd register pairs.\n\nI think you can add new optab entries for these instructions, but use the existing type_ case in asmout. The C_FREGP operand class accepts exactly these types of instruction.",
      "range": {
        "startLine": 696,
        "startChar": 1,
        "endLine": 696,
        "endChar": 6
      },
      "revId": "368481803e6ab7f21fbf8a975e8a2740be897a96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe616731_bcc61aaa",
        "filename": "src/cmd/asm/internal/asm/testdata/ppc64.s",
        "patchSetId": 4
      },
      "lineNbr": 696,
      "author": {
        "id": 65933
      },
      "writtenOn": "2024-11-13T09:52:46Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "5d0828d3_db13db6d",
      "range": {
        "startLine": 696,
        "startChar": 1,
        "endLine": 696,
        "endChar": 6
      },
      "revId": "368481803e6ab7f21fbf8a975e8a2740be897a96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4458552_145d6abf",
        "filename": "src/cmd/asm/internal/asm/testdata/ppc64.s",
        "patchSetId": 4
      },
      "lineNbr": 794,
      "author": {
        "id": 36863
      },
      "writtenOn": "2024-11-07T20:34:11Z",
      "side": 1,
      "message": "See cmd/asm/internal/arch/ppc64.s `IsPPC64CMP`. I think these need added there too. That is a historical quirk when the CR target is specified. You can test by adding a few cases like `DCMPU F0, F1, CR2`",
      "range": {
        "startLine": 794,
        "startChar": 1,
        "endLine": 794,
        "endChar": 6
      },
      "revId": "368481803e6ab7f21fbf8a975e8a2740be897a96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40df6ffd_4f1cc04f",
        "filename": "src/cmd/asm/internal/asm/testdata/ppc64.s",
        "patchSetId": 4
      },
      "lineNbr": 794,
      "author": {
        "id": 65933
      },
      "writtenOn": "2024-11-13T09:52:46Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a4458552_145d6abf",
      "range": {
        "startLine": 794,
        "startChar": 1,
        "endLine": 794,
        "endChar": 6
      },
      "revId": "368481803e6ab7f21fbf8a975e8a2740be897a96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}