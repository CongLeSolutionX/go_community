{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f837c589_dd8ec8bd",
        "filename": "src/syscall/dirent.go",
        "patchSetId": 11
      },
      "lineNbr": 5,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "Is there a reason to specify \"wasip1 \u0026\u0026 wasm\"?  It seems to me that we could just say \"wasip1\".  It doesn\u0027t seem to make sense to speak of wasip1 without wasm.  And even if it somehow did, we would probably still want to compile this file.\n\nAdmittedly I don\u0027t know why we say \"js \u0026\u0026 wasm\" rather than just \"js\".",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d58ff822_e0290a49",
        "filename": "src/syscall/dirent.go",
        "patchSetId": 11
      },
      "lineNbr": 5,
      "author": {
        "id": 12980
      },
      "writtenOn": "2023-04-03T04:40:11Z",
      "side": 1,
      "message": "The only reason was to maintain consistency with the historical \"js \u0026\u0026 wasm\" pattern, tho admittedly we may not have done it thoroughly.\n\nI agree that the redundancy is unnecessary and sometimes distracting, we can unify everything to only test for \"js\", \"wasip1\", or \"wasm\" where meaningful.",
      "parentUuid": "f837c589_dd8ec8bd",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f4598d5_c6320125",
        "filename": "src/syscall/dirent.go",
        "patchSetId": 11
      },
      "lineNbr": 5,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T22:25:17Z",
      "side": 1,
      "message": "Let\u0027s do just waspi1 where appropriate, which is most places.  We can worry about js later.",
      "parentUuid": "d58ff822_e0290a49",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ea80ae5_eedbdeb9",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 14,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "Why use type aliases here?",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e13fa4f_f9afe95f",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 14,
      "author": {
        "id": 12980
      },
      "writtenOn": "2023-04-03T04:40:11Z",
      "side": 1,
      "message": "The types come from the WASI spec https://github.com/WebAssembly/WASI/blob/main/legacy/preview1/docs.md\n\nWe declared them as aliases because it reduces the binary footprint compared to declaring types (assuming due to reflection data that does not get generated). We measured on the compiled tests which were ~5% smaller with type aliases.",
      "parentUuid": "3ea80ae5_eedbdeb9",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a4dc506_76b19e37",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 14,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T22:25:17Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7e13fa4f_f9afe95f",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df07cc99_a584f359",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "Why the leading double underscore on these names?  Are we matching names defined somewhere else?",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "193e1296_3d25911f",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 12980
      },
      "writtenOn": "2023-04-03T04:40:11Z",
      "side": 1,
      "message": "This was part of the original change we inherited and based this work on. I believe it came from translating the code in wasi-libc.",
      "parentUuid": "df07cc99_a584f359",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cae3d6fc_d06af56e",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T22:25:17Z",
      "side": 1,
      "message": "If there isn\u0027t a good reason to keep the leading underscores, let\u0027s drop them.  Thanks.",
      "parentUuid": "193e1296_3d25911f",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8eee9379_910eea4c",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 124,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "Don\u0027t add line breaks to the function declarations here and below.  We don\u0027t usually do that.",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8341564b_3c3ac983",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 124,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T22:25:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8eee9379_910eea4c",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fa3da61_94d769d6",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 356,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "s/other others/others/",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c419a14d_a2c7d0c6",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 356,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T22:25:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3fa3da61_94d769d6",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f790a8dc_50aade41",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 374,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "Use :\u003d rather than a var statement.",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4101307_713f6f60",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 374,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T22:25:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f790a8dc_50aade41",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b318b54e_d817e223",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 413,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "This isn\u0027t a conventional three-part for loop.  I think it would be clearer to write it as\n\n    i :\u003d 0\n    for i \u003c len(path) {",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "594e68ee_a9db24d0",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 413,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T22:25:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b318b54e_d817e223",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b918dcae_1307f31a",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 489,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "No need to check len(buf) \u003e 0 here, you ensured above that it that is always true.",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20d58ec2_cf05c795",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 489,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T22:25:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b918dcae_1307f31a",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58b1d3c9_3cec4d26",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 492,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "Write this as\n\n    return unsafe.String(\u0026buf[0], len(buf))",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96b09482_46d4fcd1",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 492,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T22:25:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "58b1d3c9_3cec4d26",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e3a93af_3b13aadb",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 511,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "This function is complex enough to need a doc comment.",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64afe74b_4677c019",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 511,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T22:25:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e3a93af_3b13aadb",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dad30cb_3107a5a2",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "Should this be exported?  If it should, it needs a doc comment.",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d1c2e07_a53e9f15",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T22:25:17Z",
      "side": 1,
      "message": "Thanks for writing the doc comment.  Next question: why should we export this function from the syscall package when it is not available on any other platform?",
      "parentUuid": "5dad30cb_3107a5a2",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec41f42d_febc78f7",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 12980
      },
      "writtenOn": "2023-04-04T02:06:04Z",
      "side": 1,
      "message": "It is exported to support the way we emulate the working directory. WASI does not have the concept of working directory so we implement it by keeping a global variable (syscall.cwd).\n\nOn other operating systems which have the concept of working directory, os.(*File).Chdir can be implemented by a call to syscall.Fchdir, but in WASI syscall.Fchdir does not exist and instead we implement os.(*File).Chdir by passing the file\u0027s absolute path to syscall.Chdir. As now documented, the file\u0027s absolute path is the string returned by syscall.PathOpen.\n\nAn alternative approach could consist in keeping a global map of open file descriptors to their absolute path in the syscall package, and implement syscall.Fchdir by looking up the file path associated with the file descriptor. I didn\u0027t know which trade off would cause the fewer issues down the line, but I had to pick a solution so I went with exporting this new function since the syscall package is not really intended to be used outside of the standard library, it seemed like it would avoid any issues that the global map could cause at runtime.\n\nLet me know if you think a different approach would make more sense.",
      "parentUuid": "8d1c2e07_a53e9f15",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e34777b5_a11034ba",
        "filename": "src/syscall/os_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 1,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "Missing copyright header.",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "802e7b7c_d26f3e0e",
        "filename": "src/syscall/os_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 4,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "Omit the line breaks.",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48665bf7_d9377356",
        "filename": "src/syscall/rlimit_test.go",
        "patchSetId": 11
      },
      "lineNbr": 14,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "This test doesn\u0027t try to set the rlimit, and should run on all systems.  Does it fail on wasip1?  How?",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd27efda_962c9822",
        "filename": "src/syscall/syscall_wasip1.go",
        "patchSetId": 11
      },
      "lineNbr": 15,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-03T01:24:58Z",
      "side": 1,
      "message": "Why type aliases?",
      "revId": "3a70e266c39315db408a51eae5ce82bdf2c26f8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}