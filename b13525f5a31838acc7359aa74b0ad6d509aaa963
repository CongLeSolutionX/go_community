{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e31bb0e8_417f4a9f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 34993
      },
      "writtenOn": "2023-02-28T16:02:59Z",
      "side": 1,
      "message": "This is ready to review.",
      "revId": "b13525f5a31838acc7359aa74b0ad6d509aaa963",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27638a84_bf34252a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-28T16:03:15Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003db13525f5\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "b13525f5a31838acc7359aa74b0ad6d509aaa963",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5446d3f7_0b63b50a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-28T16:21:17Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* windows-amd64-2012\n* windows-amd64-longtest\n* windows-arm64-11\n",
      "parentUuid": "27638a84_bf34252a",
      "tag": "autogenerated:trybots~happy",
      "revId": "b13525f5a31838acc7359aa74b0ad6d509aaa963",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88c39244_fb78141f",
        "filename": "src/runtime/sys_windows_arm.s",
        "patchSetId": 10
      },
      "lineNbr": 240,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-02-28T17:38:25Z",
      "side": 1,
      "message": "This function can tail call in the useQPC case. Does it work correctly if this function has a frame? No one would clean up the frame if it tail calls.",
      "revId": "b13525f5a31838acc7359aa74b0ad6d509aaa963",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbb5e126_0c39cc8b",
        "filename": "src/runtime/sys_windows_arm.s",
        "patchSetId": 10
      },
      "lineNbr": 240,
      "author": {
        "id": 34993
      },
      "writtenOn": "2023-02-28T18:25:56Z",
      "side": 1,
      "message": "This function doesn\u0027t need a frame, so it works well. Which should be the policy for frameless pseudo-leaf functions that tail call, and that are not just a dummy trampoline? Using NOFRAME can be misleading, as it\u0027s not that it can\u0027t work with a frame but that if it has a frame it has to be explicitly popped.\n\nIdeally, the compiler would detect jumps to addresses outside the current function and insert a `POP BP` instruction just before the jump, but that\u0027s not there atm.",
      "parentUuid": "88c39244_fb78141f",
      "revId": "b13525f5a31838acc7359aa74b0ad6d509aaa963",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d371649e_f159f96a",
        "filename": "src/runtime/sys_windows_arm64.s",
        "patchSetId": 10
      },
      "lineNbr": 257,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-02-28T17:38:25Z",
      "side": 1,
      "message": "Same here.",
      "revId": "b13525f5a31838acc7359aa74b0ad6d509aaa963",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c936dcc_4b5d2f2d",
        "filename": "src/runtime/time_windows_arm.s",
        "patchSetId": 10
      },
      "lineNbr": 11,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-02-28T17:38:25Z",
      "side": 1,
      "message": "Same here.",
      "revId": "b13525f5a31838acc7359aa74b0ad6d509aaa963",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db4f663c_05feef13",
        "filename": "src/runtime/time_windows_arm64.s",
        "patchSetId": 10
      },
      "lineNbr": 46,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-02-28T17:38:25Z",
      "side": 1,
      "message": "Same here.",
      "revId": "b13525f5a31838acc7359aa74b0ad6d509aaa963",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}