{
  "comments": [
    {
      "key": {
        "uuid": "875b9b97_e37078cb",
        "filename": "src/cmd/compile/internal/gc/sinit.go",
        "patchSetId": 6
      },
      "lineNbr": 531,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-04-28T20:01:28Z",
      "side": 1,
      "message": "This feels clumsy to me, but I can believe it\u0027s the best solution given the current state of sinit.go:\n\n- Minor: \"a.Sym\" might be nil depending on \"a.Op\" (e.g., if it\u0027s OINDEX). IsBlank() handles that, but generally it\u0027s best to avoid accessing Node fields unless you know it has the same meaning for all possible Ops. I think a safer test here would be \"a \u003d\u003d nblank\".\n\n- More generally: I suspsect \"candiscard(value)\" is too course-grained a check. For example, \"_ \u003d T{42, f()}\" should optimize to just \"f()\" (i.e., discard the \"_.1 \u003d 42\" assignment, but keep the \"_.2 \u003d f()\" assignment, just without any result destination).\n\nI\u0027ll take another look once I\u0027m done with the cmd/cgo CLs.",
      "revId": "441fa5a9844a4fa92520dfc7df0b46962723bafc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7c49f2d_d0e89fdf",
        "filename": "src/cmd/compile/internal/gc/sinit.go",
        "patchSetId": 6
      },
      "lineNbr": 531,
      "author": {
        "id": 14665
      },
      "writtenOn": "2020-04-29T03:37:46Z",
      "side": 1,
      "message": "\u003e I think a safer test here would be \"a \u003d\u003d nblank\".\n\nFixed üëç\n\n\u003e _ \u003d T{42, f()}\" should optimize to just \"f()\" (i.e., discard the \"_.1 \u003d 42\n\nHmm, if that\u0027s the case, seems it\u0027 back to the first fix, if a \u003d\u003d nblank { kind \u003d initKindDynamic }, as we want to initialize dynamic part, not static part in this case.",
      "parentUuid": "875b9b97_e37078cb",
      "revId": "441fa5a9844a4fa92520dfc7df0b46962723bafc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f30898c_841cc301",
        "filename": "src/cmd/compile/internal/gc/sinit.go",
        "patchSetId": 6
      },
      "lineNbr": 531,
      "author": {
        "id": 14665
      },
      "writtenOn": "2020-04-29T04:07:24Z",
      "side": 1,
      "message": "Ah wait, seems there\u0027s confused. The error in this CL is from generated code like:\n\n_.x \u003d 1\n\nnot assigning to blank. When facing blank field with struct/array type, we recursively call fixedlit, with \"var_\" is `_\", so splitnode return \"_.x\". And since when this is initKindLocal, the \"a \u003d typecheck(a, ctxStmt)\" raises the error.",
      "parentUuid": "f7c49f2d_d0e89fdf",
      "revId": "441fa5a9844a4fa92520dfc7df0b46962723bafc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}