{
  "comments": [
    {
      "key": {
        "uuid": "e073a236_5de724ae",
        "filename": "src/cmd/go/internal/load/pkg.go",
        "patchSetId": 4
      },
      "lineNbr": 398,
      "author": {
        "id": 10033
      },
      "writtenOn": "2020-02-05T19:48:59Z",
      "side": 1,
      "message": "There\u0027s something strange about this to me. \"command-line-arguments\" is the package path of a package composed of files provided to cmd/go on the command line. So it\u0027s just a regular entry here.\n\nAlso, does ImportStack consist of import paths? I thought it would be package paths.",
      "revId": "a0b11ed8d0cb843a2da34b4baded9a735c69ded4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7534d4a4_a88bc483",
        "filename": "src/cmd/go/internal/load/test.go",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 10033
      },
      "writtenOn": "2020-02-05T19:48:59Z",
      "side": 1,
      "message": "maybe one of the examples shouldn\u0027t have command-line-arguments at the top?",
      "range": {
        "startLine": 59,
        "startChar": 3,
        "endLine": 61,
        "endChar": 73
      },
      "revId": "a0b11ed8d0cb843a2da34b4baded9a735c69ded4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be770603_8ffa560d",
        "filename": "src/cmd/go/internal/load/test.go",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 10033
      },
      "writtenOn": "2020-02-05T19:48:59Z",
      "side": 1,
      "message": "Could we modify the comment to specify why we\u0027re checking the second highest index? Also, what makes command-line-arguments special here? We should have a comment about that.",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 66,
        "endChar": 92
      },
      "revId": "a0b11ed8d0cb843a2da34b4baded9a735c69ded4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70139e36_599ae8c6",
        "filename": "src/cmd/go/internal/load/test.go",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 17092
      },
      "writtenOn": "2020-02-05T19:56:48Z",
      "side": 1,
      "message": "I\u0027m not sure command-line-arguments is special here. The original issue described a test package specified as .go files, but this also comes up when the package path is written normally on the command line.",
      "parentUuid": "be770603_8ffa560d",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 66,
        "endChar": 92
      },
      "revId": "a0b11ed8d0cb843a2da34b4baded9a735c69ded4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27397b96_9c36537f",
        "filename": "src/cmd/go/internal/load/test.go",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 34965
      },
      "writtenOn": "2020-02-05T21:05:16Z",
      "side": 1,
      "message": "for what it\u0027s worth, the string \"command-line-arguments\" appears hard-coded several times in this package. I could not find any comments that explained what it means or what its significance is. Without the check for this, the script test I added fails.\n\nIf you\u0027d like me to add some documentation, I\u0027d be happy to add that! But I\u0027m not familiar with this code, so not sure what it would say.",
      "parentUuid": "70139e36_599ae8c6",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 66,
        "endChar": 92
      },
      "revId": "a0b11ed8d0cb843a2da34b4baded9a735c69ded4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d069c2cd_736565ba",
        "filename": "src/cmd/go/internal/load/test.go",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-02-05T21:12:26Z",
      "side": 1,
      "message": "I agree that command-line-arguments should not be special here.\n\nGenerally users should be running `go vet` on a complete package, not a specific _test.go file.\n\nIf need be, update the script test. (It\u0027s fine to test `go vet` with an explicit _test.go argument, but it\u0027s also fine for the output to be a bit wonky in that case. For `go vet` with a package argument, the output should be clean.)",
      "parentUuid": "27397b96_9c36537f",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 66,
        "endChar": 92
      },
      "revId": "a0b11ed8d0cb843a2da34b4baded9a735c69ded4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8e98a1e_0e04df02",
        "filename": "src/cmd/go/internal/load/test.go",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 34965
      },
      "writtenOn": "2020-02-06T04:09:12Z",
      "side": 1,
      "message": "@Bryan: thanks for this comment! it helped a lot to clarify some things about how this is expected to behave. for what it\u0027s worth, the bug was introduced in Go 1.13 and happens even if you use a package argument (see this comment https://github.com/golang/go/issues/36173#issuecomment-581097562)",
      "parentUuid": "d069c2cd_736565ba",
      "range": {
        "startLine": 64,
        "startChar": 3,
        "endLine": 66,
        "endChar": 92
      },
      "revId": "a0b11ed8d0cb843a2da34b4baded9a735c69ded4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}