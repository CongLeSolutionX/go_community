{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "723286b9_f592d7c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T04:57:26Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d94bb6477\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "94bb64779c32642068fcea3a53cd55ec3b47e8e7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "120b10de_59f3f02a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T06:35:46Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d94bb6477\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "94bb64779c32642068fcea3a53cd55ec3b47e8e7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f23196ff_c6f0d671",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T06:35:46Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "723286b9_f592d7c1",
      "tag": "autogenerated:trybots~beginning",
      "revId": "94bb64779c32642068fcea3a53cd55ec3b47e8e7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec3ed819_ccb24d88",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T07:55:46Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-riscv64-unmatched\n",
      "parentUuid": "120b10de_59f3f02a",
      "tag": "autogenerated:trybots~happy",
      "revId": "94bb64779c32642068fcea3a53cd55ec3b47e8e7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "289da805_221d35b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-03-01T22:38:29Z",
      "side": 1,
      "message": "As we no longer ship prebuilt C objects, we\u0027re going to move towards cgo external linking more (even for std cgo-using packages like net). I\u0027m not sure we want to do more on cgo internal linking. Thanks.",
      "revId": "94bb64779c32642068fcea3a53cd55ec3b47e8e7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "315dcf57_9b1e5cae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-03-02T01:58:32Z",
      "side": 1,
      "message": "I\u0027m not sure that I\u0027m following the reasoning here.\n\nFirstly, as noted in the CL description, there is a considerable performance gain that results from this - being able to reduce ./all.bash runs by 20%+ is a big help for this platform, and will benefit buildlets and trybots.\n\nSecondly, this is (or at least most of it is) needed to support SDYNIMPORT via the internal linker. This in turn is needed to support any libc based platform, including the openbsd/riscv64 port (#55999).\n\nIs there a design or proposal that covers this intended change to move away from cgo internal linking?",
      "parentUuid": "289da805_221d35b7",
      "revId": "94bb64779c32642068fcea3a53cd55ec3b47e8e7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e423de7_33484bc9",
        "filename": "src/cmd/link/internal/ld/data.go",
        "patchSetId": 4
      },
      "lineNbr": 276,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T15:00:04Z",
      "side": 1,
      "message": "a comment would be helpful here",
      "revId": "94bb64779c32642068fcea3a53cd55ec3b47e8e7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aaff798d_1a4d1fbb",
        "filename": "src/cmd/link/internal/loadelf/ldelf.go",
        "patchSetId": 4
      },
      "lineNbr": 597,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T15:00:04Z",
      "side": 1,
      "message": "From looking at the LLVM sources this apparently is triggered when clang emits DWARF with \"relocations across sections\", https://github.com/llvm/llvm-project/blob/2e7311170201e07e5e067e397aed8fa482d2fb8b/llvm/lib/MC/MCDwarf.cpp#L1140. Any idea why this might be in use for riscv64 and not for other targets? I am just curious.",
      "revId": "94bb64779c32642068fcea3a53cd55ec3b47e8e7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}