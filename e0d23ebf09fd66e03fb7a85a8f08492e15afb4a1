{
  "comments": [
    {
      "key": {
        "uuid": "0a44cd8f_96e82b77",
        "filename": "src/sort/example_interface_test.go",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 5015
      },
      "writtenOn": "2017-09-24T09:01:26Z",
      "side": 1,
      "message": "It\u0027s not more succinct! It\u0027s longer.\n\nbefore line 39 add:\n\n// There are two ways to sort a slice. First, one can define\n// a set of methods for the slice type, as with ByAge, and\n// call sort.Sort.. In this first example we use that technique.\n\nchange this one to:\n\n// The other way is to use sort.Slice with a custom Less\n// function, which can be provided as a closure. In this\n// case no methods are needed. (And if they exist, they\n// are ignored.) Here we re-sort in reverse order: compare\n// the closure with ByAge.Less.",
      "revId": "e0d23ebf09fd66e03fb7a85a8f08492e15afb4a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ddb7ce9_512109f8",
        "filename": "src/sort/example_interface_test.go",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 24096
      },
      "writtenOn": "2017-09-24T10:32:16Z",
      "side": 1,
      "message": "\u003e It\u0027s not more succinct! It\u0027s longer.\n\nSorry. I meant the total amount of code needed.\n\nThanks for taking the time to write the comments. This makes things very clear.",
      "parentUuid": "0a44cd8f_96e82b77",
      "revId": "e0d23ebf09fd66e03fb7a85a8f08492e15afb4a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}