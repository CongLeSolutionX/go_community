{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4ca230bf_c9bad7c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 16006
      },
      "writtenOn": "2021-07-26T12:20:22Z",
      "side": 1,
      "message": "why not fail hard and throw when the out of range case is detected instead of silently correct it? (not sure if its \"correct\" and doesnt lead to other problems)",
      "revId": "6e3dfee839631efac98e5eb5149239166b26c2f1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b8cdf42_8293ebcc",
        "filename": "src/runtime/mfixalloc.go",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 5167
      },
      "writtenOn": "2021-07-26T18:09:37Z",
      "side": 1,
      "message": "I think this is a good idea, but I don\u0027t think we need the abstraction of maxUintptr. Just set size to unsafe.Sizeof(mlink{}) if size is too small.",
      "revId": "6e3dfee839631efac98e5eb5149239166b26c2f1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47efd2bf_dede4dd0",
        "filename": "src/runtime/mfixalloc.go",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 5167
      },
      "writtenOn": "2021-07-26T18:09:37Z",
      "side": 1,
      "message": "For this, I\u0027d be inclined to detect this in fixalloc.init and just throw, like Martin suggested. f.size isn\u0027t changing, and fixalloc isn\u0027t appropriate for really large allocations.",
      "revId": "6e3dfee839631efac98e5eb5149239166b26c2f1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}