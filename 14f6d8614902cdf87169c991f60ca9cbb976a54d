{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ffc80da3_b69d6731",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-09T14:49:31Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d14f6d861",
      "tag": "autogenerated:trybots~beginning",
      "revId": "14f6d8614902cdf87169c991f60ca9cbb976a54d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd042c1e_b3c46463",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-09T15:00:37Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "ffc80da3_b69d6731",
      "tag": "autogenerated:trybots~happy",
      "revId": "14f6d8614902cdf87169c991f60ca9cbb976a54d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d1d231e_09403882",
        "filename": "src/cmd/compile/internal/noder/stencil.go",
        "patchSetId": 2
      },
      "lineNbr": 401,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-09-09T17:19:01Z",
      "side": 1,
      "message": "**This part isn\u0027t complete!  rcvrVar has to be initialized to rcvrValue, and the assignment added to g.target.Decls, and the global var added to g.target.Externs.  So, you need to add:\n\n\t\t\tassign :\u003d ir.NewAssignStmt(pos, rcvrVar, rcvrValue)\n\t\t\tassign.SetTypecheck(1)\n\t\t\trcvrVar.Defn \u003d assign\n\t\t\tg.target.Decls \u003d append(g.target.Decls, assign)\n\t\t\tg.target.Externs \u003d append(g.target.Externs, rcvrVar)\n\nYou are not running into this issue, because the Foo[T].Get arg is not referencing its receiver.  See my suggestions for changes to the test to see the problem with your current code.",
      "revId": "14f6d8614902cdf87169c991f60ca9cbb976a54d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f2a2b2c_ddd8468f",
        "filename": "src/cmd/compile/internal/noder/stencil.go",
        "patchSetId": 2
      },
      "lineNbr": 401,
      "author": {
        "id": 53058
      },
      "writtenOn": "2021-09-09T20:32:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d1d231e_09403882",
      "revId": "14f6d8614902cdf87169c991f60ca9cbb976a54d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b2a7576_0d74c3fb",
        "filename": "test/typeparam/issue48225.go",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-09-09T17:19:01Z",
      "side": 1,
      "message": "Please add code to test that the receiver value foo is valid.  You can probably think of a better solution, but one way is to add \"val int\" preceding line 12 (add val field to Foo), and then initialize the val field to 1 in the struct literals at line 19 and 20, and then add these lines above line 15:\n\n\tif foo.val !\u003d 1 {\n\t\tpanic(\"bad val field in Foo receiver\")\n\t}",
      "revId": "14f6d8614902cdf87169c991f60ca9cbb976a54d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc2a885b_008a3cca",
        "filename": "test/typeparam/issue48225.go",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 53058
      },
      "writtenOn": "2021-09-09T20:32:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b2a7576_0d74c3fb",
      "revId": "14f6d8614902cdf87169c991f60ca9cbb976a54d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}