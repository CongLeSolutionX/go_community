{
  "comments": [
    {
      "key": {
        "uuid": "e8f0caad_89825e5b",
        "filename": "src/internal/cpu/cpu_ppc64x.go",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 16006
      },
      "writtenOn": "2017-08-08T17:08:41Z",
      "side": 1,
      "message": "We can make these uint so they are not confused with being pointer like.\nThere is afaik no architecture where size uint !\u003d uinptr supported by go gc.\nDepending if we decide for uintptr or uint i think it would be good if we stay\nconsistent within the package.\n\nI understand they are only used by ppc64 targets and therefore name conflicts \nshould not happen but for clarity we could name these ppc64x_hwcap.",
      "range": {
        "startLine": 14,
        "startChar": 10,
        "endLine": 14,
        "endChar": 17
      },
      "revId": "0ca462a825884526a45e06999ef67ee13de52939",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e05d6ac0_6b9f602d",
        "filename": "src/internal/cpu/cpu_ppc64x.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 16006
      },
      "writtenOn": "2017-08-08T17:08:41Z",
      "side": 1,
      "message": "These seem to be all single bits. Could we specify the position here and make isSet use a shift similar to the x86 feature detection code?\n\nWe can also pull the isSet function into the generic part if it turns out to be similar enough to the x86 version so they can be merged.",
      "range": {
        "startLine": 24,
        "startChar": 32,
        "endLine": 24,
        "endChar": 42
      },
      "revId": "0ca462a825884526a45e06999ef67ee13de52939",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}