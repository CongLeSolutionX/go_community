{
  "comments": [
    {
      "key": {
        "uuid": "8deee4f0_19e7913d",
        "filename": "src/cmd/cgo/out.go",
        "patchSetId": 8
      },
      "lineNbr": 1694,
      "author": {
        "id": 6785
      },
      "writtenOn": "2020-04-12T09:20:53Z",
      "side": 1,
      "message": "I\u0027m not entirely sure whether this conversion is correct. I\u0027ve been trying to figure out what\u0027s the best conversion here. However, if it is, then we could also remove cgoCheckArray entirely and use cgoCheckPointerContent instead.\n\nThe best direct translation without introducing an argument to cgoCheckArray would be:\n\n    func _localCgoCheckArray(ptrToArray *[N?]value) bool {\n        if !_localCgoCheckArray(ptrToArray) {\n            _localCgoCheck(\u0026(*ptrArray)[0], *ptrToArray)\n        }\n    }",
      "revId": "9912df3ba60b3614cb2843288ba3b6a1102022fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc4956c8_c47597e4",
        "filename": "src/runtime/cgocall.go",
        "patchSetId": 8
      },
      "lineNbr": 412,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-04-13T21:17:43Z",
      "side": 1,
      "message": "This paragraph is no longer accurate.",
      "revId": "9912df3ba60b3614cb2843288ba3b6a1102022fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8621452_556e4e66",
        "filename": "src/runtime/cgocall.go",
        "patchSetId": 8
      },
      "lineNbr": 426,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-04-13T21:17:43Z",
      "side": 1,
      "message": "This comment should explain exactly what kinds of types are permitted here.  Can this be anything at all?",
      "revId": "9912df3ba60b3614cb2843288ba3b6a1102022fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8bdbc2d_8d27e34a",
        "filename": "src/runtime/cgocall.go",
        "patchSetId": 8
      },
      "lineNbr": 437,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-04-13T21:17:43Z",
      "side": 1,
      "message": "This function needs a comment.",
      "revId": "9912df3ba60b3614cb2843288ba3b6a1102022fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cea32ef_a844b81d",
        "filename": "src/runtime/cgocall.go",
        "patchSetId": 8
      },
      "lineNbr": 463,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-04-13T21:17:43Z",
      "side": 1,
      "message": "This function needs a comment.\n\nAs I think you allude to elsewhere, it\u0027s not immediately clear to me why we need both this and cgoCheckPointerContent.  I guess this function is slightly different when it gets a pointer to a slice type.  Is the issue that cgo doesn\u0027t know whether it is looking at an array or a slice, so we need to differentiate them here?",
      "revId": "9912df3ba60b3614cb2843288ba3b6a1102022fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f987609_e224a154",
        "filename": "src/runtime/cgocall.go",
        "patchSetId": 8
      },
      "lineNbr": 463,
      "author": {
        "id": 6785
      },
      "writtenOn": "2020-04-14T05:16:13Z",
      "side": 1,
      "message": "I guess the main reason I have cgoCheckArray is that it\u0027s mentally easier to make sure that it does the same thing as before.\n\nI\u0027m still not certain that calling cgoCheckPointerContent will do the same thing. All my instincts tells me that is indeed so, however, I haven\u0027t yet been able to prove that to myself.",
      "parentUuid": "2cea32ef_a844b81d",
      "revId": "9912df3ba60b3614cb2843288ba3b6a1102022fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33c5d62f_9581c529",
        "filename": "src/runtime/cgocall.go",
        "patchSetId": 8
      },
      "lineNbr": 463,
      "author": {
        "id": 6785
      },
      "writtenOn": "2020-04-14T14:41:01Z",
      "side": 1,
      "message": "I decided to test and use cgoCheckPointerContent instead and it fails. The reason is that when a pointer to a slice is passed then it figures that the slice contains a Go pointer.\n\nExample testcase that would fail: https://github.com/golang/go/blob/b234fdb5cd13ae43bda389e4eb3ce7cee3cfc420/misc/cgo/test/test.go#L2157\n\nThe option here would be to use in cgoCheckPointerContent:\n\n\tcgoCheckArg(pt.elem, p, true, pt.elem.kind\u0026kindMask \u003d\u003d kindSlice, cgoCheckPointerFail)\n\nHowever, I think that wouldn\u0027t check correctly when somebody passes a pointer to a slice into C. But, that seems like a bad idea in the first place.",
      "parentUuid": "6f987609_e224a154",
      "revId": "9912df3ba60b3614cb2843288ba3b6a1102022fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}