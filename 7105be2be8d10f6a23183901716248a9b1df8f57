{
  "comments": [
    {
      "key": {
        "uuid": "00e8f6c6_23322814",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 60,
      "author": {
        "id": 5195
      },
      "writtenOn": "2018-05-31T15:05:03Z",
      "side": 1,
      "message": "\"known\"",
      "range": {
        "startLine": 60,
        "startChar": 38,
        "endLine": 60,
        "endChar": 43
      },
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b31ad89f_59b0703a",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 60,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-05-31T16:57:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00e8f6c6_23322814",
      "range": {
        "startLine": 60,
        "startChar": 38,
        "endLine": 60,
        "endChar": 43
      },
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecaeb1bf_c1e31c1b",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 5195
      },
      "writtenOn": "2018-05-31T15:05:03Z",
      "side": 1,
      "message": "\"(i.e., its type)\": what does this parenthesis mean?",
      "range": {
        "startLine": 66,
        "startChar": 20,
        "endLine": 66,
        "endChar": 34
      },
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "499368e6_39d3737e",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 5195
      },
      "writtenOn": "2018-05-31T15:05:03Z",
      "side": 1,
      "message": "\"depend on\"",
      "range": {
        "startLine": 66,
        "startChar": 45,
        "endLine": 66,
        "endChar": 51
      },
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ceb0d5d_7f2d7c5b",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-05-31T16:57:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "499368e6_39d3737e",
      "range": {
        "startLine": 66,
        "startChar": 45,
        "endLine": 66,
        "endChar": 51
      },
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b6976ae_9573b3e1",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-05-31T16:57:04Z",
      "side": 1,
      "message": "The coloring indicates the status of the type of the object, see line 57.",
      "parentUuid": "ecaeb1bf_c1e31c1b",
      "range": {
        "startLine": 66,
        "startChar": 20,
        "endLine": 66,
        "endChar": 34
      },
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4421de2_57934f3c",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 5195
      },
      "writtenOn": "2018-05-31T15:05:03Z",
      "side": 1,
      "message": "\"grey\"",
      "range": {
        "startLine": 67,
        "startChar": 20,
        "endLine": 67,
        "endChar": 24
      },
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae08b155_5ce36592",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-05-31T16:57:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4421de2_57934f3c",
      "range": {
        "startLine": 67,
        "startChar": 20,
        "endLine": 67,
        "endChar": 24
      },
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bda3184_97e87a8e",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 5195
      },
      "writtenOn": "2018-05-31T15:05:03Z",
      "side": 1,
      "message": "I don\u0027t understand this line. If push returns non-zero, the color value does not correspond to a named constant. Are all colors \u003e\u003d2 considered grey?  If so, I would not define grey\u003d2 as it is misleading and error-prone.",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f77e1f95_ff66c328",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-05-31T16:57:04Z",
      "side": 1,
      "message": "The place where color is defined explains this in detail. I played with various ideas for encoding here but I\u0027d like to stick with what I have for a couple of reasons:\n\n1) The 3-color coloring scheme is easy to understand (and for that matter, a well-known mechanism to detect cycles), and it makes it easy to think through its invariants and think about correctness.\n\n2) I\u0027d like to keep using 0 for white because I want the zero value for color to be white.\n\nI\u0027m going to add another comment here.",
      "parentUuid": "0bda3184_97e87a8e",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0143d92_88fc28a7",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 5195
      },
      "writtenOn": "2018-05-31T18:17:17Z",
      "side": 1,
      "message": "If you want to change this in a separate CL, that\u0027s fine, but I think it\u0027s confusing that grey logically identifies a set of values (or an interval), but the named constant chooses only one of these values arbitrarily.",
      "parentUuid": "f77e1f95_ff66c328",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b39a24f_cf948935",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-05-31T18:20:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a0143d92_88fc28a7",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61842ae9_dae1ce47",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 5195
      },
      "writtenOn": "2018-05-31T15:05:03Z",
      "side": 1,
      "message": "Ah, so all values \u003e2 are grey also. This is confusing; color seems like an enumeration but is in fact a more subtle encoding of color+index into an integer. Consider a different encoding such as -2\u003dblack, -1\u003dwhite, \u003e\u003d0 grey and dispense with the named color constants, at least for grey.",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da3aec86_e134cebd",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-05-31T16:57:04Z",
      "side": 1,
      "message": "see my comment above",
      "parentUuid": "61842ae9_dae1ce47",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6828f484_7d126304",
        "filename": "src/go/types/decl.go",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-05-31T18:20:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "da3aec86_e134cebd",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "772d1a54_a919fd98",
        "filename": "src/go/types/object.go",
        "patchSetId": 4
      },
      "lineNbr": 207,
      "author": {
        "id": 5195
      },
      "writtenOn": "2018-05-31T15:05:03Z",
      "side": 1,
      "message": "Clarify that typ\u003d\u003dnil is permitted.",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87de23fd_46453753",
        "filename": "src/go/types/object.go",
        "patchSetId": 4
      },
      "lineNbr": 207,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-05-31T16:57:04Z",
      "side": 1,
      "message": "That\u0027s always been the case. There\u0027s no restriction on any of the arguments. I don\u0027t want to have to say that for each of the constructors.\n\nUsually we say what kinds of restrictions we have, we don\u0027t mention the absence of restrictions.",
      "parentUuid": "772d1a54_a919fd98",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffd53bf2_b31827a2",
        "filename": "src/go/types/object.go",
        "patchSetId": 4
      },
      "lineNbr": 207,
      "author": {
        "id": 5195
      },
      "writtenOn": "2018-05-31T18:17:17Z",
      "side": 1,
      "message": "Generally when a function accepts nil, and nil is not a valid member of the parameter type, it should document that.  Agreed this is a preexisting condition.",
      "parentUuid": "87de23fd_46453753",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fe961e7_7aaa7e13",
        "filename": "src/go/types/object.go",
        "patchSetId": 4
      },
      "lineNbr": 207,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-05-31T18:20:33Z",
      "side": 1,
      "message": "But nil is a valid member of the parameter type.",
      "parentUuid": "ffd53bf2_b31827a2",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b28ec43_673b71d2",
        "filename": "src/go/types/object.go",
        "patchSetId": 4
      },
      "lineNbr": 207,
      "author": {
        "id": 5195
      },
      "writtenOn": "2018-05-31T18:29:30Z",
      "side": 1,
      "message": "What I mean is: the parameter typ has type \"Type\", which is an interface, and calling any method on Type(nil) will panic.  Therefore the default assumption of the reader should be that nil is not a legal argument value for typ in a call to NewConst.  Because it is in fact allowed here, the doc comment should state that.\n\nConversely, a parameter of type slice or map needs no such comment because nil is a valid member of those types; similarly, nil may be considered a valid member of a pointer-to-struct type *T iff the methods of *T are nil-safe.",
      "parentUuid": "4fe961e7_7aaa7e13",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82ddad27_6e5a95e2",
        "filename": "src/go/types/object.go",
        "patchSetId": 4
      },
      "lineNbr": 267,
      "author": {
        "id": 5195
      },
      "writtenOn": "2018-05-31T15:05:03Z",
      "side": 1,
      "message": "ditto x 3: clarify that type\u003d\u003dnil is permitted.\n\nIf it is permitted only for calls made within the typechecker itself, but not by clients of the API, then a comment within the function body would be appropriate.  Or even public wrapper functions that assert typ!\u003dnil then call the internal ones.",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82c5bdb5_069dac94",
        "filename": "src/go/types/object.go",
        "patchSetId": 4
      },
      "lineNbr": 267,
      "author": {
        "id": 5210
      },
      "writtenOn": "2018-05-31T16:57:04Z",
      "side": 1,
      "message": "It\u0027s permitted by anybody. It depends on what you plan to do with it.\n\nHappy to discuss and perhaps address in another CL. But this CL doesn\u0027t change the behavior of these functions.",
      "parentUuid": "82ddad27_6e5a95e2",
      "revId": "7105be2be8d10f6a23183901716248a9b1df8f57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}