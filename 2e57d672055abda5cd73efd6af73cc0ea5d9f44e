{
  "comments": [
    {
      "key": {
        "uuid": "a83aafe6_8b00fe3b",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 2827,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "Put amd64 in the name of this function somewhere?  Or maybe just a comment.",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81ca6b56_c824d0fc",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 2827,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-04-25T13:55:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a83aafe6_8b00fe3b",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe529e0f_ed039a3a",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 247,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "Why does the endianness matter here?  Is it just which instructions are available?",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b567107f_2d69fb54",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 247,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-04-25T13:55:07Z",
      "side": 1,
      "message": "You are right, it doesn\u0027t matter.  I had looked at other examples where it was done this way but now I see they weren\u0027t quite doing the same thing.",
      "parentUuid": "fe529e0f_ed039a3a",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1718456_d5672a35",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 249,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "Why MOVWZreg?  Wouldn\u0027t POPCNTW ignore the top 32 bits?",
      "range": {
        "startLine": 249,
        "startChar": 34,
        "endLine": 249,
        "endChar": 52
      },
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63e7e3cc_ecd60ef8",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 249,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-04-25T13:55:07Z",
      "side": 1,
      "message": "Here is the description from the ISA for popcntw:\n\nA count of the number of one bits in each word of regis-\nter RS is placed into the corresponding word of register\nRA. This number ranges from 0 to 32, inclusive.  So if I\ndon\u0027t clear the top word, it will put its count into the output \nregister.\n\nSimilarly for popcntb for each byte.",
      "parentUuid": "e1718456_d5672a35",
      "range": {
        "startLine": 249,
        "startChar": 34,
        "endLine": 249,
        "endChar": 52
      },
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7361a671_afbc6908",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "This should be just Int, not Int32.  The 32/64 describes the input size, not the output size.\n(Same above in the Ctz rules)",
      "range": {
        "startLine": 253,
        "startChar": 56,
        "endLine": 253,
        "endChar": 58
      },
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61d94208_8412a9b2",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-04-25T13:55:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7361a671_afbc6908",
      "range": {
        "startLine": 253,
        "startChar": 56,
        "endLine": 253,
        "endChar": 58
      },
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a1ba8ba_7aba03e2",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "Same here, I understand the MOVHZreg in PopCount16, but why do the 32 and 8 versions need extension?",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f20eb16_a6263698",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-04-25T13:55:07Z",
      "side": 1,
      "message": "Same as above.  For each byte of the input register it will put the count for that byte in the corresponding byte of the output register.  So only the one byte we care about should have something in it.",
      "parentUuid": "3a1ba8ba_7aba03e2",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53c21b1f_f526a631",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "add \"the low 32 bits of\" (if that\u0027s correct).",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8825aef0_078251ba",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-04-25T13:55:07Z",
      "side": 1,
      "message": "Updated the comments to describe what they really do.",
      "parentUuid": "53c21b1f_f526a631",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdf7406f_da57dc99",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 206,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "\"the low 8 bits of\"",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}