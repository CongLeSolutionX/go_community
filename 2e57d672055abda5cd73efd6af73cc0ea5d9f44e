{
  "comments": [
    {
      "key": {
        "uuid": "a83aafe6_8b00fe3b",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 2827,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "Put amd64 in the name of this function somewhere?  Or maybe just a comment.",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe529e0f_ed039a3a",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 247,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "Why does the endianness matter here?  Is it just which instructions are available?",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1718456_d5672a35",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 249,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "Why MOVWZreg?  Wouldn\u0027t POPCNTW ignore the top 32 bits?",
      "range": {
        "startLine": 249,
        "startChar": 34,
        "endLine": 249,
        "endChar": 52
      },
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7361a671_afbc6908",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "This should be just Int, not Int32.  The 32/64 describes the input size, not the output size.\n(Same above in the Ctz rules)",
      "range": {
        "startLine": 253,
        "startChar": 56,
        "endLine": 253,
        "endChar": 58
      },
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a1ba8ba_7aba03e2",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "Same here, I understand the MOVHZreg in PopCount16, but why do the 32 and 8 versions need extension?",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53c21b1f_f526a631",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "add \"the low 32 bits of\" (if that\u0027s correct).",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdf7406f_da57dc99",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 206,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-04-24T22:29:18Z",
      "side": 1,
      "message": "\"the low 8 bits of\"",
      "revId": "2e57d672055abda5cd73efd6af73cc0ea5d9f44e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}