{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "577e9a27_d367eff0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2024-05-09T18:27:36Z",
      "side": 1,
      "message": "Hi Alan, looks like this is causing failures on the longtest builders, e.g. \n\nhttps://ci.chromium.org/ui/p/golang/builders/ci/gotip-linux-amd64-longtest/b8748395646781564225/overview\n\nThe test in question that\u0027s failing is doing a build with inlining cranked up; you can reproduce the problem with this:\n\n```\n$ go build -gcflags\u003dall\u003d-l\u003d4 himom.go\nrm: cannot remove \u0027himom\u0027: No such file or directory\n# runtime\n/w/go/src/runtime/iface.go:397:17: write barrier prohibited by caller; convTstring\n\t/w/go/src/runtime/panic.go:1019:17: called by resolveNameOff.throw.func1\n\t/w/go/src/runtime/type.go:119:10: called by resolveNameOff\n\t/w/go/src/runtime/error.go:268:43: called by printanycustomtype\n\t/w/go/src/runtime/error.go:261:21: called by printpanicval\n\t/w/go/src/runtime/panic.go:1019:16: called by greyobject.throw.func1\n\t/w/go/src/runtime/mgcmark.go:1590:8: called by greyobject\n```\n\nI think perhaps the additional inlining is allowing the compiler to discover the issue with the write barrier? Runtime experts will probably be able to say more.",
      "revId": "69e75c8581e15328454bb6e2f1dc347f73616b37",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}