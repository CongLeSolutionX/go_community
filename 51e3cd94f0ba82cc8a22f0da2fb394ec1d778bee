{
  "comments": [
    {
      "key": {
        "uuid": "77505494_7ebd837b",
        "filename": "src/net/http/httputil/reverseproxy.go",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 24106
      },
      "writtenOn": "2017-08-11T19:41:26Z",
      "side": 1,
      "message": "I am not a native speaker, but I consider myself not too bad at English.  I don\u0027t understand this documentation.  Can we find an easier sentence?\n\nE.g. \"If response is nil, it must return an error.  Otherwise the proxy will panic.\"",
      "revId": "51e3cd94f0ba82cc8a22f0da2fb394ec1d778bee",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31b9bc29_7432d23a",
        "filename": "src/net/http/httputil/reverseproxy.go",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 13550
      },
      "writtenOn": "2017-08-10T08:38:51Z",
      "side": 1,
      "message": "You removed the StatusBadGateway and return from here, so now if RoundTrip errors but ModifyResponse doesn\u0027t, the behaviour should be different from what I can tell.\n\nIs this on purpose? I don\u0027t think this is covered in the tests.",
      "revId": "51e3cd94f0ba82cc8a22f0da2fb394ec1d778bee",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33bbf9bd_5497c600",
        "filename": "src/net/http/httputil/reverseproxy.go",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 17921
      },
      "writtenOn": "2017-08-10T17:07:29Z",
      "side": 1,
      "message": "Yes this is on purpose, because ModifyResponse is given the chance to edit the response on an error (see #21255). The test case where both the response and error are nil cover this possibility, showing that the user gets a nil response, and ServeHTTP panics.",
      "parentUuid": "31b9bc29_7432d23a",
      "revId": "51e3cd94f0ba82cc8a22f0da2fb394ec1d778bee",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91bba80d_d7f61f20",
        "filename": "src/net/http/httputil/reverseproxy_test.go",
        "patchSetId": 2
      },
      "lineNbr": 647,
      "author": {
        "id": 13550
      },
      "writtenOn": "2017-08-10T08:38:51Z",
      "side": 1,
      "message": "You can simplify to: if res.Header.Get(\"X-Error\") !\u003d \"true\" {",
      "revId": "51e3cd94f0ba82cc8a22f0da2fb394ec1d778bee",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ffe3b1d_5f14f8cd",
        "filename": "src/net/http/httputil/reverseproxy_test.go",
        "patchSetId": 2
      },
      "lineNbr": 684,
      "author": {
        "id": 13550
      },
      "writtenOn": "2017-08-10T08:38:51Z",
      "side": 1,
      "message": "Sub-tests could be useful here. Then you can get rid of the #%d bits, and use i (or descritive names) for each sub-test.",
      "revId": "51e3cd94f0ba82cc8a22f0da2fb394ec1d778bee",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}