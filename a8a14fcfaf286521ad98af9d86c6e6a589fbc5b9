{
  "comments": [
    {
      "key": {
        "uuid": "dd5e54b7_58f274e8",
        "filename": "src/runtime/cgocall.go",
        "patchSetId": 19
      },
      "lineNbr": 271,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-08-20T14:31:45Z",
      "side": 1,
      "message": "two (for consistency)",
      "range": {
        "startLine": 271,
        "startChar": 16,
        "endLine": 271,
        "endChar": 17
      },
      "revId": "a8a14fcfaf286521ad98af9d86c6e6a589fbc5b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2c0afa0_4a4d4040",
        "filename": "src/runtime/cgocall.go",
        "patchSetId": 19
      },
      "lineNbr": 271,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-08-20T14:31:45Z",
      "side": 1,
      "message": "byte",
      "range": {
        "startLine": 271,
        "startChar": 28,
        "endLine": 271,
        "endChar": 31
      },
      "revId": "a8a14fcfaf286521ad98af9d86c6e6a589fbc5b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9b3c5d0_b836ca6f",
        "filename": "src/runtime/cgocall.go",
        "patchSetId": 19
      },
      "lineNbr": 271,
      "author": {
        "id": 15922
      },
      "writtenOn": "2018-08-29T07:15:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd5e54b7_58f274e8",
      "range": {
        "startLine": 271,
        "startChar": 16,
        "endLine": 271,
        "endChar": 17
      },
      "revId": "a8a14fcfaf286521ad98af9d86c6e6a589fbc5b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "791a23fa_675ae4b2",
        "filename": "src/runtime/cgocall.go",
        "patchSetId": 19
      },
      "lineNbr": 271,
      "author": {
        "id": 15922
      },
      "writtenOn": "2018-08-29T07:15:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2c0afa0_4a4d4040",
      "range": {
        "startLine": 271,
        "startChar": 28,
        "endLine": 271,
        "endChar": 31
      },
      "revId": "a8a14fcfaf286521ad98af9d86c6e6a589fbc5b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d583d02_6a7d2699",
        "filename": "src/runtime/msan_arm64.s",
        "patchSetId": 19
      },
      "lineNbr": 62,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-08-13T15:04:54Z",
      "side": 1,
      "message": "Not needed. The next instruction writes to RSP anyway.",
      "revId": "a8a14fcfaf286521ad98af9d86c6e6a589fbc5b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59b02784_5c8b2f80",
        "filename": "src/runtime/msan_arm64.s",
        "patchSetId": 19
      },
      "lineNbr": 62,
      "author": {
        "id": 15922
      },
      "writtenOn": "2018-08-16T13:38:46Z",
      "side": 1,
      "message": "Do we need to consider the PMU samples in __msan_xxx() functions? If we tend to ignore this case, we do not need to reserve these bytes to avoid corrupt the previous FP stored on (RSP-8) since the previous FP won\u0027t be restored as you mentioned.",
      "parentUuid": "5d583d02_6a7d2699",
      "revId": "a8a14fcfaf286521ad98af9d86c6e6a589fbc5b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5998d4f_fd52dcfb",
        "filename": "src/runtime/msan_arm64.s",
        "patchSetId": 19
      },
      "lineNbr": 62,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-08-20T14:31:45Z",
      "side": 1,
      "message": "What does PMU stand for?\n\nThis is probably ok. We are on the g0 stack here, and the saved FP is probably not very interesting.",
      "parentUuid": "59b02784_5c8b2f80",
      "revId": "a8a14fcfaf286521ad98af9d86c6e6a589fbc5b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4a98570_b31b391d",
        "filename": "src/runtime/msan_arm64.s",
        "patchSetId": 19
      },
      "lineNbr": 62,
      "author": {
        "id": 15922
      },
      "writtenOn": "2018-08-29T07:15:20Z",
      "side": 1,
      "message": "PMU is the hardware Performance Measurement Unit. It will increase counter when certain hardware events happen. It will trigger exception when the counter reach the threshold.\n\nWhen the exception happens, we will record the call stack so that people can analysis the software behavior. We are expecting to use FP to get the call stack which cause lower overhead than using DRAWF information. LR\u003d*(FP+8); FP\u0027\u003d*FP; LR\u0027\u003d*(FP\u0027+8); FP\u0027\u0027\u003d*FP\u0027; ...\n\nWe cannot get the correct call stack if saved FP is corrupted. But I guess it should be fine. The performance data won\u0027t be very interesting when running with memory sanitizer.",
      "parentUuid": "b5998d4f_fd52dcfb",
      "revId": "a8a14fcfaf286521ad98af9d86c6e6a589fbc5b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c438d56_f4048c7f",
        "filename": "src/runtime/rt0_android_arm64.s",
        "patchSetId": 19
      },
      "lineNbr": 7,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-08-20T14:31:45Z",
      "side": 1,
      "message": "Do the _rt0 stuff matter? These are the program start routines, called by the system. There is probably no saved FP here.",
      "revId": "a8a14fcfaf286521ad98af9d86c6e6a589fbc5b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7062a3a_780eb5f3",
        "filename": "src/runtime/rt0_android_arm64.s",
        "patchSetId": 19
      },
      "lineNbr": 7,
      "author": {
        "id": 15922
      },
      "writtenOn": "2018-08-29T07:15:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c438d56_f4048c7f",
      "revId": "a8a14fcfaf286521ad98af9d86c6e6a589fbc5b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cf2c981_2416f5af",
        "filename": "src/runtime/rt0_android_arm64.s",
        "patchSetId": 19
      },
      "lineNbr": 10,
      "author": {
        "id": 13315
      },
      "writtenOn": "2018-08-20T14:31:45Z",
      "side": 1,
      "message": "Here we are calling a Go assembly function, not external function. Why do we need this? (also below and other _rt0 functions)\n\nAlso, I think this probably doesn\u0027t work, since _rt0_arm64_linux assumes 0(RSP) is argc. If we adjust RSP, it will go wrong.",
      "revId": "a8a14fcfaf286521ad98af9d86c6e6a589fbc5b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a685f79_de49c9ee",
        "filename": "src/runtime/rt0_android_arm64.s",
        "patchSetId": 19
      },
      "lineNbr": 10,
      "author": {
        "id": 15922
      },
      "writtenOn": "2018-08-29T07:15:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8cf2c981_2416f5af",
      "revId": "a8a14fcfaf286521ad98af9d86c6e6a589fbc5b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f1f7d86_df42331e",
        "filename": "src/runtime/rt0_android_arm64.s",
        "patchSetId": 19
      },
      "lineNbr": 20,
      "author": {
        "id": 15922
      },
      "writtenOn": "2018-08-29T07:15:20Z",
      "side": 1,
      "message": "Also there is no need to move SP here. It is called from native and there is no Go frame created.",
      "revId": "a8a14fcfaf286521ad98af9d86c6e6a589fbc5b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}