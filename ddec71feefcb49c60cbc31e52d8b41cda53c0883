{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "88c40567_e8c4ff2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-11-06T15:13:08Z",
      "side": 1,
      "message": "TRY\u003dopenbsd-386,openbsd-amd64,darwin,dragonfly,freebsd,netbsd,linux",
      "revId": "ddec71feefcb49c60cbc31e52d8b41cda53c0883",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b06e42a_3f9cca44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-06T15:13:30Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003dddec71fe\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "ddec71feefcb49c60cbc31e52d8b41cda53c0883",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5b8c230_938ba388",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-06T15:13:30Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "d2134743_7df686ac",
      "tag": "autogenerated:trybots~beginning",
      "revId": "ddec71feefcb49c60cbc31e52d8b41cda53c0883",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "993d1d62_57460244",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-06T15:25:05Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003dddec71fe\nFailed on openbsd-386-72: https://storage.googleapis.com/go-build-log/ddec71fe/openbsd-386-72_42a36191.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "5b06e42a_3f9cca44",
      "tag": "autogenerated:trybots~progress",
      "revId": "ddec71feefcb49c60cbc31e52d8b41cda53c0883",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "426df392_690651c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-06T15:33:35Z",
      "side": 1,
      "message": "1 of 51 SlowBots failed.\nFailed on openbsd-386-72: https://storage.googleapis.com/go-build-log/ddec71fe/openbsd-386-72_42a36191.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\nSlowBot builds that ran:\n* darwin-amd64-13\n* dragonfly-amd64-622\n* freebsd-amd64-13_0\n* linux-amd64\n* netbsd-amd64-9_3\n* openbsd-386-72\n* openbsd-amd64-72\n",
      "parentUuid": "5b06e42a_3f9cca44",
      "tag": "autogenerated:trybots~failed",
      "revId": "ddec71feefcb49c60cbc31e52d8b41cda53c0883",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd2aa405_29acb196",
        "filename": "src/os/signal/signal_cgo_test.go",
        "patchSetId": 2
      },
      "lineNbr": 308,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-11-06T20:33:34Z",
      "side": 1,
      "message": "It appears that since CL 5369076, the value of `syscall.TIOCSPGRP` on openbsd has been invalid for a Go `int` variable.\n\nI went looking for a definition of that constant in the POSIX specification to see what type it is actually supposed to be defined as, but I\u0027m unable to find a specification for that constant — instead, the only mentions for it are in documentation notes (or source code) for implementations of the POSIX [`tcsetpgrp`](https://pubs.opengroup.org/onlinepubs/9699919799/functions/tcsetpgrp.html) function.\n\nSo I wonder: perhaps `internal/syscall/unix` should export a `Tcsetpgrp` function instead of `Ioctl`, and leave any workarounds for this type-mismatch as an implementation detail there?",
      "range": {
        "startLine": 308,
        "startChar": 38,
        "endLine": 308,
        "endChar": 47
      },
      "revId": "ddec71feefcb49c60cbc31e52d8b41cda53c0883",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69bb8a40_05fb9b36",
        "filename": "src/os/signal/signal_cgo_test.go",
        "patchSetId": 2
      },
      "lineNbr": 308,
      "author": {
        "id": 51083
      },
      "writtenOn": "2023-11-06T21:00:56Z",
      "side": 1,
      "message": "It\u0027s probably been discussed before and I\u0027m not aware of the reasoning, but why are these \"lower-level\" syscall-wrapping functions using Go ints instead of uintptr?  They simply get type converted back to uintptr anyways when calling the e.g. ioctl/ioctlPtr generated functions.",
      "parentUuid": "dd2aa405_29acb196",
      "range": {
        "startLine": 308,
        "startChar": 38,
        "endLine": 308,
        "endChar": 47
      },
      "revId": "ddec71feefcb49c60cbc31e52d8b41cda53c0883",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e69f1f2_62b1bb00",
        "filename": "src/os/signal/signal_cgo_test.go",
        "patchSetId": 2
      },
      "lineNbr": 308,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-11-06T21:09:23Z",
      "side": 1,
      "message": "Generally the `syscall` and `unix` packages try to follow the signatures defined in POSIX, and POSIX [`ioctl`](https://pubs.opengroup.org/onlinepubs/9699919799/functions/ioctl.html) very clearly uses a signed integer type for the `request` parameter.\n\n(A Go `int` is not exactly a C `int` — it\u0027s more like `ssize_t` — but we still tend to use it where one finds a C `int` in the syscall wrappers.)",
      "parentUuid": "69bb8a40_05fb9b36",
      "range": {
        "startLine": 308,
        "startChar": 38,
        "endLine": 308,
        "endChar": 47
      },
      "revId": "ddec71feefcb49c60cbc31e52d8b41cda53c0883",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}