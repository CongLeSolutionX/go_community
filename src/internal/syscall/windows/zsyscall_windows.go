// MACHINE GENERATED BY 'go generate' COMMAND; DO NOT EDIT

package windows

import "unsafe"
import "syscall"

var (
	modiphlpapi = syscall.NewLazyDLL("iphlpapi.dll")
	modkernel32 = syscall.NewLazyDLL("kernel32.dll")

	procGetAdaptersAddresses                    = modiphlpapi.NewProc("GetAdaptersAddresses")
	procNhpAllocateAndGetInterfaceInfoFromStack = modiphlpapi.NewProc("NhpAllocateAndGetInterfaceInfoFromStack")
	procGetProcessHeap                          = modkernel32.NewProc("GetProcessHeap")
)

func GetAdaptersAddresses(family uint32, flags uint32, reserved uintptr, adapterAddresses *IpAdapterAddresses, sizeOfPointer *uint32) (errcode error) {
	r0, _, _ := syscall.Syscall6(procGetAdaptersAddresses.Addr(), 5, uintptr(family), uintptr(flags), uintptr(reserved), uintptr(unsafe.Pointer(adapterAddresses)), uintptr(unsafe.Pointer(sizeOfPointer)), 0)
	if r0 != 0 {
		errcode = syscall.Errno(r0)
	}
	return
}

func NhpAllocateAndGetInterfaceInfoFromStack(ppTable **IpInterfaceNameInfo, count *uint32, order bool, handle syscall.Handle, flags uint32) (errcode error) {
	var _p0 uint32
	if order {
		_p0 = 1
	} else {
		_p0 = 0
	}
	r0, _, _ := syscall.Syscall6(procNhpAllocateAndGetInterfaceInfoFromStack.Addr(), 5, uintptr(unsafe.Pointer(ppTable)), uintptr(unsafe.Pointer(count)), uintptr(_p0), uintptr(handle), uintptr(flags), 0)
	if r0 != 0 {
		errcode = syscall.Errno(r0)
	}
	return
}

func GetProcessHeap() (handle syscall.Handle) {
	r0, _, _ := syscall.Syscall(procGetProcessHeap.Addr(), 0, 0, 0, 0)
	handle = syscall.Handle(r0)
	return
}
