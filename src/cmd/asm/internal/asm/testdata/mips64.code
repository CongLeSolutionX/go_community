00000 (testdata/mips64.s:8)	TEXT	foo(SB), 7, $0
00000 (testdata/mips64.s:8)	ADDV	$-8, R29 => 63bdfff8
00004 (testdata/mips64.s:8)	MOVV	R31, (R29) => ffbf0000
00008 (testdata/mips64.s:18)	MOVW	R1, R2 => 0001103c0002103f
00016 (testdata/mips64.s:19)	MOVW	LO, R1 => 00000812
00020 (testdata/mips64.s:20)	MOVW	HI, R1 => 00000810
00024 (testdata/mips64.s:21)	MOVW	R1, LO => 00200013
00028 (testdata/mips64.s:22)	MOVW	R1, HI => 00200011
00032 (testdata/mips64.s:23)	MOVV	R1, R2 => 00011025
00036 (testdata/mips64.s:24)	MOVV	LO, R1 => 00000812
00040 (testdata/mips64.s:25)	MOVV	HI, R1 => 00000810
00044 (testdata/mips64.s:26)	MOVV	R1, LO => 00200013
00048 (testdata/mips64.s:27)	MOVV	R1, HI => 00200011
00052 (testdata/mips64.s:33)	MOVW	foo<>+3(SB), R2 => 3c1c0000379c00008f820000
00064 (testdata/mips64.s:34)	MOVW	16(R1), R2 => 8c220010
00068 (testdata/mips64.s:35)	MOVW	(R1), R2 => 8c220000
00072 (testdata/mips64.s:36)	MOVV	foo<>+3(SB), R2 => 3c1c0000379c0000df820000
00084 (testdata/mips64.s:37)	MOVV	16(R1), R2 => dc220010
00088 (testdata/mips64.s:38)	MOVV	(R1), R2 => dc220000
00092 (testdata/mips64.s:44)	MOVB	R1, R2 => 0001160000021603
00100 (testdata/mips64.s:50)	MOVB	foo<>+3(SB), R2 => 3c1c0000379c000083820000
00112 (testdata/mips64.s:51)	MOVB	16(R1), R2 => 80220010
00116 (testdata/mips64.s:52)	MOVB	(R1), R2 => 80220000
00120 (testdata/mips64.s:61)	MOVD	foo<>+3(SB), F2 => 3c1c0000379c0000d7820000
00132 (testdata/mips64.s:62)	MOVD	16(R1), F2 => d4220010
00136 (testdata/mips64.s:63)	MOVD	(R1), F2 => d4220000
00140 (testdata/mips64.s:69)	MOVD	$f64.3fb999999999999a(SB), F2 => 3c1c0000379c0000d7820000
00152 (testdata/mips64.s:75)	MOVD	F1, F2 => 46200886
00156 (testdata/mips64.s:81)	MOVD	F2, foo<>+3(SB) => 3c1c0000379c0000f7820000
00168 (testdata/mips64.s:82)	MOVD	F2, 16(R1) => f4220010
00172 (testdata/mips64.s:83)	MOVD	F2, (R1) => f4220000
00176 (testdata/mips64.s:92)	MOVW	R1, foo<>+3(SB) => 3c1c0000379c0000af810000
00188 (testdata/mips64.s:93)	MOVW	R1, 16(R2) => ac410010
00192 (testdata/mips64.s:94)	MOVW	R1, (R2) => ac410000
00196 (testdata/mips64.s:95)	MOVV	R1, foo<>+3(SB) => 3c1c0000379c0000ff810000
00208 (testdata/mips64.s:96)	MOVV	R1, 16(R2) => fc410010
00212 (testdata/mips64.s:97)	MOVV	R1, (R2) => fc410000
00216 (testdata/mips64.s:103)	MOVB	R1, foo<>+3(SB) => 3c1c0000379c0000a3810000
00228 (testdata/mips64.s:104)	MOVB	R1, 16(R2) => a0410010
00232 (testdata/mips64.s:105)	MOVB	R1, (R2) => a0410000
00236 (testdata/mips64.s:114)	MOVD	F1, foo<>+3(SB) => 3c1c0000379c0000f7810000
00248 (testdata/mips64.s:115)	MOVD	F1, 16(R2) => f4410010
00252 (testdata/mips64.s:116)	MOVD	F1, (R2) => f4410000
00256 (testdata/mips64.s:125)	MOVW	FCR0, R1 => 44411000
00260 (testdata/mips64.s:131)	MOVW	R1, FCR0 => 4440100044c11000
00268 (testdata/mips64.s:137)	MOVW	R1, M1 => 40811800
00272 (testdata/mips64.s:138)	MOVV	R1, M1 => 40a11800
00276 (testdata/mips64.s:144)	MOVW	M1, R1 => 40011800
00280 (testdata/mips64.s:145)	MOVV	M1, R1 => 40211800
00284 (testdata/mips64.s:158)	ADD	R1, R2, R3 => 00411820
00288 (testdata/mips64.s:164)	ADD	$1, R2, R3 => 20430001
00292 (testdata/mips64.s:170)	ADD	R1, R2 => 00411020
00296 (testdata/mips64.s:176)	ADD	$4, R1 => 20210004
00300 (testdata/mips64.s:182)	MUL	R1, R2 => 00410018
00304 (testdata/mips64.s:188)	SLL	R1, R2, R3 => 00221804
00308 (testdata/mips64.s:194)	SLL	R1, R2 => 00221004
00312 (testdata/mips64.s:200)	SLL	$4, R1, R2 => 00011100
00316 (testdata/mips64.s:206)	SLL	$4, R1 => 00010900
00320 (testdata/mips64.s:215)	MOVW	$1, R1 => 64010001
00324 (testdata/mips64.s:216)	MOVV	$1, R1 => 64010001
00328 (testdata/mips64.s:222)	MOVW	$1, R1 => 64010001
00332 (testdata/mips64.s:223)	MOVW	$foo(SB), R1 => 3c01000034210000
00340 (testdata/mips64.s:224)	MOVV	$1, R1 => 64010001
00344 (testdata/mips64.s:225)	MOVV	$foo(SB), R1 => 3c01000034210000
00352 (testdata/mips64.s:235)	BEQ	R1, 360 => 10200001
00356 (testdata/mips64.s:235)	WORD	$0 => 00000000
00360 (testdata/mips64.s:238)	BEQ	R1, 376 => 10200003
00364 (testdata/mips64.s:238)	WORD	$0 => 00000000
00368 (testdata/mips64.s:238)	JMP	360 => 1000fffd
00372 (testdata/mips64.s:238)	WORD	$0 => 00000000
00376 (testdata/mips64.s:240)	BEQ	R1, 392 => 10200003
00380 (testdata/mips64.s:240)	WORD	$0 => 00000000
00384 (testdata/mips64.s:241)	CALL	foo(SB) => 0c000062
00388 (testdata/mips64.s:241)	WORD	$0 => 00000000
00392 (testdata/mips64.s:242)	BEQ	R1, 408 => 10200003
00396 (testdata/mips64.s:242)	WORD	$0 => 00000000
00400 (testdata/mips64.s:243)	CALL	foo(SB) => 0c00005a
00404 (testdata/mips64.s:243)	WORD	$0 => 00000000
00408 (testdata/mips64.s:249)	BEQ	R1, 424 => 10200003
00412 (testdata/mips64.s:249)	WORD	$0 => 00000000
00416 (testdata/mips64.s:250)	JMP	(R1) => 00200008
00420 (testdata/mips64.s:250)	WORD	$0 => 00000000
00424 (testdata/mips64.s:251)	BEQ	R1, 440 => 10200003
00428 (testdata/mips64.s:251)	WORD	$0 => 00000000
00432 (testdata/mips64.s:252)	JMP	foo(SB) => 0800006c
00436 (testdata/mips64.s:252)	WORD	$0 => 00000000
00440 (testdata/mips64.s:253)	BEQ	R1, 456 => 10200003
00444 (testdata/mips64.s:253)	WORD	$0 => 00000000
00448 (testdata/mips64.s:254)	CALL	(R1) => 0020f809
00452 (testdata/mips64.s:254)	WORD	$0 => 00000000
00456 (testdata/mips64.s:255)	BEQ	R1, 472 => 10200003
00460 (testdata/mips64.s:255)	WORD	$0 => 00000000
00464 (testdata/mips64.s:256)	CALL	foo(SB) => 0c000074
00468 (testdata/mips64.s:256)	WORD	$0 => 00000000
00472 (testdata/mips64.s:266)	BEQ	R1, 480 => 10200001
00476 (testdata/mips64.s:266)	WORD	$0 => 00000000
00480 (testdata/mips64.s:267)	BEQ	R1, 472 => 1020fffd
00484 (testdata/mips64.s:267)	WORD	$0 => 00000000
00488 (testdata/mips64.s:274)	BEQ	R1, R2, 496 => 10220001
00492 (testdata/mips64.s:274)	WORD	$0 => 00000000
00496 (testdata/mips64.s:275)	BEQ	R1, R2, 488 => 1022fffd
00500 (testdata/mips64.s:275)	WORD	$0 => 00000000
00504 (testdata/mips64.s:285)	BLTZ	R1, 512 => 04200001
00508 (testdata/mips64.s:285)	WORD	$0 => 00000000
00512 (testdata/mips64.s:286)	BLTZ	R1, 504 => 0420fffd
00516 (testdata/mips64.s:286)	WORD	$0 => 00000000
00520 (testdata/mips64.s:293)	BFPT	528 => 4501000100000000
00528 (testdata/mips64.s:294)	BFPT	520 => 4501fffd00000000
00536 (testdata/mips64.s:304)	ABSD	F1, F2 => 46200885
00540 (testdata/mips64.s:310)	ADDD	F1, F2 => 46211080
00544 (testdata/mips64.s:316)	ADDD	F1, F2, F3 => 462110c0
00548 (testdata/mips64.s:322)	CMPEQD	F1, F2 => 46211032
00552 (testdata/mips64.s:328)	WORD	$1 => 00000001
00556 (testdata/mips64.s:329)	WORD	$foo(SB) => 00000000
00560 (testdata/mips64.s:373)	SYSCALL => 0000000c
00564 (testdata/mips64.s:374)	BREAK => 0000000d
00568 (testdata/mips64.s:375)	BREAK	R1, (R1) => bc210000
00572 (testdata/mips64.s:384)	SYSCALL => 0000000c
00576 (testdata/mips64.s:385)	BEQ	R1, 600 => 10200005
00580 (testdata/mips64.s:385)	WORD	$0 => 00000000
00584 (testdata/mips64.s:386)	MOVV	(R29), R4 => dfa40000
00588 (testdata/mips64.s:386)	ADDV	$8, R29 => 63bd0008
00592 (testdata/mips64.s:386)	JMP	(R4) => 00800008
00596 (testdata/mips64.s:386)	WORD	$0 => 00000000
00600 (testdata/mips64.s:391)	CALL	foo(SB) => 0c000096
00604 (testdata/mips64.s:391)	WORD	$0 => 00000000
00608 (testdata/mips64.s:392)	BEQ	R1, 624 => 10200003
00612 (testdata/mips64.s:392)	WORD	$0 => 00000000
00616 (testdata/mips64.s:393)	JMP	foo(SB) => 0800009a
00620 (testdata/mips64.s:393)	WORD	$0 => 00000000
00624 (testdata/mips64.s:394)	CALL	foo(SB) => 0c00009c
00628 (testdata/mips64.s:394)	WORD	$0 => 00000000
