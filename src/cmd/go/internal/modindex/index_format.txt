This file documents the index format that is read and written by this package.
The index format is an encoding of a series of RawPackage structs

Field names refer to fields on RawPackage and rawFile.
The file uses little endian encoding for the uint32s.
Strings are written into the string table at the end of the file. Each string
is null-terminated. String offsets are relative to the start of the string table.
Bools are written as uint32s: 0 for false and 1 for true.

“go index v0\n”
str uint32 - offset of string table
n uint32 - number of directories
dirnames [n]uint32 - offsets to directory names in string table; names sorted
packages [n]uint32 - offset where package begins
for each RawPackage:
	error uint32 - string offset
	path uint32 - string offset
    srcDir uint32 - string offset  // TODO(matloob):r emove, replace with dir
 	dir uint32 - string offset (dir relative to module)
	len(sourceFiles) uint32
	sourceFiles [n]uint32 - offset to source file (relative to start of index file)
	for each sourceFile:
		error - string offset
		parseError - string offset
		name - string offset
		synopsis - string offset
		pkgName - string offset
		ignoreFile - int32 bool // starts with _ or . or should otherwise always be ignored
		binaryOnly uint32 bool
		quotedImportComment - string offset
		quotedImportCommentLine - int32
		goBuildConstraint  - string offset
		len(plusBuildConstraints) - uint32
		plusBuildConstraints - [n]uint32 (string offsets)
		len(imports) uint32
		for each rawImport:
			path - string offset
			doc - string offset // TODO(matloob): only save for cgo?
			position - file, offset, line, column - uint32
        len(embeds) numEmbeds uint32
        for each embed:
	        pattern string offset
	        position - file, offset, line, column - uint32
[string table]

