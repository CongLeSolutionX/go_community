env GO111MODULE=on

[!gc] skip

# Outside of GOROOT, our vendored packages should be reported as part of the standard library.
go list -f '{{if .Standard}}{{.ImportPath}}{{end}}' std cmd
stdout vendor/golang.org/x/net/http2/hpack
stdout cmd/vendor/golang\.org/x/arch/x86/x86asm

# cmd/... should match the same packages it used to match in GOPATH mode.
go list cmd/...
stdout cmd/compile
! stdout cmd/vendor/golang\.org/x/arch/x86/x86asm

# Within the std module, listing ./... should omit the 'std' prefix:
# the package paths should be the same via ./... or the 'std' meta-pattern.
cd $GOROOT/src
env GOFLAGS=-mod=vendor

go list ./...
cp stdout $WORK/listdot.txt
go list std
cmp stdout $WORK/listdot.txt

# Within the std module, the vendored dependencies of std should appear to come from the actual modules.
go list std
! stdout vendor/golang.org
! stdout golang.org/x/net/http2/hpack

go list -deps -f '{{if not .Standard}}{{.ImportPath}}{{end}}' std
! stdout vendor/
stdout golang.org/x/net/http2/hpack

# Within std, the vendored dependencies of cmd should still appear to be part of cmd.
go list -f '{{if .Standard}}{{.ImportPath}}{{end}}' cmd
stdout cmd/vendor/golang\.org/x/arch/x86/x86asm

go list -f '{{if not .Standard}}{{.ImportPath}}{{end}}' cmd
! stdout .

go list cmd/...
stdout cmd/compile
! stdout cmd/vendor/golang\.org/x/arch/x86/x86asm
