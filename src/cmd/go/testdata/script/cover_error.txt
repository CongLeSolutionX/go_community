[gccgo] skip
[skipslow] skip
[!exec:sed] skip # for cleaning out character positions (see below)

# Test line numbers in cover errors.

# Get errors from a go test into stderr.txt
! go test coverbad
stderr 'coverbad[\\/]p\.go:4' # look for error at coverbad/p.go:4
[cgo] stderr 'coverbad[\\/]p1\.go:6' # look for error at coverbad/p.go:6
! stderr $WORK # make sure temporary directory isn't in error

cp stderr $WORK/stderr.txt

# Get errors from coverage into stderr2.txt
! go test -cover coverbad
cp stderr $WORK/stderr2.txt

# Clean out character positions from stderr.txt
# It's OK that stderr2 drops the character position in the error,
# because of the //line directive (see golang.org/issue/22662).
exec sed -i '' 's/p\.go:4:2:/p.go:4:/g' $WORK/stderr.txt 
exec sed -i '' 's/p1\.go:6:2:/p1.go:6:/g' $WORK/stderr.txt 

cmp $WORK/stderr.txt $WORK/stderr2.txt

-- coverbad/p.go --
package p

func f() {
	g()
}
-- coverbad/p1.go --
package p

import "C"

func h() {
	j()
}
-- coverbad/p_test.go --
package p

import "testing"

func Test(t *testing.T) {}
