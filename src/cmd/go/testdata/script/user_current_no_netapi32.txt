[!GOOS:windows] skip

go run .
stdout 'netapi32.dll: not found'

-- go.mod --
module m

go 1.21

-- utils.go --
package main

import (
	"fmt"
	"syscall"
	"unsafe"
)

func hasModuleHandle() {
	const netapi32 = "netapi32.dll"
	getModuleHandle := syscall.MustLoadDLL("kernel32.dll").MustFindProc("GetModuleHandleW")
	mod, _, _ := getModuleHandle.Call(uintptr(unsafe.Pointer(syscall.StringToUTF16Ptr(netapi32))))
	if mod != 0 {
		fmt.Println(netapi32+":", "found")
	} else {
		fmt.Println(netapi32+":", "not found")
	}
}
-- p.go --
package main

import "os/user"

func main() {
    user.Current()
    hasModuleHandle()
}
