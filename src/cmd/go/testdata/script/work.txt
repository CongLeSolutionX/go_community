go mod initwork ./a ./b
# TODO(matloob): bring back the ./ paths
cmp go.work go.work.want

go run example.com/b
stdout 'Hello from module A'

# And try from a different directory
cd c
go run example.com/b
stdout 'Hello from module A'
cd $GOPATH/src

go list all # all includes both modules
stdout 'example.com/a'
stdout 'example.com/b'

cd walk
go mod initwork ./...
stderr '^WARNING:'
cmp go.work go.work.want

-- go.work.want --
go 1.17

directory (
	a
	b
)
-- a/go.mod --

module example.com/a

-- a/a.go --
package a

import "fmt"

func HelloFromA() {
  fmt.Println("Hello from module A")
}

-- b/go.mod --

module example.com/b

-- b/main.go --
package main

import "example.com/a"

func main() {
  a.HelloFromA()
}

-- c/README --
Create this directory so we can cd to
it and make sure paths are interpreted
relative to the go.work, not the cwd.
-- walk/patha/go.mod --
-- walk/go.mod --
-- walk/pathb/element/go.mod --
-- walk/go.work.want --
go 1.17

directory (
	.
	patha
	pathb/element
)
