// generated by stringer -type=Op; DO NOT EDIT

package ssa

import "fmt"

const (
	_Op_name_0 = "opGenericBaseOpAddOpSubOpMulOpLessOpConstOpArgOpGlobalOpFuncOpCopyOpPhiOpSliceMakeOpSlicePtrOpSliceLenOpSliceCapOpStringMakeOpStringPtrOpStringLenOpLoadOpStoreOpSliceIndexOpCheckNilOpCheckBoundOpCallOpStaticCallOpConvertOpConvNopOpFPAddrOpSPAddrOpStoreReg8OpLoadReg8OpFwdRef"
	_Op_name_1 = "opAmd64BaseOpADDQOpSUBQOpADDCQOpSUBCQOpMULQOpMULCQOpSHLQOpSHLCQOpNEGQOpADDLOpCMPQOpCMPCQOpTESTQOpSETEQOpSETNEOpSETLOpSETGEOpSETBOpInvertFlagsOpLEAQOpLEAQ2OpLEAQ4OpLEAQ8OpMOVQloadOpMOVQstoreOpMOVQloadidx8OpMOVQstoreidx8OpMOVQloadglobalOpMOVQstoreglobalOpMOVQloadFPOpMOVQloadSPOpMOVQstoreFPOpMOVQstoreSPOpMOVQconst"
	_Op_name_2 = "op386Base"
	_Op_name_3 = "opMax"
)

var (
	_Op_index_0 = [...]uint16{0, 13, 18, 23, 28, 34, 41, 46, 54, 60, 66, 71, 82, 92, 102, 112, 124, 135, 146, 152, 159, 171, 181, 193, 199, 211, 220, 229, 237, 245, 256, 266, 274}
	_Op_index_1 = [...]uint16{0, 11, 17, 23, 30, 37, 43, 50, 56, 63, 69, 75, 81, 88, 95, 102, 109, 115, 122, 128, 141, 147, 154, 161, 168, 178, 189, 203, 218, 234, 251, 263, 275, 288, 301, 312}
	_Op_index_2 = [...]uint8{0, 9}
	_Op_index_3 = [...]uint8{0, 5}
)

func (i Op) String() string {
	switch {
	case 1 <= i && i <= 32:
		i -= 1
		return _Op_name_0[_Op_index_0[i]:_Op_index_0[i+1]]
	case 1001 <= i && i <= 1035:
		i -= 1001
		return _Op_name_1[_Op_index_1[i]:_Op_index_1[i+1]]
	case i == 2001:
		return _Op_name_2
	case i == 3001:
		return _Op_name_3
	default:
		return fmt.Sprintf("Op(%d)", i)
	}
}
