// Code generated by instgen. DO NOT EDIT.

// The file contains the arm64 instruction table, which is created by parsing
// the xml document https://developer.arm.com/downloads/-/exploration-tools.

package arm64

var instTab = []inst{
	// ABS  <Wd>, <Wn>
	{AABSW, aABS, FEAT_CSSC, 0x5ac02000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ABS  <Xd>, <Xn>
	{AABS, aABS, FEAT_CSSC, 0xdac02000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ABS  <V><d>, <V><n>
	{AVABSD, aABS, FEAT_NONE, 0x5ee0b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// ABS  <Vd>.<T>, <Vn>.<T>
	{AVABS, aABS, FEAT_NONE, 0xe20b800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// ABS  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZABS, aABS, FEAT_NONE, 0x416a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ADC  <Wd>, <Wn>, <Wm>
	{AADCW, aADC, FEAT_NONE, 0x1a000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ADC  <Xd>, <Xn>, <Xm>
	{AADC, aADC, FEAT_NONE, 0x9a000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ADCLB  <Zda>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZADCLB, aADCLB, FEAT_NONE, 0x4500d000, 0xffa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__sz__D_S,
		}},
	}},

	// ADCLT  <Zda>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZADCLT, aADCLT, FEAT_NONE, 0x4500d400, 0xffa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__sz__D_S,
		}},
	}},

	// ADCS  <Wd>, <Wn>, <Wm>
	{AADCSW, aADCS, FEAT_NONE, 0x3a000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ADCS  <Xd>, <Xn>, <Xm>
	{AADCS, aADCS, FEAT_NONE, 0xba000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ADD  <Wd>, <Wn>, <Wm>
	{AADDW, aADD, FEAT_NONE, 0xb000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ADD  <Xd>, <Xn>, <Xm>
	{AADD, aADD, FEAT_NONE, 0x8b000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ADD  <Wd>, <Wn>, <Wm>{, <shift> #<amount>}
	{AADDW, aADD, FEAT_NONE, 0xb000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ADD  <Xd>, <Xn>, <Xm>{, <shift> #<amount>}
	{AADD, aADD, FEAT_NONE, 0x8b000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ADD  <Wd|WSP>, <Wn|WSP>, <Wm>
	{AADDW, aADD, FEAT_NONE, 0xb204000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_wd_wsp__Rd,
		}},
	}},

	// ADD  <Xd|SP>, <Xn|SP>, <R><m>
	{AADD, aADD, FEAT_NONE, 0x8b206000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_r__option__W_X,
			sa_m__Rm,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// ADD  <Wd|WSP>, <Wn|WSP>, <Wm>{, <extend> {#<amount>}}
	{AADDW, aADD, FEAT_NONE, 0xb200000, 0xffe00000, false, []arg{
		{AC_REGEXT, []elmType{
			sa_wm__Rm,
			sa_extend__option__LSL_SXTB_SXTH_SXTW_SXTX_UXTB_UXTH_UXTW_UXTX,
			sa_amount__imm3,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_wd_wsp__Rd,
		}},
	}},

	// ADD  <Xd|SP>, <Xn|SP>, <R><m>{, <extend> {#<amount>}}
	{AADD, aADD, FEAT_NONE, 0x8b200000, 0xffe00000, false, []arg{
		{AC_REGEXT, []elmType{
			sa_r__option__W_X,
			sa_m__Rm,
			sa_extend_1__option__LSL_SXTB_SXTH_SXTW_SXTX_UXTB_UXTH_UXTW_UXTX,
			sa_amount__imm3,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// ADD  <Wd|WSP>, <Wn|WSP>, #<imm>{, <shift>}
	{AADDW, aADD, FEAT_NONE, 0x11000000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm12,
			sa_shift__sh__LSL_0_LSL_12,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_wd_wsp__Rd,
		}},
	}},

	// ADD  <Xd|SP>, <Xn|SP>, #<imm>{, <shift>}
	{AADD, aADD, FEAT_NONE, 0x91000000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm12,
			sa_shift__sh__LSL_0_LSL_12,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// ADD  <V><d>, <V><n>, <V><m>
	{AVADD, aADD, FEAT_NONE, 0x5ee08400, 0xffe0fc00, false, []arg{
		{AC_VREG, []elmType{
			sa_v__size__D,
			sa_m__Rm,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// ADD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVADD, aADD, FEAT_NONE, 0xe208400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// ADD  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZADD, aADD, FEAT_NONE, 0x4200000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ADD  <Zdn>.<T>, <Zdn>.<T>, #<imm>{, <shift>}
	{AZADD, aADD, FEAT_NONE, 0x2520c000, 0xff3fc000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
			sa_shift__sh__LSL_0_LSL_8,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ADD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZADD, aADD, FEAT_NONE, 0x4000000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ADD  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zm1>.<T>-<Zm2>.<T> }
	{AZADD, aADD, FEAT_SME2, 0xc1a01c10, 0xffbf9c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_9_4,
			sa_t__sz__D_S,
			sa_zm2__Zm_9_4,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// ADD  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zm1>.<T>-<Zm4>.<T> }
	{AZADD, aADD, FEAT_SME2, 0xc1a11c10, 0xffbf9c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_9_3,
			sa_t__sz__D_S,
			sa_zm4__Zm_9_3,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// ADD  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zn1>.<T>-<Zn2>.<T> }, <Zm>.<T>
	{AZADD, aADD, FEAT_SME2, 0xc1201810, 0xffb09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_t__sz__D_S,
			sa_zn2__Zn_9_5,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// ADD  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zn1>.<T>-<Zn4>.<T> }, <Zm>.<T>
	{AZADD, aADD, FEAT_SME2, 0xc1301810, 0xffb09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_t__sz__D_S,
			sa_zn4__Zn_9_5,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// ADD  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, <Zm>.<T>
	{AZADD, aADD, FEAT_SME2, 0xc120a300, 0xff30ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ADD  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, <Zm>.<T>
	{AZADD, aADD, FEAT_SME2, 0xc120ab00, 0xff30ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ADD  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zn1>.<T>-<Zn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZADD, aADD, FEAT_SME2, 0xc1a01810, 0xffa19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__sz__D_S,
			sa_zm2__Zm_20_4,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_t__sz__D_S,
			sa_zn2__Zn_9_4,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// ADD  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zn1>.<T>-<Zn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZADD, aADD, FEAT_SME2, 0xc1a11810, 0xffa39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__sz__D_S,
			sa_zm4__Zm_20_3,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_t__sz__D_S,
			sa_zn4__Zn_9_3,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// ADDG  <Xd|SP>, <Xn|SP>, #<uimm6>, #<uimm4>
	{AADDG, aADDG, FEAT_MTE, 0x91800000, 0xffc0c000, false, []arg{
		{AC_IMM, []elmType{
			sa_uimm4__uimm4,
		}},
		{AC_IMM, []elmType{
			sa_uimm6__uimm6,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Xn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Xd,
		}},
	}},

	// ADDHA  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.S
	{AZADDHA, aADDHA, FEAT_SME, 0xc0900000, 0xffff001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// ADDHA  <ZAda>.D, <Pn>/M, <Pm>/M, <Zn>.D
	{AZADDHA, aADDHA, FEAT_SME_I16I64, 0xc0d00000, 0xffff0018, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_1__ZAda,
			sa_const_ARNG_D,
		}},
	}},

	// ADDHN  <Vd>.<Tb>, <Vn>.<Ta>, <Vm>.<Ta>
	{AVADDHN, aADDHN, FEAT_NONE, 0xe204000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// ADDHN2  <Vd>.<Tb>, <Vn>.<Ta>, <Vm>.<Ta>
	{AVADDHN2, aADDHN2, FEAT_NONE, 0x4e204000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// ADDHNB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZADDHNB, aADDHNB, FEAT_NONE, 0x45206000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// ADDHNT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZADDHNT, aADDHNT, FEAT_NONE, 0x45206400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// ADDP  <V><d>, <Vn>.<T>
	{AVADDP, aADDP, FEAT_NONE, 0x5e31b800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size__2D,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// ADDP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVADDP, aADDP, FEAT_NONE, 0xe20bc00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// ADDP  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZADDP, aADDP, FEAT_NONE, 0x4411a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ADDPL  <Xd|SP>, <Xn|SP>, #<imm>
	{AADDPL, aADDPL, FEAT_NONE, 0x4605000, 0xffe0f800, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm6_10_6,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// ADDQV  <Vd>.<T>, <Pg>, <Zn>.<Tb>
	{AZADDQV, aADDQV, FEAT_SVE2p1, 0x4052000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Vd,
			sa_t__size__2D_4S_8H_16B,
		}},
	}},

	// ADDS  <Wd>, <Wn>, <Wm>
	{AADDSW, aADDS, FEAT_NONE, 0x2b000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ADDS  <Xd>, <Xn>, <Xm>
	{AADDS, aADDS, FEAT_NONE, 0xab000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ADDS  <Wd>, <Wn>, <Wm>{, <shift> #<amount>}
	{AADDSW, aADDS, FEAT_NONE, 0x2b000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ADDS  <Xd>, <Xn>, <Xm>{, <shift> #<amount>}
	{AADDS, aADDS, FEAT_NONE, 0xab000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ADDS  <Wd>, <Wn|WSP>, <Wm>
	{AADDSW, aADDS, FEAT_NONE, 0x2b204000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ADDS  <Xd>, <Xn|SP>, <R><m>
	{AADDS, aADDS, FEAT_NONE, 0xab206000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_r__option__W_X,
			sa_m__Rm,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ADDS  <Wd>, <Wn|WSP>, <Wm>{, <extend> {#<amount>}}
	{AADDSW, aADDS, FEAT_NONE, 0x2b200000, 0xffe00000, false, []arg{
		{AC_REGEXT, []elmType{
			sa_wm__Rm,
			sa_extend__option__LSL_SXTB_SXTH_SXTW_SXTX_UXTB_UXTH_UXTW_UXTX,
			sa_amount__imm3,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ADDS  <Xd>, <Xn|SP>, <R><m>{, <extend> {#<amount>}}
	{AADDS, aADDS, FEAT_NONE, 0xab200000, 0xffe00000, false, []arg{
		{AC_REGEXT, []elmType{
			sa_r__option__W_X,
			sa_m__Rm,
			sa_extend_1__option__LSL_SXTB_SXTH_SXTW_SXTX_UXTB_UXTH_UXTW_UXTX,
			sa_amount__imm3,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ADDS  <Wd>, <Wn|WSP>, #<imm>{, <shift>}
	{AADDSW, aADDS, FEAT_NONE, 0x31000000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm12,
			sa_shift__sh__LSL_0_LSL_12,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ADDS  <Xd>, <Xn|SP>, #<imm>{, <shift>}
	{AADDS, aADDS, FEAT_NONE, 0xb1000000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm12,
			sa_shift__sh__LSL_0_LSL_12,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ADDSPL  <Xd|SP>, <Xn|SP>, #<imm>
	{AADDSPL, aADDSPL, FEAT_SME, 0x4605800, 0xffe0f800, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm6_10_6,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// ADDSVL  <Xd|SP>, <Xn|SP>, #<imm>
	{AADDSVL, aADDSVL, FEAT_SME, 0x4205800, 0xffe0f800, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm6_10_6,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// ADDV  <V><d>, <Vn>.<T>
	{AVADDV, aADDV, FEAT_NONE, 0xe31b800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__4H_4S_8B_8H_16B,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// ADDVA  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.S
	{AZADDVA, aADDVA, FEAT_SME, 0xc0910000, 0xffff001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// ADDVA  <ZAda>.D, <Pn>/M, <Pm>/M, <Zn>.D
	{AZADDVA, aADDVA, FEAT_SME_I16I64, 0xc0d10000, 0xffff0018, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_1__ZAda,
			sa_const_ARNG_D,
		}},
	}},

	// ADDVL  <Xd|SP>, <Xn|SP>, #<imm>
	{AADDVL, aADDVL, FEAT_NONE, 0x4205000, 0xffe0f800, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm6_10_6,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// ADR  <Xd>, <label>
	{AADR, aADR, FEAT_NONE, 0x10000000, 0x9f000000, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__immhi_immlo,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ADR  <Zd>.<T>, [<Zn>.<T>, <Zm>.<T>{, <mod> <amount>}]
	{AZADR, aADR, FEAT_NONE, 0x4a0a000, 0xffa0f000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_t__sz__D_S,
			sa_zm__Zm_20_5,
			sa_t__sz__D_S,
			sa_mod__msz,
			sa_amount__msz,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__sz__D_S,
		}},
	}},

	// ADR  <Zd>.D, [<Zn>.D, <Zm>.D, SXTW{ <amount>}]
	{AZADR, aADR, FEAT_NONE, 0x420a000, 0xffe0f000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_SXTW,
			sa_amount__msz,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// ADR  <Zd>.D, [<Zn>.D, <Zm>.D, UXTW{ <amount>}]
	{AZADR, aADR, FEAT_NONE, 0x460a000, 0xffe0f000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_UXTW,
			sa_amount__msz,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// ADRP  <Xd>, <label>
	{AADRP, aADRP, FEAT_NONE, 0x90000000, 0x9f000000, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__immhi_immlo,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// AESD  <Vd>.16B, <Vn>.16B
	{AAESD, aAESD, FEAT_AES, 0x4e285800, 0xfffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_16B,
		}},
	}},

	// AESD  <Zdn>.B, <Zdn>.B, <Zm>.B
	{AAESD, aAESD, FEAT_SVE_AES, 0x4522e400, 0xfffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_B,
		}},
	}},

	// AESE  <Vd>.16B, <Vn>.16B
	{AAESE, aAESE, FEAT_AES, 0x4e284800, 0xfffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_16B,
		}},
	}},

	// AESE  <Zdn>.B, <Zdn>.B, <Zm>.B
	{AAESE, aAESE, FEAT_SVE_AES, 0x4522e000, 0xfffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_B,
		}},
	}},

	// AESIMC  <Vd>.16B, <Vn>.16B
	{AAESIMC, aAESIMC, FEAT_AES, 0x4e287800, 0xfffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_16B,
		}},
	}},

	// AESIMC  <Zdn>.B, <Zdn>.B
	{AAESIMC, aAESIMC, FEAT_SVE_AES, 0x4520e400, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_B,
		}},
	}},

	// AESMC  <Vd>.16B, <Vn>.16B
	{AAESMC, aAESMC, FEAT_AES, 0x4e286800, 0xfffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_16B,
		}},
	}},

	// AESMC  <Zdn>.B, <Zdn>.B
	{AAESMC, aAESMC, FEAT_SVE_AES, 0x4520e000, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_B,
		}},
	}},

	// AND  <Wd>, <Wn>, <Wm>
	{AANDW, aAND, FEAT_NONE, 0xa000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// AND  <Xd>, <Xn>, <Xm>
	{AAND, aAND, FEAT_NONE, 0x8a000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// AND  <Wd>, <Wn>, <Wm>{, <shift> #<amount>}
	{AANDW, aAND, FEAT_NONE, 0xa000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// AND  <Xd>, <Xn>, <Xm>{, <shift> #<amount>}
	{AAND, aAND, FEAT_NONE, 0x8a000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// AND  <Wd|WSP>, <Wn>, #<imm>
	{AANDW, aAND, FEAT_NONE, 0x12000000, 0xffc00000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imms_immr,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_RSP, []elmType{
			sa_wd_wsp__Rd,
		}},
	}},

	// AND  <Xd|SP>, <Xn>, #<imm>
	{AAND, aAND, FEAT_NONE, 0x92000000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm_1__N_imms_immr,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// AND  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVAND, aAND, FEAT_NONE, 0xe201c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__8B_16B,
		}},
	}},

	// AND  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APAND, aAND, FEAT_NONE, 0x25004000, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// AND  <Zd>.D, <Zn>.D, <Zm>.D
	{AZAND, aAND, FEAT_NONE, 0x4203000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// AND  <Zdn>.<T>, <Zdn>.<T>, #<const>
	{AZAND, aAND, FEAT_NONE, 0x5800000, 0xfffc0000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__imm13,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
	}},

	// AND  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZAND, aAND, FEAT_NONE, 0x41a0000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ANDQV  <Vd>.<T>, <Pg>, <Zn>.<Tb>
	{AZANDQV, aANDQV, FEAT_SVE2p1, 0x41e2000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Vd,
			sa_t__size__2D_4S_8H_16B,
		}},
	}},

	// ANDS  <Wd>, <Wn>, <Wm>
	{AANDSW, aANDS, FEAT_NONE, 0x6a000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ANDS  <Xd>, <Xn>, <Xm>
	{AANDS, aANDS, FEAT_NONE, 0xea000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ANDS  <Wd>, <Wn>, <Wm>{, <shift> #<amount>}
	{AANDSW, aANDS, FEAT_NONE, 0x6a000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ANDS  <Xd>, <Xn>, <Xm>{, <shift> #<amount>}
	{AANDS, aANDS, FEAT_NONE, 0xea000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ANDS  <Wd>, <Wn>, #<imm>
	{AANDSW, aANDS, FEAT_NONE, 0x72000000, 0xffc00000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imms_immr,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ANDS  <Xd>, <Xn>, #<imm>
	{AANDS, aANDS, FEAT_NONE, 0xf2000000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm_1__N_imms_immr,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ANDS  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APANDS, aANDS, FEAT_NONE, 0x25404000, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// ANDV  <V><d>, <Pg>, <Zn>.<T>
	{AZANDV, aANDV, FEAT_NONE, 0x41a2000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Vd,
		}},
	}},

	// ASR  <Wd>, <Wn>, #<shift>
	{AASRW, aASR, FEAT_NONE, 0x13007c00, 0xffc0fc00, true, []arg{
		{AC_IMM, []elmType{
			sa_shift__immr,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ASR  <Xd>, <Xn>, #<shift>
	{AASR, aASR, FEAT_NONE, 0x9340fc00, 0xffc0fc00, true, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immr,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ASR  <Wd>, <Wn>, <Wm>
	{AASRW, aASR, FEAT_NONE, 0x1ac02800, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ASR  <Xd>, <Xn>, <Xm>
	{AASR, aASR, FEAT_NONE, 0x9ac02800, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ASR  <Zd>.<T>, <Zn>.<T>, <Zm>.D
	{AZASR, aASR, FEAT_NONE, 0x4208000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// ASR  <Zd>.<T>, <Zn>.<T>, #<const>
	{AZASR, aASR, FEAT_NONE, 0x4209000, 0xff20fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
	}},

	// ASR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, #<const>
	{AZASR, aASR, FEAT_NONE, 0x4008000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_9_2_imm3_7_3,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
	}},

	// ASR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZASR, aASR, FEAT_NONE, 0x4108000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ASR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.D
	{AZASR, aASR, FEAT_NONE, 0x4188000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// ASRD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, #<const>
	{AZASRD, aASRD, FEAT_NONE, 0x4048000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_9_2_imm3_7_3,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
	}},

	// ASRR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZASRR, aASRR, FEAT_NONE, 0x4148000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ASRV  <Wd>, <Wn>, <Wm>
	{AASRVW, aASRV, FEAT_NONE, 0x1ac02800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ASRV  <Xd>, <Xn>, <Xm>
	{AASRV, aASRV, FEAT_NONE, 0x9ac02800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// AT  <at_op>, <Xt>
	{AAT, aAT, FEAT_NONE, 0xd5087800, 0xfff8fe00, true, []arg{
		{AC_SPOP, []elmType{
			sa_at_op__op1_CRm_0_op2,
		}},
		{AC_REG, []elmType{
			sa_xt_1__Rt,
		}},
	}},

	// AUTDA  <Xd>, <Xn|SP>
	{AAUTDA, aAUTDA, FEAT_PAuth, 0xdac11800, 0xfffffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// AUTDZA  <Xd>
	{AAUTDZA, aAUTDZA, FEAT_PAuth, 0xdac13be0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// AUTDB  <Xd>, <Xn|SP>
	{AAUTDB, aAUTDB, FEAT_PAuth, 0xdac11c00, 0xfffffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// AUTDZB  <Xd>
	{AAUTDZB, aAUTDZB, FEAT_PAuth, 0xdac13fe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// AUTIA  <Xd>, <Xn|SP>
	{AAUTIA, aAUTIA, FEAT_PAuth, 0xdac11000, 0xfffffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// AUTIZA  <Xd>
	{AAUTIZA, aAUTIZA, FEAT_PAuth, 0xdac133e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// AUTIA1716
	{AAUTIA1716, aAUTIA1716, FEAT_PAuth, 0xd503219f, 0xffffffff, false, nil},

	// AUTIASP
	{AAUTIASP, aAUTIASP, FEAT_PAuth, 0xd50323bf, 0xffffffff, false, nil},

	// AUTIAZ
	{AAUTIAZ, aAUTIAZ, FEAT_PAuth, 0xd503239f, 0xffffffff, false, nil},

	// AUTIB  <Xd>, <Xn|SP>
	{AAUTIB, aAUTIB, FEAT_PAuth, 0xdac11400, 0xfffffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// AUTIZB  <Xd>
	{AAUTIZB, aAUTIZB, FEAT_PAuth, 0xdac137e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// AUTIB1716
	{AAUTIB1716, aAUTIB1716, FEAT_PAuth, 0xd50321df, 0xffffffff, false, nil},

	// AUTIBSP
	{AAUTIBSP, aAUTIBSP, FEAT_PAuth, 0xd50323ff, 0xffffffff, false, nil},

	// AUTIBZ
	{AAUTIBZ, aAUTIBZ, FEAT_PAuth, 0xd50323df, 0xffffffff, false, nil},

	// AXFLAG
	{AAXFLAG, aAXFLAG, FEAT_FlagM2, 0xd500405f, 0xffffffff, false, nil},

	// B  <label>
	{AB, aB, FEAT_NONE, 0x14000000, 0xfc000000, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm26,
		}},
	}},

	// BCAX  <Vd>.16B, <Vn>.16B, <Vm>.16B, <Va>.16B
	{AVBCAX, aBCAX, FEAT_SHA3, 0xce200000, 0xffe08000, false, []arg{
		{AC_ARNG, []elmType{
			sa_va__Ra,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_16B,
		}},
	}},

	// BCAX  <Zdn>.D, <Zdn>.D, <Zm>.D, <Zk>.D
	{AZBCAX, aBCAX, FEAT_NONE, 0x4603800, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zk__Zk,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// BCEQ  <label>
	{ABCEQ, aBCEQ, FEAT_HBC, 0x54000010, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCNE  <label>
	{ABCNE, aBCNE, FEAT_HBC, 0x54000011, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCCS  <label>
	{ABCCS, aBCCS, FEAT_HBC, 0x54000012, 0xff00001f, true, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCHS  <label>
	{ABCHS, aBCHS, FEAT_HBC, 0x54000012, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCCC  <label>
	{ABCCC, aBCCC, FEAT_HBC, 0x54000013, 0xff00001f, true, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCLO  <label>
	{ABCLO, aBCLO, FEAT_HBC, 0x54000013, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCMI  <label>
	{ABCMI, aBCMI, FEAT_HBC, 0x54000014, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCPL  <label>
	{ABCPL, aBCPL, FEAT_HBC, 0x54000015, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCVS  <label>
	{ABCVS, aBCVS, FEAT_HBC, 0x54000016, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCVC  <label>
	{ABCVC, aBCVC, FEAT_HBC, 0x54000017, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCHI  <label>
	{ABCHI, aBCHI, FEAT_HBC, 0x54000018, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCLS  <label>
	{ABCLS, aBCLS, FEAT_HBC, 0x54000019, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCGE  <label>
	{ABCGE, aBCGE, FEAT_HBC, 0x5400001a, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCLT  <label>
	{ABCLT, aBCLT, FEAT_HBC, 0x5400001b, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCGT  <label>
	{ABCGT, aBCGT, FEAT_HBC, 0x5400001c, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCLE  <label>
	{ABCLE, aBCLE, FEAT_HBC, 0x5400001d, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BDEP  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZBDEP, aBDEP, FEAT_SVE_BitPerm, 0x4500b400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// BEQ  <label>
	{ABEQ, aBEQ, FEAT_NONE, 0x54000000, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BNE  <label>
	{ABNE, aBNE, FEAT_NONE, 0x54000001, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCS  <label>
	{ABCS, aBCS, FEAT_NONE, 0x54000002, 0xff00001f, true, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BHS  <label>
	{ABHS, aBHS, FEAT_NONE, 0x54000002, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BCC  <label>
	{ABCC, aBCC, FEAT_NONE, 0x54000003, 0xff00001f, true, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BLO  <label>
	{ABLO, aBLO, FEAT_NONE, 0x54000003, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BMI  <label>
	{ABMI, aBMI, FEAT_NONE, 0x54000004, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BPL  <label>
	{ABPL, aBPL, FEAT_NONE, 0x54000005, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BVS  <label>
	{ABVS, aBVS, FEAT_NONE, 0x54000006, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BVC  <label>
	{ABVC, aBVC, FEAT_NONE, 0x54000007, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BHI  <label>
	{ABHI, aBHI, FEAT_NONE, 0x54000008, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BLS  <label>
	{ABLS, aBLS, FEAT_NONE, 0x54000009, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BGE  <label>
	{ABGE, aBGE, FEAT_NONE, 0x5400000a, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BLT  <label>
	{ABLT, aBLT, FEAT_NONE, 0x5400000b, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BGT  <label>
	{ABGT, aBGT, FEAT_NONE, 0x5400000c, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BLE  <label>
	{ABLE, aBLE, FEAT_NONE, 0x5400000d, 0xff00001f, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// BEXT  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZBEXT, aBEXT, FEAT_SVE_BitPerm, 0x4500b000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// BFADD  <Zd>.H, <Zn>.H, <Zm>.H
	{AZBFADD, aBFADD, FEAT_SVE_B16B16, 0x65000000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// BFADD  <Zdn>.H, <Pg>/M, <Zdn>.H, <Zm>.H
	{AZBFADD, aBFADD, FEAT_SVE_B16B16, 0x65008000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// BFADD  ZA.H[<Wv>, <offs>{, VGx2}], { <Zm1>.H-<Zm2>.H }
	{AZBFADD, aBFADD, FEAT_SVE_B16B16, 0xc1e41c00, 0xffff9c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_9_4,
			sa_zm2__Zm_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// BFADD  ZA.H[<Wv>, <offs>{, VGx4}], { <Zm1>.H-<Zm4>.H }
	{AZBFADD, aBFADD, FEAT_SVE_B16B16, 0xc1e51c00, 0xffff9c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_9_3,
			sa_zm4__Zm_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// BFC  <Wd>, #<lsb>, #<width>
	{ABFCW, aBFC, FEAT_ASMv8p2, 0x330003e0, 0xffc003e0, true, []arg{
		{AC_IMM, []elmType{
			sa_width,
		}},
		{AC_IMM, []elmType{
			sa_lsb,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// BFC  <Xd>, #<lsb>, #<width>
	{ABFC, aBFC, FEAT_ASMv8p2, 0xb34003e0, 0xffc003e0, true, []arg{
		{AC_IMM, []elmType{
			sa_width_1,
		}},
		{AC_IMM, []elmType{
			sa_lsb_2,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// BFCLAMP  <Zd>.H, <Zn>.H, <Zm>.H
	{AZBFCLAMP, aBFCLAMP, FEAT_SVE_B16B16, 0x64202400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// BFCLAMP  { <Zd1>.H-<Zd2>.H }, <Zn>.H, <Zm>.H
	{AZBFCLAMP, aBFCLAMP, FEAT_SVE_B16B16, 0xc120c000, 0xffe0fc01, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_H,
		}},
	}},

	// BFCLAMP  { <Zd1>.H-<Zd4>.H }, <Zn>.H, <Zm>.H
	{AZBFCLAMP, aBFCLAMP, FEAT_SVE_B16B16, 0xc120c800, 0xffe0fc03, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_zd4__Zd,
			sa_const_REGLIST4_H,
		}},
	}},

	// BFCVT  <Hd>, <Sn>
	{ABFCVT, aBFCVT, FEAT_BF16, 0x1e634000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// BFCVT  <Zd>.H, <Pg>/M, <Zn>.S
	{AZBFCVT, aBFCVT, FEAT_BF16, 0x658aa000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// BFCVT  <Zd>.H, { <Zn1>.S-<Zn2>.S }
	{AZBFCVT, aBFCVT, FEAT_SME2, 0xc160e000, 0xfffffc20, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// BFCVTN  <Vd>.<Ta>, <Vn>.4S
	{AVBFCVTN, aBFCVTN, FEAT_BF16, 0xea16800, 0xfffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__4H_8H,
		}},
	}},

	// BFCVTN2  <Vd>.<Ta>, <Vn>.4S
	{AVBFCVTN2, aBFCVTN2, FEAT_BF16, 0x4ea16800, 0xfffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__4H_8H,
		}},
	}},

	// BFCVTN  <Zd>.H, { <Zn1>.S-<Zn2>.S }
	{AZBFCVTN, aBFCVTN, FEAT_SME2, 0xc160e020, 0xfffffc20, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// BFCVTNT  <Zd>.H, <Pg>/M, <Zn>.S
	{AZBFCVTNT, aBFCVTNT, FEAT_BF16, 0x648aa000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// BFDOT  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.2H[<index>]
	{AVBFDOT, aBFDOT, FEAT_BF16, 0xf40f000, 0xbfc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__M_Rm,
			sa_const_ARNGIDX_2H,
			sa_index__H_L,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// BFDOT  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVBFDOT, aBFDOT, FEAT_BF16, 0x2e40fc00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// BFDOT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZBFDOT, aBFDOT, FEAT_BF16, 0x64604000, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// BFDOT  <Zda>.S, <Zn>.H, <Zm>.H
	{AZBFDOT, aBFDOT, FEAT_BF16, 0x64608000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// BFDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZBFDOT, aBFDOT, FEAT_SME2, 0xc1201010, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// BFDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZBFDOT, aBFDOT, FEAT_SME2, 0xc1301010, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// BFDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZBFDOT, aBFDOT, FEAT_SME2, 0xc1501018, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// BFDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZBFDOT, aBFDOT, FEAT_SME2, 0xc1509018, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// BFDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZBFDOT, aBFDOT, FEAT_SME2, 0xc1a01010, 0xffe19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// BFDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZBFDOT, aBFDOT, FEAT_SME2, 0xc1a11010, 0xffe39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// BFI  <Wd>, <Wn>, #<lsb>, #<width>
	{ABFIW, aBFI, FEAT_NONE, 0x33000000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_lsb,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_width,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// BFI  <Xd>, <Xn>, #<lsb>, #<width>
	{ABFI, aBFI, FEAT_NONE, 0xb3400000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_lsb_2,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_width_1,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// BFM  <Wd>, <Wn>, #<immr>, #<imms>
	{ABFMW, aBFM, FEAT_NONE, 0x33000000, 0xffc00000, false, []arg{
		{AC_IMM, []elmType{
			sa_immr__immr,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_imms__imms,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// BFM  <Xd>, <Xn>, #<immr>, #<imms>
	{ABFM, aBFM, FEAT_NONE, 0xb3400000, 0xffc00000, false, []arg{
		{AC_IMM, []elmType{
			sa_immr_1__immr,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_imms_1__imms,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// BFMAX  <Zdn>.H, <Pg>/M, <Zdn>.H, <Zm>.H
	{AZBFMAX, aBFMAX, FEAT_SVE_B16B16, 0x65068000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// BFMAX  { <Zdn1>.H-<Zdn2>.H }, { <Zdn1>.H-<Zdn2>.H }, <Zm>.H
	{AZBFMAX, aBFMAX, FEAT_SVE_B16B16, 0xc120a100, 0xfff0ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
	}},

	// BFMAX  { <Zdn1>.H-<Zdn4>.H }, { <Zdn1>.H-<Zdn4>.H }, <Zm>.H
	{AZBFMAX, aBFMAX, FEAT_SVE_B16B16, 0xc120a900, 0xfff0ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
	}},

	// BFMAX  { <Zdn1>.H-<Zdn2>.H }, { <Zdn1>.H-<Zdn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZBFMAX, aBFMAX, FEAT_SVE_B16B16, 0xc120b100, 0xffe1ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
	}},

	// BFMAX  { <Zdn1>.H-<Zdn4>.H }, { <Zdn1>.H-<Zdn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZBFMAX, aBFMAX, FEAT_SVE_B16B16, 0xc120b900, 0xffe3ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
	}},

	// BFMAXNM  <Zdn>.H, <Pg>/M, <Zdn>.H, <Zm>.H
	{AZBFMAXNM, aBFMAXNM, FEAT_SVE_B16B16, 0x65048000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// BFMAXNM  { <Zdn1>.H-<Zdn2>.H }, { <Zdn1>.H-<Zdn2>.H }, <Zm>.H
	{AZBFMAXNM, aBFMAXNM, FEAT_SVE_B16B16, 0xc120a120, 0xfff0ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
	}},

	// BFMAXNM  { <Zdn1>.H-<Zdn4>.H }, { <Zdn1>.H-<Zdn4>.H }, <Zm>.H
	{AZBFMAXNM, aBFMAXNM, FEAT_SVE_B16B16, 0xc120a920, 0xfff0ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
	}},

	// BFMAXNM  { <Zdn1>.H-<Zdn2>.H }, { <Zdn1>.H-<Zdn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZBFMAXNM, aBFMAXNM, FEAT_SVE_B16B16, 0xc120b120, 0xffe1ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
	}},

	// BFMAXNM  { <Zdn1>.H-<Zdn4>.H }, { <Zdn1>.H-<Zdn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZBFMAXNM, aBFMAXNM, FEAT_SVE_B16B16, 0xc120b920, 0xffe3ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
	}},

	// BFMIN  <Zdn>.H, <Pg>/M, <Zdn>.H, <Zm>.H
	{AZBFMIN, aBFMIN, FEAT_SVE_B16B16, 0x65078000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// BFMIN  { <Zdn1>.H-<Zdn2>.H }, { <Zdn1>.H-<Zdn2>.H }, <Zm>.H
	{AZBFMIN, aBFMIN, FEAT_SVE_B16B16, 0xc120a101, 0xfff0ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
	}},

	// BFMIN  { <Zdn1>.H-<Zdn4>.H }, { <Zdn1>.H-<Zdn4>.H }, <Zm>.H
	{AZBFMIN, aBFMIN, FEAT_SVE_B16B16, 0xc120a901, 0xfff0ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
	}},

	// BFMIN  { <Zdn1>.H-<Zdn2>.H }, { <Zdn1>.H-<Zdn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZBFMIN, aBFMIN, FEAT_SVE_B16B16, 0xc120b101, 0xffe1ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
	}},

	// BFMIN  { <Zdn1>.H-<Zdn4>.H }, { <Zdn1>.H-<Zdn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZBFMIN, aBFMIN, FEAT_SVE_B16B16, 0xc120b901, 0xffe3ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
	}},

	// BFMINNM  <Zdn>.H, <Pg>/M, <Zdn>.H, <Zm>.H
	{AZBFMINNM, aBFMINNM, FEAT_SVE_B16B16, 0x65058000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// BFMINNM  { <Zdn1>.H-<Zdn2>.H }, { <Zdn1>.H-<Zdn2>.H }, <Zm>.H
	{AZBFMINNM, aBFMINNM, FEAT_SVE_B16B16, 0xc120a121, 0xfff0ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
	}},

	// BFMINNM  { <Zdn1>.H-<Zdn4>.H }, { <Zdn1>.H-<Zdn4>.H }, <Zm>.H
	{AZBFMINNM, aBFMINNM, FEAT_SVE_B16B16, 0xc120a921, 0xfff0ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
	}},

	// BFMINNM  { <Zdn1>.H-<Zdn2>.H }, { <Zdn1>.H-<Zdn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZBFMINNM, aBFMINNM, FEAT_SVE_B16B16, 0xc120b121, 0xffe1ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_zdn2__Zdn,
			sa_const_REGLIST2_H,
		}},
	}},

	// BFMINNM  { <Zdn1>.H-<Zdn4>.H }, { <Zdn1>.H-<Zdn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZBFMINNM, aBFMINNM, FEAT_SVE_B16B16, 0xc120b921, 0xffe3ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_zdn4__Zdn,
			sa_const_REGLIST4_H,
		}},
	}},

	// BFMLA  <Zda>.H, <Zn>.H, <Zm>.H[<imm>]
	{AZBFMLA, aBFMLA, FEAT_SVE_B16B16, 0x64200800, 0xffa0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i3h_22_1_i3l_20_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_H,
		}},
	}},

	// BFMLA  <Zda>.H, <Pg>/M, <Zn>.H, <Zm>.H
	{AZBFMLA, aBFMLA, FEAT_SVE_B16B16, 0x65200000, 0xffe0e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_H,
		}},
	}},

	// BFMLA  ZA.H[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZBFMLA, aBFMLA, FEAT_SVE_B16B16, 0xc1101020, 0xfff09030, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_3_1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// BFMLA  ZA.H[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZBFMLA, aBFMLA, FEAT_SVE_B16B16, 0xc1109020, 0xfff09070, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_3_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// BFMLA  ZA.H[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZBFMLA, aBFMLA, FEAT_SVE_B16B16, 0xc1601c00, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// BFMLA  ZA.H[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZBFMLA, aBFMLA, FEAT_SVE_B16B16, 0xc1701c00, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// BFMLA  ZA.H[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZBFMLA, aBFMLA, FEAT_SVE_B16B16, 0xc1e01008, 0xffe19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// BFMLA  ZA.H[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZBFMLA, aBFMLA, FEAT_SVE_B16B16, 0xc1e11008, 0xffe39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// BFMLAL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H
	{AZBFMLAL, aBFMLAL, FEAT_SME2, 0xc1200c10, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// BFMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZBFMLAL, aBFMLAL, FEAT_SME2, 0xc1200810, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// BFMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZBFMLAL, aBFMLAL, FEAT_SME2, 0xc1300810, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// BFMLAL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H[<index>]
	{AZBFMLAL, aBFMLAL, FEAT_SME2, 0xc1801010, 0xfff01018, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_15_1_i3l_11_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// BFMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZBFMLAL, aBFMLAL, FEAT_SME2, 0xc1901010, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// BFMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZBFMLAL, aBFMLAL, FEAT_SME2, 0xc1909010, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// BFMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZBFMLAL, aBFMLAL, FEAT_SME2, 0xc1a00810, 0xffe19c3c, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// BFMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZBFMLAL, aBFMLAL, FEAT_SME2, 0xc1a10810, 0xffe39c7c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// BFMLALB  <Vd>.4S, <Vn>.8H, <Vm>.H[<index>]
	{AVBFMLALB, aBFMLALB, FEAT_BF16, 0xfc0f000, 0xffc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// BFMLALT  <Vd>.4S, <Vn>.8H, <Vm>.H[<index>]
	{AVBFMLALT, aBFMLALT, FEAT_BF16, 0x4fc0f000, 0xffc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// BFMLALB  <Vd>.4S, <Vn>.8H, <Vm>.8H
	{AVBFMLALB, aBFMLALB, FEAT_BF16, 0x2ec0fc00, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// BFMLALT  <Vd>.4S, <Vn>.8H, <Vm>.8H
	{AVBFMLALT, aBFMLALT, FEAT_BF16, 0x6ec0fc00, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// BFMLALB  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZBFMLALB, aBFMLALB, FEAT_BF16, 0x64e04000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// BFMLALB  <Zda>.S, <Zn>.H, <Zm>.H
	{AZBFMLALB, aBFMLALB, FEAT_BF16, 0x64e08000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// BFMLALT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZBFMLALT, aBFMLALT, FEAT_BF16, 0x64e04400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// BFMLALT  <Zda>.S, <Zn>.H, <Zm>.H
	{AZBFMLALT, aBFMLALT, FEAT_BF16, 0x64e08400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// BFMLS  <Zda>.H, <Zn>.H, <Zm>.H[<imm>]
	{AZBFMLS, aBFMLS, FEAT_SVE_B16B16, 0x64200c00, 0xffa0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i3h_22_1_i3l_20_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_H,
		}},
	}},

	// BFMLS  <Zda>.H, <Pg>/M, <Zn>.H, <Zm>.H
	{AZBFMLS, aBFMLS, FEAT_SVE_B16B16, 0x65202000, 0xffe0e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_H,
		}},
	}},

	// BFMLS  ZA.H[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZBFMLS, aBFMLS, FEAT_SVE_B16B16, 0xc1101030, 0xfff09030, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_3_1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// BFMLS  ZA.H[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZBFMLS, aBFMLS, FEAT_SVE_B16B16, 0xc1109030, 0xfff09070, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_3_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// BFMLS  ZA.H[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZBFMLS, aBFMLS, FEAT_SVE_B16B16, 0xc1601c08, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// BFMLS  ZA.H[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZBFMLS, aBFMLS, FEAT_SVE_B16B16, 0xc1701c08, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// BFMLS  ZA.H[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZBFMLS, aBFMLS, FEAT_SVE_B16B16, 0xc1e01018, 0xffe19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// BFMLS  ZA.H[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZBFMLS, aBFMLS, FEAT_SVE_B16B16, 0xc1e11018, 0xffe39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// BFMLSL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H
	{AZBFMLSL, aBFMLSL, FEAT_SME2, 0xc1200c18, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// BFMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZBFMLSL, aBFMLSL, FEAT_SME2, 0xc1200818, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// BFMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZBFMLSL, aBFMLSL, FEAT_SME2, 0xc1300818, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// BFMLSL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H[<index>]
	{AZBFMLSL, aBFMLSL, FEAT_SME2, 0xc1801018, 0xfff01018, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_15_1_i3l_11_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// BFMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZBFMLSL, aBFMLSL, FEAT_SME2, 0xc1901018, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// BFMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZBFMLSL, aBFMLSL, FEAT_SME2, 0xc1909018, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// BFMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZBFMLSL, aBFMLSL, FEAT_SME2, 0xc1a00818, 0xffe19c3c, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// BFMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZBFMLSL, aBFMLSL, FEAT_SME2, 0xc1a10818, 0xffe39c7c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// BFMLSLB  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZBFMLSLB, aBFMLSLB, FEAT_SVE2p1, 0x64e06000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// BFMLSLB  <Zda>.S, <Zn>.H, <Zm>.H
	{AZBFMLSLB, aBFMLSLB, FEAT_SVE2p1, 0x64e0a000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// BFMLSLT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZBFMLSLT, aBFMLSLT, FEAT_SVE2p1, 0x64e06400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// BFMLSLT  <Zda>.S, <Zn>.H, <Zm>.H
	{AZBFMLSLT, aBFMLSLT, FEAT_SVE2p1, 0x64e0a400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// BFMMLA  <Vd>.4S, <Vn>.8H, <Vm>.8H
	{AVBFMMLA, aBFMMLA, FEAT_BF16, 0x6e40ec00, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// BFMMLA  <Zda>.S, <Zn>.H, <Zm>.H
	{AZBFMMLA, aBFMMLA, FEAT_BF16, 0x6460e400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// BFMOPA  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZBFMOPA, aBFMOPA, FEAT_SME, 0x81800000, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// BFMOPA  <ZAda>.H, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZBFMOPA, aBFMOPA, FEAT_SVE_B16B16, 0x81a00008, 0xffe0001e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_H,
		}},
	}},

	// BFMOPS  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZBFMOPS, aBFMOPS, FEAT_SME, 0x81800010, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// BFMOPS  <ZAda>.H, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZBFMOPS, aBFMOPS, FEAT_SVE_B16B16, 0x81a00018, 0xffe0001e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_H,
		}},
	}},

	// BFMUL  <Zd>.H, <Zn>.H, <Zm>.H[<imm>]
	{AZBFMUL, aBFMUL, FEAT_SVE_B16B16, 0x64202800, 0xffa0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i3h_22_1_i3l_20_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// BFMUL  <Zd>.H, <Zn>.H, <Zm>.H
	{AZBFMUL, aBFMUL, FEAT_SVE_B16B16, 0x65000800, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// BFMUL  <Zdn>.H, <Pg>/M, <Zdn>.H, <Zm>.H
	{AZBFMUL, aBFMUL, FEAT_SVE_B16B16, 0x65028000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// BFSUB  <Zd>.H, <Zn>.H, <Zm>.H
	{AZBFSUB, aBFSUB, FEAT_SVE_B16B16, 0x65000400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// BFSUB  <Zdn>.H, <Pg>/M, <Zdn>.H, <Zm>.H
	{AZBFSUB, aBFSUB, FEAT_SVE_B16B16, 0x65018000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// BFSUB  ZA.H[<Wv>, <offs>{, VGx2}], { <Zm1>.H-<Zm2>.H }
	{AZBFSUB, aBFSUB, FEAT_SVE_B16B16, 0xc1e41c08, 0xffff9c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_9_4,
			sa_zm2__Zm_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// BFSUB  ZA.H[<Wv>, <offs>{, VGx4}], { <Zm1>.H-<Zm4>.H }
	{AZBFSUB, aBFSUB, FEAT_SVE_B16B16, 0xc1e51c08, 0xffff9c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_9_3,
			sa_zm4__Zm_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// BFVDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZBFVDOT, aBFVDOT, FEAT_SME2, 0xc1500018, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// BFXIL  <Wd>, <Wn>, #<lsb>, #<width>
	{ABFXILW, aBFXIL, FEAT_NONE, 0x33000000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_lsb_1,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_width,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// BFXIL  <Xd>, <Xn>, #<lsb>, #<width>
	{ABFXIL, aBFXIL, FEAT_NONE, 0xb3400000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_lsb_3,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_width_1,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// BGRP  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZBGRP, aBGRP, FEAT_SVE_BitPerm, 0x4500b800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// BIC  <Wd>, <Wn>, <Wm>
	{ABICW, aBIC, FEAT_NONE, 0xa200000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// BIC  <Xd>, <Xn>, <Xm>
	{ABIC, aBIC, FEAT_NONE, 0x8a200000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// BIC  <Wd>, <Wn>, <Wm>{, <shift> #<amount>}
	{ABICW, aBIC, FEAT_NONE, 0xa200000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// BIC  <Xd>, <Xn>, <Xm>{, <shift> #<amount>}
	{ABIC, aBIC, FEAT_NONE, 0x8a200000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// BIC  <Vd>.<T>, #<imm8>{, LSL #<amount>}
	{AVBIC, aBIC, FEAT_NONE, 0x2f009400, 0xbff8dc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm8__a_b_c_d_e_f_g_h,
			sa_amount__cmode_1__0_8,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__4H_8H,
		}},
	}},

	// BIC  <Vd>.<T>, #<imm8>{, LSL #<amount>}
	{AVBIC, aBIC, FEAT_NONE, 0x2f001400, 0xbff89c00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm8__a_b_c_d_e_f_g_h,
			sa_amount_1__cmode_2_1__0_8_16_24,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__2S_4S,
		}},
	}},

	// BIC  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVBIC, aBIC, FEAT_NONE, 0xe601c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__8B_16B,
		}},
	}},

	// BIC  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APBIC, aBIC, FEAT_NONE, 0x25004010, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// BIC  <Zd>.D, <Zn>.D, <Zm>.D
	{AZBIC, aBIC, FEAT_NONE, 0x4e03000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// BIC  <Zdn>.<T>, <Zdn>.<T>, #<const>
	{AZBIC, aBIC, FEAT_NONE, 0x5800000, 0xfffc0000, true, []arg{
		{AC_IMM, []elmType{
			sa_const__imm13,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
	}},

	// BIC  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZBIC, aBIC, FEAT_NONE, 0x41b0000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// BICS  <Wd>, <Wn>, <Wm>
	{ABICSW, aBICS, FEAT_NONE, 0x6a200000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// BICS  <Xd>, <Xn>, <Xm>
	{ABICS, aBICS, FEAT_NONE, 0xea200000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// BICS  <Wd>, <Wn>, <Wm>{, <shift> #<amount>}
	{ABICSW, aBICS, FEAT_NONE, 0x6a200000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// BICS  <Xd>, <Xn>, <Xm>{, <shift> #<amount>}
	{ABICS, aBICS, FEAT_NONE, 0xea200000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// BICS  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APBICS, aBICS, FEAT_NONE, 0x25404010, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// BIF  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVBIF, aBIF, FEAT_NONE, 0x2ee01c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__8B_16B,
		}},
	}},

	// BIT  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVBIT, aBIT, FEAT_NONE, 0x2ea01c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__8B_16B,
		}},
	}},

	// BL  <label>
	{ABL, aBL, FEAT_NONE, 0x94000000, 0xfc000000, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm26,
		}},
	}},

	// BLR  <Xn>
	{ABLR, aBLR, FEAT_NONE, 0xd63f0000, 0xfffffc1f, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// BLRAAZ  <Xn>
	{ABLRAAZ, aBLRAAZ, FEAT_PAuth, 0xd63f081f, 0xfffffc1f, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// BLRAA  <Xn>, <Xm|SP>
	{ABLRAA, aBLRAA, FEAT_PAuth, 0xd73f0800, 0xfffffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xm_sp__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// BLRABZ  <Xn>
	{ABLRABZ, aBLRABZ, FEAT_PAuth, 0xd63f0c1f, 0xfffffc1f, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// BLRAB  <Xn>, <Xm|SP>
	{ABLRAB, aBLRAB, FEAT_PAuth, 0xd73f0c00, 0xfffffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xm_sp__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// BMOPA  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.S, <Zm>.S
	{AZBMOPA, aBMOPA, FEAT_SME2, 0x80800008, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// BMOPS  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.S, <Zm>.S
	{AZBMOPS, aBMOPS, FEAT_SME2, 0x80800018, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// BR  <Xn>
	{ABR, aBR, FEAT_NONE, 0xd61f0000, 0xfffffc1f, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// BRAAZ  <Xn>
	{ABRAAZ, aBRAAZ, FEAT_PAuth, 0xd61f081f, 0xfffffc1f, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// BRAA  <Xn>, <Xm|SP>
	{ABRAA, aBRAA, FEAT_PAuth, 0xd71f0800, 0xfffffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xm_sp__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// BRABZ  <Xn>
	{ABRABZ, aBRABZ, FEAT_PAuth, 0xd61f0c1f, 0xfffffc1f, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// BRAB  <Xn>, <Xm|SP>
	{ABRAB, aBRAB, FEAT_PAuth, 0xd71f0c00, 0xfffffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xm_sp__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// BRB  <brb_op>
	{ABRB, aBRB, FEAT_BRBE, 0xd509721f, 0xffffff1f, true, []arg{
		{AC_SPOP, []elmType{
			sa_brb_op__op2,
		}},
	}},

	// BRB  <brb_op>, <Xt>
	{ABRB, aBRB, FEAT_BRBE, 0xd5097200, 0xffffff00, true, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_SPOP, []elmType{
			sa_brb_op__op2,
		}},
	}},

	// BRK  #<imm>
	{ABRK, aBRK, FEAT_NONE, 0xd4200000, 0xffe0001f, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
		}},
	}},

	// BRKA  <Pd>.B, <Pg>/<ZM>, <Pn>.B
	{AZBRKA, aBRKA, FEAT_NONE, 0x25104000, 0xffffc200, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_zm__M__M_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// BRKAS  <Pd>.B, <Pg>/Z, <Pn>.B
	{APBRKAS, aBRKAS, FEAT_NONE, 0x25504000, 0xffffc210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// BRKB  <Pd>.B, <Pg>/<ZM>, <Pn>.B
	{AZBRKB, aBRKB, FEAT_NONE, 0x25904000, 0xffffc200, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_zm__M__M_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// BRKBS  <Pd>.B, <Pg>/Z, <Pn>.B
	{APBRKBS, aBRKBS, FEAT_NONE, 0x25d04000, 0xffffc210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// BRKN  <Pdm>.B, <Pg>/Z, <Pn>.B, <Pdm>.B
	{APBRKN, aBRKN, FEAT_NONE, 0x25184000, 0xffffc210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pdm__Pdm,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pdm__Pdm,
			sa_const_ARNG_B,
		}},
	}},

	// BRKNS  <Pdm>.B, <Pg>/Z, <Pn>.B, <Pdm>.B
	{APBRKNS, aBRKNS, FEAT_NONE, 0x25584000, 0xffffc210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pdm__Pdm,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pdm__Pdm,
			sa_const_ARNG_B,
		}},
	}},

	// BRKPA  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APBRKPA, aBRKPA, FEAT_NONE, 0x2500c000, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// BRKPAS  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APBRKPAS, aBRKPAS, FEAT_NONE, 0x2540c000, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// BRKPB  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APBRKPB, aBRKPB, FEAT_NONE, 0x2500c010, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// BRKPBS  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APBRKPBS, aBRKPBS, FEAT_NONE, 0x2540c010, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// BSL  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVBSL, aBSL, FEAT_NONE, 0x2e601c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__8B_16B,
		}},
	}},

	// BSL  <Zdn>.D, <Zdn>.D, <Zm>.D, <Zk>.D
	{AZBSL, aBSL, FEAT_NONE, 0x4203c00, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zk__Zk,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// BSL1N  <Zdn>.D, <Zdn>.D, <Zm>.D, <Zk>.D
	{AZBSL1N, aBSL1N, FEAT_NONE, 0x4603c00, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zk__Zk,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// BSL2N  <Zdn>.D, <Zdn>.D, <Zm>.D, <Zk>.D
	{AZBSL2N, aBSL2N, FEAT_NONE, 0x4a03c00, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zk__Zk,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// BTI
	{ABTI, aBTI, FEAT_BTI, 0xd503241f, 0xffffffff, false, nil},

	// BTI  <targets>
	{ABTI, aBTI, FEAT_BTI, 0xd503241f, 0xffffff3f, false, []arg{
		{AC_SPOP, []elmType{
			sa_targets__op2_2_1__omitted_c_j_jc,
		}},
	}},

	// CADD  <Zdn>.<T>, <Zdn>.<T>, <Zm>.<T>, <const>
	{AZCADD, aCADD, FEAT_NONE, 0x4500d800, 0xff3ff800, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__90_270,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CAS  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ACASW, aCAS, FEAT_LSE, 0x88a07c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// CASA  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ACASAW, aCASA, FEAT_LSE, 0x88e07c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// CASAL  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ACASALW, aCASAL, FEAT_LSE, 0x88e0fc00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// CASL  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ACASLW, aCASL, FEAT_LSE, 0x88a0fc00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// CAS  <Xs>, <Xt>, [<Xn|SP>{,#0}]
	{ACASD, aCAS, FEAT_LSE, 0xc8a07c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// CASA  <Xs>, <Xt>, [<Xn|SP>{,#0}]
	{ACASAD, aCASA, FEAT_LSE, 0xc8e07c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// CASAL  <Xs>, <Xt>, [<Xn|SP>{,#0}]
	{ACASALD, aCASAL, FEAT_LSE, 0xc8e0fc00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// CASL  <Xs>, <Xt>, [<Xn|SP>{,#0}]
	{ACASLD, aCASL, FEAT_LSE, 0xc8a0fc00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// CASAB  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ACASAB, aCASAB, FEAT_LSE, 0x8e07c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// CASALB  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ACASALB, aCASALB, FEAT_LSE, 0x8e0fc00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// CASB  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ACASB, aCASB, FEAT_LSE, 0x8a07c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// CASLB  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ACASLB, aCASLB, FEAT_LSE, 0x8a0fc00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// CASAH  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ACASAH, aCASAH, FEAT_LSE, 0x48e07c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// CASALH  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ACASALH, aCASALH, FEAT_LSE, 0x48e0fc00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// CASH  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ACASH, aCASH, FEAT_LSE, 0x48a07c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// CASLH  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ACASLH, aCASLH, FEAT_LSE, 0x48a0fc00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// CASP  <Ws>, <W(s+1)>, <Wt>, <W(t+1)>, [<Xn|SP>{,#0}]
	{ACASPW, aCASP, FEAT_LSE, 0x8207c00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_ws__Rs,
			sa_w_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_wt__Rt,
			sa_w_t_plus_1,
		}},
	}},

	// CASPA  <Ws>, <W(s+1)>, <Wt>, <W(t+1)>, [<Xn|SP>{,#0}]
	{ACASPAW, aCASPA, FEAT_LSE, 0x8607c00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_ws__Rs,
			sa_w_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_wt__Rt,
			sa_w_t_plus_1,
		}},
	}},

	// CASPAL  <Ws>, <W(s+1)>, <Wt>, <W(t+1)>, [<Xn|SP>{,#0}]
	{ACASPALW, aCASPAL, FEAT_LSE, 0x860fc00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_ws__Rs,
			sa_w_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_wt__Rt,
			sa_w_t_plus_1,
		}},
	}},

	// CASPL  <Ws>, <W(s+1)>, <Wt>, <W(t+1)>, [<Xn|SP>{,#0}]
	{ACASPLW, aCASPL, FEAT_LSE, 0x820fc00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_ws__Rs,
			sa_w_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_wt__Rt,
			sa_w_t_plus_1,
		}},
	}},

	// CASP  <Xs>, <X(s+1)>, <Xt>, <X(t+1)>, [<Xn|SP>{,#0}]
	{ACASPD, aCASP, FEAT_LSE, 0x48207c00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xs__Rs,
			sa_x_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_x_t_plus_1,
		}},
	}},

	// CASPA  <Xs>, <X(s+1)>, <Xt>, <X(t+1)>, [<Xn|SP>{,#0}]
	{ACASPAD, aCASPA, FEAT_LSE, 0x48607c00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xs__Rs,
			sa_x_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_x_t_plus_1,
		}},
	}},

	// CASPAL  <Xs>, <X(s+1)>, <Xt>, <X(t+1)>, [<Xn|SP>{,#0}]
	{ACASPALD, aCASPAL, FEAT_LSE, 0x4860fc00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xs__Rs,
			sa_x_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_x_t_plus_1,
		}},
	}},

	// CASPL  <Xs>, <X(s+1)>, <Xt>, <X(t+1)>, [<Xn|SP>{,#0}]
	{ACASPLD, aCASPL, FEAT_LSE, 0x4820fc00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xs__Rs,
			sa_x_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_x_t_plus_1,
		}},
	}},

	// CBNZ  <Wt>, <label>
	{ACBNZW, aCBNZ, FEAT_NONE, 0x35000000, 0xff000000, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// CBNZ  <Xt>, <label>
	{ACBNZ, aCBNZ, FEAT_NONE, 0xb5000000, 0xff000000, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// CBZ  <Wt>, <label>
	{ACBZW, aCBZ, FEAT_NONE, 0x34000000, 0xff000000, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// CBZ  <Xt>, <label>
	{ACBZ, aCBZ, FEAT_NONE, 0xb4000000, 0xff000000, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
	}},

	// CCMN  <Wn>, <Wm>, #<nzcv>, <cond>
	{ACCMNW, aCCMN, FEAT_NONE, 0x3a400000, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// CCMN  <Xn>, <Xm>, #<nzcv>, <cond>
	{ACCMN, aCCMN, FEAT_NONE, 0xba400000, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// CCMN  <Wn>, #<imm>, #<nzcv>, <cond>
	{ACCMNW, aCCMN, FEAT_NONE, 0x3a400800, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_imm__imm5,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// CCMN  <Xn>, #<imm>, #<nzcv>, <cond>
	{ACCMN, aCCMN, FEAT_NONE, 0xba400800, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_imm__imm5,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// CCMP  <Wn>, <Wm>, #<nzcv>, <cond>
	{ACCMPW, aCCMP, FEAT_NONE, 0x7a400000, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// CCMP  <Xn>, <Xm>, #<nzcv>, <cond>
	{ACCMP, aCCMP, FEAT_NONE, 0xfa400000, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// CCMP  <Wn>, #<imm>, #<nzcv>, <cond>
	{ACCMPW, aCCMP, FEAT_NONE, 0x7a400800, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_imm__imm5,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// CCMP  <Xn>, #<imm>, #<nzcv>, <cond>
	{ACCMP, aCCMP, FEAT_NONE, 0xfa400800, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_imm__imm5,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// CDOT  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>, <const>
	{AZCDOT, aCDOT, FEAT_NONE, 0x44001000, 0xff20f000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__0_90_180_270,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size_0__B_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size_0__B_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size_0__D_S,
		}},
	}},

	// CDOT  <Zda>.S, <Zn>.B, <Zm>.B[<imm>], <const>
	{AZCDOT, aCDOT, FEAT_NONE, 0x44a04000, 0xffe0f000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__0_90_180_270,
		}},
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_B,
			sa_imm_1__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// CDOT  <Zda>.D, <Zn>.H, <Zm>.H[<imm>], <const>
	{AZCDOT, aCDOT, FEAT_NONE, 0x44e04000, 0xffe0f000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__0_90_180_270,
		}},
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_imm__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// CFINV
	{ACFINV, aCFINV, FEAT_FlagM, 0xd500401f, 0xffffffff, false, nil},

	// CFP  RCTX, <Xt>
	{ACFP, aCFP, FEAT_SPECRES, 0xd50b7380, 0xffffffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xt_1__Rt,
		}},
		{AC_SPOP, []elmType{
			sa_const_SPOP_RCTX,
		}},
	}},

	// CHKFEAT  X16
	{ACHKFEAT, aCHKFEAT, FEAT_CHK, 0xd503251f, 0xffffffff, false, []arg{
		{AC_REG, []elmType{
			sa_const_REG_X16,
		}},
	}},

	// CINC  <Wd>, <Wn>, <cond>
	{ACINCW, aCINC, FEAT_NONE, 0x1a800400, 0xffe00c00, true, []arg{
		{AC_COND, []elmType{
			sa_cond_1__cond,
		}},
		{AC_REG, []elmType{
			sa_wn_1__Rn_and_Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CINC  <Xd>, <Xn>, <cond>
	{ACINC, aCINC, FEAT_NONE, 0x9a800400, 0xffe00c00, true, []arg{
		{AC_COND, []elmType{
			sa_cond_1__cond,
		}},
		{AC_REG, []elmType{
			sa_xn_1__Rn_and_Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CINV  <Wd>, <Wn>, <cond>
	{ACINVW, aCINV, FEAT_NONE, 0x5a800000, 0xffe00c00, true, []arg{
		{AC_COND, []elmType{
			sa_cond_1__cond,
		}},
		{AC_REG, []elmType{
			sa_wn_1__Rn_and_Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CINV  <Xd>, <Xn>, <cond>
	{ACINV, aCINV, FEAT_NONE, 0xda800000, 0xffe00c00, true, []arg{
		{AC_COND, []elmType{
			sa_cond_1__cond,
		}},
		{AC_REG, []elmType{
			sa_xn_1__Rn_and_Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CLASTA  <Zdn>.<T>, <Pg>, <Zdn>.<T>, <Zm>.<T>
	{AZCLASTA, aCLASTA, FEAT_NONE, 0x5288000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CLASTA  <V><dn>, <Pg>, <V><dn>, <Zm>.<T>
	{AZCLASTA, aCLASTA, FEAT_NONE, 0x52a8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_dn__Vdn,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_dn__Vdn,
		}},
	}},

	// CLASTA  <R><dn>, <Pg>, <R><dn>, <Zm>.<T>
	{AZCLASTA, aCLASTA, FEAT_NONE, 0x530a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_REG, []elmType{
			sa_r__size__W_X,
			sa_dn__Rdn,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_REG, []elmType{
			sa_r__size__W_X,
			sa_dn__Rdn,
		}},
	}},

	// CLASTB  <Zdn>.<T>, <Pg>, <Zdn>.<T>, <Zm>.<T>
	{AZCLASTB, aCLASTB, FEAT_NONE, 0x5298000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CLASTB  <V><dn>, <Pg>, <V><dn>, <Zm>.<T>
	{AZCLASTB, aCLASTB, FEAT_NONE, 0x52b8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_dn__Vdn,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_dn__Vdn,
		}},
	}},

	// CLASTB  <R><dn>, <Pg>, <R><dn>, <Zm>.<T>
	{AZCLASTB, aCLASTB, FEAT_NONE, 0x531a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_REG, []elmType{
			sa_r__size__W_X,
			sa_dn__Rdn,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_REG, []elmType{
			sa_r__size__W_X,
			sa_dn__Rdn,
		}},
	}},

	// CLRBHB
	{ACLRBHB, aCLRBHB, FEAT_CLRBHB, 0xd50322df, 0xffffffff, false, nil},

	// CLREX
	{ACLREX, aCLREX, FEAT_NONE, 0xd5033f5f, 0xffffffff, false, nil},

	// CLREX  #<imm>
	{ACLREX, aCLREX, FEAT_NONE, 0xd503305f, 0xfffff0ff, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__CRm,
		}},
	}},

	// CLS  <Wd>, <Wn>
	{ACLSW, aCLS, FEAT_NONE, 0x5ac01400, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CLS  <Xd>, <Xn>
	{ACLS, aCLS, FEAT_NONE, 0xdac01400, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CLS  <Vd>.<T>, <Vn>.<T>
	{AVCLS, aCLS, FEAT_NONE, 0xe204800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// CLS  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZCLS, aCLS, FEAT_NONE, 0x418a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CLZ  <Wd>, <Wn>
	{ACLZW, aCLZ, FEAT_NONE, 0x5ac01000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CLZ  <Xd>, <Xn>
	{ACLZ, aCLZ, FEAT_NONE, 0xdac01000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CLZ  <Vd>.<T>, <Vn>.<T>
	{AVCLZ, aCLZ, FEAT_NONE, 0x2e204800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// CLZ  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZCLZ, aCLZ, FEAT_NONE, 0x419a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMEQ  <V><d>, <V><n>, #0
	{AVCMEQD, aCMEQ, FEAT_NONE, 0x5ee09800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// CMEQ  <Vd>.<T>, <Vn>.<T>, #0
	{AVCMEQ, aCMEQ, FEAT_NONE, 0xe209800, 0xbf3ffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// CMEQ  <V><d>, <V><n>, <V><m>
	{AVCMEQD, aCMEQ, FEAT_NONE, 0x7ee08c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// CMEQ  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVCMEQ, aCMEQ, FEAT_NONE, 0x2e208c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// CMGE  <V><d>, <V><n>, <V><m>
	{AVCMGED, aCMGE, FEAT_NONE, 0x5ee03c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// CMGE  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVCMGE, aCMGE, FEAT_NONE, 0xe203c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// CMGE  <V><d>, <V><n>, #0
	{AVCMGED, aCMGE, FEAT_NONE, 0x7ee08800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// CMGE  <Vd>.<T>, <Vn>.<T>, #0
	{AVCMGE, aCMGE, FEAT_NONE, 0x2e208800, 0xbf3ffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// CMGT  <V><d>, <V><n>, <V><m>
	{AVCMGTD, aCMGT, FEAT_NONE, 0x5ee03400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// CMGT  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVCMGT, aCMGT, FEAT_NONE, 0xe203400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// CMGT  <V><d>, <V><n>, #0
	{AVCMGTD, aCMGT, FEAT_NONE, 0x5ee08800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// CMGT  <Vd>.<T>, <Vn>.<T>, #0
	{AVCMGT, aCMGT, FEAT_NONE, 0xe208800, 0xbf3ffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// CMHI  <V><d>, <V><n>, <V><m>
	{AVCMHID, aCMHI, FEAT_NONE, 0x7ee03400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// CMHI  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVCMHI, aCMHI, FEAT_NONE, 0x2e203400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// CMHS  <V><d>, <V><n>, <V><m>
	{AVCMHSD, aCMHS, FEAT_NONE, 0x7ee03c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// CMHS  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVCMHS, aCMHS, FEAT_NONE, 0x2e203c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// CMLA  <Zda>.<T>, <Zn>.<T>, <Zm>.<T>, <const>
	{AZCMLA, aCMLA, FEAT_NONE, 0x44002000, 0xff20f000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__0_90_180_270,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMLA  <Zda>.H, <Zn>.H, <Zm>.H[<imm>], <const>
	{AZCMLA, aCMLA, FEAT_NONE, 0x44a06000, 0xffe0f000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__0_90_180_270,
		}},
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_H,
		}},
	}},

	// CMLA  <Zda>.S, <Zn>.S, <Zm>.S[<imm>], <const>
	{AZCMLA, aCMLA, FEAT_NONE, 0x44e06000, 0xffe0f000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__0_90_180_270,
		}},
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_S,
			sa_imm_1__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// CMLE  <V><d>, <V><n>, #0
	{AVCMLED, aCMLE, FEAT_NONE, 0x7ee09800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// CMLE  <Vd>.<T>, <Vn>.<T>, #0
	{AVCMLE, aCMLE, FEAT_NONE, 0x2e209800, 0xbf3ffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// CMLT  <V><d>, <V><n>, #0
	{AVCMLTD, aCMLT, FEAT_NONE, 0x5ee0a800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// CMLT  <Vd>.<T>, <Vn>.<T>, #0
	{AVCMLT, aCMLT, FEAT_NONE, 0xe20a800, 0xbf3ffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// CMN  <Wn>, <Wm>
	{ACMNW, aCMN, FEAT_NONE, 0x2b00001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
	}},

	// CMN  <Xn>, <Xm>
	{ACMN, aCMN, FEAT_NONE, 0xab00001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// CMN  <Wn>, <Wm>{, <shift> #<amount>}
	{ACMNW, aCMN, FEAT_NONE, 0x2b00001f, 0xff20001f, true, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
	}},

	// CMN  <Xn>, <Xm>{, <shift> #<amount>}
	{ACMN, aCMN, FEAT_NONE, 0xab00001f, 0xff20001f, true, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// CMN  <Wn|WSP>, <Wm>
	{ACMNW, aCMN, FEAT_NONE, 0x2b20401f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
	}},

	// CMN  <Xn|SP>, <R><m>
	{ACMN, aCMN, FEAT_NONE, 0xab20601f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_r__option__W_X,
			sa_m__Rm,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
	}},

	// CMN  <Wn|WSP>, <Wm>{, <extend> {#<amount>}}
	{ACMNW, aCMN, FEAT_NONE, 0x2b20001f, 0xffe0001f, true, []arg{
		{AC_REGEXT, []elmType{
			sa_wm__Rm,
			sa_extend__option__LSL_SXTB_SXTH_SXTW_SXTX_UXTB_UXTH_UXTW_UXTX,
			sa_amount__imm3,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
	}},

	// CMN  <Xn|SP>, <R><m>{, <extend> {#<amount>}}
	{ACMN, aCMN, FEAT_NONE, 0xab20001f, 0xffe0001f, true, []arg{
		{AC_REGEXT, []elmType{
			sa_r__option__W_X,
			sa_m__Rm,
			sa_extend_1__option__LSL_SXTB_SXTH_SXTW_SXTX_UXTB_UXTH_UXTW_UXTX,
			sa_amount__imm3,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
	}},

	// CMN  <Wn|WSP>, #<imm>{, <shift>}
	{ACMNW, aCMN, FEAT_NONE, 0x3100001f, 0xff80001f, true, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm12,
			sa_shift__sh__LSL_0_LSL_12,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
	}},

	// CMN  <Xn|SP>, #<imm>{, <shift>}
	{ACMN, aCMN, FEAT_NONE, 0xb100001f, 0xff80001f, true, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm12,
			sa_shift__sh__LSL_0_LSL_12,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
	}},

	// CMP  <Wn>, <Wm>
	{ACMPW, aCMP, FEAT_NONE, 0x6b00001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
	}},

	// CMP  <Xn>, <Xm>
	{ACMP, aCMP, FEAT_NONE, 0xeb00001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// CMP  <Wn>, <Wm>{, <shift> #<amount>}
	{ACMPW, aCMP, FEAT_NONE, 0x6b00001f, 0xff20001f, true, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
	}},

	// CMP  <Xn>, <Xm>{, <shift> #<amount>}
	{ACMP, aCMP, FEAT_NONE, 0xeb00001f, 0xff20001f, true, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// CMP  <Wn|WSP>, <Wm>
	{ACMPW, aCMP, FEAT_NONE, 0x6b20401f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
	}},

	// CMP  <Xn|SP>, <R><m>
	{ACMP, aCMP, FEAT_NONE, 0xeb20601f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_r__option__W_X,
			sa_m__Rm,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
	}},

	// CMP  <Wn|WSP>, <Wm>{, <extend> {#<amount>}}
	{ACMPW, aCMP, FEAT_NONE, 0x6b20001f, 0xffe0001f, true, []arg{
		{AC_REGEXT, []elmType{
			sa_wm__Rm,
			sa_extend__option__LSL_SXTB_SXTH_SXTW_SXTX_UXTB_UXTH_UXTW_UXTX,
			sa_amount__imm3,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
	}},

	// CMP  <Xn|SP>, <R><m>{, <extend> {#<amount>}}
	{ACMP, aCMP, FEAT_NONE, 0xeb20001f, 0xffe0001f, true, []arg{
		{AC_REGEXT, []elmType{
			sa_r__option__W_X,
			sa_m__Rm,
			sa_extend_1__option__LSL_SXTB_SXTH_SXTW_SXTX_UXTB_UXTH_UXTW_UXTX,
			sa_amount__imm3,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
	}},

	// CMP  <Wn|WSP>, #<imm>{, <shift>}
	{ACMPW, aCMP, FEAT_NONE, 0x7100001f, 0xff80001f, true, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm12,
			sa_shift__sh__LSL_0_LSL_12,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
	}},

	// CMP  <Xn|SP>, #<imm>{, <shift>}
	{ACMP, aCMP, FEAT_NONE, 0xf100001f, 0xff80001f, true, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm12,
			sa_shift__sh__LSL_0_LSL_12,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
	}},

	// CMPEQ  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.D
	{AZCMPEQ, aCMPEQ, FEAT_NONE, 0x24002000, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// CMPGT  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.D
	{AZCMPGT, aCMPGT, FEAT_NONE, 0x24004010, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// CMPGE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.D
	{AZCMPGE, aCMPGE, FEAT_NONE, 0x24004000, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// CMPHI  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.D
	{AZCMPHI, aCMPHI, FEAT_NONE, 0x2400c010, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// CMPHS  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.D
	{AZCMPHS, aCMPHS, FEAT_NONE, 0x2400c000, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// CMPLT  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.D
	{AZCMPLT, aCMPLT, FEAT_NONE, 0x24006000, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// CMPLE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.D
	{AZCMPLE, aCMPLE, FEAT_NONE, 0x24006010, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// CMPLO  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.D
	{AZCMPLO, aCMPLO, FEAT_NONE, 0x2400e000, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// CMPLS  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.D
	{AZCMPLS, aCMPLS, FEAT_NONE, 0x2400e010, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// CMPNE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.D
	{AZCMPNE, aCMPNE, FEAT_NONE, 0x24002010, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// CMPEQ  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZCMPEQ, aCMPEQ, FEAT_NONE, 0x2400a000, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPGT  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZCMPGT, aCMPGT, FEAT_NONE, 0x24008010, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPGE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZCMPGE, aCMPGE, FEAT_NONE, 0x24008000, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPHI  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZCMPHI, aCMPHI, FEAT_NONE, 0x24000010, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPHS  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZCMPHS, aCMPHS, FEAT_NONE, 0x24000000, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPNE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZCMPNE, aCMPNE, FEAT_NONE, 0x2400a010, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPEQ  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #<imm>
	{AZCMPEQ, aCMPEQ, FEAT_NONE, 0x25008000, 0xff20e010, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm5,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPGT  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #<imm>
	{AZCMPGT, aCMPGT, FEAT_NONE, 0x25000010, 0xff20e010, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm5,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPGE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #<imm>
	{AZCMPGE, aCMPGE, FEAT_NONE, 0x25000000, 0xff20e010, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm5,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPHI  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #<imm>
	{AZCMPHI, aCMPHI, FEAT_NONE, 0x24200010, 0xff202010, false, []arg{
		{AC_IMM, []elmType{
			sa_imm_1__imm7,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPHS  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #<imm>
	{AZCMPHS, aCMPHS, FEAT_NONE, 0x24200000, 0xff202010, false, []arg{
		{AC_IMM, []elmType{
			sa_imm_1__imm7,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPLT  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #<imm>
	{AZCMPLT, aCMPLT, FEAT_NONE, 0x25002000, 0xff20e010, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm5,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPLE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #<imm>
	{AZCMPLE, aCMPLE, FEAT_NONE, 0x25002010, 0xff20e010, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm5,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPLO  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #<imm>
	{AZCMPLO, aCMPLO, FEAT_NONE, 0x24202000, 0xff202010, false, []arg{
		{AC_IMM, []elmType{
			sa_imm_1__imm7,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPLS  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #<imm>
	{AZCMPLS, aCMPLS, FEAT_NONE, 0x24202010, 0xff202010, false, []arg{
		{AC_IMM, []elmType{
			sa_imm_1__imm7,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPNE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #<imm>
	{AZCMPNE, aCMPNE, FEAT_NONE, 0x25008010, 0xff20e010, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm5,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPLE  <Pd>.<T>, <Pg>/Z, <Zm>.<T>, <Zn>.<T>
	{AZCMPLE, aCMPLE, FEAT_NONE, 0x24008000, 0xff20e010, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPLO  <Pd>.<T>, <Pg>/Z, <Zm>.<T>, <Zn>.<T>
	{AZCMPLO, aCMPLO, FEAT_NONE, 0x24000010, 0xff20e010, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPLS  <Pd>.<T>, <Pg>/Z, <Zm>.<T>, <Zn>.<T>
	{AZCMPLS, aCMPLS, FEAT_NONE, 0x24000000, 0xff20e010, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPLT  <Pd>.<T>, <Pg>/Z, <Zm>.<T>, <Zn>.<T>
	{AZCMPLT, aCMPLT, FEAT_NONE, 0x24008010, 0xff20e010, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CMPP  <Xn|SP>, <Xm|SP>
	{ACMPP, aCMPP, FEAT_MTE, 0xbac0001f, 0xffe0fc1f, true, []arg{
		{AC_RSP, []elmType{
			sa_xm_sp__Xm,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Xn,
		}},
	}},

	// CMTST  <V><d>, <V><n>, <V><m>
	{AVCMTSTD, aCMTST, FEAT_NONE, 0x5ee08c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// CMTST  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVCMTST, aCMTST, FEAT_NONE, 0xe208c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// CNEG  <Wd>, <Wn>, <cond>
	{ACNEGW, aCNEG, FEAT_NONE, 0x5a800400, 0xffe00c00, true, []arg{
		{AC_COND, []elmType{
			sa_cond_1__cond,
		}},
		{AC_REG, []elmType{
			sa_wn_1__Rn_and_Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CNEG  <Xd>, <Xn>, <cond>
	{ACNEG, aCNEG, FEAT_NONE, 0xda800400, 0xffe00c00, true, []arg{
		{AC_COND, []elmType{
			sa_cond_1__cond,
		}},
		{AC_REG, []elmType{
			sa_xn_1__Rn_and_Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNOT  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZCNOT, aCNOT, FEAT_NONE, 0x41ba000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CNT  <Wd>, <Wn>
	{ACNTW, aCNT, FEAT_CSSC, 0x5ac01c00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CNT  <Xd>, <Xn>
	{ACNT, aCNT, FEAT_CSSC, 0xdac01c00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNT  <Vd>.<T>, <Vn>.<T>
	{AVCNT, aCNT, FEAT_NONE, 0xe205800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__8B_16B,
		}},
	}},

	// CNT  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZCNT, aCNT, FEAT_NONE, 0x41aa000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CNTB  <Xd>
	{ACNTB, aCNTB, FEAT_NONE, 0x421e3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNTB  <Xd>, <pattern>, #<imm>
	{ACNTB, aCNTB, FEAT_NONE, 0x420e000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNTB  <Xd>, <pattern>
	{ACNTB, aCNTB, FEAT_NONE, 0x421e000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNTD  <Xd>
	{ACNTD, aCNTD, FEAT_NONE, 0x4e1e3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNTD  <Xd>, <pattern>, #<imm>
	{ACNTD, aCNTD, FEAT_NONE, 0x4e0e000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNTD  <Xd>, <pattern>
	{ACNTD, aCNTD, FEAT_NONE, 0x4e1e000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNTH  <Xd>
	{ACNTH, aCNTH, FEAT_NONE, 0x461e3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNTH  <Xd>, <pattern>, #<imm>
	{ACNTH, aCNTH, FEAT_NONE, 0x460e000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNTH  <Xd>, <pattern>
	{ACNTH, aCNTH, FEAT_NONE, 0x461e000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNTW  <Xd>
	{ACNTW, aCNTW, FEAT_NONE, 0x4a1e3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNTW  <Xd>, <pattern>, #<imm>
	{ACNTW, aCNTW, FEAT_NONE, 0x4a0e000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNTW  <Xd>, <pattern>
	{ACNTW, aCNTW, FEAT_NONE, 0x4a1e000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNTP  <Xd>, <Pg>, <Pn>.<T>
	{APCNTP, aCNTP, FEAT_NONE, 0x25208000, 0xff3fc200, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_13_4,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CNTP  <Xd>, <PNn>.<T>, <vl>
	{APCNTP, aCNTP, FEAT_SVE2p1, 0x25208200, 0xff3ffa00, false, []arg{
		{AC_SPOP, []elmType{
			sa_vl__vl__VLx2_VLx4,
		}},
		{AC_ARNG, []elmType{
			sa_pnn__PNn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// COMPACT  <Zd>.<T>, <Pg>, <Zn>.<T>
	{AZCOMPACT, aCOMPACT, FEAT_NONE, 0x5218000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_0__D_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_0__D_S,
		}},
	}},

	// COSP  RCTX, <Xt>
	{ACOSP, aCOSP, FEAT_SPECRES2, 0xd50b73c0, 0xffffffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xt_1__Rt,
		}},
		{AC_SPOP, []elmType{
			sa_const_SPOP_RCTX,
		}},
	}},

	// CPP  RCTX, <Xt>
	{ACPP, aCPP, FEAT_SPECRES, 0xd50b73e0, 0xffffffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xt_1__Rt,
		}},
		{AC_SPOP, []elmType{
			sa_const_SPOP_RCTX,
		}},
	}},

	// CPY  <Zd>.<T>, <Pg>/Z, #<imm>{, <shift>}
	{AZCPY, aCPY, FEAT_NONE, 0x5100000, 0xff30c000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
			sa_shift__sh__LSL_0_LSL_8,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_19_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CPY  <Zd>.<T>, <Pg>/M, #<imm>{, <shift>}
	{AZCPY, aCPY, FEAT_NONE, 0x5104000, 0xff30c000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
			sa_shift__sh__LSL_0_LSL_8,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_19_4,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CPY  <Zd>.<T>, <Pg>/M, <V><n>
	{AZCPY, aCPY, FEAT_NONE, 0x5208000, 0xff3fe000, false, []arg{
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Vn,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CPY  <Zd>.<T>, <Pg>/M, <R><n|SP>
	{AZCPY, aCPY, FEAT_NONE, 0x528a000, 0xff3fe000, false, []arg{
		{AC_RSP, []elmType{
			sa_r__size__W_X,
			sa_n_sp__Rn,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// CPYE  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYE, aCPYE, FEAT_MOPS, 0x1d800400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYM  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYM, aCPYM, FEAT_MOPS, 0x1d400400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYP  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYP, aCPYP, FEAT_MOPS, 0x1d000400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYEN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYEN, aCPYEN, FEAT_MOPS, 0x1d80c400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMN, aCPYMN, FEAT_MOPS, 0x1d40c400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPN, aCPYPN, FEAT_MOPS, 0x1d00c400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYERN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYERN, aCPYERN, FEAT_MOPS, 0x1d808400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMRN, aCPYMRN, FEAT_MOPS, 0x1d408400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPRN, aCPYPRN, FEAT_MOPS, 0x1d008400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYERT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYERT, aCPYERT, FEAT_MOPS, 0x1d802400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMRT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMRT, aCPYMRT, FEAT_MOPS, 0x1d402400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPRT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPRT, aCPYPRT, FEAT_MOPS, 0x1d002400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYERTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYERTN, aCPYERTN, FEAT_MOPS, 0x1d80e400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMRTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMRTN, aCPYMRTN, FEAT_MOPS, 0x1d40e400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPRTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPRTN, aCPYPRTN, FEAT_MOPS, 0x1d00e400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYERTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYERTRN, aCPYERTRN, FEAT_MOPS, 0x1d80a400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMRTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMRTRN, aCPYMRTRN, FEAT_MOPS, 0x1d40a400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPRTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPRTRN, aCPYPRTRN, FEAT_MOPS, 0x1d00a400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYERTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYERTWN, aCPYERTWN, FEAT_MOPS, 0x1d806400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMRTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMRTWN, aCPYMRTWN, FEAT_MOPS, 0x1d406400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPRTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPRTWN, aCPYPRTWN, FEAT_MOPS, 0x1d006400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYET  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYET, aCPYET, FEAT_MOPS, 0x1d803400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMT, aCPYMT, FEAT_MOPS, 0x1d403400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPT, aCPYPT, FEAT_MOPS, 0x1d003400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYETN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYETN, aCPYETN, FEAT_MOPS, 0x1d80f400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMTN, aCPYMTN, FEAT_MOPS, 0x1d40f400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPTN, aCPYPTN, FEAT_MOPS, 0x1d00f400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYETRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYETRN, aCPYETRN, FEAT_MOPS, 0x1d80b400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMTRN, aCPYMTRN, FEAT_MOPS, 0x1d40b400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPTRN, aCPYPTRN, FEAT_MOPS, 0x1d00b400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYETWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYETWN, aCPYETWN, FEAT_MOPS, 0x1d807400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMTWN, aCPYMTWN, FEAT_MOPS, 0x1d407400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPTWN, aCPYPTWN, FEAT_MOPS, 0x1d007400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYEWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYEWN, aCPYEWN, FEAT_MOPS, 0x1d804400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMWN, aCPYMWN, FEAT_MOPS, 0x1d404400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPWN, aCPYPWN, FEAT_MOPS, 0x1d004400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYEWT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYEWT, aCPYEWT, FEAT_MOPS, 0x1d801400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMWT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMWT, aCPYMWT, FEAT_MOPS, 0x1d401400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPWT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPWT, aCPYPWT, FEAT_MOPS, 0x1d001400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYEWTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYEWTN, aCPYEWTN, FEAT_MOPS, 0x1d80d400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMWTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMWTN, aCPYMWTN, FEAT_MOPS, 0x1d40d400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPWTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPWTN, aCPYPWTN, FEAT_MOPS, 0x1d00d400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYEWTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYEWTRN, aCPYEWTRN, FEAT_MOPS, 0x1d809400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMWTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMWTRN, aCPYMWTRN, FEAT_MOPS, 0x1d409400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPWTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPWTRN, aCPYPWTRN, FEAT_MOPS, 0x1d009400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYEWTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYEWTWN, aCPYEWTWN, FEAT_MOPS, 0x1d805400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYMWTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYMWTWN, aCPYMWTWN, FEAT_MOPS, 0x1d405400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYPWTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYPWTWN, aCPYPWTWN, FEAT_MOPS, 0x1d005400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFE  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFE, aCPYFE, FEAT_MOPS, 0x19800400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFM  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFM, aCPYFM, FEAT_MOPS, 0x19400400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFP  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFP, aCPYFP, FEAT_MOPS, 0x19000400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFEN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFEN, aCPYFEN, FEAT_MOPS, 0x1980c400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMN, aCPYFMN, FEAT_MOPS, 0x1940c400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPN, aCPYFPN, FEAT_MOPS, 0x1900c400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFERN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFERN, aCPYFERN, FEAT_MOPS, 0x19808400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMRN, aCPYFMRN, FEAT_MOPS, 0x19408400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPRN, aCPYFPRN, FEAT_MOPS, 0x19008400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFERT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFERT, aCPYFERT, FEAT_MOPS, 0x19802400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMRT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMRT, aCPYFMRT, FEAT_MOPS, 0x19402400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPRT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPRT, aCPYFPRT, FEAT_MOPS, 0x19002400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFERTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFERTN, aCPYFERTN, FEAT_MOPS, 0x1980e400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMRTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMRTN, aCPYFMRTN, FEAT_MOPS, 0x1940e400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPRTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPRTN, aCPYFPRTN, FEAT_MOPS, 0x1900e400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFERTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFERTRN, aCPYFERTRN, FEAT_MOPS, 0x1980a400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMRTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMRTRN, aCPYFMRTRN, FEAT_MOPS, 0x1940a400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPRTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPRTRN, aCPYFPRTRN, FEAT_MOPS, 0x1900a400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFERTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFERTWN, aCPYFERTWN, FEAT_MOPS, 0x19806400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMRTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMRTWN, aCPYFMRTWN, FEAT_MOPS, 0x19406400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPRTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPRTWN, aCPYFPRTWN, FEAT_MOPS, 0x19006400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFET  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFET, aCPYFET, FEAT_MOPS, 0x19803400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMT, aCPYFMT, FEAT_MOPS, 0x19403400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPT, aCPYFPT, FEAT_MOPS, 0x19003400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFETN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFETN, aCPYFETN, FEAT_MOPS, 0x1980f400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMTN, aCPYFMTN, FEAT_MOPS, 0x1940f400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPTN, aCPYFPTN, FEAT_MOPS, 0x1900f400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFETRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFETRN, aCPYFETRN, FEAT_MOPS, 0x1980b400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMTRN, aCPYFMTRN, FEAT_MOPS, 0x1940b400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPTRN, aCPYFPTRN, FEAT_MOPS, 0x1900b400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFETWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFETWN, aCPYFETWN, FEAT_MOPS, 0x19807400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMTWN, aCPYFMTWN, FEAT_MOPS, 0x19407400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPTWN, aCPYFPTWN, FEAT_MOPS, 0x19007400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFEWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFEWN, aCPYFEWN, FEAT_MOPS, 0x19804400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMWN, aCPYFMWN, FEAT_MOPS, 0x19404400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPWN, aCPYFPWN, FEAT_MOPS, 0x19004400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFEWT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFEWT, aCPYFEWT, FEAT_MOPS, 0x19801400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMWT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMWT, aCPYFMWT, FEAT_MOPS, 0x19401400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPWT  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPWT, aCPYFPWT, FEAT_MOPS, 0x19001400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFEWTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFEWTN, aCPYFEWTN, FEAT_MOPS, 0x1980d400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMWTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMWTN, aCPYFMWTN, FEAT_MOPS, 0x1940d400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPWTN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPWTN, aCPYFPWTN, FEAT_MOPS, 0x1900d400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFEWTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFEWTRN, aCPYFEWTRN, FEAT_MOPS, 0x19809400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMWTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMWTRN, aCPYFMWTRN, FEAT_MOPS, 0x19409400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPWTRN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPWTRN, aCPYFPWTRN, FEAT_MOPS, 0x19009400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFEWTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFEWTWN, aCPYFEWTWN, FEAT_MOPS, 0x19805400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFMWTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFMWTWN, aCPYFMWTWN, FEAT_MOPS, 0x19405400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs_1__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CPYFPWTWN  [<Xd>]!, [<Xs>]!, <Xn>!
	{ACPYFPWTWN, aCPYFPWTWN, FEAT_MOPS, 0x19005400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xs__Rs,
			sa_const_MEMPREIMM_no_offset,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// CRC32B  <Wd>, <Wn>, <Wm>
	{ACRC32B, aCRC32B, FEAT_CRC32, 0x1ac04000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CRC32H  <Wd>, <Wn>, <Wm>
	{ACRC32H, aCRC32H, FEAT_CRC32, 0x1ac04400, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CRC32W  <Wd>, <Wn>, <Wm>
	{ACRC32W, aCRC32W, FEAT_CRC32, 0x1ac04800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CRC32X  <Wd>, <Wn>, <Xm>
	{ACRC32X, aCRC32X, FEAT_CRC32, 0x9ac04c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CRC32CB  <Wd>, <Wn>, <Wm>
	{ACRC32CB, aCRC32CB, FEAT_CRC32, 0x1ac05000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CRC32CH  <Wd>, <Wn>, <Wm>
	{ACRC32CH, aCRC32CH, FEAT_CRC32, 0x1ac05400, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CRC32CW  <Wd>, <Wn>, <Wm>
	{ACRC32CW, aCRC32CW, FEAT_CRC32, 0x1ac05800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CRC32CX  <Wd>, <Wn>, <Xm>
	{ACRC32CX, aCRC32CX, FEAT_CRC32, 0x9ac05c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CSDB
	{ACSDB, aCSDB, FEAT_NONE, 0xd503229f, 0xffffffff, false, nil},

	// CSEL  <Wd>, <Wn>, <Wm>, <cond>
	{ACSELW, aCSEL, FEAT_NONE, 0x1a800000, 0xffe00c00, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CSEL  <Xd>, <Xn>, <Xm>, <cond>
	{ACSEL, aCSEL, FEAT_NONE, 0x9a800000, 0xffe00c00, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CSET  <Wd>, <cond>
	{ACSETW, aCSET, FEAT_NONE, 0x1a9f07e0, 0xffff0fe0, true, []arg{
		{AC_COND, []elmType{
			sa_cond_1__cond,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CSET  <Xd>, <cond>
	{ACSET, aCSET, FEAT_NONE, 0x9a9f07e0, 0xffff0fe0, true, []arg{
		{AC_COND, []elmType{
			sa_cond_1__cond,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CSETM  <Wd>, <cond>
	{ACSETMW, aCSETM, FEAT_NONE, 0x5a9f03e0, 0xffff0fe0, true, []arg{
		{AC_COND, []elmType{
			sa_cond_1__cond,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CSETM  <Xd>, <cond>
	{ACSETM, aCSETM, FEAT_NONE, 0xda9f03e0, 0xffff0fe0, true, []arg{
		{AC_COND, []elmType{
			sa_cond_1__cond,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CSINC  <Wd>, <Wn>, <Wm>, <cond>
	{ACSINCW, aCSINC, FEAT_NONE, 0x1a800400, 0xffe00c00, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CSINC  <Xd>, <Xn>, <Xm>, <cond>
	{ACSINC, aCSINC, FEAT_NONE, 0x9a800400, 0xffe00c00, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CSINV  <Wd>, <Wn>, <Wm>, <cond>
	{ACSINVW, aCSINV, FEAT_NONE, 0x5a800000, 0xffe00c00, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CSINV  <Xd>, <Xn>, <Xm>, <cond>
	{ACSINV, aCSINV, FEAT_NONE, 0xda800000, 0xffe00c00, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CSNEG  <Wd>, <Wn>, <Wm>, <cond>
	{ACSNEGW, aCSNEG, FEAT_NONE, 0x5a800400, 0xffe00c00, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CSNEG  <Xd>, <Xn>, <Xm>, <cond>
	{ACSNEG, aCSNEG, FEAT_NONE, 0xda800400, 0xffe00c00, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// CTERMEQ  <R><n>, <R><m>
	{ACTERMEQ, aCTERMEQ, FEAT_NONE, 0x25e02000, 0xffe0fc1f, false, []arg{
		{AC_REG, []elmType{
			sa_r__sz__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sz__W_X,
			sa_n__Rn,
		}},
	}},

	// CTERMEQ  <R><n>, <R><m>
	{ACTERMEQW, aCTERMEQ, FEAT_NONE, 0x25a02000, 0xffe0fc1f, false, []arg{
		{AC_REG, []elmType{
			sa_r__sz__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sz__W_X,
			sa_n__Rn,
		}},
	}},

	// CTERMNE  <R><n>, <R><m>
	{ACTERMNE, aCTERMNE, FEAT_NONE, 0x25e02010, 0xffe0fc1f, false, []arg{
		{AC_REG, []elmType{
			sa_r__sz__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sz__W_X,
			sa_n__Rn,
		}},
	}},

	// CTERMNE  <R><n>, <R><m>
	{ACTERMNEW, aCTERMNE, FEAT_NONE, 0x25a02010, 0xffe0fc1f, false, []arg{
		{AC_REG, []elmType{
			sa_r__sz__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sz__W_X,
			sa_n__Rn,
		}},
	}},

	// CTZ  <Wd>, <Wn>
	{ACTZW, aCTZ, FEAT_CSSC, 0x5ac01800, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// CTZ  <Xd>, <Xn>
	{ACTZ, aCTZ, FEAT_CSSC, 0xdac01800, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// DC  <dc_op>, <Xt>
	{ADC, aDC, FEAT_NONE, 0xd5087000, 0xfff8f000, true, []arg{
		{AC_SPOP, []elmType{
			sa_dc_op__op1_CRm_op2,
		}},
		{AC_REG, []elmType{
			sa_xt_1__Rt,
		}},
	}},

	// DCPS1
	{ADCPS1, aDCPS1, FEAT_NONE, 0xd4a00001, 0xffffffff, false, nil},

	// DCPS1  #<imm>
	{ADCPS1, aDCPS1, FEAT_NONE, 0xd4a00001, 0xffe0001f, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
		}},
	}},

	// DCPS2
	{ADCPS2, aDCPS2, FEAT_NONE, 0xd4a00002, 0xffffffff, false, nil},

	// DCPS2  #<imm>
	{ADCPS2, aDCPS2, FEAT_NONE, 0xd4a00002, 0xffe0001f, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
		}},
	}},

	// DCPS3
	{ADCPS3, aDCPS3, FEAT_NONE, 0xd4a00003, 0xffffffff, false, nil},

	// DCPS3  #<imm>
	{ADCPS3, aDCPS3, FEAT_NONE, 0xd4a00003, 0xffe0001f, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
		}},
	}},

	// DECB  <Xdn>
	{ADECB, aDECB, FEAT_NONE, 0x431e7e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// DECB  <Xdn>, <pattern>, #<imm>
	{ADECB, aDECB, FEAT_NONE, 0x430e400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// DECB  <Xdn>, <pattern>
	{ADECB, aDECB, FEAT_NONE, 0x431e400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// DECD  <Xdn>
	{ADECD, aDECD, FEAT_NONE, 0x4f1e7e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// DECD  <Xdn>, <pattern>, #<imm>
	{ADECD, aDECD, FEAT_NONE, 0x4f0e400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// DECD  <Xdn>, <pattern>
	{ADECD, aDECD, FEAT_NONE, 0x4f1e400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// DECH  <Xdn>
	{ADECH, aDECH, FEAT_NONE, 0x471e7e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// DECH  <Xdn>, <pattern>, #<imm>
	{ADECH, aDECH, FEAT_NONE, 0x470e400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// DECH  <Xdn>, <pattern>
	{ADECH, aDECH, FEAT_NONE, 0x471e400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// DECW  <Xdn>
	{ADECW, aDECW, FEAT_NONE, 0x4b1e7e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// DECW  <Xdn>, <pattern>, #<imm>
	{ADECW, aDECW, FEAT_NONE, 0x4b0e400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// DECW  <Xdn>, <pattern>
	{ADECW, aDECW, FEAT_NONE, 0x4b1e400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// DECD  <Zdn>.D
	{AZDECD, aDECD, FEAT_NONE, 0x4f1c7e0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// DECD  <Zdn>.D, <pattern>, #<imm>
	{AZDECD, aDECD, FEAT_NONE, 0x4f0c400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// DECD  <Zdn>.D, <pattern>
	{AZDECD, aDECD, FEAT_NONE, 0x4f1c400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// DECH  <Zdn>.H
	{AZDECH, aDECH, FEAT_NONE, 0x471c7e0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// DECH  <Zdn>.H, <pattern>, #<imm>
	{AZDECH, aDECH, FEAT_NONE, 0x470c400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// DECH  <Zdn>.H, <pattern>
	{AZDECH, aDECH, FEAT_NONE, 0x471c400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// DECW  <Zdn>.S
	{AZDECW, aDECW, FEAT_NONE, 0x4b1c7e0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// DECW  <Zdn>.S, <pattern>, #<imm>
	{AZDECW, aDECW, FEAT_NONE, 0x4b0c400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// DECW  <Zdn>.S, <pattern>
	{AZDECW, aDECW, FEAT_NONE, 0x4b1c400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// DECP  <Xdn>, <Pm>.<T>
	{APDECP, aDECP, FEAT_NONE, 0x252d8800, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// DECP  <Zdn>.<T>, <Pm>.<T>
	{AZDECP, aDECP, FEAT_NONE, 0x252d8000, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// DGH
	{ADGH, aDGH, FEAT_DGH, 0xd50320df, 0xffffffff, false, nil},

	// DMB  <option>
	{ADMB, aDMB, FEAT_NONE, 0xd50330bf, 0xfffff0ff, false, []arg{
		{AC_SPOP, []elmType{
			sa_option,
		}},
	}},

	// DMB  #<imm>
	{ADMB, aDMB, FEAT_NONE, 0xd50330bf, 0xfffff0ff, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__CRm,
		}},
	}},

	// DRPS
	{ADRPS, aDRPS, FEAT_NONE, 0xd6bf03e0, 0xffffffff, false, nil},

	// DSB  <option>
	{ADSB, aDSB, FEAT_NONE, 0xd503309f, 0xfffff0ff, false, []arg{
		{AC_SPOP, []elmType{
			sa_option__CRm,
		}},
	}},

	// DSB  #<imm>
	{ADSB, aDSB, FEAT_NONE, 0xd503309f, 0xfffff0ff, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__CRm,
		}},
	}},

	// DSB  <option>nXS
	{ADSB, aDSB, FEAT_XS, 0xd503323f, 0xfffff3ff, false, []arg{
		{AC_SPOP, []elmType{
			sa_option_1,
		}},
	}},

	// DUP  <Vd>.<T>, <R><n>
	{AVDUP, aDUP, FEAT_NONE, 0xe000c00, 0xbfe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_r__imm5__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__imm5_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// DUP  <V><d>, <Vn>.<T>[<index>]
	{AVDUP, aDUP, FEAT_NONE, 0x5e000400, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vn__Rn,
			sa_t_1__imm5__B_D_H_S,
			sa_index__imm5,
		}},
		{AC_VREG, []elmType{
			sa_v__imm5__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// DUP  <Vd>.<T>, <Vn>.<Ts>[<index>]
	{AVDUP, aDUP, FEAT_NONE, 0xe000400, 0xbfe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vn__Rn,
			sa_ts__imm5__B_D_H_S,
			sa_index__imm5,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__imm5_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// DUP  <Zd>.<T>, <Zn>.<T>[<imm>]
	{AZDUP, aDUP, FEAT_NONE, 0x5202000, 0xff20fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zn__Zn,
			sa_t__tsz__B_D_H_Q_S,
			sa_imm__imm2_tsz,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tsz__B_D_H_Q_S,
		}},
	}},

	// DUP  <Zd>.<T>, <R><n|SP>
	{AZDUP, aDUP, FEAT_NONE, 0x5203800, 0xff3ffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_r__size__W_X,
			sa_n_sp__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// DUP  <Zd>.<T>, #<imm>{, <shift>}
	{AZDUP, aDUP, FEAT_NONE, 0x2538c000, 0xff3fc000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
			sa_shift__sh__LSL_0_LSL_8,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// DUPM  <Zd>.<T>, #<const>
	{AZDUPM, aDUPM, FEAT_NONE, 0x5c00000, 0xfffc0000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__imm13,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
	}},

	// DUPQ  <Zd>.<T>, <Zn>.<T>[<imm>]
	{AZDUPQ, aDUPQ, FEAT_SVE2p1, 0x5202400, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zn__Zn,
			sa_t__tsz__B_D_H_S,
			sa_imm__i1_tsz,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tsz__B_D_H_S,
		}},
	}},

	// DVP  RCTX, <Xt>
	{ADVP, aDVP, FEAT_SPECRES, 0xd50b73a0, 0xffffffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xt_1__Rt,
		}},
		{AC_SPOP, []elmType{
			sa_const_SPOP_RCTX,
		}},
	}},

	// EON  <Wd>, <Wn>, <Wm>
	{AEONW, aEON, FEAT_NONE, 0x4a200000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// EON  <Xd>, <Xn>, <Xm>
	{AEON, aEON, FEAT_NONE, 0xca200000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// EON  <Wd>, <Wn>, <Wm>{, <shift> #<amount>}
	{AEONW, aEON, FEAT_NONE, 0x4a200000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// EON  <Xd>, <Xn>, <Xm>{, <shift> #<amount>}
	{AEON, aEON, FEAT_NONE, 0xca200000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// EON  <Zdn>.<T>, <Zdn>.<T>, #<const>
	{AZEON, aEON, FEAT_NONE, 0x5400000, 0xfffc0000, true, []arg{
		{AC_IMM, []elmType{
			sa_const__imm13,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
	}},

	// EOR  <Wd>, <Wn>, <Wm>
	{AEORW, aEOR, FEAT_NONE, 0x4a000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// EOR  <Xd>, <Xn>, <Xm>
	{AEOR, aEOR, FEAT_NONE, 0xca000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// EOR  <Wd>, <Wn>, <Wm>{, <shift> #<amount>}
	{AEORW, aEOR, FEAT_NONE, 0x4a000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// EOR  <Xd>, <Xn>, <Xm>{, <shift> #<amount>}
	{AEOR, aEOR, FEAT_NONE, 0xca000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// EOR  <Wd|WSP>, <Wn>, #<imm>
	{AEORW, aEOR, FEAT_NONE, 0x52000000, 0xffc00000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imms_immr,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_RSP, []elmType{
			sa_wd_wsp__Rd,
		}},
	}},

	// EOR  <Xd|SP>, <Xn>, #<imm>
	{AEOR, aEOR, FEAT_NONE, 0xd2000000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm_1__N_imms_immr,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// EOR  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVEOR, aEOR, FEAT_NONE, 0x2e201c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__8B_16B,
		}},
	}},

	// EOR  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APEOR, aEOR, FEAT_NONE, 0x25004200, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// EOR  <Zd>.D, <Zn>.D, <Zm>.D
	{AZEOR, aEOR, FEAT_NONE, 0x4a03000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// EOR  <Zdn>.<T>, <Zdn>.<T>, #<const>
	{AZEOR, aEOR, FEAT_NONE, 0x5400000, 0xfffc0000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__imm13,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
	}},

	// EOR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZEOR, aEOR, FEAT_NONE, 0x4190000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// EOR3  <Vd>.16B, <Vn>.16B, <Vm>.16B, <Va>.16B
	{AVEOR3, aEOR3, FEAT_SHA3, 0xce000000, 0xffe08000, false, []arg{
		{AC_ARNG, []elmType{
			sa_va__Ra,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_16B,
		}},
	}},

	// EOR3  <Zdn>.D, <Zdn>.D, <Zm>.D, <Zk>.D
	{AZEOR3, aEOR3, FEAT_NONE, 0x4203800, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zk__Zk,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// EORBT  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZEORBT, aEORBT, FEAT_NONE, 0x45009000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// EORQV  <Vd>.<T>, <Pg>, <Zn>.<Tb>
	{AZEORQV, aEORQV, FEAT_SVE2p1, 0x41d2000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Vd,
			sa_t__size__2D_4S_8H_16B,
		}},
	}},

	// EORS  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APEORS, aEORS, FEAT_NONE, 0x25404200, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// EORTB  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZEORTB, aEORTB, FEAT_NONE, 0x45009400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// EORV  <V><d>, <Pg>, <Zn>.<T>
	{AZEORV, aEORV, FEAT_NONE, 0x4192000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Vd,
		}},
	}},

	// ERET
	{AERET, aERET, FEAT_NONE, 0xd69f03e0, 0xffffffff, false, nil},

	// ERETAA
	{AERETAA, aERETAA, FEAT_PAuth, 0xd69f0bff, 0xffffffff, false, nil},

	// ERETAB
	{AERETAB, aERETAB, FEAT_PAuth, 0xd69f0fff, 0xffffffff, false, nil},

	// ESB
	{AESB, aESB, FEAT_RAS, 0xd503221f, 0xffffffff, false, nil},

	// EXT  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>, #<index>
	{AVEXT, aEXT, FEAT_NONE, 0x2e000000, 0xbfe08400, false, []arg{
		{AC_IMM, []elmType{
			sa_index__Q_imm4,
		}},
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__Q,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q,
		}},
	}},

	// EXT  <Zd>.B, { <Zn1>.B, <Zn2>.B }, #<imm>
	{AZEXT, aEXT, FEAT_NONE, 0x5600000, 0xffe0e000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8h_imm8l,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_B,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_B,
		}},
	}},

	// EXT  <Zdn>.B, <Zdn>.B, <Zm>.B, #<imm>
	{AZEXT, aEXT, FEAT_NONE, 0x5200000, 0xffe0e000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8h_imm8l,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_B,
		}},
	}},

	// EXTQ  <Zdn>.B, <Zdn>.B, <Zm>.B, #<imm>
	{AZEXTQ, aEXTQ, FEAT_SVE2p1, 0x5602400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_B,
		}},
	}},

	// EXTR  <Wd>, <Wn>, <Wm>, #<lsb>
	{AEXTRW, aEXTR, FEAT_NONE, 0x13800000, 0xffe08000, false, []arg{
		{AC_IMM, []elmType{
			sa_lsb__imms,
		}},
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// EXTR  <Xd>, <Xn>, <Xm>, #<lsb>
	{AEXTR, aEXTR, FEAT_NONE, 0x93c00000, 0xffe00000, false, []arg{
		{AC_IMM, []elmType{
			sa_lsb_1__imms,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FABD  <Hd>, <Hn>, <Hm>
	{AVFABDH, aFABD, FEAT_FP16, 0x7ec01400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FABD  <V><d>, <V><n>, <V><m>
	{AVFABDS, aFABD, FEAT_NONE, 0x7ea0d400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FABD  <V><d>, <V><n>, <V><m>
	{AVFABDD, aFABD, FEAT_NONE, 0x7ee0d400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FABD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFABD, aFABD, FEAT_FP16, 0x2ec01400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FABD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFABD, aFABD, FEAT_NONE, 0x2ea0d400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FABD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFABD, aFABD, FEAT_NONE, 0x65088000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FABS  <Vd>.<T>, <Vn>.<T>
	{AVFABS, aFABS, FEAT_FP16, 0xef8f800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FABS  <Vd>.<T>, <Vn>.<T>
	{AVFABS, aFABS, FEAT_NONE, 0xea0f800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FABS  <Hd>, <Hn>
	{AFABSH, aFABS, FEAT_NONE, 0x1ee0c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FABS  <Sd>, <Sn>
	{AFABSS, aFABS, FEAT_NONE, 0x1e20c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FABS  <Dd>, <Dn>
	{AFABSD, aFABS, FEAT_NONE, 0x1e60c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FABS  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZFABS, aFABS, FEAT_NONE, 0x41ca000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FACGE  <Hd>, <Hn>, <Hm>
	{AVFACGEH, aFACGE, FEAT_FP16, 0x7e402c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FACGE  <V><d>, <V><n>, <V><m>
	{AVFACGES, aFACGE, FEAT_NONE, 0x7e20ec00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FACGE  <V><d>, <V><n>, <V><m>
	{AVFACGED, aFACGE, FEAT_NONE, 0x7e60ec00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FACGE  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFACGE, aFACGE, FEAT_FP16, 0x2e402c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FACGE  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFACGE, aFACGE, FEAT_NONE, 0x2e20ec00, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FACGT  <Hd>, <Hn>, <Hm>
	{AVFACGTH, aFACGT, FEAT_FP16, 0x7ec02c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FACGT  <V><d>, <V><n>, <V><m>
	{AVFACGTS, aFACGT, FEAT_NONE, 0x7ea0ec00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FACGT  <V><d>, <V><n>, <V><m>
	{AVFACGTD, aFACGT, FEAT_NONE, 0x7ee0ec00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FACGT  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFACGT, aFACGT, FEAT_FP16, 0x2ec02c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FACGT  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFACGT, aFACGT, FEAT_NONE, 0x2ea0ec00, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FACGT  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZFACGT, aFACGT, FEAT_NONE, 0x6500e010, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FACGE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZFACGE, aFACGE, FEAT_NONE, 0x6500c010, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FACLE  <Pd>.<T>, <Pg>/Z, <Zm>.<T>, <Zn>.<T>
	{AZFACLE, aFACLE, FEAT_NONE, 0x6500c010, 0xff20e010, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FACLT  <Pd>.<T>, <Pg>/Z, <Zm>.<T>, <Zn>.<T>
	{AZFACLT, aFACLT, FEAT_NONE, 0x6500e010, 0xff20e010, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FADD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFADD, aFADD, FEAT_FP16, 0xe401400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FADD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFADD, aFADD, FEAT_NONE, 0xe20d400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FADD  <Hd>, <Hn>, <Hm>
	{AFADDH, aFADD, FEAT_NONE, 0x1ee02800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FADD  <Sd>, <Sn>, <Sm>
	{AFADDS, aFADD, FEAT_NONE, 0x1e202800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FADD  <Dd>, <Dn>, <Dm>
	{AFADDD, aFADD, FEAT_NONE, 0x1e602800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FADD  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZFADD, aFADD, FEAT_NONE, 0x65000000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FADD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFADD, aFADD, FEAT_NONE, 0x65008000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FADD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <const>
	{AZFADD, aFADD, FEAT_NONE, 0x65188000, 0xff3fe3c0, false, []arg{
		{AC_IMM, []elmType{
			sa_const__i1__0,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FADD  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zm1>.<T>-<Zm2>.<T> }
	{AZFADD, aFADD, FEAT_SME2, 0xc1a01c00, 0xffbf9c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_9_4,
			sa_t__sz__D_S,
			sa_zm2__Zm_9_4,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FADD  ZA.H[<Wv>, <offs>{, VGx2}], { <Zm1>.H-<Zm2>.H }
	{AZFADD, aFADD, FEAT_SME_F16F16, 0xc1a41c00, 0xffff9c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_9_4,
			sa_zm2__Zm_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FADD  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zm1>.<T>-<Zm4>.<T> }
	{AZFADD, aFADD, FEAT_SME2, 0xc1a11c00, 0xffbf9c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_9_3,
			sa_t__sz__D_S,
			sa_zm4__Zm_9_3,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FADD  ZA.H[<Wv>, <offs>{, VGx4}], { <Zm1>.H-<Zm4>.H }
	{AZFADD, aFADD, FEAT_SME_F16F16, 0xc1a51c00, 0xffff9c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_9_3,
			sa_zm4__Zm_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FADDA  <V><dn>, <Pg>, <V><dn>, <Zm>.<T>
	{AZFADDA, aFADDA, FEAT_NONE, 0x65182000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D_H_S,
			sa_dn__Vdn,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D_H_S,
			sa_dn__Vdn,
		}},
	}},

	// FADDP  <V><d>, <Vn>.<T>
	{AVFADDP, aFADDP, FEAT_FP16, 0x5e30d800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz__2H,
		}},
		{AC_VREG, []elmType{
			sa_v__sz__H,
			sa_d__Rd,
		}},
	}},

	// FADDP  <V><d>, <Vn>.<T>
	{AVFADDP, aFADDP, FEAT_NONE, 0x7e30d800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__sz__2D_2S,
		}},
		{AC_VREG, []elmType{
			sa_v_1__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FADDP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFADDP, aFADDP, FEAT_FP16, 0x2e401400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FADDP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFADDP, aFADDP, FEAT_NONE, 0x2e20d400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FADDP  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFADDP, aFADDP, FEAT_NONE, 0x64108000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FADDQV  <Vd>.<T>, <Pg>, <Zn>.<Tb>
	{AZFADDQV, aFADDQV, FEAT_SVE2p1, 0x6410a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Vd,
			sa_t__size__2D_4S_8H,
		}},
	}},

	// FADDV  <V><d>, <Pg>, <Zn>.<T>
	{AZFADDV, aFADDV, FEAT_NONE, 0x65002000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D_H_S,
			sa_d__Vd,
		}},
	}},

	// FCADD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>, #<rotate>
	{AVFCADD, aFCADD, FEAT_FCMA, 0x2e00e400, 0xbf20ec00, false, []arg{
		{AC_IMM, []elmType{
			sa_rotate__rot__90_270,
		}},
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8H,
		}},
	}},

	// FCADD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>, <const>
	{AZFCADD, aFCADD, FEAT_NONE, 0x64008000, 0xff3ee000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__90_270,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FCCMP  <Hn>, <Hm>, #<nzcv>, <cond>
	{AFCCMPH, aFCCMP, FEAT_NONE, 0x1ee00400, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// FCCMP  <Sn>, <Sm>, #<nzcv>, <cond>
	{AFCCMPS, aFCCMP, FEAT_NONE, 0x1e200400, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// FCCMP  <Dn>, <Dm>, #<nzcv>, <cond>
	{AFCCMPD, aFCCMP, FEAT_NONE, 0x1e600400, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// FCCMPE  <Hn>, <Hm>, #<nzcv>, <cond>
	{AFCCMPEH, aFCCMPE, FEAT_NONE, 0x1ee00410, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// FCCMPE  <Sn>, <Sm>, #<nzcv>, <cond>
	{AFCCMPES, aFCCMPE, FEAT_NONE, 0x1e200410, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// FCCMPE  <Dn>, <Dm>, #<nzcv>, <cond>
	{AFCCMPED, aFCCMPE, FEAT_NONE, 0x1e600410, 0xffe00c10, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_nzcv__nzcv,
		}},
	}},

	// FCLAMP  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZFCLAMP, aFCLAMP, FEAT_SVE2p1, 0x64202400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCLAMP  { <Zd1>.<T>-<Zd2>.<T> }, <Zn>.<T>, <Zm>.<T>
	{AZFCLAMP, aFCLAMP, FEAT_SME2, 0xc120c000, 0xff20fc01, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_t__size__D_H_S,
			sa_zd2__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCLAMP  { <Zd1>.<T>-<Zd4>.<T> }, <Zn>.<T>, <Zm>.<T>
	{AZFCLAMP, aFCLAMP, FEAT_SME2, 0xc120c800, 0xff20fc03, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_t__size__D_H_S,
			sa_zd4__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMEQ  <Hd>, <Hn>, <Hm>
	{AVFCMEQH, aFCMEQ, FEAT_FP16, 0x5e402400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCMEQ  <V><d>, <V><n>, <V><m>
	{AVFCMEQS, aFCMEQ, FEAT_NONE, 0x5e20e400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMEQ  <V><d>, <V><n>, <V><m>
	{AVFCMEQD, aFCMEQ, FEAT_NONE, 0x5e60e400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMEQ  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFCMEQ, aFCMEQ, FEAT_FP16, 0xe402400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCMEQ  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFCMEQ, aFCMEQ, FEAT_NONE, 0xe20e400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCMEQ  <Hd>, <Hn>, #0.0
	{AVFCMEQH, aFCMEQ, FEAT_FP16, 0x5ef8d800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCMEQ  <V><d>, <V><n>, #0.0
	{AVFCMEQS, aFCMEQ, FEAT_NONE, 0x5ea0d800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMEQ  <V><d>, <V><n>, #0.0
	{AVFCMEQD, aFCMEQ, FEAT_NONE, 0x5ee0d800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMEQ  <Vd>.<T>, <Vn>.<T>, #0.0
	{AVFCMEQ, aFCMEQ, FEAT_FP16, 0xef8d800, 0xbffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCMEQ  <Vd>.<T>, <Vn>.<T>, #0.0
	{AVFCMEQ, aFCMEQ, FEAT_NONE, 0xea0d800, 0xbfbffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCMEQ  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZFCMEQ, aFCMEQ, FEAT_NONE, 0x65006000, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMGT  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZFCMGT, aFCMGT, FEAT_NONE, 0x65004010, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMGE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZFCMGE, aFCMGE, FEAT_NONE, 0x65004000, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMNE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZFCMNE, aFCMNE, FEAT_NONE, 0x65006010, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMUO  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZFCMUO, aFCMUO, FEAT_NONE, 0x6500c000, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMEQ  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #0.0
	{AZFCMEQ, aFCMEQ, FEAT_NONE, 0x65122000, 0xff3fe010, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMGT  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #0.0
	{AZFCMGT, aFCMGT, FEAT_NONE, 0x65102010, 0xff3fe010, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMGE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #0.0
	{AZFCMGE, aFCMGE, FEAT_NONE, 0x65102000, 0xff3fe010, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMLT  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #0.0
	{AZFCMLT, aFCMLT, FEAT_NONE, 0x65112000, 0xff3fe010, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMLE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #0.0
	{AZFCMLE, aFCMLE, FEAT_NONE, 0x65112010, 0xff3fe010, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMNE  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, #0.0
	{AZFCMNE, aFCMNE, FEAT_NONE, 0x65132000, 0xff3fe010, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMGE  <Hd>, <Hn>, <Hm>
	{AVFCMGEH, aFCMGE, FEAT_FP16, 0x7e402400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCMGE  <V><d>, <V><n>, <V><m>
	{AVFCMGES, aFCMGE, FEAT_NONE, 0x7e20e400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMGE  <V><d>, <V><n>, <V><m>
	{AVFCMGED, aFCMGE, FEAT_NONE, 0x7e60e400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMGE  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFCMGE, aFCMGE, FEAT_FP16, 0x2e402400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCMGE  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFCMGE, aFCMGE, FEAT_NONE, 0x2e20e400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCMGE  <Hd>, <Hn>, #0.0
	{AVFCMGEH, aFCMGE, FEAT_FP16, 0x7ef8c800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCMGE  <V><d>, <V><n>, #0.0
	{AVFCMGES, aFCMGE, FEAT_NONE, 0x7ea0c800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMGE  <V><d>, <V><n>, #0.0
	{AVFCMGED, aFCMGE, FEAT_NONE, 0x7ee0c800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMGE  <Vd>.<T>, <Vn>.<T>, #0.0
	{AVFCMGE, aFCMGE, FEAT_FP16, 0x2ef8c800, 0xbffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCMGE  <Vd>.<T>, <Vn>.<T>, #0.0
	{AVFCMGE, aFCMGE, FEAT_NONE, 0x2ea0c800, 0xbfbffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCMGT  <Hd>, <Hn>, #0.0
	{AVFCMGTH, aFCMGT, FEAT_FP16, 0x5ef8c800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCMGT  <V><d>, <V><n>, #0.0
	{AVFCMGTS, aFCMGT, FEAT_NONE, 0x5ea0c800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMGT  <V><d>, <V><n>, #0.0
	{AVFCMGTD, aFCMGT, FEAT_NONE, 0x5ee0c800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMGT  <Vd>.<T>, <Vn>.<T>, #0.0
	{AVFCMGT, aFCMGT, FEAT_FP16, 0xef8c800, 0xbffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCMGT  <Vd>.<T>, <Vn>.<T>, #0.0
	{AVFCMGT, aFCMGT, FEAT_NONE, 0xea0c800, 0xbfbffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCMGT  <Hd>, <Hn>, <Hm>
	{AVFCMGTH, aFCMGT, FEAT_FP16, 0x7ec02400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCMGT  <V><d>, <V><n>, <V><m>
	{AVFCMGTS, aFCMGT, FEAT_NONE, 0x7ea0e400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMGT  <V><d>, <V><n>, <V><m>
	{AVFCMGTD, aFCMGT, FEAT_NONE, 0x7ee0e400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMGT  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFCMGT, aFCMGT, FEAT_FP16, 0x2ec02400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCMGT  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFCMGT, aFCMGT, FEAT_NONE, 0x2ea0e400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCMLA  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>, #<rotate>
	{AVFCMLA, aFCMLA, FEAT_FCMA, 0x2e00c400, 0xbf20e400, false, []arg{
		{AC_IMM, []elmType{
			sa_rotate__rot__0_90_180_270,
		}},
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8H,
		}},
	}},

	// FCMLA  <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>], #<rotate>
	{AVFCMLA, aFCMLA, FEAT_FCMA, 0x2f001000, 0xbf009400, false, []arg{
		{AC_IMM, []elmType{
			sa_rotate__rot__0_90_180_270,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vm__M_Rm,
			sa_ts__size__H_S,
			sa_index__size_H_L__H_H_L,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__4H_4S_8H,
		}},
	}},

	// FCMLA  <Zda>.H, <Zn>.H, <Zm>.H[<imm>], <const>
	{AZFCMLA, aFCMLA, FEAT_NONE, 0x64a01000, 0xffe0f000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__0_90_180_270,
		}},
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_H,
		}},
	}},

	// FCMLA  <Zda>.S, <Zn>.S, <Zm>.S[<imm>], <const>
	{AZFCMLA, aFCMLA, FEAT_NONE, 0x64e01000, 0xffe0f000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__0_90_180_270,
		}},
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_S,
			sa_imm_1__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FCMLA  <Zda>.<T>, <Pg>/M, <Zn>.<T>, <Zm>.<T>, <const>
	{AZFCMLA, aFCMLA, FEAT_NONE, 0x64000000, 0xff208000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__0_90_180_270,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMLE  <Hd>, <Hn>, #0.0
	{AVFCMLEH, aFCMLE, FEAT_FP16, 0x7ef8d800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCMLE  <V><d>, <V><n>, #0.0
	{AVFCMLES, aFCMLE, FEAT_NONE, 0x7ea0d800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMLE  <V><d>, <V><n>, #0.0
	{AVFCMLED, aFCMLE, FEAT_NONE, 0x7ee0d800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMLE  <Vd>.<T>, <Vn>.<T>, #0.0
	{AVFCMLE, aFCMLE, FEAT_FP16, 0x2ef8d800, 0xbffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCMLE  <Vd>.<T>, <Vn>.<T>, #0.0
	{AVFCMLE, aFCMLE, FEAT_NONE, 0x2ea0d800, 0xbfbffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCMLE  <Pd>.<T>, <Pg>/Z, <Zm>.<T>, <Zn>.<T>
	{AZFCMLE, aFCMLE, FEAT_NONE, 0x65004000, 0xff20e010, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMLT  <Hd>, <Hn>, #0.0
	{AVFCMLTH, aFCMLT, FEAT_FP16, 0x5ef8e800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCMLT  <V><d>, <V><n>, #0.0
	{AVFCMLTS, aFCMLT, FEAT_NONE, 0x5ea0e800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMLT  <V><d>, <V><n>, #0.0
	{AVFCMLTD, aFCMLT, FEAT_NONE, 0x5ee0e800, 0xfffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCMLT  <Vd>.<T>, <Vn>.<T>, #0.0
	{AVFCMLT, aFCMLT, FEAT_FP16, 0xef8e800, 0xbffffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCMLT  <Vd>.<T>, <Vn>.<T>, #0.0
	{AVFCMLT, aFCMLT, FEAT_NONE, 0xea0e800, 0xbfbffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCMLT  <Pd>.<T>, <Pg>/Z, <Zm>.<T>, <Zn>.<T>
	{AZFCMLT, aFCMLT, FEAT_NONE, 0x65004010, 0xff20e010, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCMP  <Hn>, <Hm>
	{AFCMPH, aFCMP, FEAT_NONE, 0x1ee02000, 0xffe0fc1f, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn_1__Rn,
		}},
	}},

	// FCMP  <Hn>, #0.0
	{AFCMPH, aFCMP, FEAT_NONE, 0x1ee02008, 0xffe0fc1f, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
	}},

	// FCMP  <Sn>, <Sm>
	{AFCMPS, aFCMP, FEAT_NONE, 0x1e202000, 0xffe0fc1f, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sn_1__Rn,
		}},
	}},

	// FCMP  <Sn>, #0.0
	{AFCMPS, aFCMP, FEAT_NONE, 0x1e202008, 0xffe0fc1f, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
	}},

	// FCMP  <Dn>, <Dm>
	{AFCMPD, aFCMP, FEAT_NONE, 0x1e602000, 0xffe0fc1f, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dn_1__Rn,
		}},
	}},

	// FCMP  <Dn>, #0.0
	{AFCMPD, aFCMP, FEAT_NONE, 0x1e602008, 0xffe0fc1f, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
	}},

	// FCMPE  <Hn>, <Hm>
	{AFCMPEH, aFCMPE, FEAT_NONE, 0x1ee02010, 0xffe0fc1f, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn_1__Rn,
		}},
	}},

	// FCMPE  <Hn>, #0.0
	{AFCMPEH, aFCMPE, FEAT_NONE, 0x1ee02018, 0xffe0fc1f, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
	}},

	// FCMPE  <Sn>, <Sm>
	{AFCMPES, aFCMPE, FEAT_NONE, 0x1e202010, 0xffe0fc1f, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sn_1__Rn,
		}},
	}},

	// FCMPE  <Sn>, #0.0
	{AFCMPES, aFCMPE, FEAT_NONE, 0x1e202018, 0xffe0fc1f, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
	}},

	// FCMPE  <Dn>, <Dm>
	{AFCMPED, aFCMPE, FEAT_NONE, 0x1e602010, 0xffe0fc1f, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dn_1__Rn,
		}},
	}},

	// FCMPE  <Dn>, #0.0
	{AFCMPED, aFCMPE, FEAT_NONE, 0x1e602018, 0xffe0fc1f, false, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
	}},

	// FCPY  <Zd>.<T>, <Pg>/M, #<const>
	{AZFCPY, aFCPY, FEAT_NONE, 0x510c000, 0xff30e000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__imm8,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_19_4,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FCSEL  <Hd>, <Hn>, <Hm>, <cond>
	{AFCSELH, aFCSEL, FEAT_NONE, 0x1ee00c00, 0xffe00c00, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCSEL  <Sd>, <Sn>, <Sm>, <cond>
	{AFCSELS, aFCSEL, FEAT_NONE, 0x1e200c00, 0xffe00c00, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FCSEL  <Dd>, <Dn>, <Dm>, <cond>
	{AFCSELD, aFCSEL, FEAT_NONE, 0x1e600c00, 0xffe00c00, false, []arg{
		{AC_COND, []elmType{
			sa_cond__cond,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FCVT  <Sd>, <Hn>
	{AFCVTHS, aFCVT, FEAT_NONE, 0x1ee24000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FCVT  <Dd>, <Hn>
	{AFCVTHD, aFCVT, FEAT_NONE, 0x1ee2c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FCVT  <Hd>, <Sn>
	{AFCVTSH, aFCVT, FEAT_NONE, 0x1e23c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCVT  <Dd>, <Sn>
	{AFCVTSD, aFCVT, FEAT_NONE, 0x1e22c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FCVT  <Hd>, <Dn>
	{AFCVTDH, aFCVT, FEAT_NONE, 0x1e63c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCVT  <Sd>, <Dn>
	{AFCVTDS, aFCVT, FEAT_NONE, 0x1e624000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FCVT  <Zd>.S, <Pg>/M, <Zn>.H
	{AZFCVT, aFCVT, FEAT_NONE, 0x6589a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// FCVT  <Zd>.D, <Pg>/M, <Zn>.H
	{AZFCVT, aFCVT, FEAT_NONE, 0x65c9a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// FCVT  <Zd>.H, <Pg>/M, <Zn>.S
	{AZFCVT, aFCVT, FEAT_NONE, 0x6588a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// FCVT  <Zd>.D, <Pg>/M, <Zn>.S
	{AZFCVT, aFCVT, FEAT_NONE, 0x65cba000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// FCVT  <Zd>.H, <Pg>/M, <Zn>.D
	{AZFCVT, aFCVT, FEAT_NONE, 0x65c8a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// FCVT  <Zd>.S, <Pg>/M, <Zn>.D
	{AZFCVT, aFCVT, FEAT_NONE, 0x65caa000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// FCVT  <Zd>.H, { <Zn1>.S-<Zn2>.S }
	{AZFCVT, aFCVT, FEAT_SME2, 0xc120e000, 0xfffffc20, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// FCVT  { <Zd1>.S-<Zd2>.S }, <Zn>.H
	{AZFCVT, aFCVT, FEAT_SME_F16F16, 0xc1a0e000, 0xfffffc01, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_S,
		}},
	}},

	// FCVTAS  <Hd>, <Hn>
	{AVFCVTASH, aFCVTAS, FEAT_FP16, 0x5e79c800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCVTAS  <V><d>, <V><n>
	{AVFCVTASS, aFCVTAS, FEAT_NONE, 0x5e21c800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTAS  <V><d>, <V><n>
	{AVFCVTASD, aFCVTAS, FEAT_NONE, 0x5e61c800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTAS  <Vd>.<T>, <Vn>.<T>
	{AVFCVTAS, aFCVTAS, FEAT_FP16, 0xe79c800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCVTAS  <Vd>.<T>, <Vn>.<T>
	{AVFCVTAS, aFCVTAS, FEAT_NONE, 0xe21c800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCVTAS  <Wd>, <Hn>
	{AFCVTASHW, aFCVTAS, FEAT_NONE, 0x1ee40000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTAS  <Xd>, <Hn>
	{AFCVTASH, aFCVTAS, FEAT_NONE, 0x9ee40000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTAS  <Wd>, <Sn>
	{AFCVTASSW, aFCVTAS, FEAT_NONE, 0x1e240000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTAS  <Xd>, <Sn>
	{AFCVTASS, aFCVTAS, FEAT_NONE, 0x9e240000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTAS  <Wd>, <Dn>
	{AFCVTASDW, aFCVTAS, FEAT_NONE, 0x1e640000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTAS  <Xd>, <Dn>
	{AFCVTASD, aFCVTAS, FEAT_NONE, 0x9e640000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTAU  <Hd>, <Hn>
	{AVFCVTAUH, aFCVTAU, FEAT_FP16, 0x7e79c800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCVTAU  <V><d>, <V><n>
	{AVFCVTAUS, aFCVTAU, FEAT_NONE, 0x7e21c800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTAU  <V><d>, <V><n>
	{AVFCVTAUD, aFCVTAU, FEAT_NONE, 0x7e61c800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTAU  <Vd>.<T>, <Vn>.<T>
	{AVFCVTAU, aFCVTAU, FEAT_FP16, 0x2e79c800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCVTAU  <Vd>.<T>, <Vn>.<T>
	{AVFCVTAU, aFCVTAU, FEAT_NONE, 0x2e21c800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCVTAU  <Wd>, <Hn>
	{AFCVTAUHW, aFCVTAU, FEAT_NONE, 0x1ee50000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTAU  <Xd>, <Hn>
	{AFCVTAUH, aFCVTAU, FEAT_NONE, 0x9ee50000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTAU  <Wd>, <Sn>
	{AFCVTAUSW, aFCVTAU, FEAT_NONE, 0x1e250000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTAU  <Xd>, <Sn>
	{AFCVTAUS, aFCVTAU, FEAT_NONE, 0x9e250000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTAU  <Wd>, <Dn>
	{AFCVTAUDW, aFCVTAU, FEAT_NONE, 0x1e650000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTAU  <Xd>, <Dn>
	{AFCVTAUD, aFCVTAU, FEAT_NONE, 0x9e650000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTL  <Vd>.<Ta>, <Vn>.<Tb>
	{AVFCVTL, aFCVTL, FEAT_NONE, 0xe217800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__sz_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__sz__2D_4S,
		}},
	}},

	// FCVTL2  <Vd>.<Ta>, <Vn>.<Tb>
	{AVFCVTL2, aFCVTL2, FEAT_NONE, 0x4e217800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__sz_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__sz__2D_4S,
		}},
	}},

	// FCVTL  { <Zd1>.S-<Zd2>.S }, <Zn>.H
	{AZFCVTL, aFCVTL, FEAT_SME_F16F16, 0xc1a0e001, 0xfffffc01, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_S,
		}},
	}},

	// FCVTLT  <Zd>.S, <Pg>/M, <Zn>.H
	{AZFCVTLT, aFCVTLT, FEAT_NONE, 0x6489a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// FCVTLT  <Zd>.D, <Pg>/M, <Zn>.S
	{AZFCVTLT, aFCVTLT, FEAT_NONE, 0x64cba000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// FCVTMS  <Hd>, <Hn>
	{AVFCVTMSH, aFCVTMS, FEAT_FP16, 0x5e79b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCVTMS  <V><d>, <V><n>
	{AVFCVTMSS, aFCVTMS, FEAT_NONE, 0x5e21b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTMS  <V><d>, <V><n>
	{AVFCVTMSD, aFCVTMS, FEAT_NONE, 0x5e61b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTMS  <Vd>.<T>, <Vn>.<T>
	{AVFCVTMS, aFCVTMS, FEAT_FP16, 0xe79b800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCVTMS  <Vd>.<T>, <Vn>.<T>
	{AVFCVTMS, aFCVTMS, FEAT_NONE, 0xe21b800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCVTMS  <Wd>, <Hn>
	{AFCVTMSHW, aFCVTMS, FEAT_NONE, 0x1ef00000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTMS  <Xd>, <Hn>
	{AFCVTMSH, aFCVTMS, FEAT_NONE, 0x9ef00000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTMS  <Wd>, <Sn>
	{AFCVTMSSW, aFCVTMS, FEAT_NONE, 0x1e300000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTMS  <Xd>, <Sn>
	{AFCVTMSS, aFCVTMS, FEAT_NONE, 0x9e300000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTMS  <Wd>, <Dn>
	{AFCVTMSDW, aFCVTMS, FEAT_NONE, 0x1e700000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTMS  <Xd>, <Dn>
	{AFCVTMSD, aFCVTMS, FEAT_NONE, 0x9e700000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTMU  <Hd>, <Hn>
	{AVFCVTMUH, aFCVTMU, FEAT_FP16, 0x7e79b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCVTMU  <V><d>, <V><n>
	{AVFCVTMUS, aFCVTMU, FEAT_NONE, 0x7e21b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTMU  <V><d>, <V><n>
	{AVFCVTMUD, aFCVTMU, FEAT_NONE, 0x7e61b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTMU  <Vd>.<T>, <Vn>.<T>
	{AVFCVTMU, aFCVTMU, FEAT_FP16, 0x2e79b800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCVTMU  <Vd>.<T>, <Vn>.<T>
	{AVFCVTMU, aFCVTMU, FEAT_NONE, 0x2e21b800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCVTMU  <Wd>, <Hn>
	{AFCVTMUHW, aFCVTMU, FEAT_NONE, 0x1ef10000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTMU  <Xd>, <Hn>
	{AFCVTMUH, aFCVTMU, FEAT_NONE, 0x9ef10000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTMU  <Wd>, <Sn>
	{AFCVTMUSW, aFCVTMU, FEAT_NONE, 0x1e310000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTMU  <Xd>, <Sn>
	{AFCVTMUS, aFCVTMU, FEAT_NONE, 0x9e310000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTMU  <Wd>, <Dn>
	{AFCVTMUDW, aFCVTMU, FEAT_NONE, 0x1e710000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTMU  <Xd>, <Dn>
	{AFCVTMUD, aFCVTMU, FEAT_NONE, 0x9e710000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTN  <Vd>.<Tb>, <Vn>.<Ta>
	{AVFCVTN, aFCVTN, FEAT_NONE, 0xe216800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__sz__2D_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__sz_Q__2S_4H_4S_8H,
		}},
	}},

	// FCVTN2  <Vd>.<Tb>, <Vn>.<Ta>
	{AVFCVTN2, aFCVTN2, FEAT_NONE, 0x4e216800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__sz__2D_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__sz_Q__2S_4H_4S_8H,
		}},
	}},

	// FCVTN  <Zd>.H, { <Zn1>.S-<Zn2>.S }
	{AZFCVTN, aFCVTN, FEAT_SME2, 0xc120e020, 0xfffffc20, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// FCVTNS  <Hd>, <Hn>
	{AVFCVTNSH, aFCVTNS, FEAT_FP16, 0x5e79a800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCVTNS  <V><d>, <V><n>
	{AVFCVTNSS, aFCVTNS, FEAT_NONE, 0x5e21a800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTNS  <V><d>, <V><n>
	{AVFCVTNSD, aFCVTNS, FEAT_NONE, 0x5e61a800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTNS  <Vd>.<T>, <Vn>.<T>
	{AVFCVTNS, aFCVTNS, FEAT_FP16, 0xe79a800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCVTNS  <Vd>.<T>, <Vn>.<T>
	{AVFCVTNS, aFCVTNS, FEAT_NONE, 0xe21a800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCVTNS  <Wd>, <Hn>
	{AFCVTNSHW, aFCVTNS, FEAT_NONE, 0x1ee00000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTNS  <Xd>, <Hn>
	{AFCVTNSH, aFCVTNS, FEAT_NONE, 0x9ee00000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTNS  <Wd>, <Sn>
	{AFCVTNSSW, aFCVTNS, FEAT_NONE, 0x1e200000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTNS  <Xd>, <Sn>
	{AFCVTNSS, aFCVTNS, FEAT_NONE, 0x9e200000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTNS  <Wd>, <Dn>
	{AFCVTNSDW, aFCVTNS, FEAT_NONE, 0x1e600000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTNS  <Xd>, <Dn>
	{AFCVTNSD, aFCVTNS, FEAT_NONE, 0x9e600000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTNT  <Zd>.H, <Pg>/M, <Zn>.S
	{AZFCVTNT, aFCVTNT, FEAT_NONE, 0x6488a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// FCVTNT  <Zd>.S, <Pg>/M, <Zn>.D
	{AZFCVTNT, aFCVTNT, FEAT_NONE, 0x64caa000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// FCVTNU  <Hd>, <Hn>
	{AVFCVTNUH, aFCVTNU, FEAT_FP16, 0x7e79a800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCVTNU  <V><d>, <V><n>
	{AVFCVTNUS, aFCVTNU, FEAT_NONE, 0x7e21a800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTNU  <V><d>, <V><n>
	{AVFCVTNUD, aFCVTNU, FEAT_NONE, 0x7e61a800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTNU  <Vd>.<T>, <Vn>.<T>
	{AVFCVTNU, aFCVTNU, FEAT_FP16, 0x2e79a800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCVTNU  <Vd>.<T>, <Vn>.<T>
	{AVFCVTNU, aFCVTNU, FEAT_NONE, 0x2e21a800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCVTNU  <Wd>, <Hn>
	{AFCVTNUHW, aFCVTNU, FEAT_NONE, 0x1ee10000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTNU  <Xd>, <Hn>
	{AFCVTNUH, aFCVTNU, FEAT_NONE, 0x9ee10000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTNU  <Wd>, <Sn>
	{AFCVTNUSW, aFCVTNU, FEAT_NONE, 0x1e210000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTNU  <Xd>, <Sn>
	{AFCVTNUS, aFCVTNU, FEAT_NONE, 0x9e210000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTNU  <Wd>, <Dn>
	{AFCVTNUDW, aFCVTNU, FEAT_NONE, 0x1e610000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTNU  <Xd>, <Dn>
	{AFCVTNUD, aFCVTNU, FEAT_NONE, 0x9e610000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTPS  <Hd>, <Hn>
	{AVFCVTPSH, aFCVTPS, FEAT_FP16, 0x5ef9a800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCVTPS  <V><d>, <V><n>
	{AVFCVTPSS, aFCVTPS, FEAT_NONE, 0x5ea1a800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTPS  <V><d>, <V><n>
	{AVFCVTPSD, aFCVTPS, FEAT_NONE, 0x5ee1a800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTPS  <Vd>.<T>, <Vn>.<T>
	{AVFCVTPS, aFCVTPS, FEAT_FP16, 0xef9a800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCVTPS  <Vd>.<T>, <Vn>.<T>
	{AVFCVTPS, aFCVTPS, FEAT_NONE, 0xea1a800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCVTPS  <Wd>, <Hn>
	{AFCVTPSHW, aFCVTPS, FEAT_NONE, 0x1ee80000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTPS  <Xd>, <Hn>
	{AFCVTPSH, aFCVTPS, FEAT_NONE, 0x9ee80000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTPS  <Wd>, <Sn>
	{AFCVTPSSW, aFCVTPS, FEAT_NONE, 0x1e280000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTPS  <Xd>, <Sn>
	{AFCVTPSS, aFCVTPS, FEAT_NONE, 0x9e280000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTPS  <Wd>, <Dn>
	{AFCVTPSDW, aFCVTPS, FEAT_NONE, 0x1e680000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTPS  <Xd>, <Dn>
	{AFCVTPSD, aFCVTPS, FEAT_NONE, 0x9e680000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTPU  <Hd>, <Hn>
	{AVFCVTPUH, aFCVTPU, FEAT_FP16, 0x7ef9a800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCVTPU  <V><d>, <V><n>
	{AVFCVTPUS, aFCVTPU, FEAT_NONE, 0x7ea1a800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTPU  <V><d>, <V><n>
	{AVFCVTPUD, aFCVTPU, FEAT_NONE, 0x7ee1a800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTPU  <Vd>.<T>, <Vn>.<T>
	{AVFCVTPU, aFCVTPU, FEAT_FP16, 0x2ef9a800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCVTPU  <Vd>.<T>, <Vn>.<T>
	{AVFCVTPU, aFCVTPU, FEAT_NONE, 0x2ea1a800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCVTPU  <Wd>, <Hn>
	{AFCVTPUHW, aFCVTPU, FEAT_NONE, 0x1ee90000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTPU  <Xd>, <Hn>
	{AFCVTPUH, aFCVTPU, FEAT_NONE, 0x9ee90000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTPU  <Wd>, <Sn>
	{AFCVTPUSW, aFCVTPU, FEAT_NONE, 0x1e290000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTPU  <Xd>, <Sn>
	{AFCVTPUS, aFCVTPU, FEAT_NONE, 0x9e290000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTPU  <Wd>, <Dn>
	{AFCVTPUDW, aFCVTPU, FEAT_NONE, 0x1e690000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTPU  <Xd>, <Dn>
	{AFCVTPUD, aFCVTPU, FEAT_NONE, 0x9e690000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTX  <Zd>.S, <Pg>/M, <Zn>.D
	{AZFCVTX, aFCVTX, FEAT_NONE, 0x650aa000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// FCVTXN  <Vb><d>, <Va><n>
	{AVFCVTXNS, aFCVTXN, FEAT_NONE, 0x7e616800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_va__sz__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__sz__S,
			sa_d__Rd,
		}},
	}},

	// FCVTXN  <Vd>.<Tb>, <Vn>.<Ta>
	{AVFCVTXN, aFCVTXN, FEAT_NONE, 0x2e216800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__sz__2D,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__sz_Q__2S_4S,
		}},
	}},

	// FCVTXN2  <Vd>.<Tb>, <Vn>.<Ta>
	{AVFCVTXN2, aFCVTXN2, FEAT_NONE, 0x6e216800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__sz__2D,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__sz_Q__2S_4S,
		}},
	}},

	// FCVTXNT  <Zd>.S, <Pg>/M, <Zn>.D
	{AZFCVTXNT, aFCVTXNT, FEAT_NONE, 0x640aa000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// FCVTZS  <Hd>, <Hn>
	{AVFCVTZSH, aFCVTZS, FEAT_FP16, 0x5ef9b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCVTZS  <V><d>, <V><n>
	{AVFCVTZSS, aFCVTZS, FEAT_NONE, 0x5ea1b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTZS  <V><d>, <V><n>
	{AVFCVTZSD, aFCVTZS, FEAT_NONE, 0x5ee1b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTZS  <Vd>.<T>, <Vn>.<T>
	{AVFCVTZS, aFCVTZS, FEAT_FP16, 0xef9b800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCVTZS  <Vd>.<T>, <Vn>.<T>
	{AVFCVTZS, aFCVTZS, FEAT_NONE, 0xea1b800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCVTZS  <V><d>, <V><n>, #<fbits>
	{AVFCVTZSS, aFCVTZS, FEAT_NONE, 0x5f20fc00, 0xffe0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_d__Rd,
		}},
	}},

	// FCVTZS  <V><d>, <V><n>, #<fbits>
	{AVFCVTZSD, aFCVTZS, FEAT_NONE, 0x5f40fc00, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_d__Rd,
		}},
	}},

	// FCVTZS  <V><d>, <V><n>, #<fbits>
	{AVFCVTZSH, aFCVTZS, FEAT_NONE, 0x5f10fc00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_d__Rd,
		}},
	}},

	// FCVTZS  <Vd>.<T>, <Vn>.<T>, #<fbits>
	{AVFCVTZS, aFCVTZS, FEAT_NONE, 0xf00fc00, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8H_SEE_asimdimm,
		}},
	}},

	// FCVTZS  <Wd>, <Hn>
	{AFCVTZSHW, aFCVTZS, FEAT_NONE, 0x1ef80000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTZS  <Xd>, <Hn>
	{AFCVTZSH, aFCVTZS, FEAT_NONE, 0x9ef80000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTZS  <Wd>, <Sn>
	{AFCVTZSSW, aFCVTZS, FEAT_NONE, 0x1e380000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTZS  <Xd>, <Sn>
	{AFCVTZSS, aFCVTZS, FEAT_NONE, 0x9e380000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTZS  <Wd>, <Dn>
	{AFCVTZSDW, aFCVTZS, FEAT_NONE, 0x1e780000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTZS  <Xd>, <Dn>
	{AFCVTZSD, aFCVTZS, FEAT_NONE, 0x9e780000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTZS  <Wd>, <Hn>, #<fbits>
	{AFCVTZSHW, aFCVTZS, FEAT_NONE, 0x1ed80000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__scale,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTZS  <Xd>, <Hn>, #<fbits>
	{AFCVTZSH, aFCVTZS, FEAT_NONE, 0x9ed80000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__scale,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTZS  <Wd>, <Sn>, #<fbits>
	{AFCVTZSSW, aFCVTZS, FEAT_NONE, 0x1e180000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__scale,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTZS  <Xd>, <Sn>, #<fbits>
	{AFCVTZSS, aFCVTZS, FEAT_NONE, 0x9e180000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__scale,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTZS  <Wd>, <Dn>, #<fbits>
	{AFCVTZSDW, aFCVTZS, FEAT_NONE, 0x1e580000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__scale,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTZS  <Xd>, <Dn>, #<fbits>
	{AFCVTZSD, aFCVTZS, FEAT_NONE, 0x9e580000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__scale,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTZS  <Zd>.H, <Pg>/M, <Zn>.H
	{AZFCVTZS, aFCVTZS, FEAT_NONE, 0x655aa000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// FCVTZS  <Zd>.S, <Pg>/M, <Zn>.H
	{AZFCVTZS, aFCVTZS, FEAT_NONE, 0x655ca000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// FCVTZS  <Zd>.D, <Pg>/M, <Zn>.H
	{AZFCVTZS, aFCVTZS, FEAT_NONE, 0x655ea000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// FCVTZS  <Zd>.S, <Pg>/M, <Zn>.S
	{AZFCVTZS, aFCVTZS, FEAT_NONE, 0x659ca000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// FCVTZS  <Zd>.D, <Pg>/M, <Zn>.S
	{AZFCVTZS, aFCVTZS, FEAT_NONE, 0x65dca000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// FCVTZS  <Zd>.S, <Pg>/M, <Zn>.D
	{AZFCVTZS, aFCVTZS, FEAT_NONE, 0x65d8a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// FCVTZS  <Zd>.D, <Pg>/M, <Zn>.D
	{AZFCVTZS, aFCVTZS, FEAT_NONE, 0x65dea000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// FCVTZS  { <Zd1>.S-<Zd2>.S }, { <Zn1>.S-<Zn2>.S }
	{AZFCVTZS, aFCVTZS, FEAT_SME2, 0xc121e000, 0xfffffc21, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_S,
		}},
	}},

	// FCVTZS  { <Zd1>.S-<Zd4>.S }, { <Zn1>.S-<Zn4>.S }
	{AZFCVTZS, aFCVTZS, FEAT_SME2, 0xc131e000, 0xfffffc63, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_zd4__Zd,
			sa_const_REGLIST4_S,
		}},
	}},

	// FCVTZU  <Hd>, <Hn>
	{AVFCVTZUH, aFCVTZU, FEAT_FP16, 0x7ef9b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FCVTZU  <V><d>, <V><n>
	{AVFCVTZUS, aFCVTZU, FEAT_NONE, 0x7ea1b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTZU  <V><d>, <V><n>
	{AVFCVTZUD, aFCVTZU, FEAT_NONE, 0x7ee1b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FCVTZU  <Vd>.<T>, <Vn>.<T>
	{AVFCVTZU, aFCVTZU, FEAT_FP16, 0x2ef9b800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FCVTZU  <Vd>.<T>, <Vn>.<T>
	{AVFCVTZU, aFCVTZU, FEAT_NONE, 0x2ea1b800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FCVTZU  <V><d>, <V><n>, #<fbits>
	{AVFCVTZUS, aFCVTZU, FEAT_NONE, 0x7f20fc00, 0xffe0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_d__Rd,
		}},
	}},

	// FCVTZU  <V><d>, <V><n>, #<fbits>
	{AVFCVTZUD, aFCVTZU, FEAT_NONE, 0x7f40fc00, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_d__Rd,
		}},
	}},

	// FCVTZU  <V><d>, <V><n>, #<fbits>
	{AVFCVTZUH, aFCVTZU, FEAT_NONE, 0x7f10fc00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_d__Rd,
		}},
	}},

	// FCVTZU  <Vd>.<T>, <Vn>.<T>, #<fbits>
	{AVFCVTZU, aFCVTZU, FEAT_NONE, 0x2f00fc00, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8H_SEE_asimdimm,
		}},
	}},

	// FCVTZU  <Wd>, <Hn>
	{AFCVTZUHW, aFCVTZU, FEAT_NONE, 0x1ef90000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTZU  <Xd>, <Hn>
	{AFCVTZUH, aFCVTZU, FEAT_NONE, 0x9ef90000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTZU  <Wd>, <Sn>
	{AFCVTZUSW, aFCVTZU, FEAT_NONE, 0x1e390000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTZU  <Xd>, <Sn>
	{AFCVTZUS, aFCVTZU, FEAT_NONE, 0x9e390000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTZU  <Wd>, <Dn>
	{AFCVTZUDW, aFCVTZU, FEAT_NONE, 0x1e790000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTZU  <Xd>, <Dn>
	{AFCVTZUD, aFCVTZU, FEAT_NONE, 0x9e790000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTZU  <Wd>, <Hn>, #<fbits>
	{AFCVTZUHW, aFCVTZU, FEAT_NONE, 0x1ed90000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__scale,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTZU  <Xd>, <Hn>, #<fbits>
	{AFCVTZUH, aFCVTZU, FEAT_NONE, 0x9ed90000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__scale,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTZU  <Wd>, <Sn>, #<fbits>
	{AFCVTZUSW, aFCVTZU, FEAT_NONE, 0x1e190000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__scale,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTZU  <Xd>, <Sn>, #<fbits>
	{AFCVTZUS, aFCVTZU, FEAT_NONE, 0x9e190000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__scale,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTZU  <Wd>, <Dn>, #<fbits>
	{AFCVTZUDW, aFCVTZU, FEAT_NONE, 0x1e590000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__scale,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FCVTZU  <Xd>, <Dn>, #<fbits>
	{AFCVTZUD, aFCVTZU, FEAT_NONE, 0x9e590000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__scale,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FCVTZU  <Zd>.H, <Pg>/M, <Zn>.H
	{AZFCVTZU, aFCVTZU, FEAT_NONE, 0x655ba000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// FCVTZU  <Zd>.S, <Pg>/M, <Zn>.H
	{AZFCVTZU, aFCVTZU, FEAT_NONE, 0x655da000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// FCVTZU  <Zd>.D, <Pg>/M, <Zn>.H
	{AZFCVTZU, aFCVTZU, FEAT_NONE, 0x655fa000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// FCVTZU  <Zd>.S, <Pg>/M, <Zn>.S
	{AZFCVTZU, aFCVTZU, FEAT_NONE, 0x659da000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// FCVTZU  <Zd>.D, <Pg>/M, <Zn>.S
	{AZFCVTZU, aFCVTZU, FEAT_NONE, 0x65dda000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// FCVTZU  <Zd>.S, <Pg>/M, <Zn>.D
	{AZFCVTZU, aFCVTZU, FEAT_NONE, 0x65d9a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// FCVTZU  <Zd>.D, <Pg>/M, <Zn>.D
	{AZFCVTZU, aFCVTZU, FEAT_NONE, 0x65dfa000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// FCVTZU  { <Zd1>.S-<Zd2>.S }, { <Zn1>.S-<Zn2>.S }
	{AZFCVTZU, aFCVTZU, FEAT_SME2, 0xc121e020, 0xfffffc21, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_S,
		}},
	}},

	// FCVTZU  { <Zd1>.S-<Zd4>.S }, { <Zn1>.S-<Zn4>.S }
	{AZFCVTZU, aFCVTZU, FEAT_SME2, 0xc131e020, 0xfffffc63, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_zd4__Zd,
			sa_const_REGLIST4_S,
		}},
	}},

	// FDIV  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFDIV, aFDIV, FEAT_FP16, 0x2e403c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FDIV  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFDIV, aFDIV, FEAT_NONE, 0x2e20fc00, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FDIV  <Hd>, <Hn>, <Hm>
	{AFDIVH, aFDIV, FEAT_NONE, 0x1ee01800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FDIV  <Sd>, <Sn>, <Sm>
	{AFDIVS, aFDIV, FEAT_NONE, 0x1e201800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FDIV  <Dd>, <Dn>, <Dm>
	{AFDIVD, aFDIV, FEAT_NONE, 0x1e601800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FDIV  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFDIV, aFDIV, FEAT_NONE, 0x650d8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FDIVR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFDIVR, aFDIVR, FEAT_NONE, 0x650c8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FDOT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZFDOT, aFDOT, FEAT_SVE2p1, 0x64204000, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FDOT  <Zda>.S, <Zn>.H, <Zm>.H
	{AZFDOT, aFDOT, FEAT_SVE2p1, 0x64208000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZFDOT, aFDOT, FEAT_SME2, 0xc1201000, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZFDOT, aFDOT, FEAT_SME2, 0xc1301000, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZFDOT, aFDOT, FEAT_SME2, 0xc1501008, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZFDOT, aFDOT, FEAT_SME2, 0xc1509008, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZFDOT, aFDOT, FEAT_SME2, 0xc1a01000, 0xffe19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZFDOT, aFDOT, FEAT_SME2, 0xc1a11000, 0xffe39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FDUP  <Zd>.<T>, #<const>
	{AZFDUP, aFDUP, FEAT_NONE, 0x2539c000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__imm8,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FEXPA  <Zd>.<T>, <Zn>.<T>
	{AZFEXPA, aFEXPA, FEAT_NONE, 0x420b800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FJCVTZS  <Wd>, <Dn>
	{AFJCVTZS, aFJCVTZS, FEAT_JSCVT, 0x1e7e0000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FLOGB  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZFLOGB, aFLOGB, FEAT_NONE, 0x6518a000, 0xfff9e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAD  <Zdn>.<T>, <Pg>/M, <Zm>.<T>, <Za>.<T>
	{AZFMAD, aFMAD, FEAT_NONE, 0x65208000, 0xff20e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_za__Za,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMADD  <Hd>, <Hn>, <Hm>, <Ha>
	{AFMADDH, aFMADD, FEAT_NONE, 0x1fc00000, 0xffe08000, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_ha__Ra,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMADD  <Sd>, <Sn>, <Sm>, <Sa>
	{AFMADDS, aFMADD, FEAT_NONE, 0x1f000000, 0xffe08000, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sa__Ra,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FMADD  <Dd>, <Dn>, <Dm>, <Da>
	{AFMADDD, aFMADD, FEAT_NONE, 0x1f400000, 0xffe08000, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_da__Ra,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FMAX  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMAX, aFMAX, FEAT_FP16, 0xe403400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FMAX  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMAX, aFMAX, FEAT_NONE, 0xe20f400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FMAX  <Hd>, <Hn>, <Hm>
	{AFMAXH, aFMAX, FEAT_NONE, 0x1ee04800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMAX  <Sd>, <Sn>, <Sm>
	{AFMAXS, aFMAX, FEAT_NONE, 0x1e204800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FMAX  <Dd>, <Dn>, <Dm>
	{AFMAXD, aFMAX, FEAT_NONE, 0x1e604800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FMAX  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFMAX, aFMAX, FEAT_NONE, 0x65068000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAX  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <const>
	{AZFMAX, aFMAX, FEAT_NONE, 0x651e8000, 0xff3fe3c0, false, []arg{
		{AC_IMM, []elmType{
			sa_const__i1__0,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAX  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, <Zm>.<T>
	{AZFMAX, aFMAX, FEAT_SME2, 0xc120a100, 0xff30ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAX  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, <Zm>.<T>
	{AZFMAX, aFMAX, FEAT_SME2, 0xc120a900, 0xff30ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAX  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZFMAX, aFMAX, FEAT_SME2, 0xc120b100, 0xff21ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__size__D_H_S,
			sa_zm2__Zm_20_4,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAX  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZFMAX, aFMAX, FEAT_SME2, 0xc120b900, 0xff23ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__size__D_H_S,
			sa_zm4__Zm_20_3,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAXNM  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMAXNM, aFMAXNM, FEAT_FP16, 0xe400400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FMAXNM  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMAXNM, aFMAXNM, FEAT_NONE, 0xe20c400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FMAXNM  <Hd>, <Hn>, <Hm>
	{AFMAXNMH, aFMAXNM, FEAT_NONE, 0x1ee06800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMAXNM  <Sd>, <Sn>, <Sm>
	{AFMAXNMS, aFMAXNM, FEAT_NONE, 0x1e206800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FMAXNM  <Dd>, <Dn>, <Dm>
	{AFMAXNMD, aFMAXNM, FEAT_NONE, 0x1e606800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FMAXNM  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFMAXNM, aFMAXNM, FEAT_NONE, 0x65048000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAXNM  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <const>
	{AZFMAXNM, aFMAXNM, FEAT_NONE, 0x651c8000, 0xff3fe3c0, false, []arg{
		{AC_IMM, []elmType{
			sa_const__i1__0,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAXNM  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, <Zm>.<T>
	{AZFMAXNM, aFMAXNM, FEAT_SME2, 0xc120a120, 0xff30ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAXNM  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, <Zm>.<T>
	{AZFMAXNM, aFMAXNM, FEAT_SME2, 0xc120a920, 0xff30ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAXNM  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZFMAXNM, aFMAXNM, FEAT_SME2, 0xc120b120, 0xff21ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__size__D_H_S,
			sa_zm2__Zm_20_4,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAXNM  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZFMAXNM, aFMAXNM, FEAT_SME2, 0xc120b920, 0xff23ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__size__D_H_S,
			sa_zm4__Zm_20_3,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAXNMP  <V><d>, <Vn>.<T>
	{AVFMAXNMP, aFMAXNMP, FEAT_FP16, 0x5e30c800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz__2H,
		}},
		{AC_VREG, []elmType{
			sa_v__sz__H,
			sa_d__Rd,
		}},
	}},

	// FMAXNMP  <V><d>, <Vn>.<T>
	{AVFMAXNMP, aFMAXNMP, FEAT_NONE, 0x7e30c800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__sz__2D_2S,
		}},
		{AC_VREG, []elmType{
			sa_v_1__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FMAXNMP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMAXNMP, aFMAXNMP, FEAT_FP16, 0x2e400400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FMAXNMP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMAXNMP, aFMAXNMP, FEAT_NONE, 0x2e20c400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FMAXNMP  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFMAXNMP, aFMAXNMP, FEAT_NONE, 0x64148000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAXNMQV  <Vd>.<T>, <Pg>, <Zn>.<Tb>
	{AZFMAXNMQV, aFMAXNMQV, FEAT_SVE2p1, 0x6414a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Vd,
			sa_t__size__2D_4S_8H,
		}},
	}},

	// FMAXNMV  <V><d>, <Vn>.<T>
	{AVFMAXNMV, aFMAXNMV, FEAT_FP16, 0xe30c800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__4H_8H,
		}},
		{AC_VREG, []elmType{
			sa_v,
			sa_d__Rd,
		}},
	}},

	// FMAXNMV  <V><d>, <Vn>.<T>
	{AVFMAXNMV, aFMAXNMV, FEAT_NONE, 0x2e30c800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q_sz__4S,
		}},
		{AC_VREG, []elmType{
			sa_v_1__sz__S,
			sa_d__Rd,
		}},
	}},

	// FMAXNMV  <V><d>, <Pg>, <Zn>.<T>
	{AZFMAXNMV, aFMAXNMV, FEAT_NONE, 0x65042000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D_H_S,
			sa_d__Vd,
		}},
	}},

	// FMAXP  <V><d>, <Vn>.<T>
	{AVFMAXP, aFMAXP, FEAT_FP16, 0x5e30f800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz__2H,
		}},
		{AC_VREG, []elmType{
			sa_v__sz__H,
			sa_d__Rd,
		}},
	}},

	// FMAXP  <V><d>, <Vn>.<T>
	{AVFMAXP, aFMAXP, FEAT_NONE, 0x7e30f800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__sz__2D_2S,
		}},
		{AC_VREG, []elmType{
			sa_v_1__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FMAXP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMAXP, aFMAXP, FEAT_FP16, 0x2e403400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FMAXP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMAXP, aFMAXP, FEAT_NONE, 0x2e20f400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FMAXP  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFMAXP, aFMAXP, FEAT_NONE, 0x64168000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMAXQV  <Vd>.<T>, <Pg>, <Zn>.<Tb>
	{AZFMAXQV, aFMAXQV, FEAT_SVE2p1, 0x6416a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Vd,
			sa_t__size__2D_4S_8H,
		}},
	}},

	// FMAXV  <V><d>, <Vn>.<T>
	{AVFMAXV, aFMAXV, FEAT_FP16, 0xe30f800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__4H_8H,
		}},
		{AC_VREG, []elmType{
			sa_v,
			sa_d__Rd,
		}},
	}},

	// FMAXV  <V><d>, <Vn>.<T>
	{AVFMAXV, aFMAXV, FEAT_NONE, 0x2e30f800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q_sz__4S,
		}},
		{AC_VREG, []elmType{
			sa_v_1__sz__S,
			sa_d__Rd,
		}},
	}},

	// FMAXV  <V><d>, <Pg>, <Zn>.<T>
	{AZFMAXV, aFMAXV, FEAT_NONE, 0x65062000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D_H_S,
			sa_d__Vd,
		}},
	}},

	// FMIN  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMIN, aFMIN, FEAT_FP16, 0xec03400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FMIN  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMIN, aFMIN, FEAT_NONE, 0xea0f400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FMIN  <Hd>, <Hn>, <Hm>
	{AFMINH, aFMIN, FEAT_NONE, 0x1ee05800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMIN  <Sd>, <Sn>, <Sm>
	{AFMINS, aFMIN, FEAT_NONE, 0x1e205800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FMIN  <Dd>, <Dn>, <Dm>
	{AFMIND, aFMIN, FEAT_NONE, 0x1e605800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FMIN  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFMIN, aFMIN, FEAT_NONE, 0x65078000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMIN  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <const>
	{AZFMIN, aFMIN, FEAT_NONE, 0x651f8000, 0xff3fe3c0, false, []arg{
		{AC_IMM, []elmType{
			sa_const__i1__0,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMIN  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, <Zm>.<T>
	{AZFMIN, aFMIN, FEAT_SME2, 0xc120a101, 0xff30ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMIN  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, <Zm>.<T>
	{AZFMIN, aFMIN, FEAT_SME2, 0xc120a901, 0xff30ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMIN  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZFMIN, aFMIN, FEAT_SME2, 0xc120b101, 0xff21ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__size__D_H_S,
			sa_zm2__Zm_20_4,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMIN  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZFMIN, aFMIN, FEAT_SME2, 0xc120b901, 0xff23ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__size__D_H_S,
			sa_zm4__Zm_20_3,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMINNM  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMINNM, aFMINNM, FEAT_FP16, 0xec00400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FMINNM  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMINNM, aFMINNM, FEAT_NONE, 0xea0c400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FMINNM  <Hd>, <Hn>, <Hm>
	{AFMINNMH, aFMINNM, FEAT_NONE, 0x1ee07800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMINNM  <Sd>, <Sn>, <Sm>
	{AFMINNMS, aFMINNM, FEAT_NONE, 0x1e207800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FMINNM  <Dd>, <Dn>, <Dm>
	{AFMINNMD, aFMINNM, FEAT_NONE, 0x1e607800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FMINNM  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFMINNM, aFMINNM, FEAT_NONE, 0x65058000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMINNM  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <const>
	{AZFMINNM, aFMINNM, FEAT_NONE, 0x651d8000, 0xff3fe3c0, false, []arg{
		{AC_IMM, []elmType{
			sa_const__i1__0,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMINNM  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, <Zm>.<T>
	{AZFMINNM, aFMINNM, FEAT_SME2, 0xc120a121, 0xff30ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMINNM  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, <Zm>.<T>
	{AZFMINNM, aFMINNM, FEAT_SME2, 0xc120a921, 0xff30ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMINNM  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZFMINNM, aFMINNM, FEAT_SME2, 0xc120b121, 0xff21ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__size__D_H_S,
			sa_zm2__Zm_20_4,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMINNM  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZFMINNM, aFMINNM, FEAT_SME2, 0xc120b921, 0xff23ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__size__D_H_S,
			sa_zm4__Zm_20_3,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMINNMP  <V><d>, <Vn>.<T>
	{AVFMINNMP, aFMINNMP, FEAT_FP16, 0x5eb0c800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz__2H,
		}},
		{AC_VREG, []elmType{
			sa_v__sz__H,
			sa_d__Rd,
		}},
	}},

	// FMINNMP  <V><d>, <Vn>.<T>
	{AVFMINNMP, aFMINNMP, FEAT_NONE, 0x7eb0c800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__sz__2D_2S,
		}},
		{AC_VREG, []elmType{
			sa_v_1__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FMINNMP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMINNMP, aFMINNMP, FEAT_FP16, 0x2ec00400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FMINNMP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMINNMP, aFMINNMP, FEAT_NONE, 0x2ea0c400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FMINNMP  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFMINNMP, aFMINNMP, FEAT_NONE, 0x64158000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMINNMQV  <Vd>.<T>, <Pg>, <Zn>.<Tb>
	{AZFMINNMQV, aFMINNMQV, FEAT_SVE2p1, 0x6415a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Vd,
			sa_t__size__2D_4S_8H,
		}},
	}},

	// FMINNMV  <V><d>, <Vn>.<T>
	{AVFMINNMV, aFMINNMV, FEAT_FP16, 0xeb0c800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__4H_8H,
		}},
		{AC_VREG, []elmType{
			sa_v,
			sa_d__Rd,
		}},
	}},

	// FMINNMV  <V><d>, <Vn>.<T>
	{AVFMINNMV, aFMINNMV, FEAT_NONE, 0x2eb0c800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q_sz__4S,
		}},
		{AC_VREG, []elmType{
			sa_v_1__sz__S,
			sa_d__Rd,
		}},
	}},

	// FMINNMV  <V><d>, <Pg>, <Zn>.<T>
	{AZFMINNMV, aFMINNMV, FEAT_NONE, 0x65052000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D_H_S,
			sa_d__Vd,
		}},
	}},

	// FMINP  <V><d>, <Vn>.<T>
	{AVFMINP, aFMINP, FEAT_FP16, 0x5eb0f800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz__2H,
		}},
		{AC_VREG, []elmType{
			sa_v__sz__H,
			sa_d__Rd,
		}},
	}},

	// FMINP  <V><d>, <Vn>.<T>
	{AVFMINP, aFMINP, FEAT_NONE, 0x7eb0f800, 0xffbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__sz__2D_2S,
		}},
		{AC_VREG, []elmType{
			sa_v_1__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FMINP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMINP, aFMINP, FEAT_FP16, 0x2ec03400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FMINP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMINP, aFMINP, FEAT_NONE, 0x2ea0f400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FMINP  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFMINP, aFMINP, FEAT_NONE, 0x64178000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMINQV  <Vd>.<T>, <Pg>, <Zn>.<Tb>
	{AZFMINQV, aFMINQV, FEAT_SVE2p1, 0x6417a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Vd,
			sa_t__size__2D_4S_8H,
		}},
	}},

	// FMINV  <V><d>, <Vn>.<T>
	{AVFMINV, aFMINV, FEAT_FP16, 0xeb0f800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__4H_8H,
		}},
		{AC_VREG, []elmType{
			sa_v,
			sa_d__Rd,
		}},
	}},

	// FMINV  <V><d>, <Vn>.<T>
	{AVFMINV, aFMINV, FEAT_NONE, 0x2eb0f800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q_sz__4S,
		}},
		{AC_VREG, []elmType{
			sa_v_1__sz__S,
			sa_d__Rd,
		}},
	}},

	// FMINV  <V><d>, <Pg>, <Zn>.<T>
	{AZFMINV, aFMINV, FEAT_NONE, 0x65072000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D_H_S,
			sa_d__Vd,
		}},
	}},

	// FMLA  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMLA, aFMLA, FEAT_FP16, 0xe400c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FMLA  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMLA, aFMLA, FEAT_NONE, 0xe20cc00, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FMLA  <Hd>, <Hn>, <Vm>.H[<index>]
	{AVFMLA, aFMLA, FEAT_FP16, 0x5f001000, 0xffc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_VREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_VREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMLA  <V><d>, <V><n>, <Vm>.<Ts>[<index>]
	{AVFMLA, aFMLA, FEAT_NONE, 0x5f801000, 0xff80f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm_1__M_Rm,
			sa_ts__sz__D_S,
			sa_index_1__sz_L_H__H_H_L,
		}},
		{AC_VREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_VREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FMLA  <Vd>.<T>, <Vn>.<T>, <Vm>.H[<index>]
	{AVFMLA, aFMLA, FEAT_FP16, 0xf001000, 0xbfc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q,
		}},
	}},

	// FMLA  <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]
	{AVFMLA, aFMLA, FEAT_NONE, 0xf801000, 0xbf80f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm_1__M_Rm,
			sa_ts__sz__D_S,
			sa_index_1__sz_L_H__H_H_L,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q_sz__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q_sz__2D_2S_4S,
		}},
	}},

	// FMLA  <Zda>.H, <Zn>.H, <Zm>.H[<imm>]
	{AZFMLA, aFMLA, FEAT_NONE, 0x64200000, 0xffa0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_22_1_i3l_20_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_H,
		}},
	}},

	// FMLA  <Zda>.S, <Zn>.S, <Zm>.S[<imm>]
	{AZFMLA, aFMLA, FEAT_NONE, 0x64a00000, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_S,
			sa_imm_2__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FMLA  <Zda>.D, <Zn>.D, <Zm>.D[<imm>]
	{AZFMLA, aFMLA, FEAT_NONE, 0x64e00000, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_imm__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// FMLA  <Zda>.<T>, <Pg>/M, <Zn>.<T>, <Zm>.<T>
	{AZFMLA, aFMLA, FEAT_NONE, 0x65200000, 0xff20e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// FMLA  ZA.H[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZFMLA, aFMLA, FEAT_SME_F16F16, 0xc1101000, 0xfff09030, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index_1__i3h_i3l,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLA  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.S-<Zn2>.S }, <Zm>.S[<index>]
	{AZFMLA, aFMLA, FEAT_SME2, 0xc1500000, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_index_2__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLA  ZA.D[<Wv>, <offs>{, VGx2}], { <Zn1>.D-<Zn2>.D }, <Zm>.D[<index>]
	{AZFMLA, aFMLA, FEAT_SME_F64F64, 0xc1d00000, 0xfff09838, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_index__i1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_D,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLA  ZA.H[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZFMLA, aFMLA, FEAT_SME_F16F16, 0xc1109000, 0xfff09070, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index_1__i3h_i3l,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLA  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.S-<Zn4>.S }, <Zm>.S[<index>]
	{AZFMLA, aFMLA, FEAT_SME2, 0xc1508000, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_index_2__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLA  ZA.D[<Wv>, <offs>{, VGx4}], { <Zn1>.D-<Zn4>.D }, <Zm>.D[<index>]
	{AZFMLA, aFMLA, FEAT_SME_F64F64, 0xc1d08000, 0xfff09878, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_index__i1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_D,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLA  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zn1>.<T>-<Zn2>.<T> }, <Zm>.<T>
	{AZFMLA, aFMLA, FEAT_SME2, 0xc1201800, 0xffb09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_t__sz__D_S,
			sa_zn2__Zn_9_5,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLA  ZA.H[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZFMLA, aFMLA, FEAT_SME_F16F16, 0xc1201c00, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLA  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zn1>.<T>-<Zn4>.<T> }, <Zm>.<T>
	{AZFMLA, aFMLA, FEAT_SME2, 0xc1301800, 0xffb09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_t__sz__D_S,
			sa_zn4__Zn_9_5,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLA  ZA.H[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZFMLA, aFMLA, FEAT_SME_F16F16, 0xc1301c00, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLA  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zn1>.<T>-<Zn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZFMLA, aFMLA, FEAT_SME2, 0xc1a01800, 0xffa19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__sz__D_S,
			sa_zm2__Zm_20_4,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_t__sz__D_S,
			sa_zn2__Zn_9_4,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLA  ZA.H[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZFMLA, aFMLA, FEAT_SME_F16F16, 0xc1a01008, 0xffe19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLA  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zn1>.<T>-<Zn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZFMLA, aFMLA, FEAT_SME2, 0xc1a11800, 0xffa39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__sz__D_S,
			sa_zm4__Zm_20_3,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_t__sz__D_S,
			sa_zn4__Zn_9_3,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLA  ZA.H[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZFMLA, aFMLA, FEAT_SME_F16F16, 0xc1a11008, 0xffe39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLAL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVFMLAL, aFMLAL, FEAT_FHM, 0xe20ec00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__Q__2H_4H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__2H_4H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// FMLAL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVFMLAL2, aFMLAL2, FEAT_FHM, 0x2e20cc00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__Q__2H_4H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__2H_4H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// FMLAL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.H[<index>]
	{AVFMLAL, aFMLAL, FEAT_FHM, 0xf800000, 0xbfc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__2H_4H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// FMLAL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.H[<index>]
	{AVFMLAL2, aFMLAL2, FEAT_FHM, 0x2f808000, 0xbfc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__2H_4H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// FMLAL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H
	{AZFMLAL, aFMLAL, FEAT_SME2, 0xc1200c00, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// FMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZFMLAL, aFMLAL, FEAT_SME2, 0xc1200800, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// FMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZFMLAL, aFMLAL, FEAT_SME2, 0xc1300800, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// FMLAL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H[<index>]
	{AZFMLAL, aFMLAL, FEAT_SME2, 0xc1801000, 0xfff01018, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_15_1_i3l_11_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// FMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZFMLAL, aFMLAL, FEAT_SME2, 0xc1901000, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// FMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZFMLAL, aFMLAL, FEAT_SME2, 0xc1909000, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// FMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZFMLAL, aFMLAL, FEAT_SME2, 0xc1a00800, 0xffe19c3c, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// FMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZFMLAL, aFMLAL, FEAT_SME2, 0xc1a10800, 0xffe39c7c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// FMLALB  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZFMLALB, aFMLALB, FEAT_NONE, 0x64a04000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FMLALB  <Zda>.S, <Zn>.H, <Zm>.H
	{AZFMLALB, aFMLALB, FEAT_NONE, 0x64a08000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FMLALT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZFMLALT, aFMLALT, FEAT_NONE, 0x64a04400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FMLALT  <Zda>.S, <Zn>.H, <Zm>.H
	{AZFMLALT, aFMLALT, FEAT_NONE, 0x64a08400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FMLS  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMLS, aFMLS, FEAT_FP16, 0xec00c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FMLS  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMLS, aFMLS, FEAT_NONE, 0xea0cc00, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FMLS  <Hd>, <Hn>, <Vm>.H[<index>]
	{AVFMLS, aFMLS, FEAT_FP16, 0x5f005000, 0xffc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_VREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_VREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMLS  <V><d>, <V><n>, <Vm>.<Ts>[<index>]
	{AVFMLS, aFMLS, FEAT_NONE, 0x5f805000, 0xff80f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm_1__M_Rm,
			sa_ts__sz__D_S,
			sa_index_1__sz_L_H__H_H_L,
		}},
		{AC_VREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_VREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FMLS  <Vd>.<T>, <Vn>.<T>, <Vm>.H[<index>]
	{AVFMLS, aFMLS, FEAT_FP16, 0xf005000, 0xbfc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q,
		}},
	}},

	// FMLS  <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]
	{AVFMLS, aFMLS, FEAT_NONE, 0xf805000, 0xbf80f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm_1__M_Rm,
			sa_ts__sz__D_S,
			sa_index_1__sz_L_H__H_H_L,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q_sz__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q_sz__2D_2S_4S,
		}},
	}},

	// FMLS  <Zda>.H, <Zn>.H, <Zm>.H[<imm>]
	{AZFMLS, aFMLS, FEAT_NONE, 0x64200400, 0xffa0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_22_1_i3l_20_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_H,
		}},
	}},

	// FMLS  <Zda>.S, <Zn>.S, <Zm>.S[<imm>]
	{AZFMLS, aFMLS, FEAT_NONE, 0x64a00400, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_S,
			sa_imm_2__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FMLS  <Zda>.D, <Zn>.D, <Zm>.D[<imm>]
	{AZFMLS, aFMLS, FEAT_NONE, 0x64e00400, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_imm__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// FMLS  <Zda>.<T>, <Pg>/M, <Zn>.<T>, <Zm>.<T>
	{AZFMLS, aFMLS, FEAT_NONE, 0x65202000, 0xff20e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// FMLS  ZA.H[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZFMLS, aFMLS, FEAT_SME_F16F16, 0xc1101010, 0xfff09030, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index_1__i3h_i3l,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLS  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.S-<Zn2>.S }, <Zm>.S[<index>]
	{AZFMLS, aFMLS, FEAT_SME2, 0xc1500010, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_index_2__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLS  ZA.D[<Wv>, <offs>{, VGx2}], { <Zn1>.D-<Zn2>.D }, <Zm>.D[<index>]
	{AZFMLS, aFMLS, FEAT_SME_F64F64, 0xc1d00010, 0xfff09838, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_index__i1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_D,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLS  ZA.H[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZFMLS, aFMLS, FEAT_SME_F16F16, 0xc1109010, 0xfff09070, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index_1__i3h_i3l,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLS  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.S-<Zn4>.S }, <Zm>.S[<index>]
	{AZFMLS, aFMLS, FEAT_SME2, 0xc1508010, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_index_2__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLS  ZA.D[<Wv>, <offs>{, VGx4}], { <Zn1>.D-<Zn4>.D }, <Zm>.D[<index>]
	{AZFMLS, aFMLS, FEAT_SME_F64F64, 0xc1d08010, 0xfff09878, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_index__i1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_D,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLS  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zn1>.<T>-<Zn2>.<T> }, <Zm>.<T>
	{AZFMLS, aFMLS, FEAT_SME2, 0xc1201808, 0xffb09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_t__sz__D_S,
			sa_zn2__Zn_9_5,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLS  ZA.H[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZFMLS, aFMLS, FEAT_SME_F16F16, 0xc1201c08, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLS  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zn1>.<T>-<Zn4>.<T> }, <Zm>.<T>
	{AZFMLS, aFMLS, FEAT_SME2, 0xc1301808, 0xffb09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_t__sz__D_S,
			sa_zn4__Zn_9_5,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLS  ZA.H[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZFMLS, aFMLS, FEAT_SME_F16F16, 0xc1301c08, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLS  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zn1>.<T>-<Zn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZFMLS, aFMLS, FEAT_SME2, 0xc1a01808, 0xffa19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__sz__D_S,
			sa_zm2__Zm_20_4,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_t__sz__D_S,
			sa_zn2__Zn_9_4,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLS  ZA.H[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZFMLS, aFMLS, FEAT_SME_F16F16, 0xc1a01018, 0xffe19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FMLS  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zn1>.<T>-<Zn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZFMLS, aFMLS, FEAT_SME2, 0xc1a11808, 0xffa39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__sz__D_S,
			sa_zm4__Zm_20_3,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_t__sz__D_S,
			sa_zn4__Zn_9_3,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLS  ZA.H[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZFMLS, aFMLS, FEAT_SME_F16F16, 0xc1a11018, 0xffe39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FMLSL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVFMLSL, aFMLSL, FEAT_FHM, 0xea0ec00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__Q__2H_4H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__2H_4H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// FMLSL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVFMLSL2, aFMLSL2, FEAT_FHM, 0x2ea0cc00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__Q__2H_4H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__2H_4H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// FMLSL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.H[<index>]
	{AVFMLSL, aFMLSL, FEAT_FHM, 0xf804000, 0xbfc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__2H_4H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// FMLSL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.H[<index>]
	{AVFMLSL2, aFMLSL2, FEAT_FHM, 0x2f80c000, 0xbfc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__2H_4H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// FMLSL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H
	{AZFMLSL, aFMLSL, FEAT_SME2, 0xc1200c08, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// FMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZFMLSL, aFMLSL, FEAT_SME2, 0xc1200808, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// FMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZFMLSL, aFMLSL, FEAT_SME2, 0xc1300808, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// FMLSL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H[<index>]
	{AZFMLSL, aFMLSL, FEAT_SME2, 0xc1801008, 0xfff01018, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_15_1_i3l_11_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// FMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZFMLSL, aFMLSL, FEAT_SME2, 0xc1901008, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// FMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZFMLSL, aFMLSL, FEAT_SME2, 0xc1909008, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// FMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZFMLSL, aFMLSL, FEAT_SME2, 0xc1a00808, 0xffe19c3c, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// FMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZFMLSL, aFMLSL, FEAT_SME2, 0xc1a10808, 0xffe39c7c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// FMLSLB  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZFMLSLB, aFMLSLB, FEAT_NONE, 0x64a06000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FMLSLB  <Zda>.S, <Zn>.H, <Zm>.H
	{AZFMLSLB, aFMLSLB, FEAT_NONE, 0x64a0a000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FMLSLT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZFMLSLT, aFMLSLT, FEAT_NONE, 0x64a06400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FMLSLT  <Zda>.S, <Zn>.H, <Zm>.H
	{AZFMLSLT, aFMLSLT, FEAT_NONE, 0x64a0a400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FMMLA  <Zda>.S, <Zn>.S, <Zm>.S
	{AZFMMLA, aFMMLA, FEAT_F32MM, 0x64a0e400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// FMMLA  <Zda>.D, <Zn>.D, <Zm>.D
	{AZFMMLA, aFMMLA, FEAT_F64MM, 0x64e0e400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// FMOPA  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZFMOPA, aFMOPA, FEAT_SME, 0x81a00000, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// FMOPA  <ZAda>.H, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZFMOPA, aFMOPA, FEAT_SME_F16F16, 0x81800008, 0xffe0001e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_H,
		}},
	}},

	// FMOPA  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.S, <Zm>.S
	{AZFMOPA, aFMOPA, FEAT_SME, 0x80800000, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_1__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// FMOPA  <ZAda>.D, <Pn>/M, <Pm>/M, <Zn>.D, <Zm>.D
	{AZFMOPA, aFMOPA, FEAT_SME_F64F64, 0x80c00000, 0xffe00018, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_2__ZAda,
			sa_const_ARNG_D,
		}},
	}},

	// FMOPS  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZFMOPS, aFMOPS, FEAT_SME, 0x81a00010, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// FMOPS  <ZAda>.H, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZFMOPS, aFMOPS, FEAT_SME_F16F16, 0x81800018, 0xffe0001e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_H,
		}},
	}},

	// FMOPS  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.S, <Zm>.S
	{AZFMOPS, aFMOPS, FEAT_SME, 0x80800010, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_1__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// FMOPS  <ZAda>.D, <Pn>/M, <Pm>/M, <Zn>.D, <Zm>.D
	{AZFMOPS, aFMOPS, FEAT_SME_F64F64, 0x80c00010, 0xffe00018, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_2__ZAda,
			sa_const_ARNG_D,
		}},
	}},

	// FMOV  <Vd>.<T>, #<imm>
	{AVFMOV, aFMOV, FEAT_FP16, 0xf00fc00, 0xbff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__a_b_c_d_e_f_g_h,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FMOV  <Vd>.<T>, #<imm>
	{AVFMOV, aFMOV, FEAT_NONE, 0xf00f400, 0xbff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__a_b_c_d_e_f_g_h,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__2S_4S,
		}},
	}},

	// FMOV  <Vd>.2D, #<imm>
	{AVFMOV, aFMOV, FEAT_NONE, 0x6f00f400, 0xfff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__a_b_c_d_e_f_g_h,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_2D,
		}},
	}},

	// FMOV  <Hd>, #<imm>
	{AFMOVH, aFMOV, FEAT_NONE, 0x1ee01000, 0xffe01fe0, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMOV  <Sd>, #<imm>
	{AFMOVS, aFMOV, FEAT_NONE, 0x1e201000, 0xffe01fe0, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FMOV  <Dd>, #<imm>
	{AFMOVD, aFMOV, FEAT_NONE, 0x1e601000, 0xffe01fe0, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FMOV  <Hd>, <Hn>
	{AFMOVH, aFMOV, FEAT_NONE, 0x1ee04000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMOV  <Sd>, <Sn>
	{AFMOVS, aFMOV, FEAT_NONE, 0x1e204000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FMOV  <Dd>, <Dn>
	{AFMOVD, aFMOV, FEAT_NONE, 0x1e604000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FMOV  <Wd>, <Hn>
	{AFMOVHW, aFMOV, FEAT_NONE, 0x1ee60000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FMOV  <Xd>, <Hn>
	{AFMOVH, aFMOV, FEAT_NONE, 0x9ee60000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FMOV  <Hd>, <Wn>
	{AFMOVWH, aFMOV, FEAT_NONE, 0x1ee70000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMOV  <Sd>, <Wn>
	{AFMOVS, aFMOV, FEAT_NONE, 0x1e270000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FMOV  <Wd>, <Sn>
	{AFMOVS, aFMOV, FEAT_NONE, 0x1e260000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// FMOV  <Hd>, <Xn>
	{AFMOVH, aFMOV, FEAT_NONE, 0x9ee70000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMOV  <Dd>, <Xn>
	{AFMOVD, aFMOV, FEAT_NONE, 0x9e670000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FMOV  <Vd>.D[1], <Xn>
	{AFMOV, aFMOV, FEAT_NONE, 0x9eaf0000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vd__Rd,
			sa_const_ARNGIDX_D,
			sa_const_ARNGIDX_1,
		}},
	}},

	// FMOV  <Xd>, <Dn>
	{AFMOVD, aFMOV, FEAT_NONE, 0x9e660000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FMOV  <Xd>, <Vn>.D[1]
	{AFMOV, aFMOV, FEAT_NONE, 0x9eae0000, 0xfffffc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vn__Rn,
			sa_const_ARNGIDX_D,
			sa_const_ARNGIDX_1,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// FMOV  <Zd>.<T>, #0.0
	{AZFMOV, aFMOV, FEAT_NONE, 0x2538c000, 0xff3fffe0, true, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t_1__size__D_H_S,
		}},
	}},

	// FMOV  <Zd>.<T>, #<const>
	{AZFMOV, aFMOV, FEAT_NONE, 0x2539c000, 0xff3fe000, true, []arg{
		{AC_IMM, []elmType{
			sa_const__imm8,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FMOV  <Zd>.<T>, <Pg>/M, #0.0
	{AZFMOV, aFMOV, FEAT_NONE, 0x5104000, 0xff30ffe0, true, []arg{
		{AC_IMM, []elmType{
			sa_const_IMM_0_0,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_19_4,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t_1__size__D_H_S,
		}},
	}},

	// FMOV  <Zd>.<T>, <Pg>/M, #<const>
	{AZFMOV, aFMOV, FEAT_NONE, 0x510c000, 0xff30e000, true, []arg{
		{AC_IMM, []elmType{
			sa_const__imm8,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_19_4,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FMSB  <Zdn>.<T>, <Pg>/M, <Zm>.<T>, <Za>.<T>
	{AZFMSB, aFMSB, FEAT_NONE, 0x6520a000, 0xff20e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_za__Za,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMSUB  <Hd>, <Hn>, <Hm>, <Ha>
	{AFMSUBH, aFMSUB, FEAT_NONE, 0x1fc08000, 0xffe08000, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_ha__Ra,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMSUB  <Sd>, <Sn>, <Sm>, <Sa>
	{AFMSUBS, aFMSUB, FEAT_NONE, 0x1f008000, 0xffe08000, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sa__Ra,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FMSUB  <Dd>, <Dn>, <Dm>, <Da>
	{AFMSUBD, aFMSUB, FEAT_NONE, 0x1f408000, 0xffe08000, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_da__Ra,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FMUL  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMUL, aFMUL, FEAT_FP16, 0x2e401c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FMUL  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMUL, aFMUL, FEAT_NONE, 0x2e20dc00, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FMUL  <Hd>, <Hn>, <Vm>.H[<index>]
	{AVFMUL, aFMUL, FEAT_FP16, 0x5f009000, 0xffc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_VREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_VREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMUL  <V><d>, <V><n>, <Vm>.<Ts>[<index>]
	{AVFMUL, aFMUL, FEAT_NONE, 0x5f809000, 0xff80f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm_1__M_Rm,
			sa_ts__sz__D_S,
			sa_index_1__sz_L_H__H_H_L,
		}},
		{AC_VREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_VREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FMUL  <Vd>.<T>, <Vn>.<T>, <Vm>.H[<index>]
	{AVFMUL, aFMUL, FEAT_FP16, 0xf009000, 0xbfc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q,
		}},
	}},

	// FMUL  <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]
	{AVFMUL, aFMUL, FEAT_NONE, 0xf809000, 0xbf80f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm_1__M_Rm,
			sa_ts__sz__D_S,
			sa_index_1__sz_L_H__H_H_L,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q_sz__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q_sz__2D_2S_4S,
		}},
	}},

	// FMUL  <Hd>, <Hn>, <Hm>
	{AFMULH, aFMUL, FEAT_NONE, 0x1ee00800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMUL  <Sd>, <Sn>, <Sm>
	{AFMULS, aFMUL, FEAT_NONE, 0x1e200800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FMUL  <Dd>, <Dn>, <Dm>
	{AFMULD, aFMUL, FEAT_NONE, 0x1e600800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FMUL  <Zd>.H, <Zn>.H, <Zm>.H[<imm>]
	{AZFMUL, aFMUL, FEAT_NONE, 0x64202000, 0xffa0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_22_1_i3l_20_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// FMUL  <Zd>.S, <Zn>.S, <Zm>.S[<imm>]
	{AZFMUL, aFMUL, FEAT_NONE, 0x64a02000, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_S,
			sa_imm_2__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// FMUL  <Zd>.D, <Zn>.D, <Zm>.D[<imm>]
	{AZFMUL, aFMUL, FEAT_NONE, 0x64e02000, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_imm__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// FMUL  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZFMUL, aFMUL, FEAT_NONE, 0x65000800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FMUL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFMUL, aFMUL, FEAT_NONE, 0x65028000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMUL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <const>
	{AZFMUL, aFMUL, FEAT_NONE, 0x651a8000, 0xff3fe3c0, false, []arg{
		{AC_IMM, []elmType{
			sa_const__i1__0,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FMULX  <Hd>, <Hn>, <Vm>.H[<index>]
	{AVFMULX, aFMULX, FEAT_FP16, 0x7f009000, 0xffc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_VREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_VREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMULX  <V><d>, <V><n>, <Vm>.<Ts>[<index>]
	{AVFMULX, aFMULX, FEAT_NONE, 0x7f809000, 0xff80f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm_1__M_Rm,
			sa_ts__sz__D_S,
			sa_index_1__sz_L_H__H_H_L,
		}},
		{AC_VREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_VREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FMULX  <Vd>.<T>, <Vn>.<T>, <Vm>.H[<index>]
	{AVFMULX, aFMULX, FEAT_FP16, 0x2f009000, 0xbfc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q,
		}},
	}},

	// FMULX  <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]
	{AVFMULX, aFMULX, FEAT_NONE, 0x2f809000, 0xbf80f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm_1__M_Rm,
			sa_ts__sz__D_S,
			sa_index_1__sz_L_H__H_H_L,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q_sz__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q_sz__2D_2S_4S,
		}},
	}},

	// FMULX  <Hd>, <Hn>, <Hm>
	{AVFMULXH, aFMULX, FEAT_FP16, 0x5e401c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FMULX  <V><d>, <V><n>, <V><m>
	{AVFMULXS, aFMULX, FEAT_NONE, 0x5e20dc00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FMULX  <V><d>, <V><n>, <V><m>
	{AVFMULXD, aFMULX, FEAT_NONE, 0x5e60dc00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FMULX  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMULX, aFMULX, FEAT_FP16, 0xe401c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FMULX  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFMULX, aFMULX, FEAT_NONE, 0xe20dc00, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FMULX  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFMULX, aFMULX, FEAT_NONE, 0x650a8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FNEG  <Vd>.<T>, <Vn>.<T>
	{AVFNEG, aFNEG, FEAT_FP16, 0x2ef8f800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FNEG  <Vd>.<T>, <Vn>.<T>
	{AVFNEG, aFNEG, FEAT_NONE, 0x2ea0f800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FNEG  <Hd>, <Hn>
	{AFNEGH, aFNEG, FEAT_NONE, 0x1ee14000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FNEG  <Sd>, <Sn>
	{AFNEGS, aFNEG, FEAT_NONE, 0x1e214000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FNEG  <Dd>, <Dn>
	{AFNEGD, aFNEG, FEAT_NONE, 0x1e614000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FNEG  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZFNEG, aFNEG, FEAT_NONE, 0x41da000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FNMAD  <Zdn>.<T>, <Pg>/M, <Zm>.<T>, <Za>.<T>
	{AZFNMAD, aFNMAD, FEAT_NONE, 0x6520c000, 0xff20e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_za__Za,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FNMADD  <Hd>, <Hn>, <Hm>, <Ha>
	{AFNMADDH, aFNMADD, FEAT_NONE, 0x1fe00000, 0xffe08000, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_ha__Ra,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FNMADD  <Sd>, <Sn>, <Sm>, <Sa>
	{AFNMADDS, aFNMADD, FEAT_NONE, 0x1f200000, 0xffe08000, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sa__Ra,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FNMADD  <Dd>, <Dn>, <Dm>, <Da>
	{AFNMADDD, aFNMADD, FEAT_NONE, 0x1f600000, 0xffe08000, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_da__Ra,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FNMLA  <Zda>.<T>, <Pg>/M, <Zn>.<T>, <Zm>.<T>
	{AZFNMLA, aFNMLA, FEAT_NONE, 0x65204000, 0xff20e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// FNMLS  <Zda>.<T>, <Pg>/M, <Zn>.<T>, <Zm>.<T>
	{AZFNMLS, aFNMLS, FEAT_NONE, 0x65206000, 0xff20e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// FNMSB  <Zdn>.<T>, <Pg>/M, <Zm>.<T>, <Za>.<T>
	{AZFNMSB, aFNMSB, FEAT_NONE, 0x6520e000, 0xff20e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_za__Za,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FNMSUB  <Hd>, <Hn>, <Hm>, <Ha>
	{AFNMSUBH, aFNMSUB, FEAT_NONE, 0x1fe08000, 0xffe08000, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_ha__Ra,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FNMSUB  <Sd>, <Sn>, <Sm>, <Sa>
	{AFNMSUBS, aFNMSUB, FEAT_NONE, 0x1f208000, 0xffe08000, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sa__Ra,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FNMSUB  <Dd>, <Dn>, <Dm>, <Da>
	{AFNMSUBD, aFNMSUB, FEAT_NONE, 0x1f608000, 0xffe08000, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_da__Ra,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FNMUL  <Hd>, <Hn>, <Hm>
	{AFNMULH, aFNMUL, FEAT_NONE, 0x1ee08800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FNMUL  <Sd>, <Sn>, <Sm>
	{AFNMULS, aFNMUL, FEAT_NONE, 0x1e208800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FNMUL  <Dd>, <Dn>, <Dm>
	{AFNMULD, aFNMUL, FEAT_NONE, 0x1e608800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FRECPE  <Hd>, <Hn>
	{AVFRECPEH, aFRECPE, FEAT_FP16, 0x5ef9d800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FRECPE  <V><d>, <V><n>
	{AVFRECPES, aFRECPE, FEAT_NONE, 0x5ea1d800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FRECPE  <V><d>, <V><n>
	{AVFRECPED, aFRECPE, FEAT_NONE, 0x5ee1d800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FRECPE  <Vd>.<T>, <Vn>.<T>
	{AVFRECPE, aFRECPE, FEAT_FP16, 0xef9d800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FRECPE  <Vd>.<T>, <Vn>.<T>
	{AVFRECPE, aFRECPE, FEAT_NONE, 0xea1d800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRECPE  <Zd>.<T>, <Zn>.<T>
	{AZFRECPE, aFRECPE, FEAT_NONE, 0x650e3000, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FRECPS  <Hd>, <Hn>, <Hm>
	{AVFRECPSH, aFRECPS, FEAT_FP16, 0x5e403c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FRECPS  <V><d>, <V><n>, <V><m>
	{AVFRECPSS, aFRECPS, FEAT_NONE, 0x5e20fc00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FRECPS  <V><d>, <V><n>, <V><m>
	{AVFRECPSD, aFRECPS, FEAT_NONE, 0x5e60fc00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FRECPS  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFRECPS, aFRECPS, FEAT_FP16, 0xe403c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FRECPS  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFRECPS, aFRECPS, FEAT_NONE, 0xe20fc00, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRECPS  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZFRECPS, aFRECPS, FEAT_NONE, 0x65001800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FRECPX  <Hd>, <Hn>
	{AVFRECPXH, aFRECPX, FEAT_FP16, 0x5ef9f800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FRECPX  <V><d>, <V><n>
	{AVFRECPXS, aFRECPX, FEAT_NONE, 0x5ea1f800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FRECPX  <V><d>, <V><n>
	{AVFRECPXD, aFRECPX, FEAT_NONE, 0x5ee1f800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FRECPX  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZFRECPX, aFRECPX, FEAT_NONE, 0x650ca000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FRINT32X  <Vd>.<T>, <Vn>.<T>
	{AVFRINT32X, aFRINT32X, FEAT_FRINTTS, 0x2e21e800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRINT32X  <Sd>, <Sn>
	{AFRINT32XS, aFRINT32X, FEAT_FRINTTS, 0x1e28c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FRINT32X  <Dd>, <Dn>
	{AFRINT32XD, aFRINT32X, FEAT_FRINTTS, 0x1e68c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FRINT32Z  <Vd>.<T>, <Vn>.<T>
	{AVFRINT32Z, aFRINT32Z, FEAT_FRINTTS, 0xe21e800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRINT32Z  <Sd>, <Sn>
	{AFRINT32ZS, aFRINT32Z, FEAT_FRINTTS, 0x1e284000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FRINT32Z  <Dd>, <Dn>
	{AFRINT32ZD, aFRINT32Z, FEAT_FRINTTS, 0x1e684000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FRINT64X  <Vd>.<T>, <Vn>.<T>
	{AVFRINT64X, aFRINT64X, FEAT_FRINTTS, 0x2e21f800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRINT64X  <Sd>, <Sn>
	{AFRINT64XS, aFRINT64X, FEAT_FRINTTS, 0x1e29c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FRINT64X  <Dd>, <Dn>
	{AFRINT64XD, aFRINT64X, FEAT_FRINTTS, 0x1e69c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FRINT64Z  <Vd>.<T>, <Vn>.<T>
	{AVFRINT64Z, aFRINT64Z, FEAT_FRINTTS, 0xe21f800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRINT64Z  <Sd>, <Sn>
	{AFRINT64ZS, aFRINT64Z, FEAT_FRINTTS, 0x1e294000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FRINT64Z  <Dd>, <Dn>
	{AFRINT64ZD, aFRINT64Z, FEAT_FRINTTS, 0x1e694000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FRINTA  <Vd>.<T>, <Vn>.<T>
	{AVFRINTA, aFRINTA, FEAT_FP16, 0x2e798800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FRINTA  <Vd>.<T>, <Vn>.<T>
	{AVFRINTA, aFRINTA, FEAT_NONE, 0x2e218800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRINTA  <Hd>, <Hn>
	{AFRINTAH, aFRINTA, FEAT_NONE, 0x1ee64000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FRINTA  <Sd>, <Sn>
	{AFRINTAS, aFRINTA, FEAT_NONE, 0x1e264000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FRINTA  <Dd>, <Dn>
	{AFRINTAD, aFRINTA, FEAT_NONE, 0x1e664000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FRINTA  { <Zd1>.S-<Zd2>.S }, { <Zn1>.S-<Zn2>.S }
	{AZFRINTA, aFRINTA, FEAT_SME2, 0xc1ace000, 0xfffffc21, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_S,
		}},
	}},

	// FRINTA  { <Zd1>.S-<Zd4>.S }, { <Zn1>.S-<Zn4>.S }
	{AZFRINTA, aFRINTA, FEAT_SME2, 0xc1bce000, 0xfffffc63, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_zd4__Zd,
			sa_const_REGLIST4_S,
		}},
	}},

	// FRINTI  <Vd>.<T>, <Vn>.<T>
	{AVFRINTI, aFRINTI, FEAT_FP16, 0x2ef99800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FRINTI  <Vd>.<T>, <Vn>.<T>
	{AVFRINTI, aFRINTI, FEAT_NONE, 0x2ea19800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRINTI  <Hd>, <Hn>
	{AFRINTIH, aFRINTI, FEAT_NONE, 0x1ee7c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FRINTI  <Sd>, <Sn>
	{AFRINTIS, aFRINTI, FEAT_NONE, 0x1e27c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FRINTI  <Dd>, <Dn>
	{AFRINTID, aFRINTI, FEAT_NONE, 0x1e67c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FRINTI  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZFRINTI, aFRINTI, FEAT_NONE, 0x6507a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FRINTX  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZFRINTX, aFRINTX, FEAT_NONE, 0x6506a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FRINTA  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZFRINTA, aFRINTA, FEAT_NONE, 0x6504a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FRINTN  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZFRINTN, aFRINTN, FEAT_NONE, 0x6500a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FRINTZ  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZFRINTZ, aFRINTZ, FEAT_NONE, 0x6503a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FRINTM  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZFRINTM, aFRINTM, FEAT_NONE, 0x6502a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FRINTP  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZFRINTP, aFRINTP, FEAT_NONE, 0x6501a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FRINTM  <Vd>.<T>, <Vn>.<T>
	{AVFRINTM, aFRINTM, FEAT_FP16, 0xe799800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FRINTM  <Vd>.<T>, <Vn>.<T>
	{AVFRINTM, aFRINTM, FEAT_NONE, 0xe219800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRINTM  <Hd>, <Hn>
	{AFRINTMH, aFRINTM, FEAT_NONE, 0x1ee54000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FRINTM  <Sd>, <Sn>
	{AFRINTMS, aFRINTM, FEAT_NONE, 0x1e254000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FRINTM  <Dd>, <Dn>
	{AFRINTMD, aFRINTM, FEAT_NONE, 0x1e654000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FRINTM  { <Zd1>.S-<Zd2>.S }, { <Zn1>.S-<Zn2>.S }
	{AZFRINTM, aFRINTM, FEAT_SME2, 0xc1aae000, 0xfffffc21, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_S,
		}},
	}},

	// FRINTM  { <Zd1>.S-<Zd4>.S }, { <Zn1>.S-<Zn4>.S }
	{AZFRINTM, aFRINTM, FEAT_SME2, 0xc1bae000, 0xfffffc63, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_zd4__Zd,
			sa_const_REGLIST4_S,
		}},
	}},

	// FRINTN  <Vd>.<T>, <Vn>.<T>
	{AVFRINTN, aFRINTN, FEAT_FP16, 0xe798800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FRINTN  <Vd>.<T>, <Vn>.<T>
	{AVFRINTN, aFRINTN, FEAT_NONE, 0xe218800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRINTN  <Hd>, <Hn>
	{AFRINTNH, aFRINTN, FEAT_NONE, 0x1ee44000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FRINTN  <Sd>, <Sn>
	{AFRINTNS, aFRINTN, FEAT_NONE, 0x1e244000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FRINTN  <Dd>, <Dn>
	{AFRINTND, aFRINTN, FEAT_NONE, 0x1e644000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FRINTN  { <Zd1>.S-<Zd2>.S }, { <Zn1>.S-<Zn2>.S }
	{AZFRINTN, aFRINTN, FEAT_SME2, 0xc1a8e000, 0xfffffc21, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_S,
		}},
	}},

	// FRINTN  { <Zd1>.S-<Zd4>.S }, { <Zn1>.S-<Zn4>.S }
	{AZFRINTN, aFRINTN, FEAT_SME2, 0xc1b8e000, 0xfffffc63, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_zd4__Zd,
			sa_const_REGLIST4_S,
		}},
	}},

	// FRINTP  <Vd>.<T>, <Vn>.<T>
	{AVFRINTP, aFRINTP, FEAT_FP16, 0xef98800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FRINTP  <Vd>.<T>, <Vn>.<T>
	{AVFRINTP, aFRINTP, FEAT_NONE, 0xea18800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRINTP  <Hd>, <Hn>
	{AFRINTPH, aFRINTP, FEAT_NONE, 0x1ee4c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FRINTP  <Sd>, <Sn>
	{AFRINTPS, aFRINTP, FEAT_NONE, 0x1e24c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FRINTP  <Dd>, <Dn>
	{AFRINTPD, aFRINTP, FEAT_NONE, 0x1e64c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FRINTP  { <Zd1>.S-<Zd2>.S }, { <Zn1>.S-<Zn2>.S }
	{AZFRINTP, aFRINTP, FEAT_SME2, 0xc1a9e000, 0xfffffc21, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_S,
		}},
	}},

	// FRINTP  { <Zd1>.S-<Zd4>.S }, { <Zn1>.S-<Zn4>.S }
	{AZFRINTP, aFRINTP, FEAT_SME2, 0xc1b9e000, 0xfffffc63, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_zd4__Zd,
			sa_const_REGLIST4_S,
		}},
	}},

	// FRINTX  <Vd>.<T>, <Vn>.<T>
	{AVFRINTX, aFRINTX, FEAT_FP16, 0x2e799800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FRINTX  <Vd>.<T>, <Vn>.<T>
	{AVFRINTX, aFRINTX, FEAT_NONE, 0x2e219800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRINTX  <Hd>, <Hn>
	{AFRINTXH, aFRINTX, FEAT_NONE, 0x1ee74000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FRINTX  <Sd>, <Sn>
	{AFRINTXS, aFRINTX, FEAT_NONE, 0x1e274000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FRINTX  <Dd>, <Dn>
	{AFRINTXD, aFRINTX, FEAT_NONE, 0x1e674000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FRINTZ  <Vd>.<T>, <Vn>.<T>
	{AVFRINTZ, aFRINTZ, FEAT_FP16, 0xef99800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FRINTZ  <Vd>.<T>, <Vn>.<T>
	{AVFRINTZ, aFRINTZ, FEAT_NONE, 0xea19800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRINTZ  <Hd>, <Hn>
	{AFRINTZH, aFRINTZ, FEAT_NONE, 0x1ee5c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FRINTZ  <Sd>, <Sn>
	{AFRINTZS, aFRINTZ, FEAT_NONE, 0x1e25c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FRINTZ  <Dd>, <Dn>
	{AFRINTZD, aFRINTZ, FEAT_NONE, 0x1e65c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FRSQRTE  <Hd>, <Hn>
	{AVFRSQRTEH, aFRSQRTE, FEAT_FP16, 0x7ef9d800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FRSQRTE  <V><d>, <V><n>
	{AVFRSQRTES, aFRSQRTE, FEAT_NONE, 0x7ea1d800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FRSQRTE  <V><d>, <V><n>
	{AVFRSQRTED, aFRSQRTE, FEAT_NONE, 0x7ee1d800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FRSQRTE  <Vd>.<T>, <Vn>.<T>
	{AVFRSQRTE, aFRSQRTE, FEAT_FP16, 0x2ef9d800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FRSQRTE  <Vd>.<T>, <Vn>.<T>
	{AVFRSQRTE, aFRSQRTE, FEAT_NONE, 0x2ea1d800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRSQRTE  <Zd>.<T>, <Zn>.<T>
	{AZFRSQRTE, aFRSQRTE, FEAT_NONE, 0x650f3000, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FRSQRTS  <Hd>, <Hn>, <Hm>
	{AVFRSQRTSH, aFRSQRTS, FEAT_FP16, 0x5ec03c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FRSQRTS  <V><d>, <V><n>, <V><m>
	{AVFRSQRTSS, aFRSQRTS, FEAT_NONE, 0x5ea0fc00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FRSQRTS  <V><d>, <V><n>, <V><m>
	{AVFRSQRTSD, aFRSQRTS, FEAT_NONE, 0x5ee0fc00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// FRSQRTS  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFRSQRTS, aFRSQRTS, FEAT_FP16, 0xec03c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FRSQRTS  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFRSQRTS, aFRSQRTS, FEAT_NONE, 0xea0fc00, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FRSQRTS  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZFRSQRTS, aFRSQRTS, FEAT_NONE, 0x65001c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FSCALE  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFSCALE, aFSCALE, FEAT_NONE, 0x65098000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FSQRT  <Vd>.<T>, <Vn>.<T>
	{AVFSQRT, aFSQRT, FEAT_FP16, 0x2ef9f800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FSQRT  <Vd>.<T>, <Vn>.<T>
	{AVFSQRT, aFSQRT, FEAT_NONE, 0x2ea1f800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FSQRT  <Hd>, <Hn>
	{AFSQRTH, aFSQRT, FEAT_NONE, 0x1ee1c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FSQRT  <Sd>, <Sn>
	{AFSQRTS, aFSQRT, FEAT_NONE, 0x1e21c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FSQRT  <Dd>, <Dn>
	{AFSQRTD, aFSQRT, FEAT_NONE, 0x1e61c000, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FSQRT  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZFSQRT, aFSQRT, FEAT_NONE, 0x650da000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FSUB  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFSUB, aFSUB, FEAT_FP16, 0xec01400, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// FSUB  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVFSUB, aFSUB, FEAT_NONE, 0xea0d400, 0xbfa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// FSUB  <Hd>, <Hn>, <Hm>
	{AFSUBH, aFSUB, FEAT_NONE, 0x1ee03800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// FSUB  <Sd>, <Sn>, <Sm>
	{AFSUBS, aFSUB, FEAT_NONE, 0x1e203800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_sm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// FSUB  <Dd>, <Dn>, <Dm>
	{AFSUBD, aFSUB, FEAT_NONE, 0x1e603800, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_dm__Rm,
		}},
		{AC_FREG, []elmType{
			sa_dn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// FSUB  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZFSUB, aFSUB, FEAT_NONE, 0x65000400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FSUB  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFSUB, aFSUB, FEAT_NONE, 0x65018000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FSUB  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <const>
	{AZFSUB, aFSUB, FEAT_NONE, 0x65198000, 0xff3fe3c0, false, []arg{
		{AC_IMM, []elmType{
			sa_const__i1__0,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FSUB  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zm1>.<T>-<Zm2>.<T> }
	{AZFSUB, aFSUB, FEAT_SME2, 0xc1a01c08, 0xffbf9c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_9_4,
			sa_t__sz__D_S,
			sa_zm2__Zm_9_4,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FSUB  ZA.H[<Wv>, <offs>{, VGx2}], { <Zm1>.H-<Zm2>.H }
	{AZFSUB, aFSUB, FEAT_SME_F16F16, 0xc1a41c08, 0xffff9c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_9_4,
			sa_zm2__Zm_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// FSUB  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zm1>.<T>-<Zm4>.<T> }
	{AZFSUB, aFSUB, FEAT_SME2, 0xc1a11c08, 0xffbf9c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_9_3,
			sa_t__sz__D_S,
			sa_zm4__Zm_9_3,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FSUB  ZA.H[<Wv>, <offs>{, VGx4}], { <Zm1>.H-<Zm4>.H }
	{AZFSUB, aFSUB, FEAT_SME_F16F16, 0xc1a51c08, 0xffff9c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_9_3,
			sa_zm4__Zm_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_H,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// FSUBR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZFSUBR, aFSUBR, FEAT_NONE, 0x65038000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FSUBR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <const>
	{AZFSUBR, aFSUBR, FEAT_NONE, 0x651b8000, 0xff3fe3c0, false, []arg{
		{AC_IMM, []elmType{
			sa_const__i1__0,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FTMAD  <Zdn>.<T>, <Zdn>.<T>, <Zm>.<T>, #<imm>
	{AZFTMAD, aFTMAD, FEAT_NONE, 0x65108000, 0xff38fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm3,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// FTSMUL  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZFTSMUL, aFTSMUL, FEAT_NONE, 0x65000c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FTSSEL  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZFTSSEL, aFTSSEL, FEAT_NONE, 0x420b000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// FVDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZFVDOT, aFVDOT, FEAT_SME2, 0xc1500008, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// GCSB  DSYNC
	{AGCSB, aGCSB, FEAT_GCS, 0xd503227f, 0xffffffff, false, []arg{
		{AC_SPOP, []elmType{
			sa_const_SPOP_DSYNC,
		}},
	}},

	// GCSPOPCX  {<Xt>}
	{AGCSPOPCX, aGCSPOPCX, FEAT_GCS, 0xd50877a0, 0xffffffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// GCSPOPM  <Xt>
	{AGCSPOPM, aGCSPOPM, FEAT_GCS, 0xd52b7720, 0xffffffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// GCSPOPX  {<Xt>}
	{AGCSPOPX, aGCSPOPX, FEAT_GCS, 0xd50877c0, 0xffffffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// GCSPUSHM  <Xt>
	{AGCSPUSHM, aGCSPUSHM, FEAT_GCS, 0xd50b7700, 0xffffffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xt_1__Rt,
		}},
	}},

	// GCSPUSHX  {<Xt>}
	{AGCSPUSHX, aGCSPUSHX, FEAT_GCS, 0xd5087780, 0xffffffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// GCSSS1  <Xt>
	{AGCSSS1, aGCSSS1, FEAT_GCS, 0xd50b7740, 0xffffffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xt_1__Rt,
		}},
	}},

	// GCSSS2  <Xt>
	{AGCSSS2, aGCSSS2, FEAT_GCS, 0xd52b7760, 0xffffffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// GCSSTR  <Xt>, [<Xn|SP>]
	{AGCSSTR, aGCSSTR, FEAT_GCS, 0xd91f0c00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// GCSSTTR  <Xt>, [<Xn|SP>]
	{AGCSSTTR, aGCSSTTR, FEAT_GCS, 0xd91f1c00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// GMI  <Xd>, <Xn|SP>, <Xm>
	{AGMI, aGMI, FEAT_MTE, 0x9ac01400, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Xm,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Xn,
		}},
		{AC_REG, []elmType{
			sa_xd__Xd,
		}},
	}},

	// HINT  #<imm>
	{AHINT, aHINT, FEAT_NONE, 0xd503201f, 0xfffff01f, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__CRm_op2,
		}},
	}},

	// HISTCNT  <Zd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZHISTCNT, aHISTCNT, FEAT_NONE, 0x4520c000, 0xff20e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size_0__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_0__D_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_0__D_S,
		}},
	}},

	// HISTSEG  <Zd>.B, <Zn>.B, <Zm>.B
	{AZHISTSEG, aHISTSEG, FEAT_NONE, 0x4520a000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_B,
		}},
	}},

	// HLT  #<imm>
	{AHLT, aHLT, FEAT_NONE, 0xd4400000, 0xffe0001f, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
		}},
	}},

	// HVC  #<imm>
	{AHVC, aHVC, FEAT_NONE, 0xd4000002, 0xffe0001f, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
		}},
	}},

	// IC  <ic_op>
	{AIC, aIC, FEAT_NONE, 0xd508701f, 0xfff8f01f, true, []arg{
		{AC_SPOP, []elmType{
			sa_ic_op__op1_CRm_op2,
		}},
	}},

	// IC  <ic_op>, <Xt>
	{AIC, aIC, FEAT_NONE, 0xd5087000, 0xfff8f000, true, []arg{
		{AC_SPOP, []elmType{
			sa_ic_op__op1_CRm_op2,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// INCB  <Xdn>
	{AINCB, aINCB, FEAT_NONE, 0x431e3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// INCB  <Xdn>, <pattern>, #<imm>
	{AINCB, aINCB, FEAT_NONE, 0x430e000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// INCB  <Xdn>, <pattern>
	{AINCB, aINCB, FEAT_NONE, 0x431e000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// INCD  <Xdn>
	{AINCD, aINCD, FEAT_NONE, 0x4f1e3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// INCD  <Xdn>, <pattern>, #<imm>
	{AINCD, aINCD, FEAT_NONE, 0x4f0e000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// INCD  <Xdn>, <pattern>
	{AINCD, aINCD, FEAT_NONE, 0x4f1e000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// INCH  <Xdn>
	{AINCH, aINCH, FEAT_NONE, 0x471e3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// INCH  <Xdn>, <pattern>, #<imm>
	{AINCH, aINCH, FEAT_NONE, 0x470e000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// INCH  <Xdn>, <pattern>
	{AINCH, aINCH, FEAT_NONE, 0x471e000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// INCW  <Xdn>
	{AINCW, aINCW, FEAT_NONE, 0x4b1e3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// INCW  <Xdn>, <pattern>, #<imm>
	{AINCW, aINCW, FEAT_NONE, 0x4b0e000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// INCW  <Xdn>, <pattern>
	{AINCW, aINCW, FEAT_NONE, 0x4b1e000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// INCD  <Zdn>.D
	{AZINCD, aINCD, FEAT_NONE, 0x4f1c3e0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// INCD  <Zdn>.D, <pattern>, #<imm>
	{AZINCD, aINCD, FEAT_NONE, 0x4f0c000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// INCD  <Zdn>.D, <pattern>
	{AZINCD, aINCD, FEAT_NONE, 0x4f1c000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// INCH  <Zdn>.H
	{AZINCH, aINCH, FEAT_NONE, 0x471c3e0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// INCH  <Zdn>.H, <pattern>, #<imm>
	{AZINCH, aINCH, FEAT_NONE, 0x470c000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// INCH  <Zdn>.H, <pattern>
	{AZINCH, aINCH, FEAT_NONE, 0x471c000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// INCW  <Zdn>.S
	{AZINCW, aINCW, FEAT_NONE, 0x4b1c3e0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// INCW  <Zdn>.S, <pattern>, #<imm>
	{AZINCW, aINCW, FEAT_NONE, 0x4b0c000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// INCW  <Zdn>.S, <pattern>
	{AZINCW, aINCW, FEAT_NONE, 0x4b1c000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// INCP  <Xdn>, <Pm>.<T>
	{APINCP, aINCP, FEAT_NONE, 0x252c8800, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// INCP  <Zdn>.<T>, <Pm>.<T>
	{AZINCP, aINCP, FEAT_NONE, 0x252c8000, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// INDEX  <Zd>.<T>, #<imm1>, #<imm2>
	{AZINDEX, aINDEX, FEAT_NONE, 0x4204000, 0xff20fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm2__imm5b,
		}},
		{AC_IMM, []elmType{
			sa_imm1__imm5,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// INDEX  <Zd>.<T>, <R><n>, #<imm>
	{AZINDEX, aINDEX, FEAT_NONE, 0x4204400, 0xff20fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm5,
		}},
		{AC_REG, []elmType{
			sa_r__size__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// INDEX  <Zd>.<T>, #<imm>, <R><m>
	{AZINDEX, aINDEX, FEAT_NONE, 0x4204800, 0xff20fc00, false, []arg{
		{AC_REG, []elmType{
			sa_r__size__W_X,
			sa_m__Rm,
		}},
		{AC_IMM, []elmType{
			sa_imm__imm5,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// INDEX  <Zd>.<T>, <R><n>, <R><m>
	{AZINDEX, aINDEX, FEAT_NONE, 0x4204c00, 0xff20fc00, false, []arg{
		{AC_REG, []elmType{
			sa_r__size__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__size__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// INS  <Vd>.<Ts>[<index>], <R><n>
	{AVINS, aINS, FEAT_NONE, 0x4e001c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_r__imm5__W_X,
			sa_n__Rn,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vd__Rd,
			sa_ts__imm5__B_D_H_S,
			sa_index__imm5,
		}},
	}},

	// INS  <Vd>.<Ts>[<index1>], <Vn>.<Ts>[<index2>]
	{AVINS, aINS, FEAT_NONE, 0x6e000400, 0xffe08400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vn__Rn,
			sa_ts__imm5__B_D_H_S,
			sa_index2__imm5_imm4,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vd__Rd,
			sa_ts__imm5__B_D_H_S,
			sa_index1__imm5,
		}},
	}},

	// INSR  <Zdn>.<T>, <R><m>
	{AZINSR, aINSR, FEAT_NONE, 0x5243800, 0xff3ffc00, false, []arg{
		{AC_REG, []elmType{
			sa_r__size__W_X,
			sa_m__Rm,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// INSR  <Zdn>.<T>, <V><m>
	{AZINSR, aINSR, FEAT_NONE, 0x5343800, 0xff3ffc00, false, []arg{
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Vm,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// IRG  <Xd|SP>, <Xn|SP>
	{AIRG, aIRG, FEAT_MTE, 0x9adf1000, 0xfffffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xn_sp__Xn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Xd,
		}},
	}},

	// IRG  <Xd|SP>, <Xn|SP>, <Xm>
	{AIRG, aIRG, FEAT_MTE, 0x9ac01000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Xm,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Xn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Xd,
		}},
	}},

	// ISB  <option>
	{AISB, aISB, FEAT_NONE, 0xd50330df, 0xfffff0ff, false, []arg{
		{AC_SPOP, []elmType{
			sa_option__CRm,
		}},
	}},

	// ISB  #<imm>
	{AISB, aISB, FEAT_NONE, 0xd50330df, 0xfffff0ff, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__CRm,
		}},
	}},

	// LASTA  <R><d>, <Pg>, <Zn>.<T>
	{AZLASTA, aLASTA, FEAT_NONE, 0x520a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_REG, []elmType{
			sa_r__size__W_X,
			sa_d__Rd,
		}},
	}},

	// LASTA  <V><d>, <Pg>, <Zn>.<T>
	{AZLASTA, aLASTA, FEAT_NONE, 0x5228000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Vd,
		}},
	}},

	// LASTB  <R><d>, <Pg>, <Zn>.<T>
	{AZLASTB, aLASTB, FEAT_NONE, 0x521a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_REG, []elmType{
			sa_r__size__W_X,
			sa_d__Rd,
		}},
	}},

	// LASTB  <V><d>, <Pg>, <Zn>.<T>
	{AZLASTB, aLASTB, FEAT_NONE, 0x5238000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Vd,
		}},
	}},

	// LD1  { <Vt>.<T> }, [<Xn|SP>]
	{AVLD1, aLD1, FEAT_NONE, 0xc407000, 0xbffff000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REGLIST1, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>]
	{AVLD1, aLD1, FEAT_NONE, 0xc40a000, 0xbffff000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>]
	{AVLD1, aLD1, FEAT_NONE, 0xc406000, 0xbffff000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>]
	{AVLD1, aLD1, FEAT_NONE, 0xc402000, 0xbffff000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1  { <Vt>.<T> }, [<Xn|SP>], <imm>
	{AVLD1, aLD1, FEAT_NONE, 0xcdf7000, 0xbffff000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm__Q__8_16,
		}},
		{AC_REGLIST1, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1  { <Vt>.<T> }, [<Xn|SP>], <Xm>
	{AVLD1, aLD1, FEAT_NONE, 0xcc07000, 0xbfe0f000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_REGLIST1, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <imm>
	{AVLD1, aLD1, FEAT_NONE, 0xcdfa000, 0xbffff000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__Q__16_32,
		}},
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <Xm>
	{AVLD1, aLD1, FEAT_NONE, 0xcc0a000, 0xbfe0f000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <imm>
	{AVLD1, aLD1, FEAT_NONE, 0xcdf6000, 0xbffff000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_2__Q__24_48,
		}},
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <Xm>
	{AVLD1, aLD1, FEAT_NONE, 0xcc06000, 0xbfe0f000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <imm>
	{AVLD1, aLD1, FEAT_NONE, 0xcdf2000, 0xbffff000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_3__Q__32_64,
		}},
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <Xm>
	{AVLD1, aLD1, FEAT_NONE, 0xcc02000, 0xbfe0f000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1  { <Vt>.B }[<index>], [<Xn|SP>]
	{AVLD1, aLD1, FEAT_NONE, 0xd400000, 0xbfffe000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_B,
			sa_index__Q_S_size,
		}},
	}},

	// LD1  { <Vt>.H }[<index>], [<Xn|SP>]
	{AVLD1, aLD1, FEAT_NONE, 0xd404000, 0xbfffe400, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_H,
			sa_index_2__Q_S_size_1,
		}},
	}},

	// LD1  { <Vt>.S }[<index>], [<Xn|SP>]
	{AVLD1, aLD1, FEAT_NONE, 0xd408000, 0xbfffec00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_S,
			sa_index_3__Q_S,
		}},
	}},

	// LD1  { <Vt>.D }[<index>], [<Xn|SP>]
	{AVLD1, aLD1, FEAT_NONE, 0xd408400, 0xbffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_D,
			sa_index_1__Q,
		}},
	}},

	// LD1  { <Vt>.B }[<index>], [<Xn|SP>], #1
	{AVLD1, aLD1, FEAT_NONE, 0xddf0000, 0xbfffe000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_1,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_B,
			sa_index__Q_S_size,
		}},
	}},

	// LD1  { <Vt>.B }[<index>], [<Xn|SP>], <Xm>
	{AVLD1, aLD1, FEAT_NONE, 0xdc00000, 0xbfe0e000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_B,
			sa_index__Q_S_size,
		}},
	}},

	// LD1  { <Vt>.H }[<index>], [<Xn|SP>], #2
	{AVLD1, aLD1, FEAT_NONE, 0xddf4000, 0xbfffe400, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_2,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_H,
			sa_index_2__Q_S_size_1,
		}},
	}},

	// LD1  { <Vt>.H }[<index>], [<Xn|SP>], <Xm>
	{AVLD1, aLD1, FEAT_NONE, 0xdc04000, 0xbfe0e400, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_H,
			sa_index_2__Q_S_size_1,
		}},
	}},

	// LD1  { <Vt>.S }[<index>], [<Xn|SP>], #4
	{AVLD1, aLD1, FEAT_NONE, 0xddf8000, 0xbfffec00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_4,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_S,
			sa_index_3__Q_S,
		}},
	}},

	// LD1  { <Vt>.S }[<index>], [<Xn|SP>], <Xm>
	{AVLD1, aLD1, FEAT_NONE, 0xdc08000, 0xbfe0ec00, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_S,
			sa_index_3__Q_S,
		}},
	}},

	// LD1  { <Vt>.D }[<index>], [<Xn|SP>], #8
	{AVLD1, aLD1, FEAT_NONE, 0xddf8400, 0xbffffc00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_8,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_D,
			sa_index_1__Q,
		}},
	}},

	// LD1  { <Vt>.D }[<index>], [<Xn|SP>], <Xm>
	{AVLD1, aLD1, FEAT_NONE, 0xdc08400, 0xbfe0fc00, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_D,
			sa_index_1__Q,
		}},
	}},

	// LD1B  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, #<imm>}]
	{AZLD1B, aLD1B, FEAT_NONE, 0x8420c000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1B  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLD1B, aLD1B, FEAT_NONE, 0xc420c000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1B  { <Zt>.B }, <Pg>/Z, [<Xn|SP>, <Xm>]
	{AZLD1B, aLD1B, FEAT_NONE, 0xa4004000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_B,
		}},
	}},

	// LD1B  { <Zt>.H }, <Pg>/Z, [<Xn|SP>, <Xm>]
	{AZLD1B, aLD1B, FEAT_NONE, 0xa4204000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LD1B  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Xm>]
	{AZLD1B, aLD1B, FEAT_NONE, 0xa4404000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1B  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Xm>]
	{AZLD1B, aLD1B, FEAT_NONE, 0xa4604000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1B  { <Zt>.B }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1B, aLD1B, FEAT_NONE, 0xa400a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_B,
		}},
	}},

	// LD1B  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1B, aLD1B, FEAT_NONE, 0xa420a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LD1B  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1B, aLD1B, FEAT_NONE, 0xa440a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1B  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1B, aLD1B, FEAT_NONE, 0xa460a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1B  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLD1B, aLD1B, FEAT_NONE, 0xc4004000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1B  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod>]
	{AZLD1B, aLD1B, FEAT_NONE, 0x84004000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1B  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLD1B, aLD1B, FEAT_NONE, 0xc440c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1B  { <Zt1>.B-<Zt2>.B }, <PNg>/Z, [<Xn|SP>, <Xm>]
	{AZLD1B, aLD1B, FEAT_SVE2p1, 0xa0000000, 0xffe0e001, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_B,
		}},
	}},

	// LD1B  { <Zt1>.B-<Zt4>.B }, <PNg>/Z, [<Xn|SP>, <Xm>]
	{AZLD1B, aLD1B, FEAT_SVE2p1, 0xa0008000, 0xffe0e003, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_B,
		}},
	}},

	// LD1B  { <Zt1>.B-<Zt2>.B }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1B, aLD1B, FEAT_SVE2p1, 0xa0400000, 0xfff0e001, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_B,
		}},
	}},

	// LD1B  { <Zt1>.B-<Zt4>.B }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1B, aLD1B, FEAT_SVE2p1, 0xa0408000, 0xfff0e003, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_B,
		}},
	}},

	// LD1B  { ZA0<HV>.B[<Ws>, <offs>] }, <Pg>/Z, [<Xn|SP>{, <Xm>}]
	{APLD1B, aLD1B, FEAT_SME, 0xe0000000, 0xffe00010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_const_ZAHVTILEIDX_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_B,
			sa_ws__Rs,
			sa_offs__off4,
		}},
	}},

	// LD1B  { <Zt1>.B, <Zt2>.B }, <PNg>/Z, [<Xn|SP>, <Xm>]
	{AZLD1B, aLD1B, FEAT_SME2, 0xa1000000, 0xffe0e008, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_B,
		}},
	}},

	// LD1B  { <Zt1>.B, <Zt2>.B, <Zt3>.B, <Zt4>.B }, <PNg>/Z, [<Xn|SP>, <Xm>]
	{AZLD1B, aLD1B, FEAT_SME2, 0xa1008000, 0xffe0e00c, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_B,
		}},
	}},

	// LD1B  { <Zt1>.B, <Zt2>.B }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1B, aLD1B, FEAT_SME2, 0xa1400000, 0xfff0e008, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_B,
		}},
	}},

	// LD1B  { <Zt1>.B, <Zt2>.B, <Zt3>.B, <Zt4>.B }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1B, aLD1B, FEAT_SME2, 0xa1408000, 0xfff0e00c, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_B,
		}},
	}},

	// LD1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLD1D, aLD1D, FEAT_NONE, 0xa5e04000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1D  { <Zt>.Q }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLD1D, aLD1D, FEAT_SVE2p1, 0xa5808000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_Q,
		}},
	}},

	// LD1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1D, aLD1D, FEAT_NONE, 0xa5e0a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1D  { <Zt>.Q }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1D, aLD1D, FEAT_SVE2p1, 0xa5902000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_Q,
		}},
	}},

	// LD1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod> #3]
	{AZLD1D, aLD1D, FEAT_NONE, 0xc5a04000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLD1D, aLD1D, FEAT_NONE, 0xc5804000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, LSL #3]
	{AZLD1D, aLD1D, FEAT_NONE, 0xc5e0c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLD1D, aLD1D, FEAT_NONE, 0xc5c0c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1D  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLD1D, aLD1D, FEAT_NONE, 0xc5a0c000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1D  { <Zt1>.D-<Zt2>.D }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLD1D, aLD1D, FEAT_SVE2p1, 0xa0006000, 0xffe0e001, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_D,
		}},
	}},

	// LD1D  { <Zt1>.D-<Zt4>.D }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLD1D, aLD1D, FEAT_SVE2p1, 0xa000e000, 0xffe0e003, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_D,
		}},
	}},

	// LD1D  { <Zt1>.D-<Zt2>.D }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1D, aLD1D, FEAT_SVE2p1, 0xa0406000, 0xfff0e001, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_D,
		}},
	}},

	// LD1D  { <Zt1>.D-<Zt4>.D }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1D, aLD1D, FEAT_SVE2p1, 0xa040e000, 0xfff0e003, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_D,
		}},
	}},

	// LD1D  { <ZAt><HV>.D[<Ws>, <offs>] }, <Pg>/Z, [<Xn|SP>{, <Xm>, LSL #3}]
	{AZLD1D, aLD1D, FEAT_SME, 0xe0c00000, 0xffe00010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_zat__ZAt,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_D,
			sa_ws__Rs,
			sa_offs__o1,
		}},
	}},

	// LD1D  { <Zt1>.D, <Zt2>.D }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLD1D, aLD1D, FEAT_SME2, 0xa1006000, 0xffe0e008, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_D,
		}},
	}},

	// LD1D  { <Zt1>.D, <Zt2>.D, <Zt3>.D, <Zt4>.D }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLD1D, aLD1D, FEAT_SME2, 0xa100e000, 0xffe0e00c, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_D,
		}},
	}},

	// LD1D  { <Zt1>.D, <Zt2>.D }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1D, aLD1D, FEAT_SME2, 0xa1406000, 0xfff0e008, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_D,
		}},
	}},

	// LD1D  { <Zt1>.D, <Zt2>.D, <Zt3>.D, <Zt4>.D }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1D, aLD1D, FEAT_SME2, 0xa140e000, 0xfff0e00c, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_D,
		}},
	}},

	// LD1H  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod> #1]
	{AZLD1H, aLD1H, FEAT_NONE, 0x84a04000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1H  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod> #1]
	{AZLD1H, aLD1H, FEAT_NONE, 0xc4a04000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1H  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLD1H, aLD1H, FEAT_NONE, 0xc4804000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1H  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod>]
	{AZLD1H, aLD1H, FEAT_NONE, 0x84804000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1H  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, LSL #1]
	{AZLD1H, aLD1H, FEAT_NONE, 0xc4e0c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1H  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLD1H, aLD1H, FEAT_NONE, 0xc4c0c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1H  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, #<imm>}]
	{AZLD1H, aLD1H, FEAT_NONE, 0x84a0c000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1H  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLD1H, aLD1H, FEAT_NONE, 0xc4a0c000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1H  { <Zt>.H }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD1H, aLD1H, FEAT_NONE, 0xa4a04000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LD1H  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD1H, aLD1H, FEAT_NONE, 0xa4c04000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1H  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD1H, aLD1H, FEAT_NONE, 0xa4e04000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1H  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1H, aLD1H, FEAT_NONE, 0xa4a0a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LD1H  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1H, aLD1H, FEAT_NONE, 0xa4c0a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1H  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1H, aLD1H, FEAT_NONE, 0xa4e0a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1H  { <Zt1>.H-<Zt2>.H }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD1H, aLD1H, FEAT_SVE2p1, 0xa0002000, 0xffe0e001, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_H,
		}},
	}},

	// LD1H  { <Zt1>.H-<Zt4>.H }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD1H, aLD1H, FEAT_SVE2p1, 0xa000a000, 0xffe0e003, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_H,
		}},
	}},

	// LD1H  { <Zt1>.H-<Zt2>.H }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1H, aLD1H, FEAT_SVE2p1, 0xa0402000, 0xfff0e001, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_H,
		}},
	}},

	// LD1H  { <Zt1>.H-<Zt4>.H }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1H, aLD1H, FEAT_SVE2p1, 0xa040a000, 0xfff0e003, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_H,
		}},
	}},

	// LD1H  { <ZAt><HV>.H[<Ws>, <offs>] }, <Pg>/Z, [<Xn|SP>{, <Xm>, LSL #1}]
	{AZLD1H, aLD1H, FEAT_SME, 0xe0400000, 0xffe00010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_zat__ZAt,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_H,
			sa_ws__Rs,
			sa_offs__off3_2_3,
		}},
	}},

	// LD1H  { <Zt1>.H, <Zt2>.H }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD1H, aLD1H, FEAT_SME2, 0xa1002000, 0xffe0e008, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_H,
		}},
	}},

	// LD1H  { <Zt1>.H, <Zt2>.H, <Zt3>.H, <Zt4>.H }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD1H, aLD1H, FEAT_SME2, 0xa100a000, 0xffe0e00c, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_H,
		}},
	}},

	// LD1H  { <Zt1>.H, <Zt2>.H }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1H, aLD1H, FEAT_SME2, 0xa1402000, 0xfff0e008, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_H,
		}},
	}},

	// LD1H  { <Zt1>.H, <Zt2>.H, <Zt3>.H, <Zt4>.H }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1H, aLD1H, FEAT_SME2, 0xa140a000, 0xfff0e00c, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_H,
		}},
	}},

	// LD1Q  { <Zt>.Q }, <Pg>/Z, [<Zn>.D{, <Xm>}]
	{AZLD1Q, aLD1Q, FEAT_SVE2p1, 0xc400a000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_Q,
		}},
	}},

	// LD1Q  { <ZAt><HV>.Q[<Ws>, <offs>] }, <Pg>/Z, [<Xn|SP>{, <Xm>, LSL #4}]
	{AZLD1Q, aLD1Q, FEAT_SME, 0xe1c00000, 0xffe00010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_zat__ZAt,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_Q,
			sa_ws__Rs,
			sa_offs,
		}},
	}},

	// LD1R  { <Vt>.<T> }, [<Xn|SP>]
	{AVLD1R, aLD1R, FEAT_NONE, 0xd40c000, 0xbffff000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REGLIST1, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1R  { <Vt>.<T> }, [<Xn|SP>], <imm>
	{AVLD1R, aLD1R, FEAT_NONE, 0xddfc000, 0xbffff000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm__size__1_2_4_8,
		}},
		{AC_REGLIST1, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1R  { <Vt>.<T> }, [<Xn|SP>], <Xm>
	{AVLD1R, aLD1R, FEAT_NONE, 0xdc0c000, 0xbfe0f000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_REGLIST1, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD1RB  { <Zt>.B }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RB, aLD1RB, FEAT_NONE, 0x84408000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_B,
		}},
	}},

	// LD1RB  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RB, aLD1RB, FEAT_NONE, 0x8440a000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LD1RB  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RB, aLD1RB, FEAT_NONE, 0x8440c000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1RB  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RB, aLD1RB, FEAT_NONE, 0x8440e000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1RD  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RD, aLD1RD, FEAT_NONE, 0x85c0e000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1RH  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RH, aLD1RH, FEAT_NONE, 0x84c0a000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LD1RH  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RH, aLD1RH, FEAT_NONE, 0x84c0c000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1RH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RH, aLD1RH, FEAT_NONE, 0x84c0e000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1ROB  { <Zt>.B }, <Pg>/Z, [<Xn|SP>, <Xm>]
	{AZLD1ROB, aLD1ROB, FEAT_F64MM, 0xa4200000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_B,
		}},
	}},

	// LD1ROB  { <Zt>.B }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1ROB, aLD1ROB, FEAT_F64MM, 0xa4202000, 0xfff0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_B,
		}},
	}},

	// LD1ROD  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLD1ROD, aLD1ROD, FEAT_F64MM, 0xa5a00000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1ROD  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1ROD, aLD1ROD, FEAT_F64MM, 0xa5a02000, 0xfff0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1ROH  { <Zt>.H }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD1ROH, aLD1ROH, FEAT_F64MM, 0xa4a00000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LD1ROH  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1ROH, aLD1ROH, FEAT_F64MM, 0xa4a02000, 0xfff0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LD1ROW  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLD1ROW, aLD1ROW, FEAT_F64MM, 0xa5200000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1ROW  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1ROW, aLD1ROW, FEAT_F64MM, 0xa5202000, 0xfff0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1RQB  { <Zt>.B }, <Pg>/Z, [<Xn|SP>, <Xm>]
	{AZLD1RQB, aLD1RQB, FEAT_NONE, 0xa4000000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_B,
		}},
	}},

	// LD1RQB  { <Zt>.B }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RQB, aLD1RQB, FEAT_NONE, 0xa4002000, 0xfff0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_B,
		}},
	}},

	// LD1RQD  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLD1RQD, aLD1RQD, FEAT_NONE, 0xa5800000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1RQD  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RQD, aLD1RQD, FEAT_NONE, 0xa5802000, 0xfff0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1RQH  { <Zt>.H }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD1RQH, aLD1RQH, FEAT_NONE, 0xa4800000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LD1RQH  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RQH, aLD1RQH, FEAT_NONE, 0xa4802000, 0xfff0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LD1RQW  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLD1RQW, aLD1RQW, FEAT_NONE, 0xa5000000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1RQW  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RQW, aLD1RQW, FEAT_NONE, 0xa5002000, 0xfff0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1RSB  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RSB, aLD1RSB, FEAT_NONE, 0x85c0c000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LD1RSB  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RSB, aLD1RSB, FEAT_NONE, 0x85c0a000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1RSB  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RSB, aLD1RSB, FEAT_NONE, 0x85c08000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1RSH  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RSH, aLD1RSH, FEAT_NONE, 0x8540a000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1RSH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RSH, aLD1RSH, FEAT_NONE, 0x85408000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1RSW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RSW, aLD1RSW, FEAT_NONE, 0x84c08000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1RW  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RW, aLD1RW, FEAT_NONE, 0x8540c000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1RW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>}]
	{AZLD1RW, aLD1RW, FEAT_NONE, 0x8540e000, 0xffc0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm6_21_6,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SB  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, #<imm>}]
	{AZLD1SB, aLD1SB, FEAT_NONE, 0x84208000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1SB  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLD1SB, aLD1SB, FEAT_NONE, 0xc4208000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SB  { <Zt>.H }, <Pg>/Z, [<Xn|SP>, <Xm>]
	{AZLD1SB, aLD1SB, FEAT_NONE, 0xa5c04000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LD1SB  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Xm>]
	{AZLD1SB, aLD1SB, FEAT_NONE, 0xa5a04000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1SB  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Xm>]
	{AZLD1SB, aLD1SB, FEAT_NONE, 0xa5804000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SB  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1SB, aLD1SB, FEAT_NONE, 0xa5c0a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LD1SB  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1SB, aLD1SB, FEAT_NONE, 0xa5a0a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1SB  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1SB, aLD1SB, FEAT_NONE, 0xa580a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SB  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLD1SB, aLD1SB, FEAT_NONE, 0xc4000000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SB  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod>]
	{AZLD1SB, aLD1SB, FEAT_NONE, 0x84000000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1SB  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLD1SB, aLD1SB, FEAT_NONE, 0xc4408000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SH  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod> #1]
	{AZLD1SH, aLD1SH, FEAT_NONE, 0x84a00000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1SH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod> #1]
	{AZLD1SH, aLD1SH, FEAT_NONE, 0xc4a00000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLD1SH, aLD1SH, FEAT_NONE, 0xc4800000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SH  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod>]
	{AZLD1SH, aLD1SH, FEAT_NONE, 0x84800000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1SH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, LSL #1]
	{AZLD1SH, aLD1SH, FEAT_NONE, 0xc4e08000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLD1SH, aLD1SH, FEAT_NONE, 0xc4c08000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SH  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, #<imm>}]
	{AZLD1SH, aLD1SH, FEAT_NONE, 0x84a08000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1SH  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLD1SH, aLD1SH, FEAT_NONE, 0xc4a08000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SH  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD1SH, aLD1SH, FEAT_NONE, 0xa5204000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1SH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD1SH, aLD1SH, FEAT_NONE, 0xa5004000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SH  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1SH, aLD1SH, FEAT_NONE, 0xa520a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1SH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1SH, aLD1SH, FEAT_NONE, 0xa500a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLD1SW, aLD1SW, FEAT_NONE, 0xa4804000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1SW, aLD1SW, FEAT_NONE, 0xa480a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod> #2]
	{AZLD1SW, aLD1SW, FEAT_NONE, 0xc5200000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLD1SW, aLD1SW, FEAT_NONE, 0xc5000000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, LSL #2]
	{AZLD1SW, aLD1SW, FEAT_NONE, 0xc5608000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLD1SW, aLD1SW, FEAT_NONE, 0xc5408000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1SW  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLD1SW, aLD1SW, FEAT_NONE, 0xc5208000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1W  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod> #2]
	{AZLD1W, aLD1W, FEAT_NONE, 0x85204000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1W  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod> #2]
	{AZLD1W, aLD1W, FEAT_NONE, 0xc5204000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1W  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLD1W, aLD1W, FEAT_NONE, 0xc5004000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1W  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod>]
	{AZLD1W, aLD1W, FEAT_NONE, 0x85004000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1W  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, LSL #2]
	{AZLD1W, aLD1W, FEAT_NONE, 0xc560c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1W  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLD1W, aLD1W, FEAT_NONE, 0xc540c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1W  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, #<imm>}]
	{AZLD1W, aLD1W, FEAT_NONE, 0x8520c000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1W  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLD1W, aLD1W, FEAT_NONE, 0xc520c000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1W  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLD1W, aLD1W, FEAT_NONE, 0xa5404000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1W  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLD1W, aLD1W, FEAT_NONE, 0xa5604000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1W  { <Zt>.Q }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLD1W, aLD1W, FEAT_SVE2p1, 0xa5008000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_Q,
		}},
	}},

	// LD1W  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1W, aLD1W, FEAT_NONE, 0xa540a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LD1W  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1W, aLD1W, FEAT_NONE, 0xa560a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LD1W  { <Zt>.Q }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1W, aLD1W, FEAT_SVE2p1, 0xa5102000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_Q,
		}},
	}},

	// LD1W  { <Zt1>.S-<Zt2>.S }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLD1W, aLD1W, FEAT_SVE2p1, 0xa0004000, 0xffe0e001, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_S,
		}},
	}},

	// LD1W  { <Zt1>.S-<Zt4>.S }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLD1W, aLD1W, FEAT_SVE2p1, 0xa000c000, 0xffe0e003, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_S,
		}},
	}},

	// LD1W  { <Zt1>.S-<Zt2>.S }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1W, aLD1W, FEAT_SVE2p1, 0xa0404000, 0xfff0e001, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_S,
		}},
	}},

	// LD1W  { <Zt1>.S-<Zt4>.S }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1W, aLD1W, FEAT_SVE2p1, 0xa040c000, 0xfff0e003, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_S,
		}},
	}},

	// LD1W  { <ZAt><HV>.S[<Ws>, <offs>] }, <Pg>/Z, [<Xn|SP>{, <Xm>, LSL #2}]
	{AZLD1W, aLD1W, FEAT_SME, 0xe0800000, 0xffe00010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_zat__ZAt,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_S,
			sa_ws__Rs,
			sa_offs__off2,
		}},
	}},

	// LD1W  { <Zt1>.S, <Zt2>.S }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLD1W, aLD1W, FEAT_SME2, 0xa1004000, 0xffe0e008, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_S,
		}},
	}},

	// LD1W  { <Zt1>.S, <Zt2>.S, <Zt3>.S, <Zt4>.S }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLD1W, aLD1W, FEAT_SME2, 0xa100c000, 0xffe0e00c, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_S,
		}},
	}},

	// LD1W  { <Zt1>.S, <Zt2>.S }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1W, aLD1W, FEAT_SME2, 0xa1404000, 0xfff0e008, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_S,
		}},
	}},

	// LD1W  { <Zt1>.S, <Zt2>.S, <Zt3>.S, <Zt4>.S }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD1W, aLD1W, FEAT_SME2, 0xa140c000, 0xfff0e00c, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_S,
		}},
	}},

	// LD2  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>]
	{AVLD2, aLD2, FEAT_NONE, 0xc408000, 0xbffff000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD2  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <imm>
	{AVLD2, aLD2, FEAT_NONE, 0xcdf8000, 0xbffff000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm__Q__16_32,
		}},
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD2  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <Xm>
	{AVLD2, aLD2, FEAT_NONE, 0xcc08000, 0xbfe0f000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD2  { <Vt>.B, <Vt2>.B }[<index>], [<Xn|SP>]
	{AVLD2, aLD2, FEAT_NONE, 0xd600000, 0xbfffe000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
	}},

	// LD2  { <Vt>.H, <Vt2>.H }[<index>], [<Xn|SP>]
	{AVLD2, aLD2, FEAT_NONE, 0xd604000, 0xbfffe400, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
	}},

	// LD2  { <Vt>.S, <Vt2>.S }[<index>], [<Xn|SP>]
	{AVLD2, aLD2, FEAT_NONE, 0xd608000, 0xbfffec00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
	}},

	// LD2  { <Vt>.D, <Vt2>.D }[<index>], [<Xn|SP>]
	{AVLD2, aLD2, FEAT_NONE, 0xd608400, 0xbffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
	}},

	// LD2  { <Vt>.B, <Vt2>.B }[<index>], [<Xn|SP>], #2
	{AVLD2, aLD2, FEAT_NONE, 0xdff0000, 0xbfffe000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_2,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
	}},

	// LD2  { <Vt>.B, <Vt2>.B }[<index>], [<Xn|SP>], <Xm>
	{AVLD2, aLD2, FEAT_NONE, 0xde00000, 0xbfe0e000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
	}},

	// LD2  { <Vt>.H, <Vt2>.H }[<index>], [<Xn|SP>], #4
	{AVLD2, aLD2, FEAT_NONE, 0xdff4000, 0xbfffe400, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_4,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
	}},

	// LD2  { <Vt>.H, <Vt2>.H }[<index>], [<Xn|SP>], <Xm>
	{AVLD2, aLD2, FEAT_NONE, 0xde04000, 0xbfe0e400, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
	}},

	// LD2  { <Vt>.S, <Vt2>.S }[<index>], [<Xn|SP>], #8
	{AVLD2, aLD2, FEAT_NONE, 0xdff8000, 0xbfffec00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_8,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
	}},

	// LD2  { <Vt>.S, <Vt2>.S }[<index>], [<Xn|SP>], <Xm>
	{AVLD2, aLD2, FEAT_NONE, 0xde08000, 0xbfe0ec00, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
	}},

	// LD2  { <Vt>.D, <Vt2>.D }[<index>], [<Xn|SP>], #16
	{AVLD2, aLD2, FEAT_NONE, 0xdff8400, 0xbffffc00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_16,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
	}},

	// LD2  { <Vt>.D, <Vt2>.D }[<index>], [<Xn|SP>], <Xm>
	{AVLD2, aLD2, FEAT_NONE, 0xde08400, 0xbfe0fc00, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
	}},

	// LD2B  { <Zt1>.B, <Zt2>.B }, <Pg>/Z, [<Xn|SP>, <Xm>]
	{AZLD2B, aLD2B, FEAT_NONE, 0xa420c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_B,
		}},
	}},

	// LD2B  { <Zt1>.B, <Zt2>.B }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD2B, aLD2B, FEAT_NONE, 0xa420e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_B,
		}},
	}},

	// LD2D  { <Zt1>.D, <Zt2>.D }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLD2D, aLD2D, FEAT_NONE, 0xa5a0c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_D,
		}},
	}},

	// LD2D  { <Zt1>.D, <Zt2>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD2D, aLD2D, FEAT_NONE, 0xa5a0e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_D,
		}},
	}},

	// LD2H  { <Zt1>.H, <Zt2>.H }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD2H, aLD2H, FEAT_NONE, 0xa4a0c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_H,
		}},
	}},

	// LD2H  { <Zt1>.H, <Zt2>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD2H, aLD2H, FEAT_NONE, 0xa4a0e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_H,
		}},
	}},

	// LD2Q  { <Zt1>.Q, <Zt2>.Q }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD2Q, aLD2Q, FEAT_SVE2p1, 0xa490e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_Q,
		}},
	}},

	// LD2Q  { <Zt1>.Q, <Zt2>.Q }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #4]
	{AZLD2Q, aLD2Q, FEAT_SVE2p1, 0xa4a08000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_Q,
		}},
	}},

	// LD2R  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>]
	{AVLD2R, aLD2R, FEAT_NONE, 0xd60c000, 0xbffff000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD2R  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <imm>
	{AVLD2R, aLD2R, FEAT_NONE, 0xdffc000, 0xbffff000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm__size__2_4_8_16,
		}},
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD2R  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <Xm>
	{AVLD2R, aLD2R, FEAT_NONE, 0xde0c000, 0xbfe0f000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD2W  { <Zt1>.S, <Zt2>.S }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLD2W, aLD2W, FEAT_NONE, 0xa520c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_S,
		}},
	}},

	// LD2W  { <Zt1>.S, <Zt2>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD2W, aLD2W, FEAT_NONE, 0xa520e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_S,
		}},
	}},

	// LD3  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>]
	{AVLD3, aLD3, FEAT_NONE, 0xc404000, 0xbffff000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD3  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <imm>
	{AVLD3, aLD3, FEAT_NONE, 0xcdf4000, 0xbffff000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm__Q__24_48,
		}},
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD3  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <Xm>
	{AVLD3, aLD3, FEAT_NONE, 0xcc04000, 0xbfe0f000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD3  { <Vt>.B, <Vt2>.B, <Vt3>.B }[<index>], [<Xn|SP>]
	{AVLD3, aLD3, FEAT_NONE, 0xd402000, 0xbfffe000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
	}},

	// LD3  { <Vt>.H, <Vt2>.H, <Vt3>.H }[<index>], [<Xn|SP>]
	{AVLD3, aLD3, FEAT_NONE, 0xd406000, 0xbfffe400, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
	}},

	// LD3  { <Vt>.S, <Vt2>.S, <Vt3>.S }[<index>], [<Xn|SP>]
	{AVLD3, aLD3, FEAT_NONE, 0xd40a000, 0xbfffec00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
	}},

	// LD3  { <Vt>.D, <Vt2>.D, <Vt3>.D }[<index>], [<Xn|SP>]
	{AVLD3, aLD3, FEAT_NONE, 0xd40a400, 0xbffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
	}},

	// LD3  { <Vt>.B, <Vt2>.B, <Vt3>.B }[<index>], [<Xn|SP>], #3
	{AVLD3, aLD3, FEAT_NONE, 0xddf2000, 0xbfffe000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_3,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
	}},

	// LD3  { <Vt>.B, <Vt2>.B, <Vt3>.B }[<index>], [<Xn|SP>], <Xm>
	{AVLD3, aLD3, FEAT_NONE, 0xdc02000, 0xbfe0e000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
	}},

	// LD3  { <Vt>.H, <Vt2>.H, <Vt3>.H }[<index>], [<Xn|SP>], #6
	{AVLD3, aLD3, FEAT_NONE, 0xddf6000, 0xbfffe400, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_6,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
	}},

	// LD3  { <Vt>.H, <Vt2>.H, <Vt3>.H }[<index>], [<Xn|SP>], <Xm>
	{AVLD3, aLD3, FEAT_NONE, 0xdc06000, 0xbfe0e400, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
	}},

	// LD3  { <Vt>.S, <Vt2>.S, <Vt3>.S }[<index>], [<Xn|SP>], #12
	{AVLD3, aLD3, FEAT_NONE, 0xddfa000, 0xbfffec00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_12,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
	}},

	// LD3  { <Vt>.S, <Vt2>.S, <Vt3>.S }[<index>], [<Xn|SP>], <Xm>
	{AVLD3, aLD3, FEAT_NONE, 0xdc0a000, 0xbfe0ec00, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
	}},

	// LD3  { <Vt>.D, <Vt2>.D, <Vt3>.D }[<index>], [<Xn|SP>], #24
	{AVLD3, aLD3, FEAT_NONE, 0xddfa400, 0xbffffc00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_24,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
	}},

	// LD3  { <Vt>.D, <Vt2>.D, <Vt3>.D }[<index>], [<Xn|SP>], <Xm>
	{AVLD3, aLD3, FEAT_NONE, 0xdc0a400, 0xbfe0fc00, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
	}},

	// LD3B  { <Zt1>.B, <Zt2>.B, <Zt3>.B }, <Pg>/Z, [<Xn|SP>, <Xm>]
	{AZLD3B, aLD3B, FEAT_NONE, 0xa440c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_B,
		}},
	}},

	// LD3B  { <Zt1>.B, <Zt2>.B, <Zt3>.B }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD3B, aLD3B, FEAT_NONE, 0xa440e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_B,
		}},
	}},

	// LD3D  { <Zt1>.D, <Zt2>.D, <Zt3>.D }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLD3D, aLD3D, FEAT_NONE, 0xa5c0c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_D,
		}},
	}},

	// LD3D  { <Zt1>.D, <Zt2>.D, <Zt3>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD3D, aLD3D, FEAT_NONE, 0xa5c0e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_D,
		}},
	}},

	// LD3H  { <Zt1>.H, <Zt2>.H, <Zt3>.H }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD3H, aLD3H, FEAT_NONE, 0xa4c0c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_H,
		}},
	}},

	// LD3H  { <Zt1>.H, <Zt2>.H, <Zt3>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD3H, aLD3H, FEAT_NONE, 0xa4c0e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_H,
		}},
	}},

	// LD3Q  { <Zt1>.Q, <Zt2>.Q, <Zt3>.Q }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD3Q, aLD3Q, FEAT_SVE2p1, 0xa510e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_Q,
		}},
	}},

	// LD3Q  { <Zt1>.Q, <Zt2>.Q, <Zt3>.Q }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #4]
	{AZLD3Q, aLD3Q, FEAT_SVE2p1, 0xa5208000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_Q,
		}},
	}},

	// LD3R  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>]
	{AVLD3R, aLD3R, FEAT_NONE, 0xd40e000, 0xbffff000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD3R  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <imm>
	{AVLD3R, aLD3R, FEAT_NONE, 0xddfe000, 0xbffff000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm__size__3_6_12_24,
		}},
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD3R  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <Xm>
	{AVLD3R, aLD3R, FEAT_NONE, 0xdc0e000, 0xbfe0f000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD3W  { <Zt1>.S, <Zt2>.S, <Zt3>.S }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLD3W, aLD3W, FEAT_NONE, 0xa540c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_S,
		}},
	}},

	// LD3W  { <Zt1>.S, <Zt2>.S, <Zt3>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD3W, aLD3W, FEAT_NONE, 0xa540e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_S,
		}},
	}},

	// LD4  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>]
	{AVLD4, aLD4, FEAT_NONE, 0xc400000, 0xbffff000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD4  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <imm>
	{AVLD4, aLD4, FEAT_NONE, 0xcdf0000, 0xbffff000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm__Q__32_64,
		}},
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD4  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <Xm>
	{AVLD4, aLD4, FEAT_NONE, 0xcc00000, 0xbfe0f000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD4  { <Vt>.B, <Vt2>.B, <Vt3>.B, <Vt4>.B }[<index>], [<Xn|SP>]
	{AVLD4, aLD4, FEAT_NONE, 0xd602000, 0xbfffe000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
	}},

	// LD4  { <Vt>.H, <Vt2>.H, <Vt3>.H, <Vt4>.H }[<index>], [<Xn|SP>]
	{AVLD4, aLD4, FEAT_NONE, 0xd606000, 0xbfffe400, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
	}},

	// LD4  { <Vt>.S, <Vt2>.S, <Vt3>.S, <Vt4>.S }[<index>], [<Xn|SP>]
	{AVLD4, aLD4, FEAT_NONE, 0xd60a000, 0xbfffec00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
	}},

	// LD4  { <Vt>.D, <Vt2>.D, <Vt3>.D, <Vt4>.D }[<index>], [<Xn|SP>]
	{AVLD4, aLD4, FEAT_NONE, 0xd60a400, 0xbffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
	}},

	// LD4  { <Vt>.B, <Vt2>.B, <Vt3>.B, <Vt4>.B }[<index>], [<Xn|SP>], #4
	{AVLD4, aLD4, FEAT_NONE, 0xdff2000, 0xbfffe000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_4,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
	}},

	// LD4  { <Vt>.B, <Vt2>.B, <Vt3>.B, <Vt4>.B }[<index>], [<Xn|SP>], <Xm>
	{AVLD4, aLD4, FEAT_NONE, 0xde02000, 0xbfe0e000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
	}},

	// LD4  { <Vt>.H, <Vt2>.H, <Vt3>.H, <Vt4>.H }[<index>], [<Xn|SP>], #8
	{AVLD4, aLD4, FEAT_NONE, 0xdff6000, 0xbfffe400, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_8,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
	}},

	// LD4  { <Vt>.H, <Vt2>.H, <Vt3>.H, <Vt4>.H }[<index>], [<Xn|SP>], <Xm>
	{AVLD4, aLD4, FEAT_NONE, 0xde06000, 0xbfe0e400, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
	}},

	// LD4  { <Vt>.S, <Vt2>.S, <Vt3>.S, <Vt4>.S }[<index>], [<Xn|SP>], #16
	{AVLD4, aLD4, FEAT_NONE, 0xdffa000, 0xbfffec00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_16,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
	}},

	// LD4  { <Vt>.S, <Vt2>.S, <Vt3>.S, <Vt4>.S }[<index>], [<Xn|SP>], <Xm>
	{AVLD4, aLD4, FEAT_NONE, 0xde0a000, 0xbfe0ec00, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
	}},

	// LD4  { <Vt>.D, <Vt2>.D, <Vt3>.D, <Vt4>.D }[<index>], [<Xn|SP>], #32
	{AVLD4, aLD4, FEAT_NONE, 0xdffa400, 0xbffffc00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_32,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
	}},

	// LD4  { <Vt>.D, <Vt2>.D, <Vt3>.D, <Vt4>.D }[<index>], [<Xn|SP>], <Xm>
	{AVLD4, aLD4, FEAT_NONE, 0xde0a400, 0xbfe0fc00, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
	}},

	// LD4B  { <Zt1>.B, <Zt2>.B, <Zt3>.B, <Zt4>.B }, <Pg>/Z, [<Xn|SP>, <Xm>]
	{AZLD4B, aLD4B, FEAT_NONE, 0xa460c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_B,
		}},
	}},

	// LD4B  { <Zt1>.B, <Zt2>.B, <Zt3>.B, <Zt4>.B }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD4B, aLD4B, FEAT_NONE, 0xa460e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_B,
		}},
	}},

	// LD4D  { <Zt1>.D, <Zt2>.D, <Zt3>.D, <Zt4>.D }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLD4D, aLD4D, FEAT_NONE, 0xa5e0c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_D,
		}},
	}},

	// LD4D  { <Zt1>.D, <Zt2>.D, <Zt3>.D, <Zt4>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD4D, aLD4D, FEAT_NONE, 0xa5e0e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_D,
		}},
	}},

	// LD4H  { <Zt1>.H, <Zt2>.H, <Zt3>.H, <Zt4>.H }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLD4H, aLD4H, FEAT_NONE, 0xa4e0c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_H,
		}},
	}},

	// LD4H  { <Zt1>.H, <Zt2>.H, <Zt3>.H, <Zt4>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD4H, aLD4H, FEAT_NONE, 0xa4e0e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_H,
		}},
	}},

	// LD4Q  { <Zt1>.Q, <Zt2>.Q, <Zt3>.Q, <Zt4>.Q }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD4Q, aLD4Q, FEAT_SVE2p1, 0xa590e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_Q,
		}},
	}},

	// LD4Q  { <Zt1>.Q, <Zt2>.Q, <Zt3>.Q, <Zt4>.Q }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #4]
	{AZLD4Q, aLD4Q, FEAT_SVE2p1, 0xa5a08000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_Q,
		}},
	}},

	// LD4R  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>]
	{AVLD4R, aLD4R, FEAT_NONE, 0xd60e000, 0xbffff000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD4R  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <imm>
	{AVLD4R, aLD4R, FEAT_NONE, 0xdffe000, 0xbffff000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm__size__4_8_16_32,
		}},
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD4R  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <Xm>
	{AVLD4R, aLD4R, FEAT_NONE, 0xde0e000, 0xbfe0f000, false, []arg{
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// LD4W  { <Zt1>.S, <Zt2>.S, <Zt3>.S, <Zt4>.S }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLD4W, aLD4W, FEAT_NONE, 0xa560c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_S,
		}},
	}},

	// LD4W  { <Zt1>.S, <Zt2>.S, <Zt3>.S, <Zt4>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLD4W, aLD4W, FEAT_NONE, 0xa560e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_S,
		}},
	}},

	// LD64B  <Xt>, [<Xn|SP> {,#0}]
	{ALD64B, aLD64B, FEAT_LS64, 0xf83fd000, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDADD  <Ws>, <Wt>, [<Xn|SP>]
	{ALDADDW, aLDADD, FEAT_LSE, 0xb8200000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDADDA  <Ws>, <Wt>, [<Xn|SP>]
	{ALDADDAW, aLDADDA, FEAT_LSE, 0xb8a00000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDADDAL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDADDALW, aLDADDAL, FEAT_LSE, 0xb8e00000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDADDL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDADDLW, aLDADDL, FEAT_LSE, 0xb8600000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDADD  <Xs>, <Xt>, [<Xn|SP>]
	{ALDADDD, aLDADD, FEAT_LSE, 0xf8200000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDADDA  <Xs>, <Xt>, [<Xn|SP>]
	{ALDADDAD, aLDADDA, FEAT_LSE, 0xf8a00000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDADDAL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDADDALD, aLDADDAL, FEAT_LSE, 0xf8e00000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDADDL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDADDLD, aLDADDL, FEAT_LSE, 0xf8600000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDADDAB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDADDAB, aLDADDAB, FEAT_LSE, 0x38a00000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDADDALB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDADDALB, aLDADDALB, FEAT_LSE, 0x38e00000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDADDB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDADDB, aLDADDB, FEAT_LSE, 0x38200000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDADDLB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDADDLB, aLDADDLB, FEAT_LSE, 0x38600000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDADDAH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDADDAH, aLDADDAH, FEAT_LSE, 0x78a00000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDADDALH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDADDALH, aLDADDALH, FEAT_LSE, 0x78e00000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDADDH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDADDH, aLDADDH, FEAT_LSE, 0x78200000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDADDLH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDADDLH, aLDADDLH, FEAT_LSE, 0x78600000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAP1  { <Vt>.D }[<index>], [<Xn|SP>]
	{AVLDAP1, aLDAP1, FEAT_LRCPC3, 0xd418400, 0xbffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_D,
			sa_index__Q,
		}},
	}},

	// LDAPR  <Wt>, [<Xn|SP> {,#0}]
	{ALDAPRW, aLDAPR, FEAT_LRCPC, 0xb8bfc000, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAPR  <Xt>, [<Xn|SP> {,#0}]
	{ALDAPR, aLDAPR, FEAT_LRCPC, 0xf8bfc000, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDAPR  <Wt>, [<Xn|SP>], #4
	{ALDAPRW, aLDAPR, FEAT_LRCPC3, 0x99c00800, 0xfffffc00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_4,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAPR  <Xt>, [<Xn|SP>], #8
	{ALDAPR, aLDAPR, FEAT_LRCPC3, 0xd9c00800, 0xfffffc00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_8,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDAPRB  <Wt>, [<Xn|SP> {,#0}]
	{ALDAPRB, aLDAPRB, FEAT_LRCPC, 0x38bfc000, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAPRH  <Wt>, [<Xn|SP> {,#0}]
	{ALDAPRH, aLDAPRH, FEAT_LRCPC, 0x78bfc000, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAPUR  <Wt>, [<Xn|SP>{, #<simm>}]
	{ALDAPURW, aLDAPUR, FEAT_LRCPC2, 0x99400000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAPUR  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDAPUR, aLDAPUR, FEAT_LRCPC2, 0xd9400000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDAPUR  <Bt>, [<Xn|SP>{, #<simm>}]
	{AFLDAPURB, aLDAPUR, FEAT_LRCPC3, 0x1d400800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_bt__Rt,
		}},
	}},

	// LDAPUR  <Ht>, [<Xn|SP>{, #<simm>}]
	{AFLDAPURH, aLDAPUR, FEAT_LRCPC3, 0x5d400800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_ht__Rt,
		}},
	}},

	// LDAPUR  <St>, [<Xn|SP>{, #<simm>}]
	{AFLDAPURS, aLDAPUR, FEAT_LRCPC3, 0x9d400800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_st__Rt,
		}},
	}},

	// LDAPUR  <Dt>, [<Xn|SP>{, #<simm>}]
	{AFLDAPURD, aLDAPUR, FEAT_LRCPC3, 0xdd400800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_dt__Rt,
		}},
	}},

	// LDAPUR  <Qt>, [<Xn|SP>{, #<simm>}]
	{AFLDAPURQ, aLDAPUR, FEAT_LRCPC3, 0x1dc00800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_qt__Rt,
		}},
	}},

	// LDAPURB  <Wt>, [<Xn|SP>{, #<simm>}]
	{ALDAPURB, aLDAPURB, FEAT_LRCPC2, 0x19400000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAPURH  <Wt>, [<Xn|SP>{, #<simm>}]
	{ALDAPURH, aLDAPURH, FEAT_LRCPC2, 0x59400000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAPURSB  <Wt>, [<Xn|SP>{, #<simm>}]
	{ALDAPURSBW, aLDAPURSB, FEAT_LRCPC2, 0x19c00000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAPURSB  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDAPURSB, aLDAPURSB, FEAT_LRCPC2, 0x19800000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDAPURSH  <Wt>, [<Xn|SP>{, #<simm>}]
	{ALDAPURSHW, aLDAPURSH, FEAT_LRCPC2, 0x59c00000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAPURSH  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDAPURSH, aLDAPURSH, FEAT_LRCPC2, 0x59800000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDAPURSW  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDAPURSW, aLDAPURSW, FEAT_LRCPC2, 0x99800000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDAR  <Wt>, [<Xn|SP>{,#0}]
	{ALDARW, aLDAR, FEAT_NONE, 0x88dffc00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAR  <Xt>, [<Xn|SP>{,#0}]
	{ALDAR, aLDAR, FEAT_NONE, 0xc8dffc00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDARB  <Wt>, [<Xn|SP>{,#0}]
	{ALDARB, aLDARB, FEAT_NONE, 0x8dffc00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDARH  <Wt>, [<Xn|SP>{,#0}]
	{ALDARH, aLDARH, FEAT_NONE, 0x48dffc00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAXP  <Wt1>, <Wt2>, [<Xn|SP>{,#0}]
	{ALDAXPW, aLDAXP, FEAT_NONE, 0x887f8000, 0xffff8000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
	}},

	// LDAXP  <Xt1>, <Xt2>, [<Xn|SP>{,#0}]
	{ALDAXP, aLDAXP, FEAT_NONE, 0xc87f8000, 0xffff8000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDAXR  <Wt>, [<Xn|SP>{,#0}]
	{ALDAXRW, aLDAXR, FEAT_NONE, 0x885ffc00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAXR  <Xt>, [<Xn|SP>{,#0}]
	{ALDAXR, aLDAXR, FEAT_NONE, 0xc85ffc00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDAXRB  <Wt>, [<Xn|SP>{,#0}]
	{ALDAXRB, aLDAXRB, FEAT_NONE, 0x85ffc00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDAXRH  <Wt>, [<Xn|SP>{,#0}]
	{ALDAXRH, aLDAXRH, FEAT_NONE, 0x485ffc00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDCLR  <Ws>, <Wt>, [<Xn|SP>]
	{ALDCLRW, aLDCLR, FEAT_LSE, 0xb8201000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDCLRA  <Ws>, <Wt>, [<Xn|SP>]
	{ALDCLRAW, aLDCLRA, FEAT_LSE, 0xb8a01000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDCLRAL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDCLRALW, aLDCLRAL, FEAT_LSE, 0xb8e01000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDCLRL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDCLRLW, aLDCLRL, FEAT_LSE, 0xb8601000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDCLR  <Xs>, <Xt>, [<Xn|SP>]
	{ALDCLRD, aLDCLR, FEAT_LSE, 0xf8201000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDCLRA  <Xs>, <Xt>, [<Xn|SP>]
	{ALDCLRAD, aLDCLRA, FEAT_LSE, 0xf8a01000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDCLRAL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDCLRALD, aLDCLRAL, FEAT_LSE, 0xf8e01000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDCLRL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDCLRLD, aLDCLRL, FEAT_LSE, 0xf8601000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDCLRAB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDCLRAB, aLDCLRAB, FEAT_LSE, 0x38a01000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDCLRALB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDCLRALB, aLDCLRALB, FEAT_LSE, 0x38e01000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDCLRB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDCLRB, aLDCLRB, FEAT_LSE, 0x38201000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDCLRLB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDCLRLB, aLDCLRLB, FEAT_LSE, 0x38601000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDCLRAH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDCLRAH, aLDCLRAH, FEAT_LSE, 0x78a01000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDCLRALH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDCLRALH, aLDCLRALH, FEAT_LSE, 0x78e01000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDCLRH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDCLRH, aLDCLRH, FEAT_LSE, 0x78201000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDCLRLH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDCLRLH, aLDCLRLH, FEAT_LSE, 0x78601000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDCLRP  <Xt1>, <Xt2>, [<Xn|SP>]
	{ALDCLRP, aLDCLRP, FEAT_LSE128, 0x19201000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDCLRPA  <Xt1>, <Xt2>, [<Xn|SP>]
	{ALDCLRPA, aLDCLRPA, FEAT_LSE128, 0x19a01000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDCLRPAL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ALDCLRPAL, aLDCLRPAL, FEAT_LSE128, 0x19e01000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDCLRPL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ALDCLRPL, aLDCLRPL, FEAT_LSE128, 0x19601000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDEOR  <Ws>, <Wt>, [<Xn|SP>]
	{ALDEORW, aLDEOR, FEAT_LSE, 0xb8202000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDEORA  <Ws>, <Wt>, [<Xn|SP>]
	{ALDEORAW, aLDEORA, FEAT_LSE, 0xb8a02000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDEORAL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDEORALW, aLDEORAL, FEAT_LSE, 0xb8e02000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDEORL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDEORLW, aLDEORL, FEAT_LSE, 0xb8602000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDEOR  <Xs>, <Xt>, [<Xn|SP>]
	{ALDEORD, aLDEOR, FEAT_LSE, 0xf8202000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDEORA  <Xs>, <Xt>, [<Xn|SP>]
	{ALDEORAD, aLDEORA, FEAT_LSE, 0xf8a02000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDEORAL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDEORALD, aLDEORAL, FEAT_LSE, 0xf8e02000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDEORL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDEORLD, aLDEORL, FEAT_LSE, 0xf8602000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDEORAB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDEORAB, aLDEORAB, FEAT_LSE, 0x38a02000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDEORALB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDEORALB, aLDEORALB, FEAT_LSE, 0x38e02000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDEORB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDEORB, aLDEORB, FEAT_LSE, 0x38202000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDEORLB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDEORLB, aLDEORLB, FEAT_LSE, 0x38602000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDEORAH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDEORAH, aLDEORAH, FEAT_LSE, 0x78a02000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDEORALH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDEORALH, aLDEORALH, FEAT_LSE, 0x78e02000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDEORH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDEORH, aLDEORH, FEAT_LSE, 0x78202000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDEORLH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDEORLH, aLDEORLH, FEAT_LSE, 0x78602000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDFF1B  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, #<imm>}]
	{AZLDFF1B, aLDFF1B, FEAT_NONE, 0x8420e000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1B  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLDFF1B, aLDFF1B, FEAT_NONE, 0xc420e000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1B  { <Zt>.B }, <Pg>/Z, [<Xn|SP>{, <Xm>}]
	{AZLDFF1B, aLDFF1B, FEAT_NONE, 0xa4006000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_B,
		}},
	}},

	// LDFF1B  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, <Xm>}]
	{AZLDFF1B, aLDFF1B, FEAT_NONE, 0xa4206000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LDFF1B  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, <Xm>}]
	{AZLDFF1B, aLDFF1B, FEAT_NONE, 0xa4406000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1B  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, <Xm>}]
	{AZLDFF1B, aLDFF1B, FEAT_NONE, 0xa4606000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1B  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLDFF1B, aLDFF1B, FEAT_NONE, 0xc4006000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1B  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod>]
	{AZLDFF1B, aLDFF1B, FEAT_NONE, 0x84006000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1B  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLDFF1B, aLDFF1B, FEAT_NONE, 0xc440e000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, <Xm>, LSL #3}]
	{AZLDFF1D, aLDFF1D, FEAT_NONE, 0xa5e06000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod> #3]
	{AZLDFF1D, aLDFF1D, FEAT_NONE, 0xc5a06000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLDFF1D, aLDFF1D, FEAT_NONE, 0xc5806000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, LSL #3]
	{AZLDFF1D, aLDFF1D, FEAT_NONE, 0xc5e0e000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLDFF1D, aLDFF1D, FEAT_NONE, 0xc5c0e000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1D  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLDFF1D, aLDFF1D, FEAT_NONE, 0xc5a0e000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1H  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod> #1]
	{AZLDFF1H, aLDFF1H, FEAT_NONE, 0x84a06000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1H  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod> #1]
	{AZLDFF1H, aLDFF1H, FEAT_NONE, 0xc4a06000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1H  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLDFF1H, aLDFF1H, FEAT_NONE, 0xc4806000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1H  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod>]
	{AZLDFF1H, aLDFF1H, FEAT_NONE, 0x84806000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1H  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, LSL #1]
	{AZLDFF1H, aLDFF1H, FEAT_NONE, 0xc4e0e000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1H  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLDFF1H, aLDFF1H, FEAT_NONE, 0xc4c0e000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1H  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, #<imm>}]
	{AZLDFF1H, aLDFF1H, FEAT_NONE, 0x84a0e000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1H  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLDFF1H, aLDFF1H, FEAT_NONE, 0xc4a0e000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1H  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, <Xm>, LSL #1}]
	{AZLDFF1H, aLDFF1H, FEAT_NONE, 0xa4a06000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LDFF1H  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, <Xm>, LSL #1}]
	{AZLDFF1H, aLDFF1H, FEAT_NONE, 0xa4c06000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1H  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, <Xm>, LSL #1}]
	{AZLDFF1H, aLDFF1H, FEAT_NONE, 0xa4e06000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SB  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, #<imm>}]
	{AZLDFF1SB, aLDFF1SB, FEAT_NONE, 0x8420a000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1SB  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLDFF1SB, aLDFF1SB, FEAT_NONE, 0xc420a000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SB  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, <Xm>}]
	{AZLDFF1SB, aLDFF1SB, FEAT_NONE, 0xa5c06000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LDFF1SB  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, <Xm>}]
	{AZLDFF1SB, aLDFF1SB, FEAT_NONE, 0xa5a06000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1SB  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, <Xm>}]
	{AZLDFF1SB, aLDFF1SB, FEAT_NONE, 0xa5806000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SB  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLDFF1SB, aLDFF1SB, FEAT_NONE, 0xc4002000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SB  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod>]
	{AZLDFF1SB, aLDFF1SB, FEAT_NONE, 0x84002000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1SB  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLDFF1SB, aLDFF1SB, FEAT_NONE, 0xc440a000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SH  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod> #1]
	{AZLDFF1SH, aLDFF1SH, FEAT_NONE, 0x84a02000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1SH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod> #1]
	{AZLDFF1SH, aLDFF1SH, FEAT_NONE, 0xc4a02000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLDFF1SH, aLDFF1SH, FEAT_NONE, 0xc4802000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SH  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod>]
	{AZLDFF1SH, aLDFF1SH, FEAT_NONE, 0x84802000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1SH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, LSL #1]
	{AZLDFF1SH, aLDFF1SH, FEAT_NONE, 0xc4e0a000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLDFF1SH, aLDFF1SH, FEAT_NONE, 0xc4c0a000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SH  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, #<imm>}]
	{AZLDFF1SH, aLDFF1SH, FEAT_NONE, 0x84a0a000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1SH  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLDFF1SH, aLDFF1SH, FEAT_NONE, 0xc4a0a000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SH  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, <Xm>, LSL #1}]
	{AZLDFF1SH, aLDFF1SH, FEAT_NONE, 0xa5206000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1SH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, <Xm>, LSL #1}]
	{AZLDFF1SH, aLDFF1SH, FEAT_NONE, 0xa5006000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, <Xm>, LSL #2}]
	{AZLDFF1SW, aLDFF1SW, FEAT_NONE, 0xa4806000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod> #2]
	{AZLDFF1SW, aLDFF1SW, FEAT_NONE, 0xc5202000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLDFF1SW, aLDFF1SW, FEAT_NONE, 0xc5002000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, LSL #2]
	{AZLDFF1SW, aLDFF1SW, FEAT_NONE, 0xc560a000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLDFF1SW, aLDFF1SW, FEAT_NONE, 0xc540a000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1SW  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLDFF1SW, aLDFF1SW, FEAT_NONE, 0xc520a000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1W  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod> #2]
	{AZLDFF1W, aLDFF1W, FEAT_NONE, 0x85206000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1W  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod> #2]
	{AZLDFF1W, aLDFF1W, FEAT_NONE, 0xc5206000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1W  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, <mod>]
	{AZLDFF1W, aLDFF1W, FEAT_NONE, 0xc5006000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1W  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Zm>.S, <mod>]
	{AZLDFF1W, aLDFF1W, FEAT_NONE, 0x85006000, 0xffa0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1W  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D, LSL #2]
	{AZLDFF1W, aLDFF1W, FEAT_NONE, 0xc560e000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1W  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Zm>.D]
	{AZLDFF1W, aLDFF1W, FEAT_NONE, 0xc540e000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1W  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, #<imm>}]
	{AZLDFF1W, aLDFF1W, FEAT_NONE, 0x8520e000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1W  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, #<imm>}]
	{AZLDFF1W, aLDFF1W, FEAT_NONE, 0xc520e000, 0xffe0e000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDFF1W  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, <Xm>, LSL #2}]
	{AZLDFF1W, aLDFF1W, FEAT_NONE, 0xa5406000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDFF1W  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, <Xm>, LSL #2}]
	{AZLDFF1W, aLDFF1W, FEAT_NONE, 0xa5606000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDG  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDG, aLDG, FEAT_MTE, 0xd9600000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Xn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Xt,
		}},
	}},

	// LDGM  <Xt>, [<Xn|SP>]
	{ALDGM, aLDGM, FEAT_MTE2, 0xd9e00000, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Xn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Xt,
		}},
	}},

	// LDIAPP  <Wt1>, <Wt2>, [<Xn|SP>]
	{ALDIAPPW, aLDIAPP, FEAT_LRCPC3, 0x99401800, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
	}},

	// LDIAPP  <Wt1>, <Wt2>, [<Xn|SP>], #8
	{ALDIAPPW, aLDIAPP, FEAT_LRCPC3, 0x99400800, 0xffe0fc00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_8,
		}},
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
	}},

	// LDIAPP  <Xt1>, <Xt2>, [<Xn|SP>]
	{ALDIAPP, aLDIAPP, FEAT_LRCPC3, 0xd9401800, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDIAPP  <Xt1>, <Xt2>, [<Xn|SP>], #16
	{ALDIAPP, aLDIAPP, FEAT_LRCPC3, 0xd9400800, 0xffe0fc00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_16,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDLAR  <Wt>, [<Xn|SP>{,#0}]
	{ALDLARW, aLDLAR, FEAT_LOR, 0x88df7c00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDLAR  <Xt>, [<Xn|SP>{,#0}]
	{ALDLAR, aLDLAR, FEAT_LOR, 0xc8df7c00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDLARB  <Wt>, [<Xn|SP>{,#0}]
	{ALDLARB, aLDLARB, FEAT_LOR, 0x8df7c00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDLARH  <Wt>, [<Xn|SP>{,#0}]
	{ALDLARH, aLDLARH, FEAT_LOR, 0x48df7c00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDNF1B  { <Zt>.B }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1B, aLDNF1B, FEAT_NONE, 0xa410a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_B,
		}},
	}},

	// LDNF1B  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1B, aLDNF1B, FEAT_NONE, 0xa430a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LDNF1B  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1B, aLDNF1B, FEAT_NONE, 0xa450a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDNF1B  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1B, aLDNF1B, FEAT_NONE, 0xa470a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNF1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1D, aLDNF1D, FEAT_NONE, 0xa5f0a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNF1H  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1H, aLDNF1H, FEAT_NONE, 0xa4b0a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LDNF1H  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1H, aLDNF1H, FEAT_NONE, 0xa4d0a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDNF1H  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1H, aLDNF1H, FEAT_NONE, 0xa4f0a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNF1SB  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1SB, aLDNF1SB, FEAT_NONE, 0xa5d0a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LDNF1SB  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1SB, aLDNF1SB, FEAT_NONE, 0xa5b0a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDNF1SB  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1SB, aLDNF1SB, FEAT_NONE, 0xa590a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNF1SH  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1SH, aLDNF1SH, FEAT_NONE, 0xa530a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDNF1SH  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1SH, aLDNF1SH, FEAT_NONE, 0xa510a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNF1SW  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1SW, aLDNF1SW, FEAT_NONE, 0xa490a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNF1W  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1W, aLDNF1W, FEAT_NONE, 0xa550a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDNF1W  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNF1W, aLDNF1W, FEAT_NONE, 0xa570a000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNP  <Wt1>, <Wt2>, [<Xn|SP>{, #<imm>}]
	{ALDNPW, aLDNP, FEAT_NONE, 0x28400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
	}},

	// LDNP  <Xt1>, <Xt2>, [<Xn|SP>{, #<imm>}]
	{ALDNP, aLDNP, FEAT_NONE, 0xa8400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm_1__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDNP  <St1>, <St2>, [<Xn|SP>{, #<imm>}]
	{AFLDNPS, aLDNP, FEAT_NONE, 0x2c400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm_2__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_st1__Rt,
			sa_st2__Rt2,
		}},
	}},

	// LDNP  <Dt1>, <Dt2>, [<Xn|SP>{, #<imm>}]
	{AFLDNPD, aLDNP, FEAT_NONE, 0x6c400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_dt1__Rt,
			sa_dt2__Rt2,
		}},
	}},

	// LDNP  <Qt1>, <Qt2>, [<Xn|SP>{, #<imm>}]
	{AFLDNPQ, aLDNP, FEAT_NONE, 0xac400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm_1__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_qt1__Rt,
			sa_qt2__Rt2,
		}},
	}},

	// LDNT1B  { <Zt>.B }, <Pg>/Z, [<Xn|SP>, <Xm>]
	{AZLDNT1B, aLDNT1B, FEAT_NONE, 0xa400c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_B,
		}},
	}},

	// LDNT1B  { <Zt>.B }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1B, aLDNT1B, FEAT_NONE, 0xa400e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_B,
		}},
	}},

	// LDNT1B  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, <Xm>}]
	{AZLDNT1B, aLDNT1B, FEAT_NONE, 0x8400a000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_S_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDNT1B  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, <Xm>}]
	{AZLDNT1B, aLDNT1B, FEAT_NONE, 0xc400c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNT1B  { <Zt1>.B-<Zt2>.B }, <PNg>/Z, [<Xn|SP>, <Xm>]
	{AZLDNT1B, aLDNT1B, FEAT_SVE2p1, 0xa0000001, 0xffe0e001, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_B,
		}},
	}},

	// LDNT1B  { <Zt1>.B-<Zt4>.B }, <PNg>/Z, [<Xn|SP>, <Xm>]
	{AZLDNT1B, aLDNT1B, FEAT_SVE2p1, 0xa0008001, 0xffe0e003, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_B,
		}},
	}},

	// LDNT1B  { <Zt1>.B-<Zt2>.B }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1B, aLDNT1B, FEAT_SVE2p1, 0xa0400001, 0xfff0e001, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_B,
		}},
	}},

	// LDNT1B  { <Zt1>.B-<Zt4>.B }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1B, aLDNT1B, FEAT_SVE2p1, 0xa0408001, 0xfff0e003, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_B,
		}},
	}},

	// LDNT1B  { <Zt1>.B, <Zt2>.B }, <PNg>/Z, [<Xn|SP>, <Xm>]
	{AZLDNT1B, aLDNT1B, FEAT_SME2, 0xa1000008, 0xffe0e008, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_B,
		}},
	}},

	// LDNT1B  { <Zt1>.B, <Zt2>.B, <Zt3>.B, <Zt4>.B }, <PNg>/Z, [<Xn|SP>, <Xm>]
	{AZLDNT1B, aLDNT1B, FEAT_SME2, 0xa1008008, 0xffe0e00c, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_B,
		}},
	}},

	// LDNT1B  { <Zt1>.B, <Zt2>.B }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1B, aLDNT1B, FEAT_SME2, 0xa1400008, 0xfff0e008, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_B,
		}},
	}},

	// LDNT1B  { <Zt1>.B, <Zt2>.B, <Zt3>.B, <Zt4>.B }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1B, aLDNT1B, FEAT_SME2, 0xa1408008, 0xfff0e00c, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_B,
		}},
	}},

	// LDNT1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLDNT1D, aLDNT1D, FEAT_NONE, 0xa580c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNT1D  { <Zt>.D }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1D, aLDNT1D, FEAT_NONE, 0xa580e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNT1D  { <Zt1>.D-<Zt2>.D }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLDNT1D, aLDNT1D, FEAT_SVE2p1, 0xa0006001, 0xffe0e001, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_D,
		}},
	}},

	// LDNT1D  { <Zt1>.D-<Zt4>.D }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLDNT1D, aLDNT1D, FEAT_SVE2p1, 0xa000e001, 0xffe0e003, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_D,
		}},
	}},

	// LDNT1D  { <Zt1>.D-<Zt2>.D }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1D, aLDNT1D, FEAT_SVE2p1, 0xa0406001, 0xfff0e001, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_D,
		}},
	}},

	// LDNT1D  { <Zt1>.D-<Zt4>.D }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1D, aLDNT1D, FEAT_SVE2p1, 0xa040e001, 0xfff0e003, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_D,
		}},
	}},

	// LDNT1D  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, <Xm>}]
	{AZLDNT1D, aLDNT1D, FEAT_NONE, 0xc580c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNT1D  { <Zt1>.D, <Zt2>.D }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLDNT1D, aLDNT1D, FEAT_SME2, 0xa1006008, 0xffe0e008, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_D,
		}},
	}},

	// LDNT1D  { <Zt1>.D, <Zt2>.D, <Zt3>.D, <Zt4>.D }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #3]
	{AZLDNT1D, aLDNT1D, FEAT_SME2, 0xa100e008, 0xffe0e00c, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_D,
		}},
	}},

	// LDNT1D  { <Zt1>.D, <Zt2>.D }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1D, aLDNT1D, FEAT_SME2, 0xa1406008, 0xfff0e008, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_D,
		}},
	}},

	// LDNT1D  { <Zt1>.D, <Zt2>.D, <Zt3>.D, <Zt4>.D }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1D, aLDNT1D, FEAT_SME2, 0xa140e008, 0xfff0e00c, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_D,
		}},
	}},

	// LDNT1H  { <Zt>.H }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLDNT1H, aLDNT1H, FEAT_NONE, 0xa480c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LDNT1H  { <Zt>.H }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1H, aLDNT1H, FEAT_NONE, 0xa480e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
	}},

	// LDNT1H  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, <Xm>}]
	{AZLDNT1H, aLDNT1H, FEAT_NONE, 0x8480a000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_S_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDNT1H  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, <Xm>}]
	{AZLDNT1H, aLDNT1H, FEAT_NONE, 0xc480c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNT1H  { <Zt1>.H-<Zt2>.H }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLDNT1H, aLDNT1H, FEAT_SVE2p1, 0xa0002001, 0xffe0e001, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_H,
		}},
	}},

	// LDNT1H  { <Zt1>.H-<Zt4>.H }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLDNT1H, aLDNT1H, FEAT_SVE2p1, 0xa000a001, 0xffe0e003, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_H,
		}},
	}},

	// LDNT1H  { <Zt1>.H-<Zt2>.H }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1H, aLDNT1H, FEAT_SVE2p1, 0xa0402001, 0xfff0e001, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_H,
		}},
	}},

	// LDNT1H  { <Zt1>.H-<Zt4>.H }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1H, aLDNT1H, FEAT_SVE2p1, 0xa040a001, 0xfff0e003, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_H,
		}},
	}},

	// LDNT1H  { <Zt1>.H, <Zt2>.H }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLDNT1H, aLDNT1H, FEAT_SME2, 0xa1002008, 0xffe0e008, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_H,
		}},
	}},

	// LDNT1H  { <Zt1>.H, <Zt2>.H, <Zt3>.H, <Zt4>.H }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #1]
	{AZLDNT1H, aLDNT1H, FEAT_SME2, 0xa100a008, 0xffe0e00c, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_H,
		}},
	}},

	// LDNT1H  { <Zt1>.H, <Zt2>.H }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1H, aLDNT1H, FEAT_SME2, 0xa1402008, 0xfff0e008, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_H,
		}},
	}},

	// LDNT1H  { <Zt1>.H, <Zt2>.H, <Zt3>.H, <Zt4>.H }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1H, aLDNT1H, FEAT_SME2, 0xa140a008, 0xfff0e00c, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_H,
		}},
	}},

	// LDNT1SB  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, <Xm>}]
	{AZLDNT1SB, aLDNT1SB, FEAT_NONE, 0x84008000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_S_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDNT1SB  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, <Xm>}]
	{AZLDNT1SB, aLDNT1SB, FEAT_NONE, 0xc4008000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNT1SH  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, <Xm>}]
	{AZLDNT1SH, aLDNT1SH, FEAT_NONE, 0x84808000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_S_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDNT1SH  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, <Xm>}]
	{AZLDNT1SH, aLDNT1SH, FEAT_NONE, 0xc4808000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNT1SW  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, <Xm>}]
	{AZLDNT1SW, aLDNT1SW, FEAT_NONE, 0xc5008000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNT1W  { <Zt>.S }, <Pg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLDNT1W, aLDNT1W, FEAT_NONE, 0xa500c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDNT1W  { <Zt>.S }, <Pg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1W, aLDNT1W, FEAT_NONE, 0xa500e000, 0xfff0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDNT1W  { <Zt>.S }, <Pg>/Z, [<Zn>.S{, <Xm>}]
	{AZLDNT1W, aLDNT1W, FEAT_NONE, 0x8500a000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_S_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
	}},

	// LDNT1W  { <Zt>.D }, <Pg>/Z, [<Zn>.D{, <Xm>}]
	{AZLDNT1W, aLDNT1W, FEAT_NONE, 0xc500c000, 0xffe0e000, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
	}},

	// LDNT1W  { <Zt1>.S-<Zt2>.S }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLDNT1W, aLDNT1W, FEAT_SVE2p1, 0xa0004001, 0xffe0e001, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_S,
		}},
	}},

	// LDNT1W  { <Zt1>.S-<Zt4>.S }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLDNT1W, aLDNT1W, FEAT_SVE2p1, 0xa000c001, 0xffe0e003, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_S,
		}},
	}},

	// LDNT1W  { <Zt1>.S-<Zt2>.S }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1W, aLDNT1W, FEAT_SVE2p1, 0xa0404001, 0xfff0e001, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_S,
		}},
	}},

	// LDNT1W  { <Zt1>.S-<Zt4>.S }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1W, aLDNT1W, FEAT_SVE2p1, 0xa040c001, 0xfff0e003, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_S,
		}},
	}},

	// LDNT1W  { <Zt1>.S, <Zt2>.S }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLDNT1W, aLDNT1W, FEAT_SME2, 0xa1004008, 0xffe0e008, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_S,
		}},
	}},

	// LDNT1W  { <Zt1>.S, <Zt2>.S, <Zt3>.S, <Zt4>.S }, <PNg>/Z, [<Xn|SP>, <Xm>, LSL #2]
	{AZLDNT1W, aLDNT1W, FEAT_SME2, 0xa100c008, 0xffe0e00c, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_S,
		}},
	}},

	// LDNT1W  { <Zt1>.S, <Zt2>.S }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1W, aLDNT1W, FEAT_SME2, 0xa1404008, 0xfff0e008, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_S,
		}},
	}},

	// LDNT1W  { <Zt1>.S, <Zt2>.S, <Zt3>.S, <Zt4>.S }, <PNg>/Z, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDNT1W, aLDNT1W, FEAT_SME2, 0xa140c008, 0xfff0e00c, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
		{AC_PREGZ, []elmType{
			sa_png__PNg,
			sa_const_PREGZ_Z,
		}},
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_S,
		}},
	}},

	// LDP  <Wt1>, <Wt2>, [<Xn|SP>], #<imm>
	{ALDPW, aLDP, FEAT_NONE, 0x28c00000, 0xffc00000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
	}},

	// LDP  <Xt1>, <Xt2>, [<Xn|SP>], #<imm>
	{ALDP, aLDP, FEAT_NONE, 0xa8c00000, 0xffc00000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_3__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDP  <Wt1>, <Wt2>, [<Xn|SP>, #<imm>]!
	{ALDPW, aLDP, FEAT_NONE, 0x29c00000, 0xffc00000, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
	}},

	// LDP  <Xt1>, <Xt2>, [<Xn|SP>, #<imm>]!
	{ALDP, aLDP, FEAT_NONE, 0xa9c00000, 0xffc00000, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_3__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDP  <Wt1>, <Wt2>, [<Xn|SP>{, #<imm>}]
	{ALDPW, aLDP, FEAT_NONE, 0x29400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
	}},

	// LDP  <Xt1>, <Xt2>, [<Xn|SP>{, #<imm>}]
	{ALDP, aLDP, FEAT_NONE, 0xa9400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm_2__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDP  <St1>, <St2>, [<Xn|SP>], #<imm>
	{AFLDPS, aLDP, FEAT_NONE, 0x2cc00000, 0xffc00000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_5__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_st1__Rt,
			sa_st2__Rt2,
		}},
	}},

	// LDP  <Dt1>, <Dt2>, [<Xn|SP>], #<imm>
	{AFLDPD, aLDP, FEAT_NONE, 0x6cc00000, 0xffc00000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_dt1__Rt,
			sa_dt2__Rt2,
		}},
	}},

	// LDP  <Qt1>, <Qt2>, [<Xn|SP>], #<imm>
	{AFLDPQ, aLDP, FEAT_NONE, 0xacc00000, 0xffc00000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_3__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_qt1__Rt,
			sa_qt2__Rt2,
		}},
	}},

	// LDP  <St1>, <St2>, [<Xn|SP>, #<imm>]!
	{AFLDPS, aLDP, FEAT_NONE, 0x2dc00000, 0xffc00000, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_5__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_st1__Rt,
			sa_st2__Rt2,
		}},
	}},

	// LDP  <Dt1>, <Dt2>, [<Xn|SP>, #<imm>]!
	{AFLDPD, aLDP, FEAT_NONE, 0x6dc00000, 0xffc00000, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_dt1__Rt,
			sa_dt2__Rt2,
		}},
	}},

	// LDP  <Qt1>, <Qt2>, [<Xn|SP>, #<imm>]!
	{AFLDPQ, aLDP, FEAT_NONE, 0xadc00000, 0xffc00000, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_3__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_qt1__Rt,
			sa_qt2__Rt2,
		}},
	}},

	// LDP  <St1>, <St2>, [<Xn|SP>{, #<imm>}]
	{AFLDPS, aLDP, FEAT_NONE, 0x2d400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm_4__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_st1__Rt,
			sa_st2__Rt2,
		}},
	}},

	// LDP  <Dt1>, <Dt2>, [<Xn|SP>{, #<imm>}]
	{AFLDPD, aLDP, FEAT_NONE, 0x6d400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_dt1__Rt,
			sa_dt2__Rt2,
		}},
	}},

	// LDP  <Qt1>, <Qt2>, [<Xn|SP>{, #<imm>}]
	{AFLDPQ, aLDP, FEAT_NONE, 0xad400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm_2__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_qt1__Rt,
			sa_qt2__Rt2,
		}},
	}},

	// LDPSW  <Xt1>, <Xt2>, [<Xn|SP>], #<imm>
	{ALDPSW, aLDPSW, FEAT_NONE, 0x68c00000, 0xffc00000, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDPSW  <Xt1>, <Xt2>, [<Xn|SP>, #<imm>]!
	{ALDPSW, aLDPSW, FEAT_NONE, 0x69c00000, 0xffc00000, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDPSW  <Xt1>, <Xt2>, [<Xn|SP>{, #<imm>}]
	{ALDPSW, aLDPSW, FEAT_NONE, 0x69400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm7,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDR  <Wt>, <label>
	{AMOVWU, aLDR, FEAT_NONE, 0x18000000, 0xff000000, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDR  <Xt>, <label>
	{AMOVD, aLDR, FEAT_NONE, 0x58000000, 0xff000000, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDR  <Wt>, [<Xn|SP>], #<simm>
	{AMOVWU, aLDR, FEAT_NONE, 0xb8400400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDR  <Xt>, [<Xn|SP>], #<simm>
	{AMOVD, aLDR, FEAT_NONE, 0xf8400400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDR  <Wt>, [<Xn|SP>, #<simm>]!
	{AMOVWU, aLDR, FEAT_NONE, 0xb8400c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDR  <Xt>, [<Xn|SP>, #<simm>]!
	{AMOVD, aLDR, FEAT_NONE, 0xf8400c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDR  <Wt>, [<Xn|SP>{, #<pimm>}]
	{AMOVWU, aLDR, FEAT_NONE, 0xb9400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDR  <Xt>, [<Xn|SP>{, #<pimm>}]
	{AMOVD, aLDR, FEAT_NONE, 0xf9400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm_1__imm12,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDR  <Wt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AMOVWU, aLDR, FEAT_NONE, 0xb8600800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__LSL_SXTW_SXTX_UXTW,
			sa_amount__S__0_2,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDR  <Xt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AMOVD, aLDR, FEAT_NONE, 0xf8600800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__LSL_SXTW_SXTX_UXTW,
			sa_amount_1__S__0_3,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDR  <Bt>, [<Xn|SP>], #<simm>
	{AFMOVB, aLDR, FEAT_NONE, 0x3c400400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_bt__Rt,
		}},
	}},

	// LDR  <Ht>, [<Xn|SP>], #<simm>
	{AFMOVH, aLDR, FEAT_NONE, 0x7c400400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_ht__Rt,
		}},
	}},

	// LDR  <St>, [<Xn|SP>], #<simm>
	{AFMOVS, aLDR, FEAT_NONE, 0xbc400400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_st__Rt,
		}},
	}},

	// LDR  <Dt>, [<Xn|SP>], #<simm>
	{AFMOVD, aLDR, FEAT_NONE, 0xfc400400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_dt__Rt,
		}},
	}},

	// LDR  <Qt>, [<Xn|SP>], #<simm>
	{AFMOVQ, aLDR, FEAT_NONE, 0x3cc00400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_qt__Rt,
		}},
	}},

	// LDR  <Bt>, [<Xn|SP>, #<simm>]!
	{AFMOVB, aLDR, FEAT_NONE, 0x3c400c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_bt__Rt,
		}},
	}},

	// LDR  <Ht>, [<Xn|SP>, #<simm>]!
	{AFMOVH, aLDR, FEAT_NONE, 0x7c400c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_ht__Rt,
		}},
	}},

	// LDR  <St>, [<Xn|SP>, #<simm>]!
	{AFMOVS, aLDR, FEAT_NONE, 0xbc400c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_st__Rt,
		}},
	}},

	// LDR  <Dt>, [<Xn|SP>, #<simm>]!
	{AFMOVD, aLDR, FEAT_NONE, 0xfc400c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_dt__Rt,
		}},
	}},

	// LDR  <Qt>, [<Xn|SP>, #<simm>]!
	{AFMOVQ, aLDR, FEAT_NONE, 0x3cc00c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_qt__Rt,
		}},
	}},

	// LDR  <Bt>, [<Xn|SP>{, #<pimm>}]
	{AFMOVB, aLDR, FEAT_NONE, 0x3d400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
		{AC_FREG, []elmType{
			sa_bt__Rt,
		}},
	}},

	// LDR  <Ht>, [<Xn|SP>{, #<pimm>}]
	{AFMOVH, aLDR, FEAT_NONE, 0x7d400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm_2__imm12,
		}},
		{AC_FREG, []elmType{
			sa_ht__Rt,
		}},
	}},

	// LDR  <St>, [<Xn|SP>{, #<pimm>}]
	{AFMOVS, aLDR, FEAT_NONE, 0xbd400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm_4__imm12,
		}},
		{AC_FREG, []elmType{
			sa_st__Rt,
		}},
	}},

	// LDR  <Dt>, [<Xn|SP>{, #<pimm>}]
	{AFMOVD, aLDR, FEAT_NONE, 0xfd400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm_1__imm12,
		}},
		{AC_FREG, []elmType{
			sa_dt__Rt,
		}},
	}},

	// LDR  <Qt>, [<Xn|SP>{, #<pimm>}]
	{AFMOVQ, aLDR, FEAT_NONE, 0x3dc00000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm_3__imm12,
		}},
		{AC_FREG, []elmType{
			sa_qt__Rt,
		}},
	}},

	// LDR  <Bt>, [<Xn|SP>, (<Wm>|<Xm>), <extend> {<amount>}]
	{AFMOVB, aLDR, FEAT_NONE, 0x3c600800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__SXTW_SXTX_UXTW,
			sa_amount__S,
		}},
		{AC_FREG, []elmType{
			sa_bt__Rt,
		}},
	}},

	// LDR  <Ht>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AFMOVH, aLDR, FEAT_NONE, 0x7c600800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend_1__option__LSL_SXTW_SXTX_UXTW,
			sa_amount_2__S__0_1,
		}},
		{AC_FREG, []elmType{
			sa_ht__Rt,
		}},
	}},

	// LDR  <St>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AFMOVS, aLDR, FEAT_NONE, 0xbc600800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend_1__option__LSL_SXTW_SXTX_UXTW,
			sa_amount_4__S__0_2,
		}},
		{AC_FREG, []elmType{
			sa_st__Rt,
		}},
	}},

	// LDR  <Dt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AFMOVD, aLDR, FEAT_NONE, 0xfc600800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend_1__option__LSL_SXTW_SXTX_UXTW,
			sa_amount_1__S__0_3,
		}},
		{AC_FREG, []elmType{
			sa_dt__Rt,
		}},
	}},

	// LDR  <Qt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AFMOVQ, aLDR, FEAT_NONE, 0x3ce00800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend_1__option__LSL_SXTW_SXTX_UXTW,
			sa_amount_3__S__0_4,
		}},
		{AC_FREG, []elmType{
			sa_qt__Rt,
		}},
	}},

	// LDR  <St>, <label>
	{AFMOVS, aLDR, FEAT_NONE, 0x1c000000, 0xff000000, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
		{AC_FREG, []elmType{
			sa_st__Rt,
		}},
	}},

	// LDR  <Dt>, <label>
	{AFMOVD, aLDR, FEAT_NONE, 0x5c000000, 0xff000000, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
		{AC_FREG, []elmType{
			sa_dt__Rt,
		}},
	}},

	// LDR  <Qt>, <label>
	{AFMOVQ, aLDR, FEAT_NONE, 0x9c000000, 0xff000000, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
		{AC_FREG, []elmType{
			sa_qt__Rt,
		}},
	}},

	// LDR  <Pt>, [<Xn|SP>{, #<imm>, MUL VL}]
	{APLDR, aLDR, FEAT_NONE, 0x85800000, 0xffc0e010, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm9h_imm9l,
		}},
		{AC_PREG, []elmType{
			sa_pt__Pt,
		}},
	}},

	// LDR  <Zt>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZLDR, aLDR, FEAT_NONE, 0x85804000, 0xffc0e000, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm9h_imm9l,
		}},
		{AC_ZREG, []elmType{
			sa_zt__Zt,
		}},
	}},

	// LDR  ZA[<Wv>, <offs>], [<Xn|SP>{, #<offs>, MUL VL}]
	{AZLDR, aLDR, FEAT_SME, 0xe1000000, 0xffff9c10, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_offs__off4,
		}},
		{AC_ZAVECTORIDX, []elmType{
			sa_wv__Rv,
			sa_offs__off4,
		}},
	}},

	// LDR  ZT0, [<Xn|SP>]
	{AZLDR, aLDR, FEAT_SME2, 0xe11f8000, 0xfffffc1f, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_ZTREG, []elmType{
			sa_const_ZTREG_ZT0,
		}},
	}},

	// LDRAA  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDRAA, aLDRAA, FEAT_PAuth, 0xf8200400, 0xffa00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__S_imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRAA  <Xt>, [<Xn|SP>{, #<simm>}]!
	{ALDRAA, aLDRAA, FEAT_PAuth, 0xf8200c00, 0xffa00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__S_imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRAB  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDRAB, aLDRAB, FEAT_PAuth, 0xf8a00400, 0xffa00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__S_imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRAB  <Xt>, [<Xn|SP>{, #<simm>}]!
	{ALDRAB, aLDRAB, FEAT_PAuth, 0xf8a00c00, 0xffa00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__S_imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRB  <Wt>, [<Xn|SP>], #<simm>
	{AMOVBU, aLDRB, FEAT_NONE, 0x38400400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRB  <Wt>, [<Xn|SP>, #<simm>]!
	{AMOVBU, aLDRB, FEAT_NONE, 0x38400c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRB  <Wt>, [<Xn|SP>{, #<pimm>}]
	{AMOVBU, aLDRB, FEAT_NONE, 0x39400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRB  <Wt>, [<Xn|SP>, (<Wm>|<Xm>), <extend> {<amount>}]
	{AMOVBU, aLDRB, FEAT_NONE, 0x38600800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__SXTW_SXTX_UXTW,
			sa_amount__S,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRH  <Wt>, [<Xn|SP>], #<simm>
	{AMOVHU, aLDRH, FEAT_NONE, 0x78400400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRH  <Wt>, [<Xn|SP>, #<simm>]!
	{AMOVHU, aLDRH, FEAT_NONE, 0x78400c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRH  <Wt>, [<Xn|SP>{, #<pimm>}]
	{AMOVHU, aLDRH, FEAT_NONE, 0x79400000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRH  <Wt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AMOVHU, aLDRH, FEAT_NONE, 0x78600800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__LSL_SXTW_SXTX_UXTW,
			sa_amount__S__0_1,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRSB  <Wt>, [<Xn|SP>], #<simm>
	{AMOVBW, aLDRSB, FEAT_NONE, 0x38c00400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRSB  <Xt>, [<Xn|SP>], #<simm>
	{AMOVB, aLDRSB, FEAT_NONE, 0x38800400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRSB  <Wt>, [<Xn|SP>, #<simm>]!
	{AMOVBW, aLDRSB, FEAT_NONE, 0x38c00c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRSB  <Xt>, [<Xn|SP>, #<simm>]!
	{AMOVB, aLDRSB, FEAT_NONE, 0x38800c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRSB  <Wt>, [<Xn|SP>{, #<pimm>}]
	{AMOVBW, aLDRSB, FEAT_NONE, 0x39c00000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRSB  <Xt>, [<Xn|SP>{, #<pimm>}]
	{AMOVB, aLDRSB, FEAT_NONE, 0x39800000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRSB  <Wt>, [<Xn|SP>, (<Wm>|<Xm>), <extend> {<amount>}]
	{AMOVBW, aLDRSB, FEAT_NONE, 0x38e00800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__SXTW_SXTX_UXTW,
			sa_amount__S,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRSB  <Xt>, [<Xn|SP>, (<Wm>|<Xm>), <extend> {<amount>}]
	{AMOVB, aLDRSB, FEAT_NONE, 0x38a00800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__SXTW_SXTX_UXTW,
			sa_amount__S,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRSH  <Wt>, [<Xn|SP>], #<simm>
	{AMOVHW, aLDRSH, FEAT_NONE, 0x78c00400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRSH  <Xt>, [<Xn|SP>], #<simm>
	{AMOVH, aLDRSH, FEAT_NONE, 0x78800400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRSH  <Wt>, [<Xn|SP>, #<simm>]!
	{AMOVHW, aLDRSH, FEAT_NONE, 0x78c00c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRSH  <Xt>, [<Xn|SP>, #<simm>]!
	{AMOVH, aLDRSH, FEAT_NONE, 0x78800c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRSH  <Wt>, [<Xn|SP>{, #<pimm>}]
	{AMOVHW, aLDRSH, FEAT_NONE, 0x79c00000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRSH  <Xt>, [<Xn|SP>{, #<pimm>}]
	{AMOVH, aLDRSH, FEAT_NONE, 0x79800000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRSH  <Wt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AMOVHW, aLDRSH, FEAT_NONE, 0x78e00800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__LSL_SXTW_SXTX_UXTW,
			sa_amount__S__0_1,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDRSH  <Xt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AMOVH, aLDRSH, FEAT_NONE, 0x78a00800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__LSL_SXTW_SXTX_UXTW,
			sa_amount__S__0_1,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRSW  <Xt>, <label>
	{AMOVW, aLDRSW, FEAT_NONE, 0x98000000, 0xff000000, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRSW  <Xt>, [<Xn|SP>], #<simm>
	{AMOVW, aLDRSW, FEAT_NONE, 0xb8800400, 0xffe00c00, false, []arg{
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRSW  <Xt>, [<Xn|SP>, #<simm>]!
	{AMOVW, aLDRSW, FEAT_NONE, 0xb8800c00, 0xffe00c00, false, []arg{
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRSW  <Xt>, [<Xn|SP>{, #<pimm>}]
	{AMOVW, aLDRSW, FEAT_NONE, 0xb9800000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDRSW  <Xt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AMOVW, aLDRSW, FEAT_NONE, 0xb8a00800, 0xffe00c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__LSL_SXTW_SXTX_UXTW,
			sa_amount__S__0_2,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDSET  <Ws>, <Wt>, [<Xn|SP>]
	{ALDORW, aLDSET, FEAT_LSE, 0xb8203000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSETA  <Ws>, <Wt>, [<Xn|SP>]
	{ALDORAW, aLDSETA, FEAT_LSE, 0xb8a03000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSETAL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDORALW, aLDSETAL, FEAT_LSE, 0xb8e03000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSETL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDORLW, aLDSETL, FEAT_LSE, 0xb8603000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSET  <Xs>, <Xt>, [<Xn|SP>]
	{ALDORD, aLDSET, FEAT_LSE, 0xf8203000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDSETA  <Xs>, <Xt>, [<Xn|SP>]
	{ALDORAD, aLDSETA, FEAT_LSE, 0xf8a03000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDSETAL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDORALD, aLDSETAL, FEAT_LSE, 0xf8e03000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDSETL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDORLD, aLDSETL, FEAT_LSE, 0xf8603000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDSETAB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDORAB, aLDSETAB, FEAT_LSE, 0x38a03000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSETALB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDORALB, aLDSETALB, FEAT_LSE, 0x38e03000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSETB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDORB, aLDSETB, FEAT_LSE, 0x38203000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSETLB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDORLB, aLDSETLB, FEAT_LSE, 0x38603000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSETAH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDORAH, aLDSETAH, FEAT_LSE, 0x78a03000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSETALH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDORALH, aLDSETALH, FEAT_LSE, 0x78e03000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSETH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDORH, aLDSETH, FEAT_LSE, 0x78203000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSETLH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDORLH, aLDSETLH, FEAT_LSE, 0x78603000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSETP  <Xt1>, <Xt2>, [<Xn|SP>]
	{ALDORP, aLDSETP, FEAT_LSE128, 0x19203000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDSETPA  <Xt1>, <Xt2>, [<Xn|SP>]
	{ALDSETPA, aLDSETPA, FEAT_LSE128, 0x19a03000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDSETPAL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ALDSETPAL, aLDSETPAL, FEAT_LSE128, 0x19e03000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDSETPL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ALDSETPL, aLDSETPL, FEAT_LSE128, 0x19603000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDSMAX  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMAXW, aLDSMAX, FEAT_LSE, 0xb8204000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMAXA  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMAXAW, aLDSMAXA, FEAT_LSE, 0xb8a04000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMAXAL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMAXALW, aLDSMAXAL, FEAT_LSE, 0xb8e04000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMAXL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMAXLW, aLDSMAXL, FEAT_LSE, 0xb8604000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMAX  <Xs>, <Xt>, [<Xn|SP>]
	{ALDSMAXD, aLDSMAX, FEAT_LSE, 0xf8204000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDSMAXA  <Xs>, <Xt>, [<Xn|SP>]
	{ALDSMAXAD, aLDSMAXA, FEAT_LSE, 0xf8a04000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDSMAXAL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDSMAXALD, aLDSMAXAL, FEAT_LSE, 0xf8e04000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDSMAXL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDSMAXLD, aLDSMAXL, FEAT_LSE, 0xf8604000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDSMAXAB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMAXAB, aLDSMAXAB, FEAT_LSE, 0x38a04000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMAXALB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMAXALB, aLDSMAXALB, FEAT_LSE, 0x38e04000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMAXB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMAXB, aLDSMAXB, FEAT_LSE, 0x38204000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMAXLB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMAXLB, aLDSMAXLB, FEAT_LSE, 0x38604000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMAXAH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMAXAH, aLDSMAXAH, FEAT_LSE, 0x78a04000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMAXALH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMAXALH, aLDSMAXALH, FEAT_LSE, 0x78e04000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMAXH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMAXH, aLDSMAXH, FEAT_LSE, 0x78204000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMAXLH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMAXLH, aLDSMAXLH, FEAT_LSE, 0x78604000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMIN  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMINW, aLDSMIN, FEAT_LSE, 0xb8205000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMINA  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMINAW, aLDSMINA, FEAT_LSE, 0xb8a05000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMINAL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMINALW, aLDSMINAL, FEAT_LSE, 0xb8e05000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMINL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMINLW, aLDSMINL, FEAT_LSE, 0xb8605000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMIN  <Xs>, <Xt>, [<Xn|SP>]
	{ALDSMIND, aLDSMIN, FEAT_LSE, 0xf8205000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDSMINA  <Xs>, <Xt>, [<Xn|SP>]
	{ALDSMINAD, aLDSMINA, FEAT_LSE, 0xf8a05000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDSMINAL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDSMINALD, aLDSMINAL, FEAT_LSE, 0xf8e05000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDSMINL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDSMINLD, aLDSMINL, FEAT_LSE, 0xf8605000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDSMINAB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMINAB, aLDSMINAB, FEAT_LSE, 0x38a05000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMINALB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMINALB, aLDSMINALB, FEAT_LSE, 0x38e05000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMINB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMINB, aLDSMINB, FEAT_LSE, 0x38205000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMINLB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMINLB, aLDSMINLB, FEAT_LSE, 0x38605000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMINAH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMINAH, aLDSMINAH, FEAT_LSE, 0x78a05000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMINALH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMINALH, aLDSMINALH, FEAT_LSE, 0x78e05000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMINH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMINH, aLDSMINH, FEAT_LSE, 0x78205000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDSMINLH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDSMINLH, aLDSMINLH, FEAT_LSE, 0x78605000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDTR  <Wt>, [<Xn|SP>{, #<simm>}]
	{ALDTRW, aLDTR, FEAT_NONE, 0xb8400800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDTR  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDTR, aLDTR, FEAT_NONE, 0xf8400800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDTRB  <Wt>, [<Xn|SP>{, #<simm>}]
	{ALDTRB, aLDTRB, FEAT_NONE, 0x38400800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDTRH  <Wt>, [<Xn|SP>{, #<simm>}]
	{ALDTRH, aLDTRH, FEAT_NONE, 0x78400800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDTRSB  <Wt>, [<Xn|SP>{, #<simm>}]
	{ALDTRSBW, aLDTRSB, FEAT_NONE, 0x38c00800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDTRSB  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDTRSB, aLDTRSB, FEAT_NONE, 0x38800800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDTRSH  <Wt>, [<Xn|SP>{, #<simm>}]
	{ALDTRSHW, aLDTRSH, FEAT_NONE, 0x78c00800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDTRSH  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDTRSH, aLDTRSH, FEAT_NONE, 0x78800800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDTRSW  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDTRSW, aLDTRSW, FEAT_NONE, 0xb8800800, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDUMAX  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMAXW, aLDUMAX, FEAT_LSE, 0xb8206000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMAXA  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMAXAW, aLDUMAXA, FEAT_LSE, 0xb8a06000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMAXAL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMAXALW, aLDUMAXAL, FEAT_LSE, 0xb8e06000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMAXL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMAXLW, aLDUMAXL, FEAT_LSE, 0xb8606000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMAX  <Xs>, <Xt>, [<Xn|SP>]
	{ALDUMAXD, aLDUMAX, FEAT_LSE, 0xf8206000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDUMAXA  <Xs>, <Xt>, [<Xn|SP>]
	{ALDUMAXAD, aLDUMAXA, FEAT_LSE, 0xf8a06000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDUMAXAL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDUMAXALD, aLDUMAXAL, FEAT_LSE, 0xf8e06000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDUMAXL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDUMAXLD, aLDUMAXL, FEAT_LSE, 0xf8606000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDUMAXAB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMAXAB, aLDUMAXAB, FEAT_LSE, 0x38a06000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMAXALB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMAXALB, aLDUMAXALB, FEAT_LSE, 0x38e06000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMAXB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMAXB, aLDUMAXB, FEAT_LSE, 0x38206000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMAXLB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMAXLB, aLDUMAXLB, FEAT_LSE, 0x38606000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMAXAH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMAXAH, aLDUMAXAH, FEAT_LSE, 0x78a06000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMAXALH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMAXALH, aLDUMAXALH, FEAT_LSE, 0x78e06000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMAXH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMAXH, aLDUMAXH, FEAT_LSE, 0x78206000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMAXLH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMAXLH, aLDUMAXLH, FEAT_LSE, 0x78606000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMIN  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMINW, aLDUMIN, FEAT_LSE, 0xb8207000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMINA  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMINAW, aLDUMINA, FEAT_LSE, 0xb8a07000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMINAL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMINALW, aLDUMINAL, FEAT_LSE, 0xb8e07000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMINL  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMINLW, aLDUMINL, FEAT_LSE, 0xb8607000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMIN  <Xs>, <Xt>, [<Xn|SP>]
	{ALDUMIND, aLDUMIN, FEAT_LSE, 0xf8207000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDUMINA  <Xs>, <Xt>, [<Xn|SP>]
	{ALDUMINAD, aLDUMINA, FEAT_LSE, 0xf8a07000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDUMINAL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDUMINALD, aLDUMINAL, FEAT_LSE, 0xf8e07000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDUMINL  <Xs>, <Xt>, [<Xn|SP>]
	{ALDUMINLD, aLDUMINL, FEAT_LSE, 0xf8607000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDUMINAB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMINAB, aLDUMINAB, FEAT_LSE, 0x38a07000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMINALB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMINALB, aLDUMINALB, FEAT_LSE, 0x38e07000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMINB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMINB, aLDUMINB, FEAT_LSE, 0x38207000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMINLB  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMINLB, aLDUMINLB, FEAT_LSE, 0x38607000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMINAH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMINAH, aLDUMINAH, FEAT_LSE, 0x78a07000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMINALH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMINALH, aLDUMINALH, FEAT_LSE, 0x78e07000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMINH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMINH, aLDUMINH, FEAT_LSE, 0x78207000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUMINLH  <Ws>, <Wt>, [<Xn|SP>]
	{ALDUMINLH, aLDUMINLH, FEAT_LSE, 0x78607000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUR  <Wt>, [<Xn|SP>{, #<simm>}]
	{AMOVWU, aLDUR, FEAT_NONE, 0xb8400000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDUR  <Xt>, [<Xn|SP>{, #<simm>}]
	{AMOVD, aLDUR, FEAT_NONE, 0xf8400000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDUR  <Bt>, [<Xn|SP>{, #<simm>}]
	{AFMOVB, aLDUR, FEAT_NONE, 0x3c400000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_bt__Rt,
		}},
	}},

	// LDUR  <Ht>, [<Xn|SP>{, #<simm>}]
	{AFMOVH, aLDUR, FEAT_NONE, 0x7c400000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_ht__Rt,
		}},
	}},

	// LDUR  <St>, [<Xn|SP>{, #<simm>}]
	{AFMOVS, aLDUR, FEAT_NONE, 0xbc400000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_st__Rt,
		}},
	}},

	// LDUR  <Dt>, [<Xn|SP>{, #<simm>}]
	{AFMOVD, aLDUR, FEAT_NONE, 0xfc400000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_dt__Rt,
		}},
	}},

	// LDUR  <Qt>, [<Xn|SP>{, #<simm>}]
	{AFMOVQ, aLDUR, FEAT_NONE, 0x3cc00000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_FREG, []elmType{
			sa_qt__Rt,
		}},
	}},

	// LDURB  <Wt>, [<Xn|SP>{, #<simm>}]
	{AMOVBU, aLDURB, FEAT_NONE, 0x38400000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDURH  <Wt>, [<Xn|SP>{, #<simm>}]
	{AMOVHU, aLDURH, FEAT_NONE, 0x78400000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDURSB  <Wt>, [<Xn|SP>{, #<simm>}]
	{ALDURSBW, aLDURSB, FEAT_NONE, 0x38c00000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDURSB  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDURSB, aLDURSB, FEAT_NONE, 0x38800000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDURSH  <Wt>, [<Xn|SP>{, #<simm>}]
	{ALDURSHW, aLDURSH, FEAT_NONE, 0x78c00000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDURSH  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDURSH, aLDURSH, FEAT_NONE, 0x78800000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDURSW  <Xt>, [<Xn|SP>{, #<simm>}]
	{ALDURSW, aLDURSW, FEAT_NONE, 0xb8800000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDXP  <Wt1>, <Wt2>, [<Xn|SP>{,#0}]
	{ALDXPW, aLDXP, FEAT_NONE, 0x887f0000, 0xffff8000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
	}},

	// LDXP  <Xt1>, <Xt2>, [<Xn|SP>{,#0}]
	{ALDXP, aLDXP, FEAT_NONE, 0xc87f0000, 0xffff8000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// LDXR  <Wt>, [<Xn|SP>{,#0}]
	{ALDXRW, aLDXR, FEAT_NONE, 0x885f7c00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDXR  <Xt>, [<Xn|SP>{,#0}]
	{ALDXR, aLDXR, FEAT_NONE, 0xc85f7c00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// LDXRB  <Wt>, [<Xn|SP>{,#0}]
	{ALDXRB, aLDXRB, FEAT_NONE, 0x85f7c00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LDXRH  <Wt>, [<Xn|SP>{,#0}]
	{ALDXRH, aLDXRH, FEAT_NONE, 0x485f7c00, 0xfffffc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// LSL  <Wd>, <Wn>, <Wm>
	{ALSLW, aLSL, FEAT_NONE, 0x1ac02000, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// LSL  <Xd>, <Xn>, <Xm>
	{ALSL, aLSL, FEAT_NONE, 0x9ac02000, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// LSL  <Wd>, <Wn>, #<shift>
	{ALSLW, aLSL, FEAT_NONE, 0x53000000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_shift_1,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// LSL  <Xd>, <Xn>, #<shift>
	{ALSL, aLSL, FEAT_NONE, 0xd3400000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_shift_3,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// LSL  <Zd>.<T>, <Zn>.<T>, <Zm>.D
	{AZLSL, aLSL, FEAT_NONE, 0x4208c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// LSL  <Zd>.<T>, <Zn>.<T>, #<const>
	{AZLSL, aLSL, FEAT_NONE, 0x4209c00, 0xff20fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
	}},

	// LSL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, #<const>
	{AZLSL, aLSL, FEAT_NONE, 0x4038000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_9_2_imm3_7_3,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
	}},

	// LSL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZLSL, aLSL, FEAT_NONE, 0x4138000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// LSL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.D
	{AZLSL, aLSL, FEAT_NONE, 0x41b8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// LSLR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZLSLR, aLSLR, FEAT_NONE, 0x4178000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// LSLV  <Wd>, <Wn>, <Wm>
	{ALSLVW, aLSLV, FEAT_NONE, 0x1ac02000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// LSLV  <Xd>, <Xn>, <Xm>
	{ALSLV, aLSLV, FEAT_NONE, 0x9ac02000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// LSR  <Wd>, <Wn>, <Wm>
	{ALSRW, aLSR, FEAT_NONE, 0x1ac02400, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// LSR  <Xd>, <Xn>, <Xm>
	{ALSR, aLSR, FEAT_NONE, 0x9ac02400, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// LSR  <Wd>, <Wn>, #<shift>
	{ALSRW, aLSR, FEAT_NONE, 0x53007c00, 0xffc0fc00, true, []arg{
		{AC_IMM, []elmType{
			sa_shift__immr,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// LSR  <Xd>, <Xn>, #<shift>
	{ALSR, aLSR, FEAT_NONE, 0xd340fc00, 0xffc0fc00, true, []arg{
		{AC_IMM, []elmType{
			sa_shift_2__immr,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// LSR  <Zd>.<T>, <Zn>.<T>, <Zm>.D
	{AZLSR, aLSR, FEAT_NONE, 0x4208400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// LSR  <Zd>.<T>, <Zn>.<T>, #<const>
	{AZLSR, aLSR, FEAT_NONE, 0x4209400, 0xff20fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
	}},

	// LSR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, #<const>
	{AZLSR, aLSR, FEAT_NONE, 0x4018000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_9_2_imm3_7_3,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
	}},

	// LSR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZLSR, aLSR, FEAT_NONE, 0x4118000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// LSR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.D
	{AZLSR, aLSR, FEAT_NONE, 0x4198000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// LSRR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZLSRR, aLSRR, FEAT_NONE, 0x4158000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// LSRV  <Wd>, <Wn>, <Wm>
	{ALSRVW, aLSRV, FEAT_NONE, 0x1ac02400, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// LSRV  <Xd>, <Xn>, <Xm>
	{ALSRV, aLSRV, FEAT_NONE, 0x9ac02400, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// LUTI2  { <Zd1>.<T>-<Zd2>.<T> }, ZT0, <Zn>[<index>]
	{AZLUTI2, aLUTI2, FEAT_SME2, 0xc08c4000, 0xfffc4c01, false, []arg{
		{AC_REGIDX, []elmType{
			sa_zn__Zn,
			sa_index__i3,
		}},
		{AC_ZTREG, []elmType{
			sa_const_ZTREG_ZT0,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_t__size_13_2__B_H_S,
			sa_zd2__Zd,
			sa_t__size_13_2__B_H_S,
		}},
	}},

	// LUTI2  { <Zd1>.<T>, <Zd2>.<T> }, ZT0, <Zn>[<index>]
	{AZLUTI2, aLUTI2, FEAT_SME2p1, 0xc09c4000, 0xfffc4c08, false, []arg{
		{AC_REGIDX, []elmType{
			sa_zn__Zn,
			sa_index__i3,
		}},
		{AC_ZTREG, []elmType{
			sa_const_ZTREG_ZT0,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1_1__D_0_Zd,
			sa_t_1__size_0__B_H,
			sa_zd2_1__D_1_Zd,
			sa_t_1__size_0__B_H,
		}},
	}},

	// LUTI2  { <Zd1>.<T>-<Zd4>.<T> }, ZT0, <Zn>[<index>]
	{AZLUTI2, aLUTI2, FEAT_SME2, 0xc08c8000, 0xfffccc03, false, []arg{
		{AC_REGIDX, []elmType{
			sa_zn__Zn,
			sa_index__i2,
		}},
		{AC_ZTREG, []elmType{
			sa_const_ZTREG_ZT0,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_t__size_13_2__B_H_S,
			sa_zd4__Zd,
			sa_t__size_13_2__B_H_S,
		}},
	}},

	// LUTI2  { <Zd1>.<T>, <Zd2>.<T>, <Zd3>.<T>, <Zd4>.<T> }, ZT0, <Zn>[<index>]
	{AZLUTI2, aLUTI2, FEAT_SME2p1, 0xc09c8000, 0xfffccc0c, false, []arg{
		{AC_REGIDX, []elmType{
			sa_zn__Zn,
			sa_index__i2,
		}},
		{AC_ZTREG, []elmType{
			sa_const_ZTREG_ZT0,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__D_00_Zd,
			sa_t_1__size_0__B_H,
			sa_zd2__D_01_Zd,
			sa_t_1__size_0__B_H,
			sa_zd3__D_10_Zd,
			sa_t_1__size_0__B_H,
			sa_zd4_1__D_11_Zd,
			sa_t_1__size_0__B_H,
		}},
	}},

	// LUTI2  <Zd>.<T>, ZT0, <Zn>[<index>]
	{AZLUTI2, aLUTI2, FEAT_SME2, 0xc0cc0000, 0xfffc0c00, false, []arg{
		{AC_REGIDX, []elmType{
			sa_zn__Zn,
			sa_index__i4,
		}},
		{AC_ZTREG, []elmType{
			sa_const_ZTREG_ZT0,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_13_2__B_H_S,
		}},
	}},

	// LUTI4  { <Zd1>.<T>-<Zd2>.<T> }, ZT0, <Zn>[<index>]
	{AZLUTI4, aLUTI4, FEAT_SME2, 0xc08a4000, 0xfffe4c01, false, []arg{
		{AC_REGIDX, []elmType{
			sa_zn__Zn,
			sa_index__i2,
		}},
		{AC_ZTREG, []elmType{
			sa_const_ZTREG_ZT0,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_t__size_13_2__B_H_S,
			sa_zd2__Zd,
			sa_t__size_13_2__B_H_S,
		}},
	}},

	// LUTI4  { <Zd1>.<T>, <Zd2>.<T> }, ZT0, <Zn>[<index>]
	{AZLUTI4, aLUTI4, FEAT_SME2p1, 0xc09a4000, 0xfffe4c08, false, []arg{
		{AC_REGIDX, []elmType{
			sa_zn__Zn,
			sa_index__i2,
		}},
		{AC_ZTREG, []elmType{
			sa_const_ZTREG_ZT0,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1_1__D_0_Zd,
			sa_t_1__size_0__B_H,
			sa_zd2_1__D_1_Zd,
			sa_t_1__size_0__B_H,
		}},
	}},

	// LUTI4  { <Zd1>.<T>-<Zd4>.<T> }, ZT0, <Zn>[<index>]
	{AZLUTI4, aLUTI4, FEAT_SME2, 0xc08a8000, 0xfffecc03, false, []arg{
		{AC_REGIDX, []elmType{
			sa_zn__Zn,
			sa_index__i1,
		}},
		{AC_ZTREG, []elmType{
			sa_const_ZTREG_ZT0,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_t__size__H_S,
			sa_zd4__Zd,
			sa_t__size__H_S,
		}},
	}},

	// LUTI4  { <Zd1>.H, <Zd2>.H, <Zd3>.H, <Zd4>.H }, ZT0, <Zn>[<index>]
	{AZLUTI4, aLUTI4, FEAT_SME2p1, 0xc09a8000, 0xfffecc0c, false, []arg{
		{AC_REGIDX, []elmType{
			sa_zn__Zn,
			sa_index__i1,
		}},
		{AC_ZTREG, []elmType{
			sa_const_ZTREG_ZT0,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__D_00_Zd,
			sa_zd2__D_01_Zd,
			sa_zd3__D_10_Zd,
			sa_zd4_1__D_11_Zd,
			sa_const_REGLIST4_H,
		}},
	}},

	// LUTI4  <Zd>.<T>, ZT0, <Zn>[<index>]
	{AZLUTI4, aLUTI4, FEAT_SME2, 0xc0ca0000, 0xfffe0c00, false, []arg{
		{AC_REGIDX, []elmType{
			sa_zn__Zn,
			sa_index__i3,
		}},
		{AC_ZTREG, []elmType{
			sa_const_ZTREG_ZT0,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_13_2__B_H_S,
		}},
	}},

	// MAD  <Zdn>.<T>, <Pg>/M, <Zm>.<T>, <Za>.<T>
	{AZMAD, aMAD, FEAT_NONE, 0x400c000, 0xff20e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_za__Za,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MADD  <Wd>, <Wn>, <Wm>, <Wa>
	{AMADDW, aMADD, FEAT_NONE, 0x1b000000, 0xffe08000, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wa__Ra,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// MADD  <Xd>, <Xn>, <Xm>, <Xa>
	{AMADD, aMADD, FEAT_NONE, 0x9b000000, 0xffe08000, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xa__Ra,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// MATCH  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZMATCH, aMATCH, FEAT_NONE, 0x45208000, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size_0__B_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_0__B_H,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size_0__B_H,
		}},
	}},

	// MLA  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVMLA, aMLA, FEAT_NONE, 0xe209400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// MLA  <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]
	{AVMLA, aMLA, FEAT_NONE, 0x2f000000, 0xbf00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
	}},

	// MLA  <Zda>.<T>, <Pg>/M, <Zn>.<T>, <Zm>.<T>
	{AZMLA, aMLA, FEAT_NONE, 0x4004000, 0xff20e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MLA  <Zda>.H, <Zn>.H, <Zm>.H[<imm>]
	{AZMLA, aMLA, FEAT_NONE, 0x44200800, 0xffa0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_22_1_i3l_20_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_H,
		}},
	}},

	// MLA  <Zda>.S, <Zn>.S, <Zm>.S[<imm>]
	{AZMLA, aMLA, FEAT_NONE, 0x44a00800, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_S,
			sa_imm_2__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// MLA  <Zda>.D, <Zn>.D, <Zm>.D[<imm>]
	{AZMLA, aMLA, FEAT_NONE, 0x44e00800, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_imm__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// MLS  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVMLS, aMLS, FEAT_NONE, 0x2e209400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// MLS  <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]
	{AVMLS, aMLS, FEAT_NONE, 0x2f004000, 0xbf00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
	}},

	// MLS  <Zda>.<T>, <Pg>/M, <Zn>.<T>, <Zm>.<T>
	{AZMLS, aMLS, FEAT_NONE, 0x4006000, 0xff20e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MLS  <Zda>.H, <Zn>.H, <Zm>.H[<imm>]
	{AZMLS, aMLS, FEAT_NONE, 0x44200c00, 0xffa0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_22_1_i3l_20_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_H,
		}},
	}},

	// MLS  <Zda>.S, <Zn>.S, <Zm>.S[<imm>]
	{AZMLS, aMLS, FEAT_NONE, 0x44a00c00, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_S,
			sa_imm_2__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// MLS  <Zda>.D, <Zn>.D, <Zm>.D[<imm>]
	{AZMLS, aMLS, FEAT_NONE, 0x44e00c00, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_imm__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// MNEG  <Wd>, <Wn>, <Wm>
	{AMNEGW, aMNEG, FEAT_NONE, 0x1b00fc00, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// MNEG  <Xd>, <Xn>, <Xm>
	{AMNEG, aMNEG, FEAT_NONE, 0x9b00fc00, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// MOV  <Wd|WSP>, #<imm>
	{AMOVW, aMOV, FEAT_NONE, 0x320003e0, 0xffc003e0, true, []arg{
		{AC_IMM, []elmType{
			sa_imm_2__imms_immr,
		}},
		{AC_RSP, []elmType{
			sa_wd_wsp__Rd,
		}},
	}},

	// MOV  <Xd|SP>, #<imm>
	{AMOVD, aMOV, FEAT_NONE, 0xb20003e0, 0xff8003e0, true, []arg{
		{AC_IMM, []elmType{
			sa_imm_3__N_imms_immr,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// MOV  <Wd>, #<imm>
	{AMOVW, aMOV, FEAT_NONE, 0x52800000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_imm_1__imm16_hw,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// MOV  <Xd>, #<imm>
	{AMOVD, aMOV, FEAT_NONE, 0xd2800000, 0xff800000, true, []arg{
		{AC_IMM, []elmType{
			sa_imm_2__imm16_hw,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// MOV  <Wd|WSP>, <Wn|WSP>
	{AMOVWU, aMOV, FEAT_NONE, 0x11000000, 0xfffffc00, true, []arg{
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_wd_wsp__Rd,
		}},
	}},

	// MOV  <Xd|SP>, <Xn|SP>
	{AMOVD, aMOV, FEAT_NONE, 0x91000000, 0xfffffc00, true, []arg{
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// MOV  <Wd>, <Wm>
	{AMOVWU, aMOV, FEAT_NONE, 0x2a0003e0, 0xffe0ffe0, true, []arg{
		{AC_REG, []elmType{
			sa_wm_1__Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// MOV  <Xd>, <Xm>
	{AMOVD, aMOV, FEAT_NONE, 0xaa0003e0, 0xffe0ffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xm_1__Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// MOV  <Wd>, <Vn>.S[<index>]
	{AVMOV, aMOV, FEAT_NONE, 0xe043c00, 0xffe7fc00, true, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vn__Rn,
			sa_const_ARNGIDX_S,
			sa_index_2__imm5_4_3,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// MOV  <Xd>, <Vn>.D[<index>]
	{AVMOV, aMOV, FEAT_NONE, 0x4e083c00, 0xffeffc00, true, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vn__Rn,
			sa_const_ARNGIDX_D,
			sa_index_1__imm5_4,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// MOV  <Vd>.<T>, <Vn>.<T>
	{AVMOV, aMOV, FEAT_NONE, 0xea01c00, 0xbfe0fc00, true, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__8B_16B,
		}},
	}},

	// MOV  <Vd>.<Ts>[<index>], <R><n>
	{AVMOV, aMOV, FEAT_NONE, 0x4e001c00, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_r__imm5__W_X,
			sa_n__Rn,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vd__Rd,
			sa_ts__imm5__B_D_H_S,
			sa_index__imm5,
		}},
	}},

	// MOV  <V><d>, <Vn>.<T>[<index>]
	{AVMOV, aMOV, FEAT_NONE, 0x5e000400, 0xffe0fc00, true, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vn__Rn,
			sa_t_1__imm5__B_D_H_S,
			sa_index__imm5,
		}},
		{AC_VREG, []elmType{
			sa_v__imm5__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// MOV  <Vd>.<Ts>[<index1>], <Vn>.<Ts>[<index2>]
	{AVMOV, aMOV, FEAT_NONE, 0x6e000400, 0xffe08400, true, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vn__Rn,
			sa_ts__imm5__B_D_H_S,
			sa_index2__imm5_imm4,
		}},
		{AC_ARNGIDX, []elmType{
			sa_vd__Rd,
			sa_ts__imm5__B_D_H_S,
			sa_index1__imm5,
		}},
	}},

	// MOV  <Pd>.B, <Pn>.B
	{APMOV, aMOV, FEAT_NONE, 0x25804000, 0xfff0c210, true, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// MOV  <Pd>.B, <Pg>/Z, <Pn>.B
	{APMOV, aMOV, FEAT_NONE, 0x25004000, 0xfff0c210, true, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// MOV  <Pd>.B, <Pg>/M, <Pn>.B
	{APMOV, aMOV, FEAT_NONE, 0x25004210, 0xfff0c210, true, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// MOV  <Zd>.D, <Zn>.D
	{AZMOV, aMOV, FEAT_NONE, 0x4603000, 0xffe0fc00, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// MOV  <Zd>.<T>, <Zn>.<T>[<imm>]
	{AZMOV, aMOV, FEAT_NONE, 0x5202000, 0xff20fc00, true, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zn__Zn,
			sa_t__tsz__B_D_H_Q_S,
			sa_imm__imm2_tsz,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tsz__B_D_H_Q_S,
		}},
	}},

	// MOV  <Zd>.<T>, <R><n|SP>
	{AZMOV, aMOV, FEAT_NONE, 0x5203800, 0xff3ffc00, true, []arg{
		{AC_RSP, []elmType{
			sa_r__size__W_X,
			sa_n_sp__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MOV  <Zd>.<T>, #<const>
	{AZMOV, aMOV, FEAT_NONE, 0x5c00000, 0xfffc0000, true, []arg{
		{AC_IMM, []elmType{
			sa_const__imm13,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
	}},

	// MOV  <Zd>.<T>, #<imm>{, <shift>}
	{AZMOV, aMOV, FEAT_NONE, 0x2538c000, 0xff3fc000, true, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
			sa_shift__sh__LSL_0_LSL_8,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MOV  <Zd>.<T>, <Pg>/Z, #<imm>{, <shift>}
	{AZMOV, aMOV, FEAT_NONE, 0x5100000, 0xff30c000, true, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
			sa_shift__sh__LSL_0_LSL_8,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_19_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MOV  <Zd>.<T>, <Pg>/M, #<imm>{, <shift>}
	{AZMOV, aMOV, FEAT_NONE, 0x5104000, 0xff30c000, true, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
			sa_shift__sh__LSL_0_LSL_8,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_19_4,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MOV  <Zd>.<T>, <Pg>/M, <V><n>
	{AZMOV, aMOV, FEAT_NONE, 0x5208000, 0xff3fe000, true, []arg{
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Vn,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MOV  <Zd>.<T>, <Pv>/M, <Zn>.<T>
	{AZMOV, aMOV, FEAT_NONE, 0x520c000, 0xff20c000, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pv__Pv,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MOV  <Zd>.<T>, <Pg>/M, <R><n|SP>
	{AZMOV, aMOV, FEAT_NONE, 0x528a000, 0xff3fe000, true, []arg{
		{AC_RSP, []elmType{
			sa_r__size__W_X,
			sa_n_sp__Rn,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MOV  ZA0<HV>.B[<Ws>, <offs>], <Pg>/M, <Zn>.B
	{AZMOV, aMOV, FEAT_NONE, 0xc0000000, 0xffff0010, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_const_ZAHVTILEIDX_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_B,
			sa_ws__Rs,
			sa_offs__off4,
		}},
	}},

	// MOV  <ZAd><HV>.H[<Ws>, <offs>], <Pg>/M, <Zn>.H
	{AZMOV, aMOV, FEAT_NONE, 0xc0400000, 0xffff0010, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_zad_1__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_H,
			sa_ws__Rs,
			sa_offs_2__off3,
		}},
	}},

	// MOV  <ZAd><HV>.S[<Ws>, <offs>], <Pg>/M, <Zn>.S
	{AZMOV, aMOV, FEAT_NONE, 0xc0800000, 0xffff0010, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_zad_3__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_S,
			sa_ws__Rs,
			sa_offs_4__off2,
		}},
	}},

	// MOV  <ZAd><HV>.D[<Ws>, <offs>], <Pg>/M, <Zn>.D
	{AZMOV, aMOV, FEAT_NONE, 0xc0c00000, 0xffff0010, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_zad__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_D,
			sa_ws__Rs,
			sa_offs_1__o1,
		}},
	}},

	// MOV  <ZAd><HV>.Q[<Ws>, <offs>], <Pg>/M, <Zn>.Q
	{AZMOV, aMOV, FEAT_NONE, 0xc0c10000, 0xffff0010, true, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_Q,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_zad_2__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_Q,
			sa_ws__Rs,
			sa_offs_3,
		}},
	}},

	// MOV  <Zd>.B, <Pg>/M, ZA0<HV>.B[<Ws>, <offs>]
	{AZMOV, aMOV, FEAT_NONE, 0xc0020000, 0xffff0200, true, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_const_ZAHVTILEIDX_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_B,
			sa_ws__Rs,
			sa_offs__off4,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_B,
		}},
	}},

	// MOV  <Zd>.H, <Pg>/M, <ZAn><HV>.H[<Ws>, <offs>]
	{AZMOV, aMOV, FEAT_NONE, 0xc0420000, 0xffff0200, true, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zan_1__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_H,
			sa_ws__Rs,
			sa_offs_2__off3,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// MOV  <Zd>.S, <Pg>/M, <ZAn><HV>.S[<Ws>, <offs>]
	{AZMOV, aMOV, FEAT_NONE, 0xc0820000, 0xffff0200, true, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zan_3__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_S,
			sa_ws__Rs,
			sa_offs_4__off2,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// MOV  <Zd>.D, <Pg>/M, <ZAn><HV>.D[<Ws>, <offs>]
	{AZMOV, aMOV, FEAT_NONE, 0xc0c20000, 0xffff0200, true, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zan__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_D,
			sa_ws__Rs,
			sa_offs_1__o1,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// MOV  <Zd>.Q, <Pg>/M, <ZAn><HV>.Q[<Ws>, <offs>]
	{AZMOV, aMOV, FEAT_NONE, 0xc0c30000, 0xffff0200, true, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zan_2__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_Q,
			sa_ws__Rs,
			sa_offs_3,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_Q,
		}},
	}},

	// MOV  ZA0<HV>.B[<Ws>, <offsf>:<offsl>], { <Zn1>.B-<Zn2>.B }
	{AZMOV, aMOV, FEAT_NONE, 0xc0040000, 0xffff1c38, true, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_const_ZAHVTILESEL_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_B,
			sa_ws__Rs,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// MOV  <ZAd><HV>.H[<Ws>, <offsf>:<offsl>], { <Zn1>.H-<Zn2>.H }
	{AZMOV, aMOV, FEAT_NONE, 0xc0440000, 0xffff1c38, true, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_zad_1__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_H,
			sa_ws__Rs,
			sa_offsf_2__off2,
			sa_offsl_2__off2,
		}},
	}},

	// MOV  <ZAd><HV>.S[<Ws>, <offsf>:<offsl>], { <Zn1>.S-<Zn2>.S }
	{AZMOV, aMOV, FEAT_NONE, 0xc0840000, 0xffff1c38, true, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_zad_2__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_S,
			sa_ws__Rs,
			sa_offsf_3__o1,
			sa_offsl_3__o1,
		}},
	}},

	// MOV  <ZAd><HV>.D[<Ws>, <offsf>:<offsl>], { <Zn1>.D-<Zn2>.D }
	{AZMOV, aMOV, FEAT_NONE, 0xc0c40000, 0xffff1c38, true, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_D,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_zad__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_D,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
	}},

	// MOV  ZA0<HV>.B[<Ws>, <offsf>:<offsl>], { <Zn1>.B-<Zn4>.B }
	{AZMOV, aMOV, FEAT_NONE, 0xc0040400, 0xffff1c7c, true, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_const_ZAHVTILESEL_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_B,
			sa_ws__Rs,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// MOV  <ZAd><HV>.H[<Ws>, <offsf>:<offsl>], { <Zn1>.H-<Zn4>.H }
	{AZMOV, aMOV, FEAT_NONE, 0xc0440400, 0xffff1c7c, true, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_zad_1__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_H,
			sa_ws__Rs,
			sa_offsf_2__o1,
			sa_offsl_2__o1,
		}},
	}},

	// MOV  <ZAd><HV>.S[<Ws>, <offsf>:<offsl>], { <Zn1>.S-<Zn4>.S }
	{AZMOV, aMOV, FEAT_NONE, 0xc0840400, 0xffff1c7c, true, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_S,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_zad_2__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_S,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
	}},

	// MOV  <ZAd><HV>.D[<Ws>, <offsf>:<offsl>], { <Zn1>.D-<Zn4>.D }
	{AZMOV, aMOV, FEAT_NONE, 0xc0c40400, 0xffff1c78, true, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_D,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_zad__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_D,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
	}},

	// MOV  ZA.D[<Wv>, <offs>{, VGx2}], { <Zn1>.D-<Zn2>.D }
	{AZMOV, aMOV, FEAT_NONE, 0xc0040800, 0xffff9c38, true, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_D,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// MOV  ZA.D[<Wv>, <offs>{, VGx4}], { <Zn1>.D-<Zn4>.D }
	{AZMOV, aMOV, FEAT_NONE, 0xc0040c00, 0xffff9c78, true, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_D,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// MOV  { <Zd1>.B-<Zd2>.B }, ZA0<HV>.B[<Ws>, <offsf>:<offsl>]
	{AZMOV, aMOV, FEAT_NONE, 0xc0060000, 0xffff1f01, true, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_const_ZAHVTILESEL_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_B,
			sa_ws__Rs,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_B,
		}},
	}},

	// MOV  { <Zd1>.H-<Zd2>.H }, <ZAn><HV>.H[<Ws>, <offsf>:<offsl>]
	{AZMOV, aMOV, FEAT_NONE, 0xc0460000, 0xffff1f01, true, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan_1__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_H,
			sa_ws__Rs,
			sa_offsf_2__off2,
			sa_offsl_2__off2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_H,
		}},
	}},

	// MOV  { <Zd1>.S-<Zd2>.S }, <ZAn><HV>.S[<Ws>, <offsf>:<offsl>]
	{AZMOV, aMOV, FEAT_NONE, 0xc0860000, 0xffff1f01, true, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan_2__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_S,
			sa_ws__Rs,
			sa_offsf_3__o1,
			sa_offsl_3__o1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_S,
		}},
	}},

	// MOV  { <Zd1>.D-<Zd2>.D }, <ZAn><HV>.D[<Ws>, <offsf>:<offsl>]
	{AZMOV, aMOV, FEAT_NONE, 0xc0c60000, 0xffff1f01, true, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_D,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_D,
		}},
	}},

	// MOV  { <Zd1>.B-<Zd4>.B }, ZA0<HV>.B[<Ws>, <offsf>:<offsl>]
	{AZMOV, aMOV, FEAT_NONE, 0xc0060400, 0xffff1f83, true, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_const_ZAHVTILESEL_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_B,
			sa_ws__Rs,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_B,
		}},
	}},

	// MOV  { <Zd1>.H-<Zd4>.H }, <ZAn><HV>.H[<Ws>, <offsf>:<offsl>]
	{AZMOV, aMOV, FEAT_NONE, 0xc0460400, 0xffff1f83, true, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan_1__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_H,
			sa_ws__Rs,
			sa_offsf_2__o1,
			sa_offsl_2__o1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_H,
		}},
	}},

	// MOV  { <Zd1>.S-<Zd4>.S }, <ZAn><HV>.S[<Ws>, <offsf>:<offsl>]
	{AZMOV, aMOV, FEAT_NONE, 0xc0860400, 0xffff1f83, true, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan_2__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_S,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_S,
		}},
	}},

	// MOV  { <Zd1>.D-<Zd4>.D }, <ZAn><HV>.D[<Ws>, <offsf>:<offsl>]
	{AZMOV, aMOV, FEAT_NONE, 0xc0c60400, 0xffff1f03, true, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_D,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_D,
		}},
	}},

	// MOV  { <Zd1>.D-<Zd2>.D }, ZA.D[<Wv>, <offs>{, VGx2}]
	{AZMOV, aMOV, FEAT_NONE, 0xc0060800, 0xffff9f01, true, []arg{
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_D,
			sa_wv__Rv,
			sa_offs__off3_7_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_D,
		}},
	}},

	// MOV  { <Zd1>.D-<Zd4>.D }, ZA.D[<Wv>, <offs>{, VGx4}]
	{AZMOV, aMOV, FEAT_NONE, 0xc0060c00, 0xffff9f03, true, []arg{
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_D,
			sa_wv__Rv,
			sa_offs__off3_7_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_D,
		}},
	}},

	// MOVA  ZA0<HV>.B[<Ws>, <offs>], <Pg>/M, <Zn>.B
	{AZMOVA, aMOVA, FEAT_SME, 0xc0000000, 0xffff0010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_const_ZAHVTILEIDX_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_B,
			sa_ws__Rs,
			sa_offs__off4,
		}},
	}},

	// MOVA  <ZAd><HV>.H[<Ws>, <offs>], <Pg>/M, <Zn>.H
	{AZMOVA, aMOVA, FEAT_SME, 0xc0400000, 0xffff0010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_zad_1__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_H,
			sa_ws__Rs,
			sa_offs_2__off3,
		}},
	}},

	// MOVA  <ZAd><HV>.S[<Ws>, <offs>], <Pg>/M, <Zn>.S
	{AZMOVA, aMOVA, FEAT_SME, 0xc0800000, 0xffff0010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_zad_3__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_S,
			sa_ws__Rs,
			sa_offs_4__off2,
		}},
	}},

	// MOVA  <ZAd><HV>.D[<Ws>, <offs>], <Pg>/M, <Zn>.D
	{AZMOVA, aMOVA, FEAT_SME, 0xc0c00000, 0xffff0010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_zad__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_D,
			sa_ws__Rs,
			sa_offs_1__o1,
		}},
	}},

	// MOVA  <ZAd><HV>.Q[<Ws>, <offs>], <Pg>/M, <Zn>.Q
	{AZMOVA, aMOVA, FEAT_SME, 0xc0c10000, 0xffff0010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_Q,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ZAHVTILEIDX, []elmType{
			sa_zad_2__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_Q,
			sa_ws__Rs,
			sa_offs_3,
		}},
	}},

	// MOVA  <Zd>.B, <Pg>/M, ZA0<HV>.B[<Ws>, <offs>]
	{AZMOVA, aMOVA, FEAT_SME, 0xc0020000, 0xffff0200, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_const_ZAHVTILEIDX_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_B,
			sa_ws__Rs,
			sa_offs__off4,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_B,
		}},
	}},

	// MOVA  <Zd>.H, <Pg>/M, <ZAn><HV>.H[<Ws>, <offs>]
	{AZMOVA, aMOVA, FEAT_SME, 0xc0420000, 0xffff0200, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zan_1__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_H,
			sa_ws__Rs,
			sa_offs_2__off3,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// MOVA  <Zd>.S, <Pg>/M, <ZAn><HV>.S[<Ws>, <offs>]
	{AZMOVA, aMOVA, FEAT_SME, 0xc0820000, 0xffff0200, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zan_3__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_S,
			sa_ws__Rs,
			sa_offs_4__off2,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// MOVA  <Zd>.D, <Pg>/M, <ZAn><HV>.D[<Ws>, <offs>]
	{AZMOVA, aMOVA, FEAT_SME, 0xc0c20000, 0xffff0200, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zan__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_D,
			sa_ws__Rs,
			sa_offs_1__o1,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// MOVA  <Zd>.Q, <Pg>/M, <ZAn><HV>.Q[<Ws>, <offs>]
	{AZMOVA, aMOVA, FEAT_SME, 0xc0c30000, 0xffff0200, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zan_2__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_Q,
			sa_ws__Rs,
			sa_offs_3,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_Q,
		}},
	}},

	// MOVA  ZA0<HV>.B[<Ws>, <offsf>:<offsl>], { <Zn1>.B-<Zn2>.B }
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0040000, 0xffff1c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_const_ZAHVTILESEL_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_B,
			sa_ws__Rs,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// MOVA  <ZAd><HV>.H[<Ws>, <offsf>:<offsl>], { <Zn1>.H-<Zn2>.H }
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0440000, 0xffff1c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_zad_1__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_H,
			sa_ws__Rs,
			sa_offsf_2__off2,
			sa_offsl_2__off2,
		}},
	}},

	// MOVA  <ZAd><HV>.S[<Ws>, <offsf>:<offsl>], { <Zn1>.S-<Zn2>.S }
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0840000, 0xffff1c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_zad_2__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_S,
			sa_ws__Rs,
			sa_offsf_3__o1,
			sa_offsl_3__o1,
		}},
	}},

	// MOVA  <ZAd><HV>.D[<Ws>, <offsf>:<offsl>], { <Zn1>.D-<Zn2>.D }
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0c40000, 0xffff1c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_D,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_zad__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_D,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
	}},

	// MOVA  ZA0<HV>.B[<Ws>, <offsf>:<offsl>], { <Zn1>.B-<Zn4>.B }
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0040400, 0xffff1c7c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_const_ZAHVTILESEL_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_B,
			sa_ws__Rs,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// MOVA  <ZAd><HV>.H[<Ws>, <offsf>:<offsl>], { <Zn1>.H-<Zn4>.H }
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0440400, 0xffff1c7c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_zad_1__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_H,
			sa_ws__Rs,
			sa_offsf_2__o1,
			sa_offsl_2__o1,
		}},
	}},

	// MOVA  <ZAd><HV>.S[<Ws>, <offsf>:<offsl>], { <Zn1>.S-<Zn4>.S }
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0840400, 0xffff1c7c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_S,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_zad_2__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_S,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
	}},

	// MOVA  <ZAd><HV>.D[<Ws>, <offsf>:<offsl>], { <Zn1>.D-<Zn4>.D }
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0c40400, 0xffff1c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_D,
		}},
		{AC_ZAHVTILESEL, []elmType{
			sa_zad__ZAd,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_D,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
	}},

	// MOVA  ZA.D[<Wv>, <offs>{, VGx2}], { <Zn1>.D-<Zn2>.D }
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0040800, 0xffff9c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_D,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// MOVA  ZA.D[<Wv>, <offs>{, VGx4}], { <Zn1>.D-<Zn4>.D }
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0040c00, 0xffff9c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_D,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// MOVA  { <Zd1>.B-<Zd2>.B }, ZA0<HV>.B[<Ws>, <offsf>:<offsl>]
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0060000, 0xffff1f01, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_const_ZAHVTILESEL_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_B,
			sa_ws__Rs,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_B,
		}},
	}},

	// MOVA  { <Zd1>.H-<Zd2>.H }, <ZAn><HV>.H[<Ws>, <offsf>:<offsl>]
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0460000, 0xffff1f01, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan_1__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_H,
			sa_ws__Rs,
			sa_offsf_2__off2,
			sa_offsl_2__off2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_H,
		}},
	}},

	// MOVA  { <Zd1>.S-<Zd2>.S }, <ZAn><HV>.S[<Ws>, <offsf>:<offsl>]
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0860000, 0xffff1f01, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan_2__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_S,
			sa_ws__Rs,
			sa_offsf_3__o1,
			sa_offsl_3__o1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_S,
		}},
	}},

	// MOVA  { <Zd1>.D-<Zd2>.D }, <ZAn><HV>.D[<Ws>, <offsf>:<offsl>]
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0c60000, 0xffff1f01, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_D,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_D,
		}},
	}},

	// MOVA  { <Zd1>.B-<Zd4>.B }, ZA0<HV>.B[<Ws>, <offsf>:<offsl>]
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0060400, 0xffff1f83, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_const_ZAHVTILESEL_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_B,
			sa_ws__Rs,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_B,
		}},
	}},

	// MOVA  { <Zd1>.H-<Zd4>.H }, <ZAn><HV>.H[<Ws>, <offsf>:<offsl>]
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0460400, 0xffff1f83, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan_1__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_H,
			sa_ws__Rs,
			sa_offsf_2__o1,
			sa_offsl_2__o1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_H,
		}},
	}},

	// MOVA  { <Zd1>.S-<Zd4>.S }, <ZAn><HV>.S[<Ws>, <offsf>:<offsl>]
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0860400, 0xffff1f83, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan_2__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_S,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_S,
		}},
	}},

	// MOVA  { <Zd1>.D-<Zd4>.D }, <ZAn><HV>.D[<Ws>, <offsf>:<offsl>]
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0c60400, 0xffff1f03, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_D,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_D,
		}},
	}},

	// MOVA  { <Zd1>.D-<Zd2>.D }, ZA.D[<Wv>, <offs>{, VGx2}]
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0060800, 0xffff9f01, false, []arg{
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_D,
			sa_wv__Rv,
			sa_offs__off3_7_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_D,
		}},
	}},

	// MOVA  { <Zd1>.D-<Zd4>.D }, ZA.D[<Wv>, <offs>{, VGx4}]
	{AZMOVA, aMOVA, FEAT_SME2, 0xc0060c00, 0xffff9f03, false, []arg{
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_D,
			sa_wv__Rv,
			sa_offs__off3_7_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_D,
		}},
	}},

	// MOVAZ  <Zd>.B, ZA0<HV>.B[<Ws>, <offs>]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0020200, 0xffff1e00, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_const_ZAHVTILEIDX_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_B,
			sa_ws__Rs,
			sa_offs__off4,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_B,
		}},
	}},

	// MOVAZ  <Zd>.H, <ZAn><HV>.H[<Ws>, <offs>]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0420200, 0xffff1e00, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zan_1__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_H,
			sa_ws__Rs,
			sa_offs_2__off3,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// MOVAZ  <Zd>.S, <ZAn><HV>.S[<Ws>, <offs>]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0820200, 0xffff1e00, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zan_3__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_S,
			sa_ws__Rs,
			sa_offs_4__off2,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// MOVAZ  <Zd>.D, <ZAn><HV>.D[<Ws>, <offs>]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0c20200, 0xffff1e00, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zan__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_D,
			sa_ws__Rs,
			sa_offs_1__o1,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// MOVAZ  <Zd>.Q, <ZAn><HV>.Q[<Ws>, <offs>]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0c30200, 0xffff1e00, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zan_2__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_Q,
			sa_ws__Rs,
			sa_offs_3,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_Q,
		}},
	}},

	// MOVAZ  { <Zd1>.B-<Zd2>.B }, ZA0<HV>.B[<Ws>, <offsf>:<offsl>]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0060200, 0xffff1f01, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_const_ZAHVTILESEL_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_B,
			sa_ws__Rs,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_B,
		}},
	}},

	// MOVAZ  { <Zd1>.H-<Zd2>.H }, <ZAn><HV>.H[<Ws>, <offsf>:<offsl>]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0460200, 0xffff1f01, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan_1__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_H,
			sa_ws__Rs,
			sa_offsf_2__off2,
			sa_offsl_2__off2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_H,
		}},
	}},

	// MOVAZ  { <Zd1>.S-<Zd2>.S }, <ZAn><HV>.S[<Ws>, <offsf>:<offsl>]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0860200, 0xffff1f01, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan_2__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_S,
			sa_ws__Rs,
			sa_offsf_3__o1,
			sa_offsl_3__o1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_S,
		}},
	}},

	// MOVAZ  { <Zd1>.D-<Zd2>.D }, <ZAn><HV>.D[<Ws>, <offsf>:<offsl>]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0c60200, 0xffff1f01, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_D,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_D,
		}},
	}},

	// MOVAZ  { <Zd1>.B-<Zd4>.B }, ZA0<HV>.B[<Ws>, <offsf>:<offsl>]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0060600, 0xffff1f83, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_const_ZAHVTILESEL_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_B,
			sa_ws__Rs,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_B,
		}},
	}},

	// MOVAZ  { <Zd1>.H-<Zd4>.H }, <ZAn><HV>.H[<Ws>, <offsf>:<offsl>]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0460600, 0xffff1f83, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan_1__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_H,
			sa_ws__Rs,
			sa_offsf_2__o1,
			sa_offsl_2__o1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_H,
		}},
	}},

	// MOVAZ  { <Zd1>.S-<Zd4>.S }, <ZAn><HV>.S[<Ws>, <offsf>:<offsl>]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0860600, 0xffff1f83, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan_2__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_S,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_S,
		}},
	}},

	// MOVAZ  { <Zd1>.D-<Zd4>.D }, <ZAn><HV>.D[<Ws>, <offsf>:<offsl>]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0c60600, 0xffff1f03, false, []arg{
		{AC_ZAHVTILESEL, []elmType{
			sa_zan__ZAn,
			sa_hv__V__H_V,
			sa_const_ZAHVTILESEL_D,
			sa_ws__Rs,
			sa_offsf_1,
			sa_offsl_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_D,
		}},
	}},

	// MOVAZ  { <Zd1>.D-<Zd2>.D }, ZA.D[<Wv>, <offs>{, VGx2}]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0060a00, 0xffff9f01, false, []arg{
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_D,
			sa_wv__Rv,
			sa_offs__off3_7_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_D,
		}},
	}},

	// MOVAZ  { <Zd1>.D-<Zd4>.D }, ZA.D[<Wv>, <offs>{, VGx4}]
	{AZMOVAZ, aMOVAZ, FEAT_SME2p1, 0xc0060e00, 0xffff9f03, false, []arg{
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_D,
			sa_wv__Rv,
			sa_offs__off3_7_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_D,
		}},
	}},

	// MOVI  <Vd>.<T>, #<imm8>{, LSL #0}
	{AVMOVI, aMOVI, FEAT_NONE, 0xf00e400, 0xbff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm8__a_b_c_d_e_f_g_h,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_2__Q__8B_16B,
		}},
	}},

	// MOVI  <Vd>.<T>, #<imm8>{, LSL #<amount>}
	{AVMOVI, aMOVI, FEAT_NONE, 0xf008400, 0xbff8dc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm8__a_b_c_d_e_f_g_h,
			sa_amount__cmode_1__0_8,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__4H_8H,
		}},
	}},

	// MOVI  <Vd>.<T>, #<imm8>{, LSL #<amount>}
	{AVMOVI, aMOVI, FEAT_NONE, 0xf000400, 0xbff89c00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm8__a_b_c_d_e_f_g_h,
			sa_amount_1__cmode_2_1__0_8_16_24,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__2S_4S,
		}},
	}},

	// MOVI  <Vd>.<T>, #<imm8>, MSL #<amount>
	{AVMOVI, aMOVI, FEAT_NONE, 0xf00c400, 0xbff8ec00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm8__a_b_c_d_e_f_g_h,
		}},
		{AC_IMM, []elmType{
			sa_amount_2__cmode_0__8_16,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__2S_4S,
		}},
	}},

	// MOVI  <Dd>, #<imm>
	{AVMOVI, aMOVI, FEAT_NONE, 0x2f00e400, 0xfff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__a_b_c_d_e_f_g_h,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// MOVI  <Vd>.2D, #<imm>
	{AVMOVI, aMOVI, FEAT_NONE, 0x6f00e400, 0xfff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__a_b_c_d_e_f_g_h,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_2D,
		}},
	}},

	// MOVK  <Wd>, #<imm>{, LSL #<shift>}
	{AMOVKW, aMOVK, FEAT_NONE, 0x72800000, 0xffc00000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
			sa_shift__hw,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// MOVK  <Xd>, #<imm>{, LSL #<shift>}
	{AMOVK, aMOVK, FEAT_NONE, 0xf2800000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
			sa_shift_1__hw,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// MOVN  <Wd>, #<imm>{, LSL #<shift>}
	{AMOVNW, aMOVN, FEAT_NONE, 0x12800000, 0xffc00000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
			sa_shift__hw,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// MOVN  <Xd>, #<imm>{, LSL #<shift>}
	{AMOVN, aMOVN, FEAT_NONE, 0x92800000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
			sa_shift_1__hw,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// MOVPRFX  <Zd>, <Zn>
	{AZMOVPRFX, aMOVPRFX, FEAT_NONE, 0x420bc00, 0xfffffc00, false, []arg{
		{AC_ZREG, []elmType{
			sa_zn__Zn,
		}},
		{AC_ZREG, []elmType{
			sa_zd__Zd,
		}},
	}},

	// MOVPRFX  <Zd>.<T>, <Pg>/<ZM>, <Zn>.<T>
	{AZMOVPRFX, aMOVPRFX, FEAT_NONE, 0x4102000, 0xff3ee000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_zm__M__M_Z,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MOVS  <Pd>.B, <Pn>.B
	{APMOVS, aMOVS, FEAT_NONE, 0x25c04000, 0xfff0c210, true, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// MOVS  <Pd>.B, <Pg>/Z, <Pn>.B
	{APMOVS, aMOVS, FEAT_NONE, 0x25404000, 0xfff0c210, true, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// MOVT  <Xt>, ZT0[<offs>]
	{AMOVT, aMOVT, FEAT_SME2, 0xc04c03e0, 0xffff8fe0, false, []arg{
		{AC_REGIDX, []elmType{
			sa_const_REGIDX_ZT0,
			sa_offs__off3_14_3,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// MOVT  ZT0[<offs>], <Xt>
	{AMOVT, aMOVT, FEAT_SME2, 0xc04e03e0, 0xffff8fe0, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_REGIDX, []elmType{
			sa_const_REGIDX_ZT0,
			sa_offs__off3_14_3,
		}},
	}},

	// MOVZ  <Wd>, #<imm>{, LSL #<shift>}
	{AMOVZW, aMOVZ, FEAT_NONE, 0x52800000, 0xffc00000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
			sa_shift__hw,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// MOVZ  <Xd>, #<imm>{, LSL #<shift>}
	{AMOVZ, aMOVZ, FEAT_NONE, 0xd2800000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
			sa_shift_1__hw,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// MRRS  <Xt>, <Xt+1>, (<systemreg>|S<op0>_<op1>_<Cn>_<Cm>_<op2>)
	{AMRRS, aMRRS, FEAT_SYSREG128, 0xd5700000, 0xfff00000, false, []arg{
		{AC_SPR, []elmType{
			sa_systemreg__o0_op1_CRn_CRm_op2,
		}},
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_xt_plus_1__Rt,
		}},
	}},

	// MRS  <Xt>, (<systemreg>|S<op0>_<op1>_<Cn>_<Cm>_<op2>)
	{AMRS, aMRS, FEAT_NONE, 0xd5300000, 0xfff00000, false, []arg{
		{AC_SPR, []elmType{
			sa_systemreg__o0_op1_CRn_CRm_op2,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// MSB  <Zdn>.<T>, <Pg>/M, <Zm>.<T>, <Za>.<T>
	{AZMSB, aMSB, FEAT_NONE, 0x400e000, 0xff20e000, false, []arg{
		{AC_ARNG, []elmType{
			sa_za__Za,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MSR  <pstatefield>, #<imm>
	{AMSR, aMSR, FEAT_NONE, 0xd500401f, 0xfff8f01f, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__CRm,
		}},
		{AC_SPOP, []elmType{
			sa_pstatefield__op1_op2_CRm,
		}},
	}},

	// MSR  <pstatefield>, #<imm>
	{AMSR, aMSR, FEAT_NONE, 0xd500401f, 0xfff8f01f, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__CRm,
		}},
		{AC_SPR, []elmType{
			sa_pstatefield__op1_op2_CRm,
		}},
	}},

	// MSR  (<systemreg>|S<op0>_<op1>_<Cn>_<Cm>_<op2>), <Xt>
	{AMSR, aMSR, FEAT_NONE, 0xd5100000, 0xfff00000, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_SPR, []elmType{
			sa_systemreg__o0_op1_CRn_CRm_op2,
		}},
	}},

	// MSRR  (<systemreg>|S<op0>_<op1>_<Cn>_<Cm>_<op2>), <Xt>, <Xt+1>
	{AMSRR, aMSRR, FEAT_SYSREG128, 0xd5500000, 0xfff00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_xt_plus_1__Rt,
		}},
		{AC_SPR, []elmType{
			sa_systemreg__o0_op1_CRn_CRm_op2,
		}},
	}},

	// MSUB  <Wd>, <Wn>, <Wm>, <Wa>
	{AMSUBW, aMSUB, FEAT_NONE, 0x1b008000, 0xffe08000, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wa__Ra,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// MSUB  <Xd>, <Xn>, <Xm>, <Xa>
	{AMSUB, aMSUB, FEAT_NONE, 0x9b008000, 0xffe08000, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xa__Ra,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// MUL  <Wd>, <Wn>, <Wm>
	{AMULW, aMUL, FEAT_NONE, 0x1b007c00, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// MUL  <Xd>, <Xn>, <Xm>
	{AMUL, aMUL, FEAT_NONE, 0x9b007c00, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// MUL  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVMUL, aMUL, FEAT_NONE, 0xe209c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// MUL  <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]
	{AVMUL, aMUL, FEAT_NONE, 0xf008000, 0xbf00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
	}},

	// MUL  <Zdn>.<T>, <Zdn>.<T>, #<imm>
	{AZMUL, aMUL, FEAT_NONE, 0x2530c000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MUL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZMUL, aMUL, FEAT_NONE, 0x4100000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MUL  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZMUL, aMUL, FEAT_NONE, 0x4206000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// MUL  <Zd>.H, <Zn>.H, <Zm>.H[<imm>]
	{AZMUL, aMUL, FEAT_NONE, 0x4420f800, 0xffa0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_22_1_i3l_20_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// MUL  <Zd>.S, <Zn>.S, <Zm>.S[<imm>]
	{AZMUL, aMUL, FEAT_NONE, 0x44a0f800, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_S,
			sa_imm_2__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// MUL  <Zd>.D, <Zn>.D, <Zm>.D[<imm>]
	{AZMUL, aMUL, FEAT_NONE, 0x44e0f800, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_imm__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// MVN  <Wd>, <Wm>
	{AMVNW, aMVN, FEAT_NONE, 0x2a2003e0, 0xffe0ffe0, true, []arg{
		{AC_REG, []elmType{
			sa_wm_1__Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// MVN  <Xd>, <Xm>
	{AMVN, aMVN, FEAT_NONE, 0xaa2003e0, 0xffe0ffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xm_1__Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// MVN  <Wd>, <Wm>{, <shift> #<amount>}
	{AMVNW, aMVN, FEAT_NONE, 0x2a2003e0, 0xff2003e0, true, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm_1__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// MVN  <Xd>, <Xm>{, <shift> #<amount>}
	{AMVN, aMVN, FEAT_NONE, 0xaa2003e0, 0xff2003e0, true, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm_1__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// MVN  <Vd>.<T>, <Vn>.<T>
	{AVMVN, aMVN, FEAT_NONE, 0x2e205800, 0xbffffc00, true, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__8B_16B,
		}},
	}},

	// MVNI  <Vd>.<T>, #<imm8>{, LSL #<amount>}
	{AVMVNI, aMVNI, FEAT_NONE, 0x2f008400, 0xbff8dc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm8__a_b_c_d_e_f_g_h,
			sa_amount__cmode_1__0_8,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__4H_8H,
		}},
	}},

	// MVNI  <Vd>.<T>, #<imm8>{, LSL #<amount>}
	{AVMVNI, aMVNI, FEAT_NONE, 0x2f000400, 0xbff89c00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm8__a_b_c_d_e_f_g_h,
			sa_amount_1__cmode_2_1__0_8_16_24,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__2S_4S,
		}},
	}},

	// MVNI  <Vd>.<T>, #<imm8>, MSL #<amount>
	{AVMVNI, aMVNI, FEAT_NONE, 0x2f00c400, 0xbff8ec00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm8__a_b_c_d_e_f_g_h,
		}},
		{AC_IMM, []elmType{
			sa_amount_2__cmode_0__8_16,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__2S_4S,
		}},
	}},

	// NAND  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APNAND, aNAND, FEAT_NONE, 0x25804210, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// NANDS  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APNANDS, aNANDS, FEAT_NONE, 0x25c04210, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// NBSL  <Zdn>.D, <Zdn>.D, <Zm>.D, <Zk>.D
	{AZNBSL, aNBSL, FEAT_NONE, 0x4e03c00, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zk__Zk,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// NEG  <Wd>, <Wm>
	{ANEGW, aNEG, FEAT_NONE, 0x4b0003e0, 0xffe0ffe0, true, []arg{
		{AC_REG, []elmType{
			sa_wm_1__Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// NEG  <Xd>, <Xm>
	{ANEG, aNEG, FEAT_NONE, 0xcb0003e0, 0xffe0ffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xm_1__Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// NEG  <Wd>, <Wm>{, <shift> #<amount>}
	{ANEGW, aNEG, FEAT_NONE, 0x4b0003e0, 0xff2003e0, true, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm_1__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// NEG  <Xd>, <Xm>{, <shift> #<amount>}
	{ANEG, aNEG, FEAT_NONE, 0xcb0003e0, 0xff2003e0, true, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm_1__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// NEG  <V><d>, <V><n>
	{AVNEGD, aNEG, FEAT_NONE, 0x7ee0b800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// NEG  <Vd>.<T>, <Vn>.<T>
	{AVNEG, aNEG, FEAT_NONE, 0x2e20b800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// NEG  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZNEG, aNEG, FEAT_NONE, 0x417a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// NEGS  <Wd>, <Wm>
	{ANEGSW, aNEGS, FEAT_NONE, 0x6b0003e0, 0xffe0ffe0, true, []arg{
		{AC_REG, []elmType{
			sa_wm_1__Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// NEGS  <Xd>, <Xm>
	{ANEGS, aNEGS, FEAT_NONE, 0xeb0003e0, 0xffe0ffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xm_1__Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// NEGS  <Wd>, <Wm>{, <shift> #<amount>}
	{ANEGSW, aNEGS, FEAT_NONE, 0x6b0003e0, 0xff2003e0, true, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm_1__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// NEGS  <Xd>, <Xm>{, <shift> #<amount>}
	{ANEGS, aNEGS, FEAT_NONE, 0xeb0003e0, 0xff2003e0, true, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm_1__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// NGC  <Wd>, <Wm>
	{ANGCW, aNGC, FEAT_NONE, 0x5a0003e0, 0xffe0ffe0, true, []arg{
		{AC_REG, []elmType{
			sa_wm_1__Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// NGC  <Xd>, <Xm>
	{ANGC, aNGC, FEAT_NONE, 0xda0003e0, 0xffe0ffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xm_1__Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// NGCS  <Wd>, <Wm>
	{ANGCSW, aNGCS, FEAT_NONE, 0x7a0003e0, 0xffe0ffe0, true, []arg{
		{AC_REG, []elmType{
			sa_wm_1__Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// NGCS  <Xd>, <Xm>
	{ANGCS, aNGCS, FEAT_NONE, 0xfa0003e0, 0xffe0ffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xm_1__Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// NMATCH  <Pd>.<T>, <Pg>/Z, <Zn>.<T>, <Zm>.<T>
	{AZNMATCH, aNMATCH, FEAT_NONE, 0x45208010, 0xff20e010, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size_0__B_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_0__B_H,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size_0__B_H,
		}},
	}},

	// NOP
	{ANOOP, aNOP, FEAT_NONE, 0xd503201f, 0xffffffff, false, nil},

	// NOR  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APNOR, aNOR, FEAT_NONE, 0x25804200, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// NORS  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APNORS, aNORS, FEAT_NONE, 0x25c04200, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// NOT  <Vd>.<T>, <Vn>.<T>
	{AVNOT, aNOT, FEAT_NONE, 0x2e205800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__8B_16B,
		}},
	}},

	// NOT  <Pd>.B, <Pg>/Z, <Pn>.B
	{APNOT, aNOT, FEAT_NONE, 0x25004200, 0xfff0c210, true, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// NOT  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZNOT, aNOT, FEAT_NONE, 0x41ea000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// NOTS  <Pd>.B, <Pg>/Z, <Pn>.B
	{APNOTS, aNOTS, FEAT_NONE, 0x25404200, 0xfff0c210, true, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// ORN  <Wd>, <Wn>, <Wm>
	{AORNW, aORN, FEAT_NONE, 0x2a200000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ORN  <Xd>, <Xn>, <Xm>
	{AORN, aORN, FEAT_NONE, 0xaa200000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ORN  <Wd>, <Wn>, <Wm>{, <shift> #<amount>}
	{AORNW, aORN, FEAT_NONE, 0x2a200000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ORN  <Xd>, <Xn>, <Xm>{, <shift> #<amount>}
	{AORN, aORN, FEAT_NONE, 0xaa200000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ORN  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVORN, aORN, FEAT_NONE, 0xee01c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__8B_16B,
		}},
	}},

	// ORN  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APORN, aORN, FEAT_NONE, 0x25804010, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// ORN  <Zdn>.<T>, <Zdn>.<T>, #<const>
	{AZORN, aORN, FEAT_NONE, 0x5000000, 0xfffc0000, true, []arg{
		{AC_IMM, []elmType{
			sa_const__imm13,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
	}},

	// ORNS  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APORNS, aORNS, FEAT_NONE, 0x25c04010, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// ORQV  <Vd>.<T>, <Pg>, <Zn>.<Tb>
	{AZORQV, aORQV, FEAT_SVE2p1, 0x41c2000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Vd,
			sa_t__size__2D_4S_8H_16B,
		}},
	}},

	// ORR  <Wd>, <Wn>, <Wm>
	{AORRW, aORR, FEAT_NONE, 0x2a000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ORR  <Xd>, <Xn>, <Xm>
	{AORR, aORR, FEAT_NONE, 0xaa000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ORR  <Wd>, <Wn>, <Wm>{, <shift> #<amount>}
	{AORRW, aORR, FEAT_NONE, 0x2a000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ORR  <Xd>, <Xn>, <Xm>{, <shift> #<amount>}
	{AORR, aORR, FEAT_NONE, 0xaa000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ORR  <Wd|WSP>, <Wn>, #<imm>
	{AORRW, aORR, FEAT_NONE, 0x32000000, 0xffc00000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imms_immr,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_RSP, []elmType{
			sa_wd_wsp__Rd,
		}},
	}},

	// ORR  <Xd|SP>, <Xn>, #<imm>
	{AORR, aORR, FEAT_NONE, 0xb2000000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm_1__N_imms_immr,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// ORR  <Vd>.<T>, #<imm8>{, LSL #<amount>}
	{AVORR, aORR, FEAT_NONE, 0xf009400, 0xbff8dc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm8__a_b_c_d_e_f_g_h,
			sa_amount__cmode_1__0_8,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__4H_8H,
		}},
	}},

	// ORR  <Vd>.<T>, #<imm8>{, LSL #<amount>}
	{AVORR, aORR, FEAT_NONE, 0xf001400, 0xbff89c00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm8__a_b_c_d_e_f_g_h,
			sa_amount_1__cmode_2_1__0_8_16_24,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__2S_4S,
		}},
	}},

	// ORR  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVORR, aORR, FEAT_NONE, 0xea01c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__8B_16B,
		}},
	}},

	// ORR  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APORR, aORR, FEAT_NONE, 0x25804000, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// ORR  <Zd>.D, <Zn>.D, <Zm>.D
	{AZORR, aORR, FEAT_NONE, 0x4603000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// ORR  <Zdn>.<T>, <Zdn>.<T>, #<const>
	{AZORR, aORR, FEAT_NONE, 0x5000000, 0xfffc0000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__imm13,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__imm13_12_imm13_5_0__B_D_H_S,
		}},
	}},

	// ORR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZORR, aORR, FEAT_NONE, 0x4180000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ORRS  <Pd>.B, <Pg>/Z, <Pn>.B, <Pm>.B
	{APORRS, aORRS, FEAT_NONE, 0x25c04000, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREGZ, []elmType{
			sa_pg__Pg_13_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// ORV  <V><d>, <Pg>, <Zn>.<T>
	{AZORV, aORV, FEAT_NONE, 0x4182000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Vd,
		}},
	}},

	// PACDA  <Xd>, <Xn|SP>
	{APACDA, aPACDA, FEAT_PAuth, 0xdac10800, 0xfffffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// PACDZA  <Xd>
	{APACDZA, aPACDZA, FEAT_PAuth, 0xdac12be0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// PACDB  <Xd>, <Xn|SP>
	{APACDB, aPACDB, FEAT_PAuth, 0xdac10c00, 0xfffffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// PACDZB  <Xd>
	{APACDZB, aPACDZB, FEAT_PAuth, 0xdac12fe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// PACGA  <Xd>, <Xn>, <Xm|SP>
	{APACGA, aPACGA, FEAT_PAuth, 0x9ac03000, 0xffe0fc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xm_sp__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// PACIA  <Xd>, <Xn|SP>
	{APACIA, aPACIA, FEAT_PAuth, 0xdac10000, 0xfffffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// PACIZA  <Xd>
	{APACIZA, aPACIZA, FEAT_PAuth, 0xdac123e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// PACIA1716
	{APACIA1716, aPACIA1716, FEAT_PAuth, 0xd503211f, 0xffffffff, false, nil},

	// PACIASP
	{APACIASP, aPACIASP, FEAT_PAuth, 0xd503233f, 0xffffffff, false, nil},

	// PACIAZ
	{APACIAZ, aPACIAZ, FEAT_PAuth, 0xd503231f, 0xffffffff, false, nil},

	// PACIB  <Xd>, <Xn|SP>
	{APACIB, aPACIB, FEAT_PAuth, 0xdac10400, 0xfffffc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// PACIZB  <Xd>
	{APACIZB, aPACIZB, FEAT_PAuth, 0xdac127e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// PACIB1716
	{APACIB1716, aPACIB1716, FEAT_PAuth, 0xd503215f, 0xffffffff, false, nil},

	// PACIBSP
	{APACIBSP, aPACIBSP, FEAT_PAuth, 0xd503237f, 0xffffffff, false, nil},

	// PACIBZ
	{APACIBZ, aPACIBZ, FEAT_PAuth, 0xd503235f, 0xffffffff, false, nil},

	// PEXT  <Pd>.<T>, <PNn>[<imm>]
	{APEXT, aPEXT, FEAT_SVE2p1, 0x25207010, 0xff3ffc10, false, []arg{
		{AC_REGIDX, []elmType{
			sa_pnn__PNn,
			sa_imm__imm2,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// PEXT  { <Pd1>.<T>, <Pd2>.<T> }, <PNn>[<imm>]
	{APEXT, aPEXT, FEAT_SVE2p1, 0x25207410, 0xff3ffe10, false, []arg{
		{AC_REGIDX, []elmType{
			sa_pnn__PNn,
			sa_imm__i1,
		}},
		{AC_REGLIST2, []elmType{
			sa_pd1__Pd,
			sa_t__size__B_D_H_S,
			sa_pd2__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// PFALSE  <Pd>.B
	{APFALSE, aPFALSE, FEAT_NONE, 0x2518e400, 0xfffffff0, false, []arg{
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// PFIRST  <Pdn>.B, <Pg>, <Pdn>.B
	{APFIRST, aPFIRST, FEAT_NONE, 0x2558c000, 0xfffffe10, false, []arg{
		{AC_ARNG, []elmType{
			sa_pdn__Pdn,
			sa_const_ARNG_B,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_8_4,
		}},
		{AC_ARNG, []elmType{
			sa_pdn__Pdn,
			sa_const_ARNG_B,
		}},
	}},

	// PMOV  <Pd>.B, <Zn>
	{APMOV, aPMOV, FEAT_SVE2p1, 0x52a3800, 0xfffffc10, false, []arg{
		{AC_ZREG, []elmType{
			sa_zn__Zn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// PMOV  <Pd>.D, <Zn>[<imm>]
	{APMOV, aPMOV, FEAT_SVE2p1, 0x5a83800, 0xffb9fc10, false, []arg{
		{AC_REGIDX, []elmType{
			sa_zn__Zn,
			sa_imm__i3h_22_1_i3l_18_2,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_D,
		}},
	}},

	// PMOV  <Pd>.H, <Zn>[<imm>]
	{APMOV, aPMOV, FEAT_SVE2p1, 0x52c3800, 0xfffdfc10, false, []arg{
		{AC_REGIDX, []elmType{
			sa_zn__Zn,
			sa_imm_1__i1,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_H,
		}},
	}},

	// PMOV  <Pd>.S, <Zn>[<imm>]
	{APMOV, aPMOV, FEAT_SVE2p1, 0x5683800, 0xfff9fc10, false, []arg{
		{AC_REGIDX, []elmType{
			sa_zn__Zn,
			sa_imm_2__i2,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_S,
		}},
	}},

	// PMOV  <Zd>, <Pn>.B
	{APMOV, aPMOV, FEAT_SVE2p1, 0x52b3800, 0xfffffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_ZREG, []elmType{
			sa_zd__Zd,
		}},
	}},

	// PMOV  <Zd>[<imm>], <Pn>.D
	{APMOV, aPMOV, FEAT_SVE2p1, 0x5a93800, 0xffb9fe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_D,
		}},
		{AC_REGIDX, []elmType{
			sa_zd__Zd,
			sa_imm__i3h_22_1_i3l_18_2,
		}},
	}},

	// PMOV  <Zd>[<imm>], <Pn>.H
	{APMOV, aPMOV, FEAT_SVE2p1, 0x52d3800, 0xfffdfe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_H,
		}},
		{AC_REGIDX, []elmType{
			sa_zd__Zd,
			sa_imm_1__i1,
		}},
	}},

	// PMOV  <Zd>[<imm>], <Pn>.S
	{APMOV, aPMOV, FEAT_SVE2p1, 0x5693800, 0xfff9fe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_S,
		}},
		{AC_REGIDX, []elmType{
			sa_zd__Zd,
			sa_imm_2__i2,
		}},
	}},

	// PMUL  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVPMUL, aPMUL, FEAT_NONE, 0x2e209c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__8B_16B,
		}},
	}},

	// PMUL  <Zd>.B, <Zn>.B, <Zm>.B
	{AZPMUL, aPMUL, FEAT_NONE, 0x4206400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_B,
		}},
	}},

	// PMULL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVPMULL, aPMULL, FEAT_NONE, 0xe20e000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__1D_2D_8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__1D_2D_8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__1Q_8H,
		}},
	}},

	// PMULL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVPMULL2, aPMULL2, FEAT_NONE, 0x4e20e000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__1D_2D_8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__1D_2D_8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__1Q_8H,
		}},
	}},

	// PMULLB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZPMULLB, aPMULLB, FEAT_NONE, 0x45006800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size_1__B_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size_1__B_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_1__D_H,
		}},
	}},

	// PMULLB  <Zd>.Q, <Zn>.D, <Zm>.D
	{AZPMULLB, aPMULLB, FEAT_SVE_PMULL128, 0x45006800, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_Q,
		}},
	}},

	// PMULLT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZPMULLT, aPMULLT, FEAT_NONE, 0x45006c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size_1__B_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size_1__B_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_1__D_H,
		}},
	}},

	// PMULLT  <Zd>.Q, <Zn>.D, <Zm>.D
	{AZPMULLT, aPMULLT, FEAT_SVE_PMULL128, 0x45006c00, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_Q,
		}},
	}},

	// PNEXT  <Pdn>.<T>, <Pv>, <Pdn>.<T>
	{APNEXT, aPNEXT, FEAT_NONE, 0x2519c400, 0xff3ffe10, false, []arg{
		{AC_ARNG, []elmType{
			sa_pdn__Pdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pv__Pv,
		}},
		{AC_ARNG, []elmType{
			sa_pdn__Pdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// PRFB  <prfop>, <Pg>, [<Xn|SP>, <Xm>]
	{APPRFB, aPRFB, FEAT_NONE, 0x8400c000, 0xffe0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFB  <prfop>, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{APPRFB, aPRFB, FEAT_NONE, 0x85c00000, 0xffc0e010, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm6_21_6,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFB  <prfop>, <Pg>, [<Zn>.S{, #<imm>}]
	{AZPRFB, aPRFB, FEAT_NONE, 0x8400e000, 0xffe0e010, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFB  <prfop>, <Pg>, [<Zn>.D{, #<imm>}]
	{AZPRFB, aPRFB, FEAT_NONE, 0xc400e000, 0xffe0e010, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFB  <prfop>, <Pg>, [<Xn|SP>, <Zm>.S, <mod>]
	{AZPRFB, aPRFB, FEAT_NONE, 0x84200000, 0xffa0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFB  <prfop>, <Pg>, [<Xn|SP>, <Zm>.D, <mod>]
	{AZPRFB, aPRFB, FEAT_NONE, 0xc4200000, 0xffa0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFB  <prfop>, <Pg>, [<Xn|SP>, <Zm>.D]
	{AZPRFB, aPRFB, FEAT_NONE, 0xc4608000, 0xffe0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFD  <prfop>, <Pg>, [<Xn|SP>, <Xm>, LSL #3]
	{APPRFD, aPRFD, FEAT_NONE, 0x8580c000, 0xffe0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFD  <prfop>, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{APPRFD, aPRFD, FEAT_NONE, 0x85c06000, 0xffc0e010, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm6_21_6,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFD  <prfop>, <Pg>, [<Xn|SP>, <Zm>.S, <mod> #3]
	{AZPRFD, aPRFD, FEAT_NONE, 0x84206000, 0xffa0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_3,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFD  <prfop>, <Pg>, [<Xn|SP>, <Zm>.D, <mod> #3]
	{AZPRFD, aPRFD, FEAT_NONE, 0xc4206000, 0xffa0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_3,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFD  <prfop>, <Pg>, [<Xn|SP>, <Zm>.D, LSL #3]
	{AZPRFD, aPRFD, FEAT_NONE, 0xc460e000, 0xffe0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFD  <prfop>, <Pg>, [<Zn>.S{, #<imm>}]
	{AZPRFD, aPRFD, FEAT_NONE, 0x8580e000, 0xffe0e010, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFD  <prfop>, <Pg>, [<Zn>.D{, #<imm>}]
	{AZPRFD, aPRFD, FEAT_NONE, 0xc580e000, 0xffe0e010, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFH  <prfop>, <Pg>, [<Xn|SP>, <Xm>, LSL #1]
	{APPRFH, aPRFH, FEAT_NONE, 0x8480c000, 0xffe0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFH  <prfop>, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{APPRFH, aPRFH, FEAT_NONE, 0x85c02000, 0xffc0e010, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm6_21_6,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFH  <prfop>, <Pg>, [<Xn|SP>, <Zm>.S, <mod> #1]
	{AZPRFH, aPRFH, FEAT_NONE, 0x84202000, 0xffa0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_1,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFH  <prfop>, <Pg>, [<Xn|SP>, <Zm>.D, <mod> #1]
	{AZPRFH, aPRFH, FEAT_NONE, 0xc4202000, 0xffa0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_1,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFH  <prfop>, <Pg>, [<Xn|SP>, <Zm>.D, LSL #1]
	{AZPRFH, aPRFH, FEAT_NONE, 0xc460a000, 0xffe0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFH  <prfop>, <Pg>, [<Zn>.S{, #<imm>}]
	{AZPRFH, aPRFH, FEAT_NONE, 0x8480e000, 0xffe0e010, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFH  <prfop>, <Pg>, [<Zn>.D{, #<imm>}]
	{AZPRFH, aPRFH, FEAT_NONE, 0xc480e000, 0xffe0e010, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFM  <prfop>, <label>
	{APRFM, aPRFM, FEAT_NONE, 0xd8000000, 0xff000000, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__Rt_4_3,
		}},
	}},

	// PRFM  #<imm5>, <label>
	{APRFM, aPRFM, FEAT_NONE, 0xd8000000, 0xff000000, false, []arg{
		{AC_LABEL, []elmType{
			sa_label__imm19,
		}},
		{AC_IMM, []elmType{
			sa_imm5__Rt,
		}},
	}},

	// PRFM  <prfop>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{APRFM, aPRFM, FEAT_NONE, 0xf8a04800, 0xffe04c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__LSL_SXTW_SXTX_UXTW,
			sa_amount__S__0_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__Rt_4_3,
		}},
	}},

	// PRFM  #<imm5>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{APRFM, aPRFM, FEAT_NONE, 0xf8a04800, 0xffe04c00, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__LSL_SXTW_SXTX_UXTW,
			sa_amount__S__0_3,
		}},
		{AC_IMM, []elmType{
			sa_imm5__Rt,
		}},
	}},

	// PRFM  <prfop>, [<Xn|SP>{, #<pimm>}]
	{APRFM, aPRFM, FEAT_NONE, 0xf9800000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__Rt_4_3,
		}},
	}},

	// PRFM  #<imm5>, [<Xn|SP>{, #<pimm>}]
	{APRFM, aPRFM, FEAT_NONE, 0xf9800000, 0xffc00000, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
		{AC_IMM, []elmType{
			sa_imm5__Rt,
		}},
	}},

	// PRFUM  <prfop>, [<Xn|SP>{, #<simm>}]
	{APRFUM, aPRFUM, FEAT_NONE, 0xf8800000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__Rt_4_3,
		}},
	}},

	// PRFUM  #<imm5>, [<Xn|SP>{, #<simm>}]
	{APRFUM, aPRFUM, FEAT_NONE, 0xf8800000, 0xffe00c00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
		{AC_IMM, []elmType{
			sa_imm5__Rt,
		}},
	}},

	// PRFW  <prfop>, <Pg>, [<Xn|SP>, <Xm>, LSL #2]
	{APPRFW, aPRFW, FEAT_NONE, 0x8500c000, 0xffe0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFW  <prfop>, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{APPRFW, aPRFW, FEAT_NONE, 0x85c04000, 0xffc0e010, false, []arg{
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm6_21_6,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFW  <prfop>, <Pg>, [<Xn|SP>, <Zm>.S, <mod> #2]
	{AZPRFW, aPRFW, FEAT_NONE, 0x84204000, 0xffa0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_2,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFW  <prfop>, <Pg>, [<Xn|SP>, <Zm>.D, <mod> #2]
	{AZPRFW, aPRFW, FEAT_NONE, 0xc4204000, 0xffa0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_22_1__SXTW_UXTW,
			sa_const_MEMEXT_2,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFW  <prfop>, <Pg>, [<Xn|SP>, <Zm>.D, LSL #2]
	{AZPRFW, aPRFW, FEAT_NONE, 0xc460c000, 0xffe0e010, false, []arg{
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFW  <prfop>, <Pg>, [<Zn>.S{, #<imm>}]
	{AZPRFW, aPRFW, FEAT_NONE, 0x8500e000, 0xffe0e010, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PRFW  <prfop>, <Pg>, [<Zn>.D{, #<imm>}]
	{AZPRFW, aPRFW, FEAT_NONE, 0xc500e000, 0xffe0e010, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_SPOP, []elmType{
			sa_prfop__prfop,
		}},
	}},

	// PSB  CSYNC
	{APSB, aPSB, FEAT_SPE, 0xd503223f, 0xffffffff, false, []arg{
		{AC_SPOP, []elmType{
			sa_const_SPOP_CSYNC,
		}},
	}},

	// PSEL  <Pd>, <Pn>, <Pm>.<T>[<Wv>, <imm>]
	{APSEL, aPSEL, FEAT_SVE2p1, 0x25204000, 0xff20c210, false, []arg{
		{AC_ANY, []elmType{
			sa_pm__Pm_8_4,
			sa_t__tszh_22_1_tszl_20_3__B_D_H_S,
			sa_wv__Rv,
			sa_imm__i1_tszh_tszl,
		}},
		{AC_PREG, []elmType{
			sa_pn__Pn_13_4,
		}},
		{AC_PREG, []elmType{
			sa_pd__Pd,
		}},
	}},

	// PSSBB
	{APSSBB, aPSSBB, FEAT_NONE, 0xd503349f, 0xffffffff, true, nil},

	// PTEST  <Pg>, <Pn>.B
	{APTEST, aPTEST, FEAT_NONE, 0x2550c000, 0xffffc21f, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_13_4,
		}},
	}},

	// PTRUE  <Pd>.<T>
	{APTRUE, aPTRUE, FEAT_NONE, 0x2518e3e0, 0xff3ffff0, false, []arg{
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// PTRUE  <Pd>.<T>, <pattern>
	{APTRUE, aPTRUE, FEAT_NONE, 0x2518e000, 0xff3ffc10, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// PTRUE  <PNd>.<T>
	{APTRUE, aPTRUE, FEAT_SVE2p1, 0x25207810, 0xff3ffff8, false, []arg{
		{AC_ARNG, []elmType{
			sa_pnd__PNd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// PTRUES  <Pd>.<T>
	{APTRUES, aPTRUES, FEAT_NONE, 0x2519e3e0, 0xff3ffff0, false, []arg{
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// PTRUES  <Pd>.<T>, <pattern>
	{APTRUES, aPTRUES, FEAT_NONE, 0x2519e000, 0xff3ffc10, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// PUNPKHI  <Pd>.H, <Pn>.B
	{APUNPKHI, aPUNPKHI, FEAT_NONE, 0x5314000, 0xfffffe10, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_H,
		}},
	}},

	// PUNPKLO  <Pd>.H, <Pn>.B
	{APUNPKLO, aPUNPKLO, FEAT_NONE, 0x5304000, 0xfffffe10, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_H,
		}},
	}},

	// RADDHN  <Vd>.<Tb>, <Vn>.<Ta>, <Vm>.<Ta>
	{AVRADDHN, aRADDHN, FEAT_NONE, 0x2e204000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// RADDHN2  <Vd>.<Tb>, <Vn>.<Ta>, <Vm>.<Ta>
	{AVRADDHN2, aRADDHN2, FEAT_NONE, 0x6e204000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// RADDHNB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZRADDHNB, aRADDHNB, FEAT_NONE, 0x45206800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// RADDHNT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZRADDHNT, aRADDHNT, FEAT_NONE, 0x45206c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// RAX1  <Vd>.2D, <Vn>.2D, <Vm>.2D
	{AVRAX1, aRAX1, FEAT_SHA3, 0xce608c00, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_2D,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_2D,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_2D,
		}},
	}},

	// RAX1  <Zd>.D, <Zn>.D, <Zm>.D
	{AZRAX1, aRAX1, FEAT_SVE_SHA3, 0x4520f400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// RBIT  <Wd>, <Wn>
	{ARBITW, aRBIT, FEAT_NONE, 0x5ac00000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// RBIT  <Xd>, <Xn>
	{ARBIT, aRBIT, FEAT_NONE, 0xdac00000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// RBIT  <Vd>.<T>, <Vn>.<T>
	{AVRBIT, aRBIT, FEAT_NONE, 0x2e605800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__Q__8B_16B,
		}},
	}},

	// RBIT  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZRBIT, aRBIT, FEAT_NONE, 0x5278000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// RCWCAS  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWCAS, aRCWCAS, FEAT_THE, 0x19200800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWCASA  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWCASA, aRCWCASA, FEAT_THE, 0x19a00800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWCASAL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWCASAL, aRCWCASAL, FEAT_THE, 0x19e00800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWCASL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWCASL, aRCWCASL, FEAT_THE, 0x19600800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWCASP  <Xs>, <X(s+1)>, <Xt>, <X(t+1)>, [<Xn|SP>]
	{ARCWCASP, aRCWCASP, FEAT_D128__THE, 0x19200c00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xs__Rs,
			sa_x_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_x_t_plus_1,
		}},
	}},

	// RCWCASPA  <Xs>, <X(s+1)>, <Xt>, <X(t+1)>, [<Xn|SP>]
	{ARCWCASPA, aRCWCASPA, FEAT_D128__THE, 0x19a00c00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xs__Rs,
			sa_x_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_x_t_plus_1,
		}},
	}},

	// RCWCASPAL  <Xs>, <X(s+1)>, <Xt>, <X(t+1)>, [<Xn|SP>]
	{ARCWCASPAL, aRCWCASPAL, FEAT_D128__THE, 0x19e00c00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xs__Rs,
			sa_x_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_x_t_plus_1,
		}},
	}},

	// RCWCASPL  <Xs>, <X(s+1)>, <Xt>, <X(t+1)>, [<Xn|SP>]
	{ARCWCASPL, aRCWCASPL, FEAT_D128__THE, 0x19600c00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xs__Rs,
			sa_x_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_x_t_plus_1,
		}},
	}},

	// RCWCLR  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWCLR, aRCWCLR, FEAT_THE, 0x38209000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWCLRA  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWCLRA, aRCWCLRA, FEAT_THE, 0x38a09000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWCLRAL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWCLRAL, aRCWCLRAL, FEAT_THE, 0x38e09000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWCLRL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWCLRL, aRCWCLRL, FEAT_THE, 0x38609000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWCLRP  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWCLRP, aRCWCLRP, FEAT_D128__THE, 0x19209000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWCLRPA  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWCLRPA, aRCWCLRPA, FEAT_D128__THE, 0x19a09000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWCLRPAL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWCLRPAL, aRCWCLRPAL, FEAT_D128__THE, 0x19e09000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWCLRPL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWCLRPL, aRCWCLRPL, FEAT_D128__THE, 0x19609000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSCAS  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSCAS, aRCWSCAS, FEAT_THE, 0x59200800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSCASA  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSCASA, aRCWSCASA, FEAT_THE, 0x59a00800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSCASAL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSCASAL, aRCWSCASAL, FEAT_THE, 0x59e00800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSCASL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSCASL, aRCWSCASL, FEAT_THE, 0x59600800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSCASP  <Xs>, <X(s+1)>, <Xt>, <X(t+1)>, [<Xn|SP>]
	{ARCWSCASP, aRCWSCASP, FEAT_D128__THE, 0x59200c00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xs__Rs,
			sa_x_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_x_t_plus_1,
		}},
	}},

	// RCWSCASPA  <Xs>, <X(s+1)>, <Xt>, <X(t+1)>, [<Xn|SP>]
	{ARCWSCASPA, aRCWSCASPA, FEAT_D128__THE, 0x59a00c00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xs__Rs,
			sa_x_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_x_t_plus_1,
		}},
	}},

	// RCWSCASPAL  <Xs>, <X(s+1)>, <Xt>, <X(t+1)>, [<Xn|SP>]
	{ARCWSCASPAL, aRCWSCASPAL, FEAT_D128__THE, 0x59e00c00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xs__Rs,
			sa_x_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_x_t_plus_1,
		}},
	}},

	// RCWSCASPL  <Xs>, <X(s+1)>, <Xt>, <X(t+1)>, [<Xn|SP>]
	{ARCWSCASPL, aRCWSCASPL, FEAT_D128__THE, 0x59600c00, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xs__Rs,
			sa_x_s_plus_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt__Rt,
			sa_x_t_plus_1,
		}},
	}},

	// RCWSCLR  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSCLR, aRCWSCLR, FEAT_THE, 0x78209000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSCLRA  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSCLRA, aRCWSCLRA, FEAT_THE, 0x78a09000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSCLRAL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSCLRAL, aRCWSCLRAL, FEAT_THE, 0x78e09000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSCLRL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSCLRL, aRCWSCLRL, FEAT_THE, 0x78609000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSCLRP  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSCLRP, aRCWSCLRP, FEAT_D128__THE, 0x59209000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSCLRPA  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSCLRPA, aRCWSCLRPA, FEAT_D128__THE, 0x59a09000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSCLRPAL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSCLRPAL, aRCWSCLRPAL, FEAT_D128__THE, 0x59e09000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSCLRPL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSCLRPL, aRCWSCLRPL, FEAT_D128__THE, 0x59609000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSET  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSET, aRCWSET, FEAT_THE, 0x3820b000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSETA  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSETA, aRCWSETA, FEAT_THE, 0x38a0b000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSETAL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSETAL, aRCWSETAL, FEAT_THE, 0x38e0b000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSETL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSETL, aRCWSETL, FEAT_THE, 0x3860b000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSETP  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSETP, aRCWSETP, FEAT_D128__THE, 0x1920b000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSETPA  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSETPA, aRCWSETPA, FEAT_D128__THE, 0x19a0b000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSETPAL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSETPAL, aRCWSETPAL, FEAT_D128__THE, 0x19e0b000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSETPL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSETPL, aRCWSETPL, FEAT_D128__THE, 0x1960b000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSSET  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSSET, aRCWSSET, FEAT_THE, 0x7820b000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSSETA  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSSETA, aRCWSSETA, FEAT_THE, 0x78a0b000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSSETAL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSSETAL, aRCWSSETAL, FEAT_THE, 0x78e0b000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSSETL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSSETL, aRCWSSETL, FEAT_THE, 0x7860b000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSSETP  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSSETP, aRCWSSETP, FEAT_D128__THE, 0x5920b000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSSETPA  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSSETPA, aRCWSSETPA, FEAT_D128__THE, 0x59a0b000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSSETPAL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSSETPAL, aRCWSSETPAL, FEAT_D128__THE, 0x59e0b000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSSETPL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSSETPL, aRCWSSETPL, FEAT_D128__THE, 0x5960b000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSSWP  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSSWP, aRCWSSWP, FEAT_THE, 0x7820a000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSSWPA  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSSWPA, aRCWSSWPA, FEAT_THE, 0x78a0a000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSSWPAL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSSWPAL, aRCWSSWPAL, FEAT_THE, 0x78e0a000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSSWPL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSSWPL, aRCWSSWPL, FEAT_THE, 0x7860a000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSSWPP  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSSWPP, aRCWSSWPP, FEAT_D128__THE, 0x5920a000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSSWPPA  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSSWPPA, aRCWSSWPPA, FEAT_D128__THE, 0x59a0a000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSSWPPAL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSSWPPAL, aRCWSSWPPAL, FEAT_D128__THE, 0x59e0a000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSSWPPL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSSWPPL, aRCWSSWPPL, FEAT_D128__THE, 0x5960a000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSWP  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSWP, aRCWSWP, FEAT_THE, 0x3820a000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSWPA  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSWPA, aRCWSWPA, FEAT_THE, 0x38a0a000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSWPAL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSWPAL, aRCWSWPAL, FEAT_THE, 0x38e0a000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSWPL  <Xs>, <Xt>, [<Xn|SP>]
	{ARCWSWPL, aRCWSWPL, FEAT_THE, 0x3860a000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// RCWSWPP  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSWPP, aRCWSWPP, FEAT_D128__THE, 0x1920a000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSWPPA  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSWPPA, aRCWSWPPA, FEAT_D128__THE, 0x19a0a000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSWPPAL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSWPPAL, aRCWSWPPAL, FEAT_D128__THE, 0x19e0a000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RCWSWPPL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ARCWSWPPL, aRCWSWPPL, FEAT_D128__THE, 0x1960a000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// RDFFR  <Pd>.B
	{APRDFFR, aRDFFR, FEAT_NONE, 0x2519f000, 0xfffffff0, false, []arg{
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// RDFFR  <Pd>.B, <Pg>/Z
	{APRDFFR, aRDFFR, FEAT_NONE, 0x2518f000, 0xfffffe10, false, []arg{
		{AC_PREGZ, []elmType{
			sa_pg__Pg_8_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// RDFFRS  <Pd>.B, <Pg>/Z
	{APRDFFRS, aRDFFRS, FEAT_NONE, 0x2558f000, 0xfffffe10, false, []arg{
		{AC_PREGZ, []elmType{
			sa_pg__Pg_8_4,
			sa_const_PREGZ_Z,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// RDSVL  <Xd>, #<imm>
	{ARDSVL, aRDSVL, FEAT_SME, 0x4bf5800, 0xfffff800, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm6_10_6,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// RDVL  <Xd>, #<imm>
	{ARDVL, aRDVL, FEAT_NONE, 0x4bf5000, 0xfffff800, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm6_10_6,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// RET  {<Xn>}
	{ARET, aRET, FEAT_NONE, 0xd65f0000, 0xfffffc1f, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// RETAA
	{ARETAA, aRETAA, FEAT_PAuth, 0xd65f0bff, 0xffffffff, false, nil},

	// RETAB
	{ARETAB, aRETAB, FEAT_PAuth, 0xd65f0fff, 0xffffffff, false, nil},

	// REV  <Wd>, <Wn>
	{AREVW, aREV, FEAT_NONE, 0x5ac00800, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// REV  <Xd>, <Xn>
	{AREV, aREV, FEAT_NONE, 0xdac00c00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// REV  <Pd>.<T>, <Pn>.<T>
	{APREV, aREV, FEAT_NONE, 0x5344000, 0xff3ffe10, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// REV  <Zd>.<T>, <Zn>.<T>
	{AZREV, aREV, FEAT_NONE, 0x5383800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// REV16  <Wd>, <Wn>
	{AREV16W, aREV16, FEAT_NONE, 0x5ac00400, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// REV16  <Xd>, <Xn>
	{AREV16, aREV16, FEAT_NONE, 0xdac00400, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// REV16  <Vd>.<T>, <Vn>.<T>
	{AVREV16, aREV16, FEAT_NONE, 0xe201800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__8B_16B,
		}},
	}},

	// REV32  <Xd>, <Xn>
	{AREV32, aREV32, FEAT_NONE, 0xdac00800, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// REV32  <Vd>.<T>, <Vn>.<T>
	{AVREV32, aREV32, FEAT_NONE, 0x2e200800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__4H_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__4H_8B_8H_16B,
		}},
	}},

	// REV64  <Xd>, <Xn>
	{AREV64, aREV64, FEAT_NONE, 0xdac00c00, 0xfffffc00, true, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// REV64  <Vd>.<T>, <Vn>.<T>
	{AVREV64, aREV64, FEAT_NONE, 0xe200800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// REVB  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZREVB, aREVB, FEAT_NONE, 0x5248000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// REVH  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZREVH, aREVH, FEAT_NONE, 0x5258000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t_1__size_0__D_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t_1__size_0__D_S,
		}},
	}},

	// REVW  <Zd>.D, <Pg>/M, <Zn>.D
	{AZREVW, aREVW, FEAT_NONE, 0x5268000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// REVD  <Zd>.Q, <Pg>/M, <Zn>.Q
	{AZREVD, aREVD, FEAT_SVE2p1, 0x52e8000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_Q,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_Q,
		}},
	}},

	// RMIF  <Xn>, #<shift>, #<mask>
	{ARMIF, aRMIF, FEAT_FlagM, 0xba000400, 0xffe07c10, false, []arg{
		{AC_IMM, []elmType{
			sa_mask__mask,
		}},
		{AC_IMM, []elmType{
			sa_shift__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// ROR  <Wd>, <Ws>, #<shift>
	{ARORW, aROR, FEAT_NONE, 0x13800000, 0xffe08000, true, []arg{
		{AC_IMM, []elmType{
			sa_shift__imms,
		}},
		{AC_REG, []elmType{
			sa_ws__Rn_and_Rm,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ROR  <Xd>, <Xs>, #<shift>
	{AROR, aROR, FEAT_NONE, 0x93c00000, 0xffe00000, true, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__imms,
		}},
		{AC_REG, []elmType{
			sa_xs__Rn_and_Rm,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// ROR  <Wd>, <Wn>, <Wm>
	{ARORW, aROR, FEAT_NONE, 0x1ac02c00, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// ROR  <Xd>, <Xn>, <Xm>
	{AROR, aROR, FEAT_NONE, 0x9ac02c00, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// RORV  <Wd>, <Wn>, <Wm>
	{ARORVW, aRORV, FEAT_NONE, 0x1ac02c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// RORV  <Xd>, <Xn>, <Xm>
	{ARORV, aRORV, FEAT_NONE, 0x9ac02c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// RPRFM  <rprfop>, <Xm>, [<Xn|SP>]
	{ARPRFM, aRPRFM, FEAT_RPRFM, 0xf8a04818, 0xffe04c18, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_SPOP, []elmType{
			sa_rprfop__Rt_0,
		}},
	}},

	// RPRFM  #<imm6>, <Xm>, [<Xn|SP>]
	{ARPRFM, aRPRFM, FEAT_RPRFM, 0xf8a04818, 0xffe04c18, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_IMM, []elmType{
			sa_imm6__option_2_option_0_S_Rt_2_0,
		}},
	}},

	// RSHRN  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVRSHRN, aRSHRN, FEAT_NONE, 0xf008c00, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// RSHRN2  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVRSHRN2, aRSHRN2, FEAT_NONE, 0x4f008c00, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// RSHRNB  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZRSHRNB, aRSHRNB, FEAT_NONE, 0x45201800, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// RSHRNT  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZRSHRNT, aRSHRNT, FEAT_NONE, 0x45201c00, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// RSUBHN  <Vd>.<Tb>, <Vn>.<Ta>, <Vm>.<Ta>
	{AVRSUBHN, aRSUBHN, FEAT_NONE, 0x2e206000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// RSUBHN2  <Vd>.<Tb>, <Vn>.<Ta>, <Vm>.<Ta>
	{AVRSUBHN2, aRSUBHN2, FEAT_NONE, 0x6e206000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// RSUBHNB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZRSUBHNB, aRSUBHNB, FEAT_NONE, 0x45207800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// RSUBHNT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZRSUBHNT, aRSUBHNT, FEAT_NONE, 0x45207c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// SABA  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSABA, aSABA, FEAT_NONE, 0xe207c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SABA  <Zda>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZSABA, aSABA, FEAT_NONE, 0x4500f800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SABAL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSABAL, aSABAL, FEAT_NONE, 0xe205000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SABAL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSABAL2, aSABAL2, FEAT_NONE, 0x4e205000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SABALB  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSABALB, aSABALB, FEAT_NONE, 0x4500c000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// SABALT  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSABALT, aSABALT, FEAT_NONE, 0x4500c400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// SABD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSABD, aSABD, FEAT_NONE, 0xe207400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SABD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSABD, aSABD, FEAT_NONE, 0x40c0000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SABDL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSABDL, aSABDL, FEAT_NONE, 0xe207000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SABDL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSABDL2, aSABDL2, FEAT_NONE, 0x4e207000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SABDLB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSABDLB, aSABDLB, FEAT_NONE, 0x45003000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SABDLT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSABDLT, aSABDLT, FEAT_NONE, 0x45003400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SADALP  <Vd>.<Ta>, <Vn>.<Tb>
	{AVSADALP, aSADALP, FEAT_NONE, 0xe206800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size_Q__1D_2D_2S_4H_4S_8H,
		}},
	}},

	// SADALP  <Zda>.<T>, <Pg>/M, <Zn>.<Tb>
	{AZSADALP, aSADALP, FEAT_NONE, 0x4404a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// SADDL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSADDL, aSADDL, FEAT_NONE, 0xe200000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SADDL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSADDL2, aSADDL2, FEAT_NONE, 0x4e200000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SADDLB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSADDLB, aSADDLB, FEAT_NONE, 0x45000000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SADDLBT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSADDLBT, aSADDLBT, FEAT_NONE, 0x45008000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SADDLP  <Vd>.<Ta>, <Vn>.<Tb>
	{AVSADDLP, aSADDLP, FEAT_NONE, 0xe202800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size_Q__1D_2D_2S_4H_4S_8H,
		}},
	}},

	// SADDLT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSADDLT, aSADDLT, FEAT_NONE, 0x45000400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SADDLV  <V><d>, <Vn>.<T>
	{AVSADDLV, aSADDLV, FEAT_NONE, 0xe303800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__4H_4S_8B_8H_16B,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D_H_S,
			sa_d__Rd,
		}},
	}},

	// SADDV  <Dd>, <Pg>, <Zn>.<T>
	{AZSADDV, aSADDV, FEAT_NONE, 0x4002000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size_23_2__B_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_dd__Vd,
		}},
	}},

	// SADDW  <Vd>.<Ta>, <Vn>.<Ta>, <Vm>.<Tb>
	{AVSADDW, aSADDW, FEAT_NONE, 0xe201000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SADDW2  <Vd>.<Ta>, <Vn>.<Ta>, <Vm>.<Tb>
	{AVSADDW2, aSADDW2, FEAT_NONE, 0x4e201000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SADDWB  <Zd>.<T>, <Zn>.<T>, <Zm>.<Tb>
	{AZSADDWB, aSADDWB, FEAT_NONE, 0x45004000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SADDWT  <Zd>.<T>, <Zn>.<T>, <Zm>.<Tb>
	{AZSADDWT, aSADDWT, FEAT_NONE, 0x45004400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SB
	{ASB, aSB, FEAT_SB, 0xd50330ff, 0xffffffff, false, nil},

	// SBC  <Wd>, <Wn>, <Wm>
	{ASBCW, aSBC, FEAT_NONE, 0x5a000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SBC  <Xd>, <Xn>, <Xm>
	{ASBC, aSBC, FEAT_NONE, 0xda000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SBCLB  <Zda>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZSBCLB, aSBCLB, FEAT_NONE, 0x4580d000, 0xffa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__sz__D_S,
		}},
	}},

	// SBCLT  <Zda>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZSBCLT, aSBCLT, FEAT_NONE, 0x4580d400, 0xffa0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__sz__D_S,
		}},
	}},

	// SBCS  <Wd>, <Wn>, <Wm>
	{ASBCSW, aSBCS, FEAT_NONE, 0x7a000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SBCS  <Xd>, <Xn>, <Xm>
	{ASBCS, aSBCS, FEAT_NONE, 0xfa000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SBFIZ  <Wd>, <Wn>, #<lsb>, #<width>
	{ASBFIZW, aSBFIZ, FEAT_NONE, 0x13000000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_lsb,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_width,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SBFIZ  <Xd>, <Xn>, #<lsb>, #<width>
	{ASBFIZ, aSBFIZ, FEAT_NONE, 0x93400000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_lsb_2,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_width_1,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SBFM  <Wd>, <Wn>, #<immr>, #<imms>
	{ASBFMW, aSBFM, FEAT_NONE, 0x13000000, 0xffc00000, false, []arg{
		{AC_IMM, []elmType{
			sa_immr__immr,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_imms__imms,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SBFM  <Xd>, <Xn>, #<immr>, #<imms>
	{ASBFM, aSBFM, FEAT_NONE, 0x93400000, 0xffc00000, false, []arg{
		{AC_IMM, []elmType{
			sa_immr_1__immr,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_imms_1__imms,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SBFX  <Wd>, <Wn>, #<lsb>, #<width>
	{ASBFXW, aSBFX, FEAT_NONE, 0x13000000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_lsb_1,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_width,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SBFX  <Xd>, <Xn>, #<lsb>, #<width>
	{ASBFX, aSBFX, FEAT_NONE, 0x93400000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_lsb_3,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_width_1,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SCLAMP  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZSCLAMP, aSCLAMP, FEAT_SVE2p1, 0x4400c000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SCLAMP  { <Zd1>.<T>-<Zd2>.<T> }, <Zn>.<T>, <Zm>.<T>
	{AZSCLAMP, aSCLAMP, FEAT_SME2, 0xc120c400, 0xff20fc01, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_t__size__B_D_H_S,
			sa_zd2__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SCLAMP  { <Zd1>.<T>-<Zd4>.<T> }, <Zn>.<T>, <Zm>.<T>
	{AZSCLAMP, aSCLAMP, FEAT_SME2, 0xc120cc00, 0xff20fc03, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_t__size__B_D_H_S,
			sa_zd4__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SCVTF  <Hd>, <Hn>
	{AVSCVTFH, aSCVTF, FEAT_FP16, 0x5e79d800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// SCVTF  <V><d>, <V><n>
	{AVSCVTFS, aSCVTF, FEAT_NONE, 0x5e21d800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// SCVTF  <V><d>, <V><n>
	{AVSCVTFD, aSCVTF, FEAT_NONE, 0x5e61d800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// SCVTF  <Vd>.<T>, <Vn>.<T>
	{AVSCVTF, aSCVTF, FEAT_FP16, 0xe79d800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// SCVTF  <Vd>.<T>, <Vn>.<T>
	{AVSCVTF, aSCVTF, FEAT_NONE, 0xe21d800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// SCVTF  <V><d>, <V><n>, #<fbits>
	{AVSCVTFS, aSCVTF, FEAT_NONE, 0x5f20e400, 0xffe0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_d__Rd,
		}},
	}},

	// SCVTF  <V><d>, <V><n>, #<fbits>
	{AVSCVTFD, aSCVTF, FEAT_NONE, 0x5f40e400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_d__Rd,
		}},
	}},

	// SCVTF  <V><d>, <V><n>, #<fbits>
	{AVSCVTFH, aSCVTF, FEAT_NONE, 0x5f10e400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_d__Rd,
		}},
	}},

	// SCVTF  <Vd>.<T>, <Vn>.<T>, #<fbits>
	{AVSCVTF, aSCVTF, FEAT_NONE, 0xf00e400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8H_SEE_asimdimm,
		}},
	}},

	// SCVTF  <Hd>, <Wn>
	{ASCVTFWH, aSCVTF, FEAT_NONE, 0x1ee20000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// SCVTF  <Sd>, <Wn>
	{ASCVTFWS, aSCVTF, FEAT_NONE, 0x1e220000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// SCVTF  <Dd>, <Wn>
	{ASCVTFWD, aSCVTF, FEAT_NONE, 0x1e620000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// SCVTF  <Hd>, <Xn>
	{ASCVTFH, aSCVTF, FEAT_NONE, 0x9ee20000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// SCVTF  <Sd>, <Xn>
	{ASCVTFS, aSCVTF, FEAT_NONE, 0x9e220000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// SCVTF  <Dd>, <Xn>
	{ASCVTFD, aSCVTF, FEAT_NONE, 0x9e620000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// SCVTF  <Hd>, <Wn>, #<fbits>
	{ASCVTFWH, aSCVTF, FEAT_NONE, 0x1ec20000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__scale,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// SCVTF  <Sd>, <Wn>, #<fbits>
	{ASCVTFWS, aSCVTF, FEAT_NONE, 0x1e020000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__scale,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// SCVTF  <Dd>, <Wn>, #<fbits>
	{ASCVTFWD, aSCVTF, FEAT_NONE, 0x1e420000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__scale,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// SCVTF  <Hd>, <Xn>, #<fbits>
	{ASCVTFH, aSCVTF, FEAT_NONE, 0x9ec20000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__scale,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// SCVTF  <Sd>, <Xn>, #<fbits>
	{ASCVTFS, aSCVTF, FEAT_NONE, 0x9e020000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__scale,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// SCVTF  <Dd>, <Xn>, #<fbits>
	{ASCVTFD, aSCVTF, FEAT_NONE, 0x9e420000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__scale,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// SCVTF  <Zd>.H, <Pg>/M, <Zn>.H
	{AZSCVTF, aSCVTF, FEAT_NONE, 0x6552a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// SCVTF  <Zd>.H, <Pg>/M, <Zn>.S
	{AZSCVTF, aSCVTF, FEAT_NONE, 0x6554a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// SCVTF  <Zd>.S, <Pg>/M, <Zn>.S
	{AZSCVTF, aSCVTF, FEAT_NONE, 0x6594a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// SCVTF  <Zd>.D, <Pg>/M, <Zn>.S
	{AZSCVTF, aSCVTF, FEAT_NONE, 0x65d0a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// SCVTF  <Zd>.H, <Pg>/M, <Zn>.D
	{AZSCVTF, aSCVTF, FEAT_NONE, 0x6556a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// SCVTF  <Zd>.S, <Pg>/M, <Zn>.D
	{AZSCVTF, aSCVTF, FEAT_NONE, 0x65d4a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// SCVTF  <Zd>.D, <Pg>/M, <Zn>.D
	{AZSCVTF, aSCVTF, FEAT_NONE, 0x65d6a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// SCVTF  { <Zd1>.S-<Zd2>.S }, { <Zn1>.S-<Zn2>.S }
	{AZSCVTF, aSCVTF, FEAT_SME2, 0xc122e000, 0xfffffc21, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_S,
		}},
	}},

	// SCVTF  { <Zd1>.S-<Zd4>.S }, { <Zn1>.S-<Zn4>.S }
	{AZSCVTF, aSCVTF, FEAT_SME2, 0xc132e000, 0xfffffc63, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_zd4__Zd,
			sa_const_REGLIST4_S,
		}},
	}},

	// SDIV  <Wd>, <Wn>, <Wm>
	{ASDIVW, aSDIV, FEAT_NONE, 0x1ac00c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SDIV  <Xd>, <Xn>, <Xm>
	{ASDIV, aSDIV, FEAT_NONE, 0x9ac00c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SDIV  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSDIV, aSDIV, FEAT_NONE, 0x4140000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size_0__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_0__D_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_0__D_S,
		}},
	}},

	// SDIVR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSDIVR, aSDIVR, FEAT_NONE, 0x4160000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size_0__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_0__D_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_0__D_S,
		}},
	}},

	// SDOT  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSDOT, aSDOT, FEAT_DotProd, 0xe009400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// SDOT  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.4B[<index>]
	{AVSDOT, aSDOT, FEAT_DotProd, 0xf00e000, 0xbf00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__M_Rm,
			sa_const_ARNGIDX_4B,
			sa_index__H_L,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// SDOT  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSDOT, aSDOT, FEAT_NONE, 0x44000000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size_0__B_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size_0__B_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size_0__D_S,
		}},
	}},

	// SDOT  <Zda>.S, <Zn>.B, <Zm>.B[<imm>]
	{AZSDOT, aSDOT, FEAT_NONE, 0x44a00000, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_B,
			sa_imm_1__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SDOT  <Zda>.D, <Zn>.H, <Zm>.H[<imm>]
	{AZSDOT, aSDOT, FEAT_NONE, 0x44e00000, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_imm__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// SDOT  <Zda>.S, <Zn>.H, <Zm>.H
	{AZSDOT, aSDOT, FEAT_SVE2p1, 0x4400c800, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SDOT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZSDOT, aSDOT, FEAT_SVE2p1, 0x4480c800, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SDOT  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zn1>.<Tb>-<Zn2>.<Tb> }, <Zm>.<Tb>
	{AZSDOT, aSDOT, FEAT_SME2, 0xc1201400, 0xffb09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_tb__sz__B_H,
			sa_zn2__Zn_9_5,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// SDOT  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zn1>.<Tb>-<Zn4>.<Tb> }, <Zm>.<Tb>
	{AZSDOT, aSDOT, FEAT_SME2, 0xc1301400, 0xffb09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_tb__sz__B_H,
			sa_zn4__Zn_9_5,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZSDOT, aSDOT, FEAT_SME2, 0xc1501000, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// SDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZSDOT, aSDOT, FEAT_SME2, 0xc1509000, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B[<index>]
	{AZSDOT, aSDOT, FEAT_SME2, 0xc1501020, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// SDOT  ZA.D[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZSDOT, aSDOT, FEAT_SME_I16I64, 0xc1d00008, 0xfff09838, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// SDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZSDOT, aSDOT, FEAT_SME2, 0xc1509020, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SDOT  ZA.D[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZSDOT, aSDOT, FEAT_SME_I16I64, 0xc1d08008, 0xfff09878, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZSDOT, aSDOT, FEAT_SME2, 0xc1601408, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// SDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZSDOT, aSDOT, FEAT_SME2, 0xc1701408, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SDOT  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zn1>.<Tb>-<Zn2>.<Tb> }, { <Zm1>.<Tb>-<Zm2>.<Tb> }
	{AZSDOT, aSDOT, FEAT_SME2, 0xc1a01400, 0xffa19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_tb__sz__B_H,
			sa_zm2__Zm_20_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_tb__sz__B_H,
			sa_zn2__Zn_9_4,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// SDOT  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zn1>.<Tb>-<Zn4>.<Tb> }, { <Zm1>.<Tb>-<Zm4>.<Tb> }
	{AZSDOT, aSDOT, FEAT_SME2, 0xc1a11400, 0xffa39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_tb__sz__B_H,
			sa_zm4__Zm_20_3,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_tb__sz__B_H,
			sa_zn4__Zn_9_3,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZSDOT, aSDOT, FEAT_SME2, 0xc1e01408, 0xffe19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// SDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZSDOT, aSDOT, FEAT_SME2, 0xc1e11408, 0xffe39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SEL  <Pd>.B, <Pg>, <Pn>.B, <Pm>.B
	{APSEL, aSEL, FEAT_NONE, 0x25004210, 0xfff0c210, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_13_4,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_const_ARNG_B,
		}},
	}},

	// SEL  <Zd>.<T>, <Pv>, <Zn>.<T>, <Zm>.<T>
	{AZSEL, aSEL, FEAT_NONE, 0x520c000, 0xff20c000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pv__Pv,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SEL  { <Zd1>.<T>-<Zd2>.<T> }, <PNg>, { <Zn1>.<T>-<Zn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZSEL, aSEL, FEAT_SME2, 0xc1208000, 0xff21e021, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__size__B_D_H_S,
			sa_zm2__Zm_20_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_t__size__B_D_H_S,
			sa_zn2__Zn_9_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_t__size__B_D_H_S,
			sa_zd2__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SEL  { <Zd1>.<T>-<Zd4>.<T> }, <PNg>, { <Zn1>.<T>-<Zn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZSEL, aSEL, FEAT_SME2, 0xc1218000, 0xff23e063, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__size__B_D_H_S,
			sa_zm4__Zm_20_3,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_t__size__B_D_H_S,
			sa_zn4__Zn_9_3,
			sa_t__size__B_D_H_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_t__size__B_D_H_S,
			sa_zd4__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SETE  [<Xd>]!, <Xn>!, <Xs>
	{ASETE, aSETE, FEAT_MOPS, 0x19c08400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETM  [<Xd>]!, <Xn>!, <Xs>
	{ASETM, aSETM, FEAT_MOPS, 0x19c04400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETP  [<Xd>]!, <Xn>!, <Xs>
	{ASETP, aSETP, FEAT_MOPS, 0x19c00400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETEN  [<Xd>]!, <Xn>!, <Xs>
	{ASETEN, aSETEN, FEAT_MOPS, 0x19c0a400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETMN  [<Xd>]!, <Xn>!, <Xs>
	{ASETMN, aSETMN, FEAT_MOPS, 0x19c06400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETPN  [<Xd>]!, <Xn>!, <Xs>
	{ASETPN, aSETPN, FEAT_MOPS, 0x19c02400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETET  [<Xd>]!, <Xn>!, <Xs>
	{ASETET, aSETET, FEAT_MOPS, 0x19c09400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETMT  [<Xd>]!, <Xn>!, <Xs>
	{ASETMT, aSETMT, FEAT_MOPS, 0x19c05400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETPT  [<Xd>]!, <Xn>!, <Xs>
	{ASETPT, aSETPT, FEAT_MOPS, 0x19c01400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETETN  [<Xd>]!, <Xn>!, <Xs>
	{ASETETN, aSETETN, FEAT_MOPS, 0x19c0b400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETMTN  [<Xd>]!, <Xn>!, <Xs>
	{ASETMTN, aSETMTN, FEAT_MOPS, 0x19c07400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETPTN  [<Xd>]!, <Xn>!, <Xs>
	{ASETPTN, aSETPTN, FEAT_MOPS, 0x19c03400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETF8  <Wn>
	{ASETF8, aSETF8, FEAT_FlagM, 0x3a00080d, 0xfffffc1f, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
	}},

	// SETF16  <Wn>
	{ASETF16, aSETF16, FEAT_FlagM, 0x3a00480d, 0xfffffc1f, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
	}},

	// SETFFR
	{ASETFFR, aSETFFR, FEAT_NONE, 0x252c9000, 0xffffffff, false, nil},

	// SETGE  [<Xd>]!, <Xn>!, <Xs>
	{ASETGE, aSETGE, FEAT_MOPS, 0x1dc08400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs_1__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETGM  [<Xd>]!, <Xn>!, <Xs>
	{ASETGM, aSETGM, FEAT_MOPS, 0x1dc04400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETGP  [<Xd>]!, <Xn>!, <Xs>
	{ASETGP, aSETGP, FEAT_MOPS, 0x1dc00400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETGEN  [<Xd>]!, <Xn>!, <Xs>
	{ASETGEN, aSETGEN, FEAT_MOPS, 0x1dc0a400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs_1__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETGMN  [<Xd>]!, <Xn>!, <Xs>
	{ASETGMN, aSETGMN, FEAT_MOPS, 0x1dc06400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETGPN  [<Xd>]!, <Xn>!, <Xs>
	{ASETGPN, aSETGPN, FEAT_MOPS, 0x1dc02400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETGET  [<Xd>]!, <Xn>!, <Xs>
	{ASETGET, aSETGET, FEAT_MOPS, 0x1dc09400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs_1__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETGMT  [<Xd>]!, <Xn>!, <Xs>
	{ASETGMT, aSETGMT, FEAT_MOPS, 0x1dc05400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETGPT  [<Xd>]!, <Xn>!, <Xs>
	{ASETGPT, aSETGPT, FEAT_MOPS, 0x1dc01400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETGETN  [<Xd>]!, <Xn>!, <Xs>
	{ASETGETN, aSETGETN, FEAT_MOPS, 0x1dc0b400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs_1__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_2__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETGMTN  [<Xd>]!, <Xn>!, <Xs>
	{ASETGMTN, aSETGMTN, FEAT_MOPS, 0x1dc07400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn_1__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd_1__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SETGPTN  [<Xd>]!, <Xn>!, <Xs>
	{ASETGPTN, aSETGPTN, FEAT_MOPS, 0x1dc03400, 0x3fe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xd__Rd,
			sa_const_MEMPREIMM_no_offset,
		}},
	}},

	// SEV
	{ASEV, aSEV, FEAT_NONE, 0xd503209f, 0xffffffff, false, nil},

	// SEVL
	{ASEVL, aSEVL, FEAT_NONE, 0xd50320bf, 0xffffffff, false, nil},

	// SHA1C  <Qd>, <Sn>, <Vm>.4S
	{ASHA1C, aSHA1C, FEAT_SHA1, 0x5e000000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_4S,
		}},
		{AC_VREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_VREG, []elmType{
			sa_qd__Rd,
		}},
	}},

	// SHA1H  <Sd>, <Sn>
	{ASHA1H, aSHA1H, FEAT_SHA1, 0x5e280800, 0xfffffc00, false, []arg{
		{AC_VREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_VREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// SHA1M  <Qd>, <Sn>, <Vm>.4S
	{ASHA1M, aSHA1M, FEAT_SHA1, 0x5e002000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_4S,
		}},
		{AC_VREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_VREG, []elmType{
			sa_qd__Rd,
		}},
	}},

	// SHA1P  <Qd>, <Sn>, <Vm>.4S
	{ASHA1P, aSHA1P, FEAT_SHA1, 0x5e001000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_4S,
		}},
		{AC_VREG, []elmType{
			sa_sn__Rn,
		}},
		{AC_VREG, []elmType{
			sa_qd__Rd,
		}},
	}},

	// SHA1SU0  <Vd>.4S, <Vn>.4S, <Vm>.4S
	{ASHA1SU0, aSHA1SU0, FEAT_SHA1, 0x5e003000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SHA1SU1  <Vd>.4S, <Vn>.4S
	{ASHA1SU1, aSHA1SU1, FEAT_SHA1, 0x5e281800, 0xfffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SHA256H  <Qd>, <Qn>, <Vm>.4S
	{ASHA256H, aSHA256H, FEAT_SHA256, 0x5e004000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_4S,
		}},
		{AC_VREG, []elmType{
			sa_qn__Rn,
		}},
		{AC_VREG, []elmType{
			sa_qd__Rd,
		}},
	}},

	// SHA256H2  <Qd>, <Qn>, <Vm>.4S
	{ASHA256H2, aSHA256H2, FEAT_SHA256, 0x5e005000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_4S,
		}},
		{AC_VREG, []elmType{
			sa_qn__Rn,
		}},
		{AC_VREG, []elmType{
			sa_qd__Rd,
		}},
	}},

	// SHA256SU0  <Vd>.4S, <Vn>.4S
	{ASHA256SU0, aSHA256SU0, FEAT_SHA256, 0x5e282800, 0xfffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SHA256SU1  <Vd>.4S, <Vn>.4S, <Vm>.4S
	{ASHA256SU1, aSHA256SU1, FEAT_SHA256, 0x5e006000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SHA512H  <Qd>, <Qn>, <Vm>.2D
	{ASHA512H, aSHA512H, FEAT_SHA512, 0xce608000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_2D,
		}},
		{AC_VREG, []elmType{
			sa_qn__Rn,
		}},
		{AC_VREG, []elmType{
			sa_qd__Rd,
		}},
	}},

	// SHA512H2  <Qd>, <Qn>, <Vm>.2D
	{ASHA512H2, aSHA512H2, FEAT_SHA512, 0xce608400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_2D,
		}},
		{AC_VREG, []elmType{
			sa_qn__Rn,
		}},
		{AC_VREG, []elmType{
			sa_qd__Rd,
		}},
	}},

	// SHA512SU0  <Vd>.2D, <Vn>.2D
	{ASHA512SU0, aSHA512SU0, FEAT_SHA512, 0xcec08000, 0xfffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_2D,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_2D,
		}},
	}},

	// SHA512SU1  <Vd>.2D, <Vn>.2D, <Vm>.2D
	{ASHA512SU1, aSHA512SU1, FEAT_SHA512, 0xce608800, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_2D,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_2D,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_2D,
		}},
	}},

	// SHADD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSHADD, aSHADD, FEAT_NONE, 0xe200400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SHADD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSHADD, aSHADD, FEAT_NONE, 0x44108000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SHL  <V><d>, <V><n>, #<shift>
	{AVSHLD, aSHL, FEAT_NONE, 0x5f405400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_d__Rd,
		}},
	}},

	// SHL  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVSHL, aSHL, FEAT_NONE, 0xf005400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SHLL  <Vd>.<Ta>, <Vn>.<Tb>, #<shift>
	{AVSHLL, aSHLL, FEAT_NONE, 0x2e213800, 0xff3ffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__size__8_16_32,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SHLL2  <Vd>.<Ta>, <Vn>.<Tb>, #<shift>
	{AVSHLL2, aSHLL2, FEAT_NONE, 0x6e213800, 0xff3ffc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__size__8_16_32,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SHRN  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVSHRN, aSHRN, FEAT_NONE, 0xf008400, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SHRN2  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVSHRN2, aSHRN2, FEAT_NONE, 0x4f008400, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SHRNB  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZSHRNB, aSHRNB, FEAT_NONE, 0x45201000, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SHRNT  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZSHRNT, aSHRNT, FEAT_NONE, 0x45201400, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SHSUB  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSHSUB, aSHSUB, FEAT_NONE, 0xe202400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SHSUB  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSHSUB, aSHSUB, FEAT_NONE, 0x44128000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SHSUBR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSHSUBR, aSHSUBR, FEAT_NONE, 0x44168000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SLI  <V><d>, <V><n>, #<shift>
	{AVSLID, aSLI, FEAT_NONE, 0x7f405400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_d__Rd,
		}},
	}},

	// SLI  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVSLI, aSLI, FEAT_NONE, 0x2f005400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SLI  <Zd>.<T>, <Zn>.<T>, #<const>
	{AZSLI, aSLI, FEAT_NONE, 0x4500f400, 0xff20fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
	}},

	// SM3PARTW1  <Vd>.4S, <Vn>.4S, <Vm>.4S
	{ASM3PARTW1, aSM3PARTW1, FEAT_SM3, 0xce60c000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SM3PARTW2  <Vd>.4S, <Vn>.4S, <Vm>.4S
	{ASM3PARTW2, aSM3PARTW2, FEAT_SM3, 0xce60c400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SM3SS1  <Vd>.4S, <Vn>.4S, <Vm>.4S, <Va>.4S
	{ASM3SS1, aSM3SS1, FEAT_SM3, 0xce400000, 0xffe08000, false, []arg{
		{AC_ARNG, []elmType{
			sa_va__Ra,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SM3TT1A  <Vd>.4S, <Vn>.4S, <Vm>.S[<imm2>]
	{ASM3TT1A, aSM3TT1A, FEAT_SM3, 0xce408000, 0xffe0cc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNGIDX_S,
			sa_imm2__imm2,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SM3TT1B  <Vd>.4S, <Vn>.4S, <Vm>.S[<imm2>]
	{ASM3TT1B, aSM3TT1B, FEAT_SM3, 0xce408400, 0xffe0cc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNGIDX_S,
			sa_imm2__imm2,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SM3TT2A  <Vd>.4S, <Vn>.4S, <Vm>.S[<imm2>]
	{ASM3TT2A, aSM3TT2A, FEAT_SM3, 0xce408800, 0xffe0cc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNGIDX_S,
			sa_imm2__imm2,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SM3TT2B  <Vd>.4S, <Vn>.4S, <Vm>.S[<imm2>]
	{ASM3TT2B, aSM3TT2B, FEAT_SM3, 0xce408c00, 0xffe0cc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNGIDX_S,
			sa_imm2__imm2,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SM4E  <Vd>.4S, <Vn>.4S
	{ASM4E, aSM4E, FEAT_SM4, 0xcec08400, 0xfffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SM4E  <Zdn>.S, <Zdn>.S, <Zm>.S
	{ASM4E, aSM4E, FEAT_SVE_SM4, 0x4523e000, 0xfffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// SM4EKEY  <Vd>.4S, <Vn>.4S, <Vm>.4S
	{ASM4EKEY, aSM4EKEY, FEAT_SM4, 0xce60c800, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SM4EKEY  <Zd>.S, <Zn>.S, <Zm>.S
	{ASM4EKEY, aSM4EKEY, FEAT_SVE_SM4, 0x4520f000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// SMADDL  <Xd>, <Wn>, <Wm>, <Xa>
	{ASMADDL, aSMADDL, FEAT_NONE, 0x9b200000, 0xffe08000, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xa__Ra,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SMAX  <Wd>, <Wn>, #<simm>
	{ASMAXW, aSMAX, FEAT_CSSC, 0x11c00000, 0xfffc0000, false, []arg{
		{AC_IMM, []elmType{
			sa_simm__imm8,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SMAX  <Xd>, <Xn>, #<simm>
	{ASMAX, aSMAX, FEAT_CSSC, 0x91c00000, 0xfffc0000, false, []arg{
		{AC_IMM, []elmType{
			sa_simm__imm8,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SMAX  <Wd>, <Wn>, <Wm>
	{ASMAXW, aSMAX, FEAT_CSSC, 0x1ac06000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SMAX  <Xd>, <Xn>, <Xm>
	{ASMAX, aSMAX, FEAT_CSSC, 0x9ac06000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SMAX  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSMAX, aSMAX, FEAT_NONE, 0xe206400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SMAX  <Zdn>.<T>, <Zdn>.<T>, #<imm>
	{AZSMAX, aSMAX, FEAT_NONE, 0x2528c000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMAX  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSMAX, aSMAX, FEAT_NONE, 0x4080000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMAX  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, <Zm>.<T>
	{AZSMAX, aSMAX, FEAT_SME2, 0xc120a000, 0xff30ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMAX  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, <Zm>.<T>
	{AZSMAX, aSMAX, FEAT_SME2, 0xc120a800, 0xff30ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMAX  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZSMAX, aSMAX, FEAT_SME2, 0xc120b000, 0xff21ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__size__B_D_H_S,
			sa_zm2__Zm_20_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMAX  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZSMAX, aSMAX, FEAT_SME2, 0xc120b800, 0xff23ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__size__B_D_H_S,
			sa_zm4__Zm_20_3,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMAXP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSMAXP, aSMAXP, FEAT_NONE, 0xe20a400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SMAXP  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSMAXP, aSMAXP, FEAT_NONE, 0x4414a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMAXQV  <Vd>.<T>, <Pg>, <Zn>.<Tb>
	{AZSMAXQV, aSMAXQV, FEAT_SVE2p1, 0x40c2000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Vd,
			sa_t__size__2D_4S_8H_16B,
		}},
	}},

	// SMAXV  <V><d>, <Vn>.<T>
	{AVSMAXV, aSMAXV, FEAT_NONE, 0xe30a800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__4H_4S_8B_8H_16B,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SMAXV  <V><d>, <Pg>, <Zn>.<T>
	{AZSMAXV, aSMAXV, FEAT_NONE, 0x4082000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Vd,
		}},
	}},

	// SMC  #<imm>
	{ASMC, aSMC, FEAT_NONE, 0xd4000003, 0xffe0001f, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
		}},
	}},

	// SMIN  <Wd>, <Wn>, #<simm>
	{ASMINW, aSMIN, FEAT_CSSC, 0x11c80000, 0xfffc0000, false, []arg{
		{AC_IMM, []elmType{
			sa_simm__imm8,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SMIN  <Xd>, <Xn>, #<simm>
	{ASMIN, aSMIN, FEAT_CSSC, 0x91c80000, 0xfffc0000, false, []arg{
		{AC_IMM, []elmType{
			sa_simm__imm8,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SMIN  <Wd>, <Wn>, <Wm>
	{ASMINW, aSMIN, FEAT_CSSC, 0x1ac06800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SMIN  <Xd>, <Xn>, <Xm>
	{ASMIN, aSMIN, FEAT_CSSC, 0x9ac06800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SMIN  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSMIN, aSMIN, FEAT_NONE, 0xe206c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SMIN  <Zdn>.<T>, <Zdn>.<T>, #<imm>
	{AZSMIN, aSMIN, FEAT_NONE, 0x252ac000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMIN  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSMIN, aSMIN, FEAT_NONE, 0x40a0000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMIN  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, <Zm>.<T>
	{AZSMIN, aSMIN, FEAT_SME2, 0xc120a020, 0xff30ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMIN  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, <Zm>.<T>
	{AZSMIN, aSMIN, FEAT_SME2, 0xc120a820, 0xff30ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMIN  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZSMIN, aSMIN, FEAT_SME2, 0xc120b020, 0xff21ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__size__B_D_H_S,
			sa_zm2__Zm_20_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMIN  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZSMIN, aSMIN, FEAT_SME2, 0xc120b820, 0xff23ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__size__B_D_H_S,
			sa_zm4__Zm_20_3,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMINP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSMINP, aSMINP, FEAT_NONE, 0xe20ac00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SMINP  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSMINP, aSMINP, FEAT_NONE, 0x4416a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMINQV  <Vd>.<T>, <Pg>, <Zn>.<Tb>
	{AZSMINQV, aSMINQV, FEAT_SVE2p1, 0x40e2000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Vd,
			sa_t__size__2D_4S_8H_16B,
		}},
	}},

	// SMINV  <V><d>, <Vn>.<T>
	{AVSMINV, aSMINV, FEAT_NONE, 0xe31a800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__4H_4S_8B_8H_16B,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SMINV  <V><d>, <Pg>, <Zn>.<T>
	{AZSMINV, aSMINV, FEAT_NONE, 0x40a2000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Vd,
		}},
	}},

	// SMLAL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSMLAL, aSMLAL, FEAT_NONE, 0xe208000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SMLAL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSMLAL2, aSMLAL2, FEAT_NONE, 0x4e208000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SMLAL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVSMLAL, aSMLAL, FEAT_NONE, 0xf002000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SMLAL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVSMLAL2, aSMLAL2, FEAT_NONE, 0x4f002000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SMLAL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H
	{AZSMLAL, aSMLAL, FEAT_SME2, 0xc1600c00, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// SMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZSMLAL, aSMLAL, FEAT_SME2, 0xc1600800, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZSMLAL, aSMLAL, FEAT_SME2, 0xc1700800, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLAL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H[<index>]
	{AZSMLAL, aSMLAL, FEAT_SME2, 0xc1c01000, 0xfff01018, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_15_1_i3l_11_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// SMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZSMLAL, aSMLAL, FEAT_SME2, 0xc1d01000, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZSMLAL, aSMLAL, FEAT_SME2, 0xc1d09000, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZSMLAL, aSMLAL, FEAT_SME2, 0xc1e00800, 0xffe19c3c, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZSMLAL, aSMLAL, FEAT_SME2, 0xc1e10800, 0xffe39c7c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLALB  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSMLALB, aSMLALB, FEAT_NONE, 0x44004000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// SMLALB  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZSMLALB, aSMLALB, FEAT_NONE, 0x44a08000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SMLALB  <Zda>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZSMLALB, aSMLALB, FEAT_NONE, 0x44e08000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// SMLALL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.B, <Zm>.B[<index>]
	{AZSMLALL, aSMLALL, FEAT_SME2, 0xc1000000, 0xfff0001c, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i4h_15_1_i4l_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// SMLALL  ZA.D[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H[<index>]
	{AZSMLALL, aSMLALL, FEAT_SME_I16I64, 0xc1800000, 0xfff0101c, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_15_1_i3l_11_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_D,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// SMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B[<index>]
	{AZSMLALL, aSMLALL, FEAT_SME2, 0xc1100000, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i4h_11_2_i4l_2_2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLALL  ZA.D[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZSMLALL, aSMLALL, FEAT_SME_I16I64, 0xc1900000, 0xfff09838, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_10_1_i3l_2_2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_D,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZSMLALL, aSMLALL, FEAT_SME2, 0xc1108000, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i4h_11_2_i4l_2_2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLALL  ZA.D[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZSMLALL, aSMLALL, FEAT_SME_I16I64, 0xc1908000, 0xfff09878, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_10_1_i3l_2_2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_D,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLALL  ZA.<T>[<Wv>, <offsf>:<offsl>], <Zn>.<Tb>, <Zm>.<Tb>
	{AZSMLALL, aSMLALL, FEAT_SME2, 0xc1200400, 0xffb09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// SMLALL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.<Tb>-<Zn2>.<Tb> }, <Zm>.<Tb>
	{AZSMLALL, aSMLALL, FEAT_SME2, 0xc1200000, 0xffb09c1e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_tb__sz__B_H,
			sa_zn2__Zn_9_5,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLALL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.<Tb>-<Zn4>.<Tb> }, <Zm>.<Tb>
	{AZSMLALL, aSMLALL, FEAT_SME2, 0xc1300000, 0xffb09c1e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_tb__sz__B_H,
			sa_zn4__Zn_9_5,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLALL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.<Tb>-<Zn2>.<Tb> }, { <Zm1>.<Tb>-<Zm2>.<Tb> }
	{AZSMLALL, aSMLALL, FEAT_SME2, 0xc1a00000, 0xffa19c3e, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_tb__sz__B_H,
			sa_zm2__Zm_20_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_tb__sz__B_H,
			sa_zn2__Zn_9_4,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf__o1,
			sa_offsl__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLALL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.<Tb>-<Zn4>.<Tb> }, { <Zm1>.<Tb>-<Zm4>.<Tb> }
	{AZSMLALL, aSMLALL, FEAT_SME2, 0xc1a10000, 0xffa39c7e, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_tb__sz__B_H,
			sa_zm4__Zm_20_3,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_tb__sz__B_H,
			sa_zn4__Zn_9_3,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf__o1,
			sa_offsl__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLALT  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSMLALT, aSMLALT, FEAT_NONE, 0x44004400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// SMLALT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZSMLALT, aSMLALT, FEAT_NONE, 0x44a08400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SMLALT  <Zda>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZSMLALT, aSMLALT, FEAT_NONE, 0x44e08400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// SMLSL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSMLSL, aSMLSL, FEAT_NONE, 0xe20a000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SMLSL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSMLSL2, aSMLSL2, FEAT_NONE, 0x4e20a000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SMLSL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVSMLSL, aSMLSL, FEAT_NONE, 0xf006000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SMLSL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVSMLSL2, aSMLSL2, FEAT_NONE, 0x4f006000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SMLSL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H
	{AZSMLSL, aSMLSL, FEAT_SME2, 0xc1600c08, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// SMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZSMLSL, aSMLSL, FEAT_SME2, 0xc1600808, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZSMLSL, aSMLSL, FEAT_SME2, 0xc1700808, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLSL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H[<index>]
	{AZSMLSL, aSMLSL, FEAT_SME2, 0xc1c01008, 0xfff01018, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_15_1_i3l_11_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// SMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZSMLSL, aSMLSL, FEAT_SME2, 0xc1d01008, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZSMLSL, aSMLSL, FEAT_SME2, 0xc1d09008, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZSMLSL, aSMLSL, FEAT_SME2, 0xc1e00808, 0xffe19c3c, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZSMLSL, aSMLSL, FEAT_SME2, 0xc1e10808, 0xffe39c7c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLSLB  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSMLSLB, aSMLSLB, FEAT_NONE, 0x44005000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// SMLSLB  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZSMLSLB, aSMLSLB, FEAT_NONE, 0x44a0a000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SMLSLB  <Zda>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZSMLSLB, aSMLSLB, FEAT_NONE, 0x44e0a000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// SMLSLL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.B, <Zm>.B[<index>]
	{AZSMLSLL, aSMLSLL, FEAT_SME2, 0xc1000008, 0xfff0001c, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i4h_15_1_i4l_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// SMLSLL  ZA.D[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H[<index>]
	{AZSMLSLL, aSMLSLL, FEAT_SME_I16I64, 0xc1800008, 0xfff0101c, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_15_1_i3l_11_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_D,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// SMLSLL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B[<index>]
	{AZSMLSLL, aSMLSLL, FEAT_SME2, 0xc1100008, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i4h_11_2_i4l_2_2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLSLL  ZA.D[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZSMLSLL, aSMLSLL, FEAT_SME_I16I64, 0xc1900008, 0xfff09838, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_10_1_i3l_2_2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_D,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLSLL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZSMLSLL, aSMLSLL, FEAT_SME2, 0xc1108008, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i4h_11_2_i4l_2_2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLSLL  ZA.D[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZSMLSLL, aSMLSLL, FEAT_SME_I16I64, 0xc1908008, 0xfff09878, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_10_1_i3l_2_2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_D,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLSLL  ZA.<T>[<Wv>, <offsf>:<offsl>], <Zn>.<Tb>, <Zm>.<Tb>
	{AZSMLSLL, aSMLSLL, FEAT_SME2, 0xc1200408, 0xffb09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// SMLSLL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.<Tb>-<Zn2>.<Tb> }, <Zm>.<Tb>
	{AZSMLSLL, aSMLSLL, FEAT_SME2, 0xc1200008, 0xffb09c1e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_tb__sz__B_H,
			sa_zn2__Zn_9_5,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLSLL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.<Tb>-<Zn4>.<Tb> }, <Zm>.<Tb>
	{AZSMLSLL, aSMLSLL, FEAT_SME2, 0xc1300008, 0xffb09c1e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_tb__sz__B_H,
			sa_zn4__Zn_9_5,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLSLL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.<Tb>-<Zn2>.<Tb> }, { <Zm1>.<Tb>-<Zm2>.<Tb> }
	{AZSMLSLL, aSMLSLL, FEAT_SME2, 0xc1a00008, 0xffa19c3e, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_tb__sz__B_H,
			sa_zm2__Zm_20_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_tb__sz__B_H,
			sa_zn2__Zn_9_4,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf__o1,
			sa_offsl__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SMLSLL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.<Tb>-<Zn4>.<Tb> }, { <Zm1>.<Tb>-<Zm4>.<Tb> }
	{AZSMLSLL, aSMLSLL, FEAT_SME2, 0xc1a10008, 0xffa39c7e, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_tb__sz__B_H,
			sa_zm4__Zm_20_3,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_tb__sz__B_H,
			sa_zn4__Zn_9_3,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf__o1,
			sa_offsl__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SMLSLT  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSMLSLT, aSMLSLT, FEAT_NONE, 0x44005400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// SMLSLT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZSMLSLT, aSMLSLT, FEAT_NONE, 0x44a0a400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SMLSLT  <Zda>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZSMLSLT, aSMLSLT, FEAT_NONE, 0x44e0a400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// SMMLA  <Vd>.4S, <Vn>.16B, <Vm>.16B
	{AVSMMLA, aSMMLA, FEAT_I8MM, 0x4e80a400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// SMMLA  <Zda>.S, <Zn>.B, <Zm>.B
	{AZSMMLA, aSMMLA, FEAT_I8MM, 0x45009800, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SMNEGL  <Xd>, <Wn>, <Wm>
	{ASMNEGL, aSMNEGL, FEAT_NONE, 0x9b20fc00, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SMOPA  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.B, <Zm>.B
	{AZSMOPA, aSMOPA, FEAT_SME, 0xa0800000, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// SMOPA  <ZAda>.D, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZSMOPA, aSMOPA, FEAT_SME_I16I64, 0xa0c00000, 0xffe00018, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_1__ZAda,
			sa_const_ARNG_D,
		}},
	}},

	// SMOPA  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZSMOPA, aSMOPA, FEAT_SME2, 0xa0800008, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// SMOPS  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.B, <Zm>.B
	{AZSMOPS, aSMOPS, FEAT_SME, 0xa0800010, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// SMOPS  <ZAda>.D, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZSMOPS, aSMOPS, FEAT_SME_I16I64, 0xa0c00010, 0xffe00018, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_1__ZAda,
			sa_const_ARNG_D,
		}},
	}},

	// SMOPS  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZSMOPS, aSMOPS, FEAT_SME2, 0xa0800018, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// SMOV  <Wd>, <Vn>.<Ts>[<index>]
	{AVSMOV, aSMOV, FEAT_NONE, 0xe002c00, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vn__Rn,
			sa_ts__imm5__B_H,
			sa_index__imm5,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SMOV  <Xd>, <Vn>.<Ts>[<index>]
	{AVSMOV, aSMOV, FEAT_NONE, 0x4e002c00, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vn__Rn,
			sa_ts_1__imm5__B_H_S,
			sa_index_1__imm5,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SMSTART
	{ASMSTART, aSMSTART, FEAT_SME, 0xd503477f, 0xffffffff, true, nil},

	// SMSTART  <option>
	{ASMSTART, aSMSTART, FEAT_SME, 0xd503417f, 0xfffff9ff, true, []arg{
		{AC_SPOP, []elmType{
			sa_option__CRm_2_1,
		}},
	}},

	// SMSTOP
	{ASMSTOP, aSMSTOP, FEAT_SME, 0xd503467f, 0xffffffff, true, nil},

	// SMSTOP  <option>
	{ASMSTOP, aSMSTOP, FEAT_SME, 0xd503407f, 0xfffff9ff, true, []arg{
		{AC_SPOP, []elmType{
			sa_option__CRm_2_1,
		}},
	}},

	// SMSUBL  <Xd>, <Wn>, <Wm>, <Xa>
	{ASMSUBL, aSMSUBL, FEAT_NONE, 0x9b208000, 0xffe08000, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xa__Ra,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SMULH  <Xd>, <Xn>, <Xm>
	{ASMULH, aSMULH, FEAT_NONE, 0x9b407c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SMULH  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSMULH, aSMULH, FEAT_NONE, 0x4120000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMULH  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZSMULH, aSMULH, FEAT_NONE, 0x4206800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SMULL  <Xd>, <Wn>, <Wm>
	{ASMULL, aSMULL, FEAT_NONE, 0x9b207c00, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SMULL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSMULL, aSMULL, FEAT_NONE, 0xe20c000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SMULL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSMULL2, aSMULL2, FEAT_NONE, 0x4e20c000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SMULL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVSMULL, aSMULL, FEAT_NONE, 0xf00a000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SMULL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVSMULL2, aSMULL2, FEAT_NONE, 0x4f00a000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SMULLB  <Zd>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZSMULLB, aSMULLB, FEAT_NONE, 0x44a0c000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// SMULLB  <Zd>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZSMULLB, aSMULLB, FEAT_NONE, 0x44e0c000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// SMULLB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSMULLB, aSMULLB, FEAT_NONE, 0x45007000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SMULLT  <Zd>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZSMULLT, aSMULLT, FEAT_NONE, 0x44a0c400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// SMULLT  <Zd>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZSMULLT, aSMULLT, FEAT_NONE, 0x44e0c400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// SMULLT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSMULLT, aSMULLT, FEAT_NONE, 0x45007400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SPLICE  <Zd>.<T>, <Pv>, { <Zn1>.<T>, <Zn2>.<T> }
	{AZSPLICE, aSPLICE, FEAT_NONE, 0x52d8000, 0xff3fe000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_t__size__B_D_H_S,
			sa_zn2__Zn_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pv__Pv,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SPLICE  <Zdn>.<T>, <Pv>, <Zdn>.<T>, <Zm>.<T>
	{AZSPLICE, aSPLICE, FEAT_NONE, 0x52c8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pv__Pv,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQABS  <V><d>, <V><n>
	{AVSQABSS, aSQABS, FEAT_NONE, 0x5ea07800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQABS  <V><d>, <V><n>
	{AVSQABSB, aSQABS, FEAT_NONE, 0x5e207800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQABS  <V><d>, <V><n>
	{AVSQABSD, aSQABS, FEAT_NONE, 0x5ee07800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQABS  <V><d>, <V><n>
	{AVSQABSH, aSQABS, FEAT_NONE, 0x5e607800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQABS  <Vd>.<T>, <Vn>.<T>
	{AVSQABS, aSQABS, FEAT_NONE, 0xe207800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SQABS  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZSQABS, aSQABS, FEAT_NONE, 0x4408a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQADD  <V><d>, <V><n>, <V><m>
	{AVSQADDS, aSQADD, FEAT_NONE, 0x5ea00c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQADD  <V><d>, <V><n>, <V><m>
	{AVSQADDB, aSQADD, FEAT_NONE, 0x5e200c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQADD  <V><d>, <V><n>, <V><m>
	{AVSQADDD, aSQADD, FEAT_NONE, 0x5ee00c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQADD  <V><d>, <V><n>, <V><m>
	{AVSQADDH, aSQADD, FEAT_NONE, 0x5e600c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQADD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSQADD, aSQADD, FEAT_NONE, 0xe200c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SQADD  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZSQADD, aSQADD, FEAT_NONE, 0x4201000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQADD  <Zdn>.<T>, <Zdn>.<T>, #<imm>{, <shift>}
	{AZSQADD, aSQADD, FEAT_NONE, 0x2524c000, 0xff3fc000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
			sa_shift__sh__LSL_0_LSL_8,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQADD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSQADD, aSQADD, FEAT_NONE, 0x44188000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQCADD  <Zdn>.<T>, <Zdn>.<T>, <Zm>.<T>, <const>
	{AZSQCADD, aSQCADD, FEAT_NONE, 0x4501d800, 0xff3ff800, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__90_270,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQCVT  <Zd>.H, { <Zn1>.S-<Zn2>.S }
	{AZSQCVT, aSQCVT, FEAT_SME2, 0xc123e000, 0xfffffc20, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// SQCVT  <Zd>.<T>, { <Zn1>.<Tb>-<Zn4>.<Tb> }
	{AZSQCVT, aSQCVT, FEAT_SME2, 0xc133e000, 0xff7ffc60, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_tb__sz__D_S,
			sa_zn4__Zn_9_3,
			sa_tb__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__sz__B_H,
		}},
	}},

	// SQCVTN  <Zd>.H, { <Zn1>.S-<Zn2>.S }
	{AZSQCVTN, aSQCVTN, FEAT_SVE2p1, 0x45314000, 0xfffffc20, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// SQCVTN  <Zd>.<T>, { <Zn1>.<Tb>-<Zn4>.<Tb> }
	{AZSQCVTN, aSQCVTN, FEAT_SME2, 0xc133e040, 0xff7ffc60, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_tb__sz__D_S,
			sa_zn4__Zn_9_3,
			sa_tb__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__sz__B_H,
		}},
	}},

	// SQCVTU  <Zd>.H, { <Zn1>.S-<Zn2>.S }
	{AZSQCVTU, aSQCVTU, FEAT_SME2, 0xc163e000, 0xfffffc20, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// SQCVTU  <Zd>.<T>, { <Zn1>.<Tb>-<Zn4>.<Tb> }
	{AZSQCVTU, aSQCVTU, FEAT_SME2, 0xc173e000, 0xff7ffc60, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_tb__sz__D_S,
			sa_zn4__Zn_9_3,
			sa_tb__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__sz__B_H,
		}},
	}},

	// SQCVTUN  <Zd>.H, { <Zn1>.S-<Zn2>.S }
	{AZSQCVTUN, aSQCVTUN, FEAT_SVE2p1, 0x45315000, 0xfffffc20, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// SQCVTUN  <Zd>.<T>, { <Zn1>.<Tb>-<Zn4>.<Tb> }
	{AZSQCVTUN, aSQCVTUN, FEAT_SME2, 0xc173e040, 0xff7ffc60, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_tb__sz__D_S,
			sa_zn4__Zn_9_3,
			sa_tb__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__sz__B_H,
		}},
	}},

	// SQDECB  <Xdn>, <Wdn>
	{ASQDECBS, aSQDECB, FEAT_NONE, 0x421fbe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECB  <Xdn>, <Wdn>, <pattern>, #<imm>
	{ASQDECBS, aSQDECB, FEAT_NONE, 0x420f800, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECB  <Xdn>, <Wdn>, <pattern>
	{ASQDECBS, aSQDECB, FEAT_NONE, 0x421f800, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECB  <Xdn>
	{ASQDECBD, aSQDECB, FEAT_NONE, 0x431fbe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECB  <Xdn>, <pattern>, #<imm>
	{ASQDECBD, aSQDECB, FEAT_NONE, 0x430f800, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECB  <Xdn>, <pattern>
	{ASQDECBD, aSQDECB, FEAT_NONE, 0x431f800, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECD  <Xdn>, <Wdn>
	{ASQDECDS, aSQDECD, FEAT_NONE, 0x4e1fbe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECD  <Xdn>, <Wdn>, <pattern>, #<imm>
	{ASQDECDS, aSQDECD, FEAT_NONE, 0x4e0f800, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECD  <Xdn>, <Wdn>, <pattern>
	{ASQDECDS, aSQDECD, FEAT_NONE, 0x4e1f800, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECD  <Xdn>
	{ASQDECDD, aSQDECD, FEAT_NONE, 0x4f1fbe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECD  <Xdn>, <pattern>, #<imm>
	{ASQDECDD, aSQDECD, FEAT_NONE, 0x4f0f800, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECD  <Xdn>, <pattern>
	{ASQDECDD, aSQDECD, FEAT_NONE, 0x4f1f800, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECD  <Zdn>.D
	{AZSQDECD, aSQDECD, FEAT_NONE, 0x4e1cbe0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// SQDECD  <Zdn>.D, <pattern>, #<imm>
	{AZSQDECD, aSQDECD, FEAT_NONE, 0x4e0c800, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// SQDECD  <Zdn>.D, <pattern>
	{AZSQDECD, aSQDECD, FEAT_NONE, 0x4e1c800, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// SQDECH  <Xdn>, <Wdn>
	{ASQDECHS, aSQDECH, FEAT_NONE, 0x461fbe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECH  <Xdn>, <Wdn>, <pattern>, #<imm>
	{ASQDECHS, aSQDECH, FEAT_NONE, 0x460f800, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECH  <Xdn>, <Wdn>, <pattern>
	{ASQDECHS, aSQDECH, FEAT_NONE, 0x461f800, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECH  <Xdn>
	{ASQDECHD, aSQDECH, FEAT_NONE, 0x471fbe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECH  <Xdn>, <pattern>, #<imm>
	{ASQDECHD, aSQDECH, FEAT_NONE, 0x470f800, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECH  <Xdn>, <pattern>
	{ASQDECHD, aSQDECH, FEAT_NONE, 0x471f800, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECH  <Zdn>.H
	{AZSQDECH, aSQDECH, FEAT_NONE, 0x461cbe0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// SQDECH  <Zdn>.H, <pattern>, #<imm>
	{AZSQDECH, aSQDECH, FEAT_NONE, 0x460c800, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// SQDECH  <Zdn>.H, <pattern>
	{AZSQDECH, aSQDECH, FEAT_NONE, 0x461c800, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// SQDECP  <Xdn>, <Pm>.<T>, <Wdn>
	{APSQDECP, aSQDECP, FEAT_NONE, 0x252a8800, 0xff3ffe00, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECP  <Xdn>, <Pm>.<T>
	{APSQDECP, aSQDECP, FEAT_NONE, 0x252a8c00, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECP  <Zdn>.<T>, <Pm>.<T>
	{AZSQDECP, aSQDECP, FEAT_NONE, 0x252a8000, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// SQDECW  <Xdn>, <Wdn>
	{ASQDECWS, aSQDECW, FEAT_NONE, 0x4a1fbe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECW  <Xdn>, <Wdn>, <pattern>, #<imm>
	{ASQDECWS, aSQDECW, FEAT_NONE, 0x4a0f800, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECW  <Xdn>, <Wdn>, <pattern>
	{ASQDECWS, aSQDECW, FEAT_NONE, 0x4a1f800, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECW  <Xdn>
	{ASQDECWD, aSQDECW, FEAT_NONE, 0x4b1fbe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECW  <Xdn>, <pattern>, #<imm>
	{ASQDECWD, aSQDECW, FEAT_NONE, 0x4b0f800, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECW  <Xdn>, <pattern>
	{ASQDECWD, aSQDECW, FEAT_NONE, 0x4b1f800, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQDECW  <Zdn>.S
	{AZSQDECW, aSQDECW, FEAT_NONE, 0x4a1cbe0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// SQDECW  <Zdn>.S, <pattern>, #<imm>
	{AZSQDECW, aSQDECW, FEAT_NONE, 0x4a0c800, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// SQDECW  <Zdn>.S, <pattern>
	{AZSQDECW, aSQDECW, FEAT_NONE, 0x4a1c800, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// SQDMLAL  <Va><d>, <Vb><n>, <Vm>.<Ts>[<index>]
	{AVSQDMLAL, aSQDMLAL, FEAT_NONE, 0x5f003000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_VREG, []elmType{
			sa_vb__size__H_S,
			sa_n__Rn,
		}},
		{AC_VREG, []elmType{
			sa_va__size__D_S,
			sa_d__Rd,
		}},
	}},

	// SQDMLAL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVSQDMLAL, aSQDMLAL, FEAT_NONE, 0xf003000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SQDMLAL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVSQDMLAL2, aSQDMLAL2, FEAT_NONE, 0x4f003000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SQDMLAL  <Va><d>, <Vb><n>, <Vb><m>
	{AVSQDMLALS, aSQDMLAL, FEAT_NONE, 0x5e609000, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_vb__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_va__size__D_S,
			sa_d__Rd,
		}},
	}},

	// SQDMLAL  <Va><d>, <Vb><n>, <Vb><m>
	{AVSQDMLALD, aSQDMLAL, FEAT_NONE, 0x5ea09000, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_vb__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_va__size__D_S,
			sa_d__Rd,
		}},
	}},

	// SQDMLAL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSQDMLAL, aSQDMLAL, FEAT_NONE, 0xe209000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SQDMLAL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSQDMLAL2, aSQDMLAL2, FEAT_NONE, 0x4e209000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SQDMLALB  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSQDMLALB, aSQDMLALB, FEAT_NONE, 0x44006000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// SQDMLALB  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZSQDMLALB, aSQDMLALB, FEAT_NONE, 0x44a02000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SQDMLALB  <Zda>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZSQDMLALB, aSQDMLALB, FEAT_NONE, 0x44e02000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// SQDMLALBT  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSQDMLALBT, aSQDMLALBT, FEAT_NONE, 0x44000800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// SQDMLALT  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSQDMLALT, aSQDMLALT, FEAT_NONE, 0x44006400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// SQDMLALT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZSQDMLALT, aSQDMLALT, FEAT_NONE, 0x44a02400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SQDMLALT  <Zda>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZSQDMLALT, aSQDMLALT, FEAT_NONE, 0x44e02400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// SQDMLSL  <Va><d>, <Vb><n>, <Vm>.<Ts>[<index>]
	{AVSQDMLSL, aSQDMLSL, FEAT_NONE, 0x5f007000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_VREG, []elmType{
			sa_vb__size__H_S,
			sa_n__Rn,
		}},
		{AC_VREG, []elmType{
			sa_va__size__D_S,
			sa_d__Rd,
		}},
	}},

	// SQDMLSL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVSQDMLSL, aSQDMLSL, FEAT_NONE, 0xf007000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SQDMLSL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVSQDMLSL2, aSQDMLSL2, FEAT_NONE, 0x4f007000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SQDMLSL  <Va><d>, <Vb><n>, <Vb><m>
	{AVSQDMLSLS, aSQDMLSL, FEAT_NONE, 0x5e60b000, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_vb__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_va__size__D_S,
			sa_d__Rd,
		}},
	}},

	// SQDMLSL  <Va><d>, <Vb><n>, <Vb><m>
	{AVSQDMLSLD, aSQDMLSL, FEAT_NONE, 0x5ea0b000, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_vb__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_va__size__D_S,
			sa_d__Rd,
		}},
	}},

	// SQDMLSL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSQDMLSL, aSQDMLSL, FEAT_NONE, 0xe20b000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SQDMLSL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSQDMLSL2, aSQDMLSL2, FEAT_NONE, 0x4e20b000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SQDMLSLB  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSQDMLSLB, aSQDMLSLB, FEAT_NONE, 0x44006800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// SQDMLSLB  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZSQDMLSLB, aSQDMLSLB, FEAT_NONE, 0x44a03000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SQDMLSLB  <Zda>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZSQDMLSLB, aSQDMLSLB, FEAT_NONE, 0x44e03000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// SQDMLSLBT  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSQDMLSLBT, aSQDMLSLBT, FEAT_NONE, 0x44000c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// SQDMLSLT  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSQDMLSLT, aSQDMLSLT, FEAT_NONE, 0x44006c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// SQDMLSLT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZSQDMLSLT, aSQDMLSLT, FEAT_NONE, 0x44a03400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SQDMLSLT  <Zda>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZSQDMLSLT, aSQDMLSLT, FEAT_NONE, 0x44e03400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// SQDMULH  <V><d>, <V><n>, <Vm>.<Ts>[<index>]
	{AVSQDMULH, aSQDMULH, FEAT_NONE, 0x5f00c000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_VREG, []elmType{
			sa_v__size__H_S,
			sa_n__Rn,
		}},
		{AC_VREG, []elmType{
			sa_v__size__H_S,
			sa_d__Rd,
		}},
	}},

	// SQDMULH  <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]
	{AVSQDMULH, aSQDMULH, FEAT_NONE, 0xf00c000, 0xbf00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
	}},

	// SQDMULH  <V><d>, <V><n>, <V><m>
	{AVSQDMULHS, aSQDMULH, FEAT_NONE, 0x5ea0b400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_d__Rd,
		}},
	}},

	// SQDMULH  <V><d>, <V><n>, <V><m>
	{AVSQDMULHH, aSQDMULH, FEAT_NONE, 0x5e60b400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_d__Rd,
		}},
	}},

	// SQDMULH  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSQDMULH, aSQDMULH, FEAT_NONE, 0xe20b400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
	}},

	// SQDMULH  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZSQDMULH, aSQDMULH, FEAT_NONE, 0x4207000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQDMULH  <Zd>.H, <Zn>.H, <Zm>.H[<imm>]
	{AZSQDMULH, aSQDMULH, FEAT_NONE, 0x4420f000, 0xffa0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_22_1_i3l_20_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// SQDMULH  <Zd>.S, <Zn>.S, <Zm>.S[<imm>]
	{AZSQDMULH, aSQDMULH, FEAT_NONE, 0x44a0f000, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_S,
			sa_imm_2__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// SQDMULH  <Zd>.D, <Zn>.D, <Zm>.D[<imm>]
	{AZSQDMULH, aSQDMULH, FEAT_NONE, 0x44e0f000, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_imm__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// SQDMULH  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, <Zm>.<T>
	{AZSQDMULH, aSQDMULH, FEAT_SME2, 0xc120a400, 0xff30ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQDMULH  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, <Zm>.<T>
	{AZSQDMULH, aSQDMULH, FEAT_SME2, 0xc120ac00, 0xff30ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQDMULH  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZSQDMULH, aSQDMULH, FEAT_SME2, 0xc120b400, 0xff21ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__size__B_D_H_S,
			sa_zm2__Zm_20_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQDMULH  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZSQDMULH, aSQDMULH, FEAT_SME2, 0xc120bc00, 0xff23ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__size__B_D_H_S,
			sa_zm4__Zm_20_3,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQDMULL  <Va><d>, <Vb><n>, <Vm>.<Ts>[<index>]
	{AVSQDMULL, aSQDMULL, FEAT_NONE, 0x5f00b000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_VREG, []elmType{
			sa_vb__size__H_S,
			sa_n__Rn,
		}},
		{AC_VREG, []elmType{
			sa_va__size__D_S,
			sa_d__Rd,
		}},
	}},

	// SQDMULL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVSQDMULL, aSQDMULL, FEAT_NONE, 0xf00b000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SQDMULL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVSQDMULL2, aSQDMULL2, FEAT_NONE, 0x4f00b000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SQDMULL  <Va><d>, <Vb><n>, <Vb><m>
	{AVSQDMULLS, aSQDMULL, FEAT_NONE, 0x5e60d000, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_vb__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_va__size__D_S,
			sa_d__Rd,
		}},
	}},

	// SQDMULL  <Va><d>, <Vb><n>, <Vb><m>
	{AVSQDMULLD, aSQDMULL, FEAT_NONE, 0x5ea0d000, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_vb__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_va__size__D_S,
			sa_d__Rd,
		}},
	}},

	// SQDMULL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSQDMULL, aSQDMULL, FEAT_NONE, 0xe20d000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SQDMULL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSQDMULL2, aSQDMULL2, FEAT_NONE, 0x4e20d000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// SQDMULLB  <Zd>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZSQDMULLB, aSQDMULLB, FEAT_NONE, 0x44a0e000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// SQDMULLB  <Zd>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZSQDMULLB, aSQDMULLB, FEAT_NONE, 0x44e0e000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// SQDMULLB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSQDMULLB, aSQDMULLB, FEAT_NONE, 0x45006000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SQDMULLT  <Zd>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZSQDMULLT, aSQDMULLT, FEAT_NONE, 0x44a0e400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// SQDMULLT  <Zd>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZSQDMULLT, aSQDMULLT, FEAT_NONE, 0x44e0e400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// SQDMULLT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSQDMULLT, aSQDMULLT, FEAT_NONE, 0x45006400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SQINCB  <Xdn>, <Wdn>
	{ASQINCBS, aSQINCB, FEAT_NONE, 0x421f3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCB  <Xdn>, <Wdn>, <pattern>, #<imm>
	{ASQINCBS, aSQINCB, FEAT_NONE, 0x420f000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCB  <Xdn>, <Wdn>, <pattern>
	{ASQINCBS, aSQINCB, FEAT_NONE, 0x421f000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCB  <Xdn>
	{ASQINCBD, aSQINCB, FEAT_NONE, 0x431f3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCB  <Xdn>, <pattern>, #<imm>
	{ASQINCBD, aSQINCB, FEAT_NONE, 0x430f000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCB  <Xdn>, <pattern>
	{ASQINCBD, aSQINCB, FEAT_NONE, 0x431f000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCD  <Xdn>, <Wdn>
	{ASQINCDS, aSQINCD, FEAT_NONE, 0x4e1f3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCD  <Xdn>, <Wdn>, <pattern>, #<imm>
	{ASQINCDS, aSQINCD, FEAT_NONE, 0x4e0f000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCD  <Xdn>, <Wdn>, <pattern>
	{ASQINCDS, aSQINCD, FEAT_NONE, 0x4e1f000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCD  <Xdn>
	{ASQINCDD, aSQINCD, FEAT_NONE, 0x4f1f3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCD  <Xdn>, <pattern>, #<imm>
	{ASQINCDD, aSQINCD, FEAT_NONE, 0x4f0f000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCD  <Xdn>, <pattern>
	{ASQINCDD, aSQINCD, FEAT_NONE, 0x4f1f000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCD  <Zdn>.D
	{AZSQINCD, aSQINCD, FEAT_NONE, 0x4e1c3e0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// SQINCD  <Zdn>.D, <pattern>, #<imm>
	{AZSQINCD, aSQINCD, FEAT_NONE, 0x4e0c000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// SQINCD  <Zdn>.D, <pattern>
	{AZSQINCD, aSQINCD, FEAT_NONE, 0x4e1c000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// SQINCH  <Xdn>, <Wdn>
	{ASQINCHS, aSQINCH, FEAT_NONE, 0x461f3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCH  <Xdn>, <Wdn>, <pattern>, #<imm>
	{ASQINCHS, aSQINCH, FEAT_NONE, 0x460f000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCH  <Xdn>, <Wdn>, <pattern>
	{ASQINCHS, aSQINCH, FEAT_NONE, 0x461f000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCH  <Xdn>
	{ASQINCHD, aSQINCH, FEAT_NONE, 0x471f3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCH  <Xdn>, <pattern>, #<imm>
	{ASQINCHD, aSQINCH, FEAT_NONE, 0x470f000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCH  <Xdn>, <pattern>
	{ASQINCHD, aSQINCH, FEAT_NONE, 0x471f000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCH  <Zdn>.H
	{AZSQINCH, aSQINCH, FEAT_NONE, 0x461c3e0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// SQINCH  <Zdn>.H, <pattern>, #<imm>
	{AZSQINCH, aSQINCH, FEAT_NONE, 0x460c000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// SQINCH  <Zdn>.H, <pattern>
	{AZSQINCH, aSQINCH, FEAT_NONE, 0x461c000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// SQINCP  <Xdn>, <Pm>.<T>, <Wdn>
	{APSQINCP, aSQINCP, FEAT_NONE, 0x25288800, 0xff3ffe00, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCP  <Xdn>, <Pm>.<T>
	{APSQINCP, aSQINCP, FEAT_NONE, 0x25288c00, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCP  <Zdn>.<T>, <Pm>.<T>
	{AZSQINCP, aSQINCP, FEAT_NONE, 0x25288000, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// SQINCW  <Xdn>, <Wdn>
	{ASQINCWS, aSQINCW, FEAT_NONE, 0x4a1f3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCW  <Xdn>, <Wdn>, <pattern>, #<imm>
	{ASQINCWS, aSQINCW, FEAT_NONE, 0x4a0f000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCW  <Xdn>, <Wdn>, <pattern>
	{ASQINCWS, aSQINCW, FEAT_NONE, 0x4a1f000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCW  <Xdn>
	{ASQINCWD, aSQINCW, FEAT_NONE, 0x4b1f3e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCW  <Xdn>, <pattern>, #<imm>
	{ASQINCWD, aSQINCW, FEAT_NONE, 0x4b0f000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCW  <Xdn>, <pattern>
	{ASQINCWD, aSQINCW, FEAT_NONE, 0x4b1f000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// SQINCW  <Zdn>.S
	{AZSQINCW, aSQINCW, FEAT_NONE, 0x4a1c3e0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// SQINCW  <Zdn>.S, <pattern>, #<imm>
	{AZSQINCW, aSQINCW, FEAT_NONE, 0x4a0c000, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// SQINCW  <Zdn>.S, <pattern>
	{AZSQINCW, aSQINCW, FEAT_NONE, 0x4a1c000, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// SQNEG  <V><d>, <V><n>
	{AVSQNEGS, aSQNEG, FEAT_NONE, 0x7ea07800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQNEG  <V><d>, <V><n>
	{AVSQNEGB, aSQNEG, FEAT_NONE, 0x7e207800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQNEG  <V><d>, <V><n>
	{AVSQNEGD, aSQNEG, FEAT_NONE, 0x7ee07800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQNEG  <V><d>, <V><n>
	{AVSQNEGH, aSQNEG, FEAT_NONE, 0x7e607800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQNEG  <Vd>.<T>, <Vn>.<T>
	{AVSQNEG, aSQNEG, FEAT_NONE, 0x2e207800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SQNEG  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZSQNEG, aSQNEG, FEAT_NONE, 0x4409a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQRDCMLAH  <Zda>.<T>, <Zn>.<T>, <Zm>.<T>, <const>
	{AZSQRDCMLAH, aSQRDCMLAH, FEAT_NONE, 0x44003000, 0xff20f000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__0_90_180_270,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQRDCMLAH  <Zda>.H, <Zn>.H, <Zm>.H[<imm>], <const>
	{AZSQRDCMLAH, aSQRDCMLAH, FEAT_NONE, 0x44a07000, 0xffe0f000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__0_90_180_270,
		}},
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_H,
		}},
	}},

	// SQRDCMLAH  <Zda>.S, <Zn>.S, <Zm>.S[<imm>], <const>
	{AZSQRDCMLAH, aSQRDCMLAH, FEAT_NONE, 0x44e07000, 0xffe0f000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__rot__0_90_180_270,
		}},
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_S,
			sa_imm_1__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SQRDMLAH  <V><d>, <V><n>, <Vm>.<Ts>[<index>]
	{AVSQRDMLAH, aSQRDMLAH, FEAT_RDM, 0x7f00d000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_VREG, []elmType{
			sa_v__size__H_S,
			sa_n__Rn,
		}},
		{AC_VREG, []elmType{
			sa_v__size__H_S,
			sa_d__Rd,
		}},
	}},

	// SQRDMLAH  <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]
	{AVSQRDMLAH, aSQRDMLAH, FEAT_RDM, 0x2f00d000, 0xbf00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
	}},

	// SQRDMLAH  <V><d>, <V><n>, <V><m>
	{AVSQRDMLAHS, aSQRDMLAH, FEAT_RDM, 0x7e808400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_d__Rd,
		}},
	}},

	// SQRDMLAH  <V><d>, <V><n>, <V><m>
	{AVSQRDMLAHH, aSQRDMLAH, FEAT_RDM, 0x7e408400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_d__Rd,
		}},
	}},

	// SQRDMLAH  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSQRDMLAH, aSQRDMLAH, FEAT_RDM, 0x2e008400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
	}},

	// SQRDMLAH  <Zda>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZSQRDMLAH, aSQRDMLAH, FEAT_NONE, 0x44007000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQRDMLAH  <Zda>.H, <Zn>.H, <Zm>.H[<imm>]
	{AZSQRDMLAH, aSQRDMLAH, FEAT_NONE, 0x44201000, 0xffa0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_22_1_i3l_20_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_H,
		}},
	}},

	// SQRDMLAH  <Zda>.S, <Zn>.S, <Zm>.S[<imm>]
	{AZSQRDMLAH, aSQRDMLAH, FEAT_NONE, 0x44a01000, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_S,
			sa_imm_2__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SQRDMLAH  <Zda>.D, <Zn>.D, <Zm>.D[<imm>]
	{AZSQRDMLAH, aSQRDMLAH, FEAT_NONE, 0x44e01000, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_imm__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// SQRDMLSH  <V><d>, <V><n>, <Vm>.<Ts>[<index>]
	{AVSQRDMLSH, aSQRDMLSH, FEAT_RDM, 0x7f00f000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_VREG, []elmType{
			sa_v__size__H_S,
			sa_n__Rn,
		}},
		{AC_VREG, []elmType{
			sa_v__size__H_S,
			sa_d__Rd,
		}},
	}},

	// SQRDMLSH  <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]
	{AVSQRDMLSH, aSQRDMLSH, FEAT_RDM, 0x2f00f000, 0xbf00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
	}},

	// SQRDMLSH  <V><d>, <V><n>, <V><m>
	{AVSQRDMLSHS, aSQRDMLSH, FEAT_RDM, 0x7e808c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_d__Rd,
		}},
	}},

	// SQRDMLSH  <V><d>, <V><n>, <V><m>
	{AVSQRDMLSHH, aSQRDMLSH, FEAT_RDM, 0x7e408c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_d__Rd,
		}},
	}},

	// SQRDMLSH  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSQRDMLSH, aSQRDMLSH, FEAT_RDM, 0x2e008c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
	}},

	// SQRDMLSH  <Zda>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZSQRDMLSH, aSQRDMLSH, FEAT_NONE, 0x44007400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQRDMLSH  <Zda>.H, <Zn>.H, <Zm>.H[<imm>]
	{AZSQRDMLSH, aSQRDMLSH, FEAT_NONE, 0x44201400, 0xffa0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_22_1_i3l_20_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_H,
		}},
	}},

	// SQRDMLSH  <Zda>.S, <Zn>.S, <Zm>.S[<imm>]
	{AZSQRDMLSH, aSQRDMLSH, FEAT_NONE, 0x44a01400, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_S,
			sa_imm_2__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SQRDMLSH  <Zda>.D, <Zn>.D, <Zm>.D[<imm>]
	{AZSQRDMLSH, aSQRDMLSH, FEAT_NONE, 0x44e01400, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_imm__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// SQRDMULH  <V><d>, <V><n>, <Vm>.<Ts>[<index>]
	{AVSQRDMULH, aSQRDMULH, FEAT_NONE, 0x5f00d000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_VREG, []elmType{
			sa_v__size__H_S,
			sa_n__Rn,
		}},
		{AC_VREG, []elmType{
			sa_v__size__H_S,
			sa_d__Rd,
		}},
	}},

	// SQRDMULH  <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]
	{AVSQRDMULH, aSQRDMULH, FEAT_NONE, 0xf00d000, 0xbf00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
	}},

	// SQRDMULH  <V><d>, <V><n>, <V><m>
	{AVSQRDMULHS, aSQRDMULH, FEAT_NONE, 0x7ea0b400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_d__Rd,
		}},
	}},

	// SQRDMULH  <V><d>, <V><n>, <V><m>
	{AVSQRDMULHH, aSQRDMULH, FEAT_NONE, 0x7e60b400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__H_S,
			sa_d__Rd,
		}},
	}},

	// SQRDMULH  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSQRDMULH, aSQRDMULH, FEAT_NONE, 0x2e20b400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8H,
		}},
	}},

	// SQRDMULH  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZSQRDMULH, aSQRDMULH, FEAT_NONE, 0x4207400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQRDMULH  <Zd>.H, <Zn>.H, <Zm>.H[<imm>]
	{AZSQRDMULH, aSQRDMULH, FEAT_NONE, 0x4420f400, 0xffa0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_22_1_i3l_20_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// SQRDMULH  <Zd>.S, <Zn>.S, <Zm>.S[<imm>]
	{AZSQRDMULH, aSQRDMULH, FEAT_NONE, 0x44a0f400, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_S,
			sa_imm_2__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// SQRDMULH  <Zd>.D, <Zn>.D, <Zm>.D[<imm>]
	{AZSQRDMULH, aSQRDMULH, FEAT_NONE, 0x44e0f400, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_D,
			sa_imm__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// SQRSHL  <V><d>, <V><n>, <V><m>
	{AVSQRSHLS, aSQRSHL, FEAT_NONE, 0x5ea05c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQRSHL  <V><d>, <V><n>, <V><m>
	{AVSQRSHLB, aSQRSHL, FEAT_NONE, 0x5e205c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQRSHL  <V><d>, <V><n>, <V><m>
	{AVSQRSHLD, aSQRSHL, FEAT_NONE, 0x5ee05c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQRSHL  <V><d>, <V><n>, <V><m>
	{AVSQRSHLH, aSQRSHL, FEAT_NONE, 0x5e605c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQRSHL  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSQRSHL, aSQRSHL, FEAT_NONE, 0xe205c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SQRSHL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSQRSHL, aSQRSHL, FEAT_NONE, 0x440a8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQRSHLR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSQRSHLR, aSQRSHLR, FEAT_NONE, 0x440e8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQRSHR  <Zd>.<T>, { <Zn1>.<Tb>-<Zn4>.<Tb> }, #<const>
	{AZSQRSHR, aSQRSHR, FEAT_SME2, 0xc120d800, 0xff20fc60, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tsize_imm5,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_tb__tsize__D_S,
			sa_zn4__Zn_9_3,
			sa_tb__tsize__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tsize__B_H,
		}},
	}},

	// SQRSHR  <Zd>.H, { <Zn1>.S-<Zn2>.S }, #<const>
	{AZSQRSHR, aSQRSHR, FEAT_SME2, 0xc1e0d400, 0xfff0fc20, false, []arg{
		{AC_IMM, []elmType{
			sa_const__imm4,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// SQRSHRN  <Vb><d>, <Va><n>, #<shift>
	{AVSQRSHRNS, aSQRSHRN, FEAT_NONE, 0x5f209c00, 0xffe0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQRSHRN  <Vb><d>, <Va><n>, #<shift>
	{AVSQRSHRNB, aSQRSHRN, FEAT_NONE, 0x5f089c00, 0xfff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQRSHRN  <Vb><d>, <Va><n>, #<shift>
	{AVSQRSHRNH, aSQRSHRN, FEAT_NONE, 0x5f109c00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQRSHRN  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVSQRSHRN, aSQRSHRN, FEAT_NONE, 0xf009c00, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SQRSHRN2  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVSQRSHRN2, aSQRSHRN2, FEAT_NONE, 0x4f009c00, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SQRSHRN  <Zd>.H, { <Zn1>.S-<Zn2>.S }, #<const>
	{AZSQRSHRN, aSQRSHRN, FEAT_SVE2p1, 0x45b02800, 0xfff0fc20, false, []arg{
		{AC_IMM, []elmType{
			sa_const__imm4,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// SQRSHRN  <Zd>.<T>, { <Zn1>.<Tb>-<Zn4>.<Tb> }, #<const>
	{AZSQRSHRN, aSQRSHRN, FEAT_SME2, 0xc120dc00, 0xff20fc60, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tsize_imm5,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_tb__tsize__D_S,
			sa_zn4__Zn_9_3,
			sa_tb__tsize__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tsize__B_H,
		}},
	}},

	// SQRSHRNB  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZSQRSHRNB, aSQRSHRNB, FEAT_NONE, 0x45202800, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SQRSHRNT  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZSQRSHRNT, aSQRSHRNT, FEAT_NONE, 0x45202c00, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SQRSHRU  <Zd>.<T>, { <Zn1>.<Tb>-<Zn4>.<Tb> }, #<const>
	{AZSQRSHRU, aSQRSHRU, FEAT_SME2, 0xc120d840, 0xff20fc60, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tsize_imm5,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_tb__tsize__D_S,
			sa_zn4__Zn_9_3,
			sa_tb__tsize__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tsize__B_H,
		}},
	}},

	// SQRSHRU  <Zd>.H, { <Zn1>.S-<Zn2>.S }, #<const>
	{AZSQRSHRU, aSQRSHRU, FEAT_SME2, 0xc1f0d400, 0xfff0fc20, false, []arg{
		{AC_IMM, []elmType{
			sa_const__imm4,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// SQRSHRUN  <Vb><d>, <Va><n>, #<shift>
	{AVSQRSHRUNS, aSQRSHRUN, FEAT_NONE, 0x7f208c00, 0xffe0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQRSHRUN  <Vb><d>, <Va><n>, #<shift>
	{AVSQRSHRUNB, aSQRSHRUN, FEAT_NONE, 0x7f088c00, 0xfff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQRSHRUN  <Vb><d>, <Va><n>, #<shift>
	{AVSQRSHRUNH, aSQRSHRUN, FEAT_NONE, 0x7f108c00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQRSHRUN  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVSQRSHRUN, aSQRSHRUN, FEAT_NONE, 0x2f008c00, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SQRSHRUN2  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVSQRSHRUN2, aSQRSHRUN2, FEAT_NONE, 0x6f008c00, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SQRSHRUN  <Zd>.H, { <Zn1>.S-<Zn2>.S }, #<const>
	{AZSQRSHRUN, aSQRSHRUN, FEAT_SVE2p1, 0x45b00800, 0xfff0fc20, false, []arg{
		{AC_IMM, []elmType{
			sa_const__imm4,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// SQRSHRUN  <Zd>.<T>, { <Zn1>.<Tb>-<Zn4>.<Tb> }, #<const>
	{AZSQRSHRUN, aSQRSHRUN, FEAT_SME2, 0xc120dc40, 0xff20fc60, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tsize_imm5,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_tb__tsize__D_S,
			sa_zn4__Zn_9_3,
			sa_tb__tsize__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tsize__B_H,
		}},
	}},

	// SQRSHRUNB  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZSQRSHRUNB, aSQRSHRUNB, FEAT_NONE, 0x45200800, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SQRSHRUNT  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZSQRSHRUNT, aSQRSHRUNT, FEAT_NONE, 0x45200c00, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SQSHL  <V><d>, <V><n>, <V><m>
	{AVSQSHLS, aSQSHL, FEAT_NONE, 0x5ea04c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHL  <V><d>, <V><n>, <V><m>
	{AVSQSHLB, aSQSHL, FEAT_NONE, 0x5e204c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHL  <V><d>, <V><n>, <V><m>
	{AVSQSHLD, aSQSHL, FEAT_NONE, 0x5ee04c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHL  <V><d>, <V><n>, <V><m>
	{AVSQSHLH, aSQSHL, FEAT_NONE, 0x5e604c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHL  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSQSHL, aSQSHL, FEAT_NONE, 0xe204c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SQSHL  <V><d>, <V><n>, #<shift>
	{AVSQSHLS, aSQSHL, FEAT_NONE, 0x5f207400, 0xffe0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHL  <V><d>, <V><n>, #<shift>
	{AVSQSHLB, aSQSHL, FEAT_NONE, 0x5f087400, 0xfff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHL  <V><d>, <V><n>, #<shift>
	{AVSQSHLD, aSQSHL, FEAT_NONE, 0x5f407400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHL  <V><d>, <V><n>, #<shift>
	{AVSQSHLH, aSQSHL, FEAT_NONE, 0x5f107400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHL  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVSQSHL, aSQSHL, FEAT_NONE, 0xf007400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SQSHL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, #<const>
	{AZSQSHL, aSQSHL, FEAT_NONE, 0x4068000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_9_2_imm3_7_3,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
	}},

	// SQSHL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSQSHL, aSQSHL, FEAT_NONE, 0x44088000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQSHLR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSQSHLR, aSQSHLR, FEAT_NONE, 0x440c8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQSHLU  <V><d>, <V><n>, #<shift>
	{AVSQSHLUS, aSQSHLU, FEAT_NONE, 0x7f206400, 0xffe0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHLU  <V><d>, <V><n>, #<shift>
	{AVSQSHLUB, aSQSHLU, FEAT_NONE, 0x7f086400, 0xfff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHLU  <V><d>, <V><n>, #<shift>
	{AVSQSHLUD, aSQSHLU, FEAT_NONE, 0x7f406400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHLU  <V><d>, <V><n>, #<shift>
	{AVSQSHLUH, aSQSHLU, FEAT_NONE, 0x7f106400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHLU  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVSQSHLU, aSQSHLU, FEAT_NONE, 0x2f006400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SQSHLU  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, #<const>
	{AZSQSHLU, aSQSHLU, FEAT_NONE, 0x40f8000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_9_2_imm3_7_3,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
	}},

	// SQSHRN  <Vb><d>, <Va><n>, #<shift>
	{AVSQSHRNS, aSQSHRN, FEAT_NONE, 0x5f209400, 0xffe0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHRN  <Vb><d>, <Va><n>, #<shift>
	{AVSQSHRNB, aSQSHRN, FEAT_NONE, 0x5f089400, 0xfff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHRN  <Vb><d>, <Va><n>, #<shift>
	{AVSQSHRNH, aSQSHRN, FEAT_NONE, 0x5f109400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHRN  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVSQSHRN, aSQSHRN, FEAT_NONE, 0xf009400, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SQSHRN2  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVSQSHRN2, aSQSHRN2, FEAT_NONE, 0x4f009400, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SQSHRNB  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZSQSHRNB, aSQSHRNB, FEAT_NONE, 0x45202000, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SQSHRNT  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZSQSHRNT, aSQSHRNT, FEAT_NONE, 0x45202400, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SQSHRUN  <Vb><d>, <Va><n>, #<shift>
	{AVSQSHRUNS, aSQSHRUN, FEAT_NONE, 0x7f208400, 0xffe0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHRUN  <Vb><d>, <Va><n>, #<shift>
	{AVSQSHRUNB, aSQSHRUN, FEAT_NONE, 0x7f088400, 0xfff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHRUN  <Vb><d>, <Va><n>, #<shift>
	{AVSQSHRUNH, aSQSHRUN, FEAT_NONE, 0x7f108400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSHRUN  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVSQSHRUN, aSQSHRUN, FEAT_NONE, 0x2f008400, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SQSHRUN2  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVSQSHRUN2, aSQSHRUN2, FEAT_NONE, 0x6f008400, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SQSHRUNB  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZSQSHRUNB, aSQSHRUNB, FEAT_NONE, 0x45200000, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SQSHRUNT  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZSQSHRUNT, aSQSHRUNT, FEAT_NONE, 0x45200400, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SQSUB  <V><d>, <V><n>, <V><m>
	{AVSQSUBS, aSQSUB, FEAT_NONE, 0x5ea02c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSUB  <V><d>, <V><n>, <V><m>
	{AVSQSUBB, aSQSUB, FEAT_NONE, 0x5e202c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSUB  <V><d>, <V><n>, <V><m>
	{AVSQSUBD, aSQSUB, FEAT_NONE, 0x5ee02c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSUB  <V><d>, <V><n>, <V><m>
	{AVSQSUBH, aSQSUB, FEAT_NONE, 0x5e602c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SQSUB  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSQSUB, aSQSUB, FEAT_NONE, 0xe202c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SQSUB  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZSQSUB, aSQSUB, FEAT_NONE, 0x4201800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQSUB  <Zdn>.<T>, <Zdn>.<T>, #<imm>{, <shift>}
	{AZSQSUB, aSQSUB, FEAT_NONE, 0x2526c000, 0xff3fc000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
			sa_shift__sh__LSL_0_LSL_8,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQSUB  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSQSUB, aSQSUB, FEAT_NONE, 0x441a8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQSUBR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSQSUBR, aSQSUBR, FEAT_NONE, 0x441e8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SQXTN  <Vb><d>, <Va><n>
	{AVSQXTNS, aSQXTN, FEAT_NONE, 0x5ea14800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_va__size__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQXTN  <Vb><d>, <Va><n>
	{AVSQXTNB, aSQXTN, FEAT_NONE, 0x5e214800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_va__size__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQXTN  <Vb><d>, <Va><n>
	{AVSQXTNH, aSQXTN, FEAT_NONE, 0x5e614800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_va__size__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQXTN  <Vd>.<Tb>, <Vn>.<Ta>
	{AVSQXTN, aSQXTN, FEAT_NONE, 0xe214800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SQXTN2  <Vd>.<Tb>, <Vn>.<Ta>
	{AVSQXTN2, aSQXTN2, FEAT_NONE, 0x4e214800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SQXTNB  <Zd>.<T>, <Zn>.<Tb>
	{AZSQXTNB, aSQXTNB, FEAT_NONE, 0x45204000, 0xffa7fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SQXTNT  <Zd>.<T>, <Zn>.<Tb>
	{AZSQXTNT, aSQXTNT, FEAT_NONE, 0x45204400, 0xffa7fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SQXTUN  <Vb><d>, <Va><n>
	{AVSQXTUNS, aSQXTUN, FEAT_NONE, 0x7ea12800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_va__size__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQXTUN  <Vb><d>, <Va><n>
	{AVSQXTUNB, aSQXTUN, FEAT_NONE, 0x7e212800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_va__size__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQXTUN  <Vb><d>, <Va><n>
	{AVSQXTUNH, aSQXTUN, FEAT_NONE, 0x7e612800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_va__size__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// SQXTUN  <Vd>.<Tb>, <Vn>.<Ta>
	{AVSQXTUN, aSQXTUN, FEAT_NONE, 0x2e212800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SQXTUN2  <Vd>.<Tb>, <Vn>.<Ta>
	{AVSQXTUN2, aSQXTUN2, FEAT_NONE, 0x6e212800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SQXTUNB  <Zd>.<T>, <Zn>.<Tb>
	{AZSQXTUNB, aSQXTUNB, FEAT_NONE, 0x45205000, 0xffa7fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SQXTUNT  <Zd>.<T>, <Zn>.<Tb>
	{AZSQXTUNT, aSQXTUNT, FEAT_NONE, 0x45205400, 0xffa7fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// SRHADD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSRHADD, aSRHADD, FEAT_NONE, 0xe201400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SRHADD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSRHADD, aSRHADD, FEAT_NONE, 0x44148000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SRI  <V><d>, <V><n>, #<shift>
	{AVSRID, aSRI, FEAT_NONE, 0x7f404400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_d__Rd,
		}},
	}},

	// SRI  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVSRI, aSRI, FEAT_NONE, 0x2f004400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__16_UInt_immh_immb_32_UInt_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SRI  <Zd>.<T>, <Zn>.<T>, #<const>
	{AZSRI, aSRI, FEAT_NONE, 0x4500f000, 0xff20fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
	}},

	// SRSHL  <V><d>, <V><n>, <V><m>
	{AVSRSHLD, aSRSHL, FEAT_NONE, 0x5ee05400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// SRSHL  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSRSHL, aSRSHL, FEAT_NONE, 0xe205400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SRSHL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSRSHL, aSRSHL, FEAT_NONE, 0x44028000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SRSHL  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, <Zm>.<T>
	{AZSRSHL, aSRSHL, FEAT_SME2, 0xc120a220, 0xff30ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SRSHL  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, <Zm>.<T>
	{AZSRSHL, aSRSHL, FEAT_SME2, 0xc120aa20, 0xff30ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SRSHL  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZSRSHL, aSRSHL, FEAT_SME2, 0xc120b220, 0xff21ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__size__B_D_H_S,
			sa_zm2__Zm_20_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SRSHL  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZSRSHL, aSRSHL, FEAT_SME2, 0xc120ba20, 0xff23ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__size__B_D_H_S,
			sa_zm4__Zm_20_3,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SRSHLR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSRSHLR, aSRSHLR, FEAT_NONE, 0x44068000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SRSHR  <V><d>, <V><n>, #<shift>
	{AVSRSHRD, aSRSHR, FEAT_NONE, 0x5f402400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_d__Rd,
		}},
	}},

	// SRSHR  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVSRSHR, aSRSHR, FEAT_NONE, 0xf002400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__16_UInt_immh_immb_32_UInt_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SRSHR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, #<const>
	{AZSRSHR, aSRSHR, FEAT_NONE, 0x40c8000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_9_2_imm3_7_3,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
	}},

	// SRSRA  <V><d>, <V><n>, #<shift>
	{AVSRSRAD, aSRSRA, FEAT_NONE, 0x5f403400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_d__Rd,
		}},
	}},

	// SRSRA  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVSRSRA, aSRSRA, FEAT_NONE, 0xf003400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__16_UInt_immh_immb_32_UInt_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SRSRA  <Zda>.<T>, <Zn>.<T>, #<const>
	{AZSRSRA, aSRSRA, FEAT_NONE, 0x4500e800, 0xff20fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
	}},

	// SSBB
	{ASSBB, aSSBB, FEAT_NONE, 0xd503309f, 0xffffffff, true, nil},

	// SSHL  <V><d>, <V><n>, <V><m>
	{AVSSHLD, aSSHL, FEAT_NONE, 0x5ee04400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// SSHL  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSSHL, aSSHL, FEAT_NONE, 0xe204400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SSHLL  <Vd>.<Ta>, <Vn>.<Tb>, #<shift>
	{AVSSHLL, aSSHLL, FEAT_NONE, 0xf00a400, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
	}},

	// SSHLL2  <Vd>.<Ta>, <Vn>.<Tb>, #<shift>
	{AVSSHLL2, aSSHLL2, FEAT_NONE, 0x4f00a400, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
	}},

	// SSHLLB  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZSSHLLB, aSSHLLB, FEAT_NONE, 0x4500a000, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__D_H_S,
		}},
	}},

	// SSHLLT  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZSSHLLT, aSSHLLT, FEAT_NONE, 0x4500a400, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__D_H_S,
		}},
	}},

	// SSHR  <V><d>, <V><n>, #<shift>
	{AVSSHRD, aSSHR, FEAT_NONE, 0x5f400400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_d__Rd,
		}},
	}},

	// SSHR  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVSSHR, aSSHR, FEAT_NONE, 0xf000400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__16_UInt_immh_immb_32_UInt_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SSRA  <V><d>, <V><n>, #<shift>
	{AVSSRAD, aSSRA, FEAT_NONE, 0x5f401400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_d__Rd,
		}},
	}},

	// SSRA  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVSSRA, aSSRA, FEAT_NONE, 0xf001400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__16_UInt_immh_immb_32_UInt_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// SSRA  <Zda>.<T>, <Zn>.<T>, #<const>
	{AZSSRA, aSSRA, FEAT_NONE, 0x4500e000, 0xff20fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
	}},

	// SSUBL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSSUBL, aSSUBL, FEAT_NONE, 0xe202000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SSUBL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVSSUBL2, aSSUBL2, FEAT_NONE, 0x4e202000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SSUBLB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSSUBLB, aSSUBLB, FEAT_NONE, 0x45001000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SSUBLBT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSSUBLBT, aSSUBLBT, FEAT_NONE, 0x45008800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SSUBLT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSSUBLT, aSSUBLT, FEAT_NONE, 0x45001400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SSUBLTB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSSUBLTB, aSSUBLTB, FEAT_NONE, 0x45008c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SSUBW  <Vd>.<Ta>, <Vn>.<Ta>, <Vm>.<Tb>
	{AVSSUBW, aSSUBW, FEAT_NONE, 0xe203000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SSUBW2  <Vd>.<Ta>, <Vn>.<Ta>, <Vm>.<Tb>
	{AVSSUBW2, aSSUBW2, FEAT_NONE, 0x4e203000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// SSUBWB  <Zd>.<T>, <Zn>.<T>, <Zm>.<Tb>
	{AZSSUBWB, aSSUBWB, FEAT_NONE, 0x45005000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SSUBWT  <Zd>.<T>, <Zn>.<T>, <Zm>.<Tb>
	{AZSSUBWT, aSSUBWT, FEAT_NONE, 0x45005400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// ST1  { <Vt>.<T> }, [<Xn|SP>]
	{AVST1, aST1, FEAT_NONE, 0xc007000, 0xbffff000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST1  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>]
	{AVST1, aST1, FEAT_NONE, 0xc00a000, 0xbffff000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST1  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>]
	{AVST1, aST1, FEAT_NONE, 0xc006000, 0xbffff000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST1  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>]
	{AVST1, aST1, FEAT_NONE, 0xc002000, 0xbffff000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST1  { <Vt>.<T> }, [<Xn|SP>], <imm>
	{AVST1, aST1, FEAT_NONE, 0xc9f7000, 0xbffff000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm__Q__8_16,
		}},
	}},

	// ST1  { <Vt>.<T> }, [<Xn|SP>], <Xm>
	{AVST1, aST1, FEAT_NONE, 0xc807000, 0xbfe0f000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST1  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <imm>
	{AVST1, aST1, FEAT_NONE, 0xc9fa000, 0xbffff000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__Q__16_32,
		}},
	}},

	// ST1  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <Xm>
	{AVST1, aST1, FEAT_NONE, 0xc80a000, 0xbfe0f000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST1  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <imm>
	{AVST1, aST1, FEAT_NONE, 0xc9f6000, 0xbffff000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_2__Q__24_48,
		}},
	}},

	// ST1  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <Xm>
	{AVST1, aST1, FEAT_NONE, 0xc806000, 0xbfe0f000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST1  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <imm>
	{AVST1, aST1, FEAT_NONE, 0xc9f2000, 0xbffff000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_3__Q__32_64,
		}},
	}},

	// ST1  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <Xm>
	{AVST1, aST1, FEAT_NONE, 0xc802000, 0xbfe0f000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__1D_2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST1  { <Vt>.B }[<index>], [<Xn|SP>]
	{AVST1, aST1, FEAT_NONE, 0xd000000, 0xbfffe000, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_B,
			sa_index__Q_S_size,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST1  { <Vt>.H }[<index>], [<Xn|SP>]
	{AVST1, aST1, FEAT_NONE, 0xd004000, 0xbfffe400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_H,
			sa_index_2__Q_S_size_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST1  { <Vt>.S }[<index>], [<Xn|SP>]
	{AVST1, aST1, FEAT_NONE, 0xd008000, 0xbfffec00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_S,
			sa_index_3__Q_S,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST1  { <Vt>.D }[<index>], [<Xn|SP>]
	{AVST1, aST1, FEAT_NONE, 0xd008400, 0xbffffc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_D,
			sa_index_1__Q,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST1  { <Vt>.B }[<index>], [<Xn|SP>], #1
	{AVST1, aST1, FEAT_NONE, 0xd9f0000, 0xbfffe000, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_B,
			sa_index__Q_S_size,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_1,
		}},
	}},

	// ST1  { <Vt>.B }[<index>], [<Xn|SP>], <Xm>
	{AVST1, aST1, FEAT_NONE, 0xd800000, 0xbfe0e000, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_B,
			sa_index__Q_S_size,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST1  { <Vt>.H }[<index>], [<Xn|SP>], #2
	{AVST1, aST1, FEAT_NONE, 0xd9f4000, 0xbfffe400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_H,
			sa_index_2__Q_S_size_1,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_2,
		}},
	}},

	// ST1  { <Vt>.H }[<index>], [<Xn|SP>], <Xm>
	{AVST1, aST1, FEAT_NONE, 0xd804000, 0xbfe0e400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_H,
			sa_index_2__Q_S_size_1,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST1  { <Vt>.S }[<index>], [<Xn|SP>], #4
	{AVST1, aST1, FEAT_NONE, 0xd9f8000, 0xbfffec00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_S,
			sa_index_3__Q_S,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_4,
		}},
	}},

	// ST1  { <Vt>.S }[<index>], [<Xn|SP>], <Xm>
	{AVST1, aST1, FEAT_NONE, 0xd808000, 0xbfe0ec00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_S,
			sa_index_3__Q_S,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST1  { <Vt>.D }[<index>], [<Xn|SP>], #8
	{AVST1, aST1, FEAT_NONE, 0xd9f8400, 0xbffffc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_D,
			sa_index_1__Q,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_8,
		}},
	}},

	// ST1  { <Vt>.D }[<index>], [<Xn|SP>], <Xm>
	{AVST1, aST1, FEAT_NONE, 0xd808400, 0xbfe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_D,
			sa_index_1__Q,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST1B  { <Zt>.<T> }, <Pg>, [<Xn|SP>, <Xm>]
	{AZST1B, aST1B, FEAT_NONE, 0xe4004000, 0xff80e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1B  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D, <mod>]
	{AZST1B, aST1B, FEAT_NONE, 0xe4008000, 0xffe0a000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_14_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1B  { <Zt>.S }, <Pg>, [<Xn|SP>, <Zm>.S, <mod>]
	{AZST1B, aST1B, FEAT_NONE, 0xe4408000, 0xffe0a000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_14_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1B  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D]
	{AZST1B, aST1B, FEAT_NONE, 0xe400a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1B  { <Zt>.<T> }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1B, aST1B, FEAT_NONE, 0xe400e000, 0xff90e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1B  { <Zt>.S }, <Pg>, [<Zn>.S{, #<imm>}]
	{AZST1B, aST1B, FEAT_NONE, 0xe460a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
	}},

	// ST1B  { <Zt>.D }, <Pg>, [<Zn>.D{, #<imm>}]
	{AZST1B, aST1B, FEAT_NONE, 0xe440a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
	}},

	// ST1B  { <Zt1>.B-<Zt2>.B }, <PNg>, [<Xn|SP>, <Xm>]
	{AZST1B, aST1B, FEAT_SVE2p1, 0xa0200000, 0xffe0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1B  { <Zt1>.B-<Zt4>.B }, <PNg>, [<Xn|SP>, <Xm>]
	{AZST1B, aST1B, FEAT_SVE2p1, 0xa0208000, 0xffe0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1B  { <Zt1>.B-<Zt2>.B }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1B, aST1B, FEAT_SVE2p1, 0xa0600000, 0xfff0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1B  { <Zt1>.B-<Zt4>.B }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1B, aST1B, FEAT_SVE2p1, 0xa0608000, 0xfff0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// ST1B  { ZA0<HV>.B[<Ws>, <offs>] }, <Pg>, [<Xn|SP>{, <Xm>}]
	{APST1B, aST1B, FEAT_SME, 0xe0200000, 0xffe00010, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_const_ZAHVTILEIDX_ZA0,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_B,
			sa_ws__Rs,
			sa_offs__off4,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1B  { <Zt1>.B, <Zt2>.B }, <PNg>, [<Xn|SP>, <Xm>]
	{AZST1B, aST1B, FEAT_SME2, 0xa1200000, 0xffe0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1B  { <Zt1>.B, <Zt2>.B, <Zt3>.B, <Zt4>.B }, <PNg>, [<Xn|SP>, <Xm>]
	{AZST1B, aST1B, FEAT_SME2, 0xa1208000, 0xffe0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1B  { <Zt1>.B, <Zt2>.B }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1B, aST1B, FEAT_SME2, 0xa1600000, 0xfff0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1B  { <Zt1>.B, <Zt2>.B, <Zt3>.B, <Zt4>.B }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1B, aST1B, FEAT_SME2, 0xa1608000, 0xfff0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// ST1D  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D, <mod> #3]
	{AZST1D, aST1D, FEAT_NONE, 0xe5a08000, 0xffe0a000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_14_1__SXTW_UXTW,
			sa_const_MEMEXT_3,
		}},
	}},

	// ST1D  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D, <mod>]
	{AZST1D, aST1D, FEAT_NONE, 0xe5808000, 0xffe0a000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_14_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1D  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D, LSL #3]
	{AZST1D, aST1D, FEAT_NONE, 0xe5a0a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// ST1D  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D]
	{AZST1D, aST1D, FEAT_NONE, 0xe580a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1D  { <Zt>.D }, <Pg>, [<Zn>.D{, #<imm>}]
	{AZST1D, aST1D, FEAT_NONE, 0xe5c0a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
	}},

	// ST1D  { <Zt>.D }, <Pg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZST1D, aST1D, FEAT_NONE, 0xe5e04000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// ST1D  { <Zt>.Q }, <Pg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZST1D, aST1D, FEAT_SVE2p1, 0xe5c04000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_Q,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// ST1D  { <Zt>.D }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1D, aST1D, FEAT_NONE, 0xe5e0e000, 0xfff0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1D  { <Zt>.Q }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1D, aST1D, FEAT_SVE2p1, 0xe5c0e000, 0xfff0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_Q,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1D  { <Zt1>.D-<Zt2>.D }, <PNg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZST1D, aST1D, FEAT_SVE2p1, 0xa0206000, 0xffe0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// ST1D  { <Zt1>.D-<Zt4>.D }, <PNg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZST1D, aST1D, FEAT_SVE2p1, 0xa020e000, 0xffe0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// ST1D  { <Zt1>.D-<Zt2>.D }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1D, aST1D, FEAT_SVE2p1, 0xa0606000, 0xfff0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1D  { <Zt1>.D-<Zt4>.D }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1D, aST1D, FEAT_SVE2p1, 0xa060e000, 0xfff0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// ST1D  { <ZAt><HV>.D[<Ws>, <offs>] }, <Pg>, [<Xn|SP>{, <Xm>, LSL #3}]
	{AZST1D, aST1D, FEAT_SME, 0xe0e00000, 0xffe00010, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zat__ZAt,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_D,
			sa_ws__Rs,
			sa_offs__o1,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// ST1D  { <Zt1>.D, <Zt2>.D }, <PNg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZST1D, aST1D, FEAT_SME2, 0xa1206000, 0xffe0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// ST1D  { <Zt1>.D, <Zt2>.D, <Zt3>.D, <Zt4>.D }, <PNg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZST1D, aST1D, FEAT_SME2, 0xa120e000, 0xffe0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// ST1D  { <Zt1>.D, <Zt2>.D }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1D, aST1D, FEAT_SME2, 0xa1606000, 0xfff0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1D  { <Zt1>.D, <Zt2>.D, <Zt3>.D, <Zt4>.D }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1D, aST1D, FEAT_SME2, 0xa160e000, 0xfff0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// ST1H  { <Zt>.<T> }, <Pg>, [<Xn|SP>, <Xm>, LSL #1]
	{AZST1H, aST1H, FEAT_NONE, 0xe4804000, 0xff80e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_t__size__D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// ST1H  { <Zt>.<T> }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1H, aST1H, FEAT_NONE, 0xe480e000, 0xff90e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_t__size__D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1H  { <Zt>.S }, <Pg>, [<Xn|SP>, <Zm>.S, <mod> #1]
	{AZST1H, aST1H, FEAT_NONE, 0xe4e08000, 0xffe0a000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_14_1__SXTW_UXTW,
			sa_const_MEMEXT_1,
		}},
	}},

	// ST1H  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D, <mod> #1]
	{AZST1H, aST1H, FEAT_NONE, 0xe4a08000, 0xffe0a000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_14_1__SXTW_UXTW,
			sa_const_MEMEXT_1,
		}},
	}},

	// ST1H  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D, <mod>]
	{AZST1H, aST1H, FEAT_NONE, 0xe4808000, 0xffe0a000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_14_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1H  { <Zt>.S }, <Pg>, [<Xn|SP>, <Zm>.S, <mod>]
	{AZST1H, aST1H, FEAT_NONE, 0xe4c08000, 0xffe0a000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_14_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1H  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D, LSL #1]
	{AZST1H, aST1H, FEAT_NONE, 0xe4a0a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// ST1H  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D]
	{AZST1H, aST1H, FEAT_NONE, 0xe480a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1H  { <Zt>.S }, <Pg>, [<Zn>.S{, #<imm>}]
	{AZST1H, aST1H, FEAT_NONE, 0xe4e0a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
	}},

	// ST1H  { <Zt>.D }, <Pg>, [<Zn>.D{, #<imm>}]
	{AZST1H, aST1H, FEAT_NONE, 0xe4c0a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
	}},

	// ST1H  { <Zt1>.H-<Zt2>.H }, <PNg>, [<Xn|SP>, <Xm>, LSL #1]
	{AZST1H, aST1H, FEAT_SVE2p1, 0xa0202000, 0xffe0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// ST1H  { <Zt1>.H-<Zt4>.H }, <PNg>, [<Xn|SP>, <Xm>, LSL #1]
	{AZST1H, aST1H, FEAT_SVE2p1, 0xa020a000, 0xffe0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// ST1H  { <Zt1>.H-<Zt2>.H }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1H, aST1H, FEAT_SVE2p1, 0xa0602000, 0xfff0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1H  { <Zt1>.H-<Zt4>.H }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1H, aST1H, FEAT_SVE2p1, 0xa060a000, 0xfff0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// ST1H  { <ZAt><HV>.H[<Ws>, <offs>] }, <Pg>, [<Xn|SP>{, <Xm>, LSL #1}]
	{AZST1H, aST1H, FEAT_SME, 0xe0600000, 0xffe00010, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zat__ZAt,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_H,
			sa_ws__Rs,
			sa_offs__off3_2_3,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// ST1H  { <Zt1>.H, <Zt2>.H }, <PNg>, [<Xn|SP>, <Xm>, LSL #1]
	{AZST1H, aST1H, FEAT_SME2, 0xa1202000, 0xffe0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// ST1H  { <Zt1>.H, <Zt2>.H, <Zt3>.H, <Zt4>.H }, <PNg>, [<Xn|SP>, <Xm>, LSL #1]
	{AZST1H, aST1H, FEAT_SME2, 0xa120a000, 0xffe0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// ST1H  { <Zt1>.H, <Zt2>.H }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1H, aST1H, FEAT_SME2, 0xa1602000, 0xfff0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1H  { <Zt1>.H, <Zt2>.H, <Zt3>.H, <Zt4>.H }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1H, aST1H, FEAT_SME2, 0xa160a000, 0xfff0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// ST1Q  { <Zt>.Q }, <Pg>, [<Zn>.D{, <Xm>}]
	{AZST1Q, aST1Q, FEAT_SVE2p1, 0xe4202000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_Q,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1Q  { <ZAt><HV>.Q[<Ws>, <offs>] }, <Pg>, [<Xn|SP>{, <Xm>, LSL #4}]
	{AZST1Q, aST1Q, FEAT_SME, 0xe1e00000, 0xffe00010, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zat__ZAt,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_Q,
			sa_ws__Rs,
			sa_offs,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_4,
		}},
	}},

	// ST1W  { <Zt>.<T> }, <Pg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZST1W, aST1W, FEAT_NONE, 0xe5404000, 0xffc0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_t__sz__D_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// ST1W  { <Zt>.Q }, <Pg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZST1W, aST1W, FEAT_SVE2p1, 0xe5004000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_Q,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// ST1W  { <Zt>.<T> }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1W, aST1W, FEAT_NONE, 0xe540e000, 0xffd0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_t__sz__D_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1W  { <Zt>.Q }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1W, aST1W, FEAT_SVE2p1, 0xe500e000, 0xfff0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_Q,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1W  { <Zt>.S }, <Pg>, [<Xn|SP>, <Zm>.S, <mod> #2]
	{AZST1W, aST1W, FEAT_NONE, 0xe5608000, 0xffe0a000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_14_1__SXTW_UXTW,
			sa_const_MEMEXT_2,
		}},
	}},

	// ST1W  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D, <mod> #2]
	{AZST1W, aST1W, FEAT_NONE, 0xe5208000, 0xffe0a000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_14_1__SXTW_UXTW,
			sa_const_MEMEXT_2,
		}},
	}},

	// ST1W  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D, <mod>]
	{AZST1W, aST1W, FEAT_NONE, 0xe5008000, 0xffe0a000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_mod__xs_14_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1W  { <Zt>.S }, <Pg>, [<Xn|SP>, <Zm>.S, <mod>]
	{AZST1W, aST1W, FEAT_NONE, 0xe5408000, 0xffe0a000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_S_2,
			sa_mod__xs_14_1__SXTW_UXTW,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1W  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D, LSL #2]
	{AZST1W, aST1W, FEAT_NONE, 0xe520a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// ST1W  { <Zt>.D }, <Pg>, [<Xn|SP>, <Zm>.D]
	{AZST1W, aST1W, FEAT_NONE, 0xe500a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_zm__Zm_20_5,
			sa_const_MEMEXT_D_2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST1W  { <Zt>.S }, <Pg>, [<Zn>.S{, #<imm>}]
	{AZST1W, aST1W, FEAT_NONE, 0xe560a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_S,
			sa_imm__imm5,
		}},
	}},

	// ST1W  { <Zt>.D }, <Pg>, [<Zn>.D{, #<imm>}]
	{AZST1W, aST1W, FEAT_NONE, 0xe540a000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMM, []elmType{
			sa_zn__Zn,
			sa_const_MEMIMM_D,
			sa_imm__imm5,
		}},
	}},

	// ST1W  { <Zt1>.S-<Zt2>.S }, <PNg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZST1W, aST1W, FEAT_SVE2p1, 0xa0204000, 0xffe0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// ST1W  { <Zt1>.S-<Zt4>.S }, <PNg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZST1W, aST1W, FEAT_SVE2p1, 0xa020c000, 0xffe0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// ST1W  { <Zt1>.S-<Zt2>.S }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1W, aST1W, FEAT_SVE2p1, 0xa0604000, 0xfff0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1W  { <Zt1>.S-<Zt4>.S }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1W, aST1W, FEAT_SVE2p1, 0xa060c000, 0xfff0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// ST1W  { <ZAt><HV>.S[<Ws>, <offs>] }, <Pg>, [<Xn|SP>{, <Xm>, LSL #2}]
	{AZST1W, aST1W, FEAT_SME, 0xe0a00000, 0xffe00010, false, []arg{
		{AC_ZAHVTILEIDX, []elmType{
			sa_zat__ZAt,
			sa_hv__V__H_V,
			sa_const_ZAHVTILEIDX_S,
			sa_ws__Rs,
			sa_offs__off2,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// ST1W  { <Zt1>.S, <Zt2>.S }, <PNg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZST1W, aST1W, FEAT_SME2, 0xa1204000, 0xffe0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// ST1W  { <Zt1>.S, <Zt2>.S, <Zt3>.S, <Zt4>.S }, <PNg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZST1W, aST1W, FEAT_SME2, 0xa120c000, 0xffe0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// ST1W  { <Zt1>.S, <Zt2>.S }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1W, aST1W, FEAT_SME2, 0xa1604000, 0xfff0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST1W  { <Zt1>.S, <Zt2>.S, <Zt3>.S, <Zt4>.S }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST1W, aST1W, FEAT_SME2, 0xa160c000, 0xfff0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// ST2  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>]
	{AVST2, aST2, FEAT_NONE, 0xc008000, 0xbffff000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST2  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <imm>
	{AVST2, aST2, FEAT_NONE, 0xc9f8000, 0xbffff000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm__Q__16_32,
		}},
	}},

	// ST2  { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <Xm>
	{AVST2, aST2, FEAT_NONE, 0xc808000, 0xbfe0f000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST2  { <Vt>.B, <Vt2>.B }[<index>], [<Xn|SP>]
	{AVST2, aST2, FEAT_NONE, 0xd200000, 0xbfffe000, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST2  { <Vt>.H, <Vt2>.H }[<index>], [<Xn|SP>]
	{AVST2, aST2, FEAT_NONE, 0xd204000, 0xbfffe400, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST2  { <Vt>.S, <Vt2>.S }[<index>], [<Xn|SP>]
	{AVST2, aST2, FEAT_NONE, 0xd208000, 0xbfffec00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST2  { <Vt>.D, <Vt2>.D }[<index>], [<Xn|SP>]
	{AVST2, aST2, FEAT_NONE, 0xd208400, 0xbffffc00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST2  { <Vt>.B, <Vt2>.B }[<index>], [<Xn|SP>], #2
	{AVST2, aST2, FEAT_NONE, 0xdbf0000, 0xbfffe000, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_2,
		}},
	}},

	// ST2  { <Vt>.B, <Vt2>.B }[<index>], [<Xn|SP>], <Xm>
	{AVST2, aST2, FEAT_NONE, 0xda00000, 0xbfe0e000, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST2  { <Vt>.H, <Vt2>.H }[<index>], [<Xn|SP>], #4
	{AVST2, aST2, FEAT_NONE, 0xdbf4000, 0xbfffe400, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_4,
		}},
	}},

	// ST2  { <Vt>.H, <Vt2>.H }[<index>], [<Xn|SP>], <Xm>
	{AVST2, aST2, FEAT_NONE, 0xda04000, 0xbfe0e400, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST2  { <Vt>.S, <Vt2>.S }[<index>], [<Xn|SP>], #8
	{AVST2, aST2, FEAT_NONE, 0xdbf8000, 0xbfffec00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_8,
		}},
	}},

	// ST2  { <Vt>.S, <Vt2>.S }[<index>], [<Xn|SP>], <Xm>
	{AVST2, aST2, FEAT_NONE, 0xda08000, 0xbfe0ec00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST2  { <Vt>.D, <Vt2>.D }[<index>], [<Xn|SP>], #16
	{AVST2, aST2, FEAT_NONE, 0xdbf8400, 0xbffffc00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_16,
		}},
	}},

	// ST2  { <Vt>.D, <Vt2>.D }[<index>], [<Xn|SP>], <Xm>
	{AVST2, aST2, FEAT_NONE, 0xda08400, 0xbfe0fc00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST2B  { <Zt1>.B, <Zt2>.B }, <Pg>, [<Xn|SP>, <Xm>]
	{AZST2B, aST2B, FEAT_NONE, 0xe4206000, 0xffe0e000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_B,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST2B  { <Zt1>.B, <Zt2>.B }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST2B, aST2B, FEAT_NONE, 0xe430e000, 0xfff0e000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_B,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST2D  { <Zt1>.D, <Zt2>.D }, <Pg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZST2D, aST2D, FEAT_NONE, 0xe5a06000, 0xffe0e000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// ST2D  { <Zt1>.D, <Zt2>.D }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST2D, aST2D, FEAT_NONE, 0xe5b0e000, 0xfff0e000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST2G  <Xt|SP>, [<Xn|SP>], #<simm>
	{AST2G, aST2G, FEAT_MTE, 0xd9a00400, 0xffe00c00, false, []arg{
		{AC_RSP, []elmType{
			sa_xt_sp__Xt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Xn,
			sa_simm__imm9,
		}},
	}},

	// ST2G  <Xt|SP>, [<Xn|SP>, #<simm>]!
	{AST2G, aST2G, FEAT_MTE, 0xd9a00c00, 0xffe00c00, false, []arg{
		{AC_RSP, []elmType{
			sa_xt_sp__Xt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Xn,
			sa_simm__imm9,
		}},
	}},

	// ST2G  <Xt|SP>, [<Xn|SP>{, #<simm>}]
	{AST2G, aST2G, FEAT_MTE, 0xd9a00800, 0xffe00c00, false, []arg{
		{AC_RSP, []elmType{
			sa_xt_sp__Xt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Xn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// ST2H  { <Zt1>.H, <Zt2>.H }, <Pg>, [<Xn|SP>, <Xm>, LSL #1]
	{AZST2H, aST2H, FEAT_NONE, 0xe4a06000, 0xffe0e000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_H,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// ST2H  { <Zt1>.H, <Zt2>.H }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST2H, aST2H, FEAT_NONE, 0xe4b0e000, 0xfff0e000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_H,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST2Q  { <Zt1>.Q, <Zt2>.Q }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST2Q, aST2Q, FEAT_SVE2p1, 0xe4400000, 0xfff0e000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_Q,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST2Q  { <Zt1>.Q, <Zt2>.Q }, <Pg>, [<Xn|SP>, <Xm>, LSL #4]
	{AZST2Q, aST2Q, FEAT_SVE2p1, 0xe4600000, 0xffe0e000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_Q,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_4,
		}},
	}},

	// ST2W  { <Zt1>.S, <Zt2>.S }, <Pg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZST2W, aST2W, FEAT_NONE, 0xe5206000, 0xffe0e000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// ST2W  { <Zt1>.S, <Zt2>.S }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST2W, aST2W, FEAT_NONE, 0xe530e000, 0xfff0e000, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_const_REGLIST2_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST3  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>]
	{AVST3, aST3, FEAT_NONE, 0xc004000, 0xbffff000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST3  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <imm>
	{AVST3, aST3, FEAT_NONE, 0xc9f4000, 0xbffff000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm__Q__24_48,
		}},
	}},

	// ST3  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <Xm>
	{AVST3, aST3, FEAT_NONE, 0xc804000, 0xbfe0f000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST3  { <Vt>.B, <Vt2>.B, <Vt3>.B }[<index>], [<Xn|SP>]
	{AVST3, aST3, FEAT_NONE, 0xd002000, 0xbfffe000, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST3  { <Vt>.H, <Vt2>.H, <Vt3>.H }[<index>], [<Xn|SP>]
	{AVST3, aST3, FEAT_NONE, 0xd006000, 0xbfffe400, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST3  { <Vt>.S, <Vt2>.S, <Vt3>.S }[<index>], [<Xn|SP>]
	{AVST3, aST3, FEAT_NONE, 0xd00a000, 0xbfffec00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST3  { <Vt>.D, <Vt2>.D, <Vt3>.D }[<index>], [<Xn|SP>]
	{AVST3, aST3, FEAT_NONE, 0xd00a400, 0xbffffc00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST3  { <Vt>.B, <Vt2>.B, <Vt3>.B }[<index>], [<Xn|SP>], #3
	{AVST3, aST3, FEAT_NONE, 0xd9f2000, 0xbfffe000, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_3,
		}},
	}},

	// ST3  { <Vt>.B, <Vt2>.B, <Vt3>.B }[<index>], [<Xn|SP>], <Xm>
	{AVST3, aST3, FEAT_NONE, 0xd802000, 0xbfe0e000, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST3  { <Vt>.H, <Vt2>.H, <Vt3>.H }[<index>], [<Xn|SP>], #6
	{AVST3, aST3, FEAT_NONE, 0xd9f6000, 0xbfffe400, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_6,
		}},
	}},

	// ST3  { <Vt>.H, <Vt2>.H, <Vt3>.H }[<index>], [<Xn|SP>], <Xm>
	{AVST3, aST3, FEAT_NONE, 0xd806000, 0xbfe0e400, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST3  { <Vt>.S, <Vt2>.S, <Vt3>.S }[<index>], [<Xn|SP>], #12
	{AVST3, aST3, FEAT_NONE, 0xd9fa000, 0xbfffec00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_12,
		}},
	}},

	// ST3  { <Vt>.S, <Vt2>.S, <Vt3>.S }[<index>], [<Xn|SP>], <Xm>
	{AVST3, aST3, FEAT_NONE, 0xd80a000, 0xbfe0ec00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST3  { <Vt>.D, <Vt2>.D, <Vt3>.D }[<index>], [<Xn|SP>], #24
	{AVST3, aST3, FEAT_NONE, 0xd9fa400, 0xbffffc00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_24,
		}},
	}},

	// ST3  { <Vt>.D, <Vt2>.D, <Vt3>.D }[<index>], [<Xn|SP>], <Xm>
	{AVST3, aST3, FEAT_NONE, 0xd80a400, 0xbfe0fc00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST3B  { <Zt1>.B, <Zt2>.B, <Zt3>.B }, <Pg>, [<Xn|SP>, <Xm>]
	{AZST3B, aST3B, FEAT_NONE, 0xe4406000, 0xffe0e000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_B,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST3B  { <Zt1>.B, <Zt2>.B, <Zt3>.B }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST3B, aST3B, FEAT_NONE, 0xe450e000, 0xfff0e000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_B,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST3D  { <Zt1>.D, <Zt2>.D, <Zt3>.D }, <Pg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZST3D, aST3D, FEAT_NONE, 0xe5c06000, 0xffe0e000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// ST3D  { <Zt1>.D, <Zt2>.D, <Zt3>.D }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST3D, aST3D, FEAT_NONE, 0xe5d0e000, 0xfff0e000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST3H  { <Zt1>.H, <Zt2>.H, <Zt3>.H }, <Pg>, [<Xn|SP>, <Xm>, LSL #1]
	{AZST3H, aST3H, FEAT_NONE, 0xe4c06000, 0xffe0e000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_H,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// ST3H  { <Zt1>.H, <Zt2>.H, <Zt3>.H }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST3H, aST3H, FEAT_NONE, 0xe4d0e000, 0xfff0e000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_H,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST3Q  { <Zt1>.Q, <Zt2>.Q, <Zt3>.Q }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST3Q, aST3Q, FEAT_SVE2p1, 0xe4800000, 0xfff0e000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_Q,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST3Q  { <Zt1>.Q, <Zt2>.Q, <Zt3>.Q }, <Pg>, [<Xn|SP>, <Xm>, LSL #4]
	{AZST3Q, aST3Q, FEAT_SVE2p1, 0xe4a00000, 0xffe0e000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_Q,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_4,
		}},
	}},

	// ST3W  { <Zt1>.S, <Zt2>.S, <Zt3>.S }, <Pg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZST3W, aST3W, FEAT_NONE, 0xe5406000, 0xffe0e000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// ST3W  { <Zt1>.S, <Zt2>.S, <Zt3>.S }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST3W, aST3W, FEAT_NONE, 0xe550e000, 0xfff0e000, false, []arg{
		{AC_REGLIST3, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_const_REGLIST3_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST4  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>]
	{AVST4, aST4, FEAT_NONE, 0xc000000, 0xbffff000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST4  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <imm>
	{AVST4, aST4, FEAT_NONE, 0xc9f0000, 0xbffff000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm__Q__32_64,
		}},
	}},

	// ST4  { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <Xm>
	{AVST4, aST4, FEAT_NONE, 0xc800000, 0xbfe0f000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_vt__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt2__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt3__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
			sa_vt4__Rt,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST4  { <Vt>.B, <Vt2>.B, <Vt3>.B, <Vt4>.B }[<index>], [<Xn|SP>]
	{AVST4, aST4, FEAT_NONE, 0xd202000, 0xbfffe000, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST4  { <Vt>.H, <Vt2>.H, <Vt3>.H, <Vt4>.H }[<index>], [<Xn|SP>]
	{AVST4, aST4, FEAT_NONE, 0xd206000, 0xbfffe400, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST4  { <Vt>.S, <Vt2>.S, <Vt3>.S, <Vt4>.S }[<index>], [<Xn|SP>]
	{AVST4, aST4, FEAT_NONE, 0xd20a000, 0xbfffec00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST4  { <Vt>.D, <Vt2>.D, <Vt3>.D, <Vt4>.D }[<index>], [<Xn|SP>]
	{AVST4, aST4, FEAT_NONE, 0xd20a400, 0xbffffc00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST4  { <Vt>.B, <Vt2>.B, <Vt3>.B, <Vt4>.B }[<index>], [<Xn|SP>], #4
	{AVST4, aST4, FEAT_NONE, 0xdbf2000, 0xbfffe000, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_4,
		}},
	}},

	// ST4  { <Vt>.B, <Vt2>.B, <Vt3>.B, <Vt4>.B }[<index>], [<Xn|SP>], <Xm>
	{AVST4, aST4, FEAT_NONE, 0xda02000, 0xbfe0e000, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_B,
			sa_index__Q_S_size,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST4  { <Vt>.H, <Vt2>.H, <Vt3>.H, <Vt4>.H }[<index>], [<Xn|SP>], #8
	{AVST4, aST4, FEAT_NONE, 0xdbf6000, 0xbfffe400, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_8,
		}},
	}},

	// ST4  { <Vt>.H, <Vt2>.H, <Vt3>.H, <Vt4>.H }[<index>], [<Xn|SP>], <Xm>
	{AVST4, aST4, FEAT_NONE, 0xda06000, 0xbfe0e400, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_H,
			sa_index_2__Q_S_size_1,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST4  { <Vt>.S, <Vt2>.S, <Vt3>.S, <Vt4>.S }[<index>], [<Xn|SP>], #16
	{AVST4, aST4, FEAT_NONE, 0xdbfa000, 0xbfffec00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_16,
		}},
	}},

	// ST4  { <Vt>.S, <Vt2>.S, <Vt3>.S, <Vt4>.S }[<index>], [<Xn|SP>], <Xm>
	{AVST4, aST4, FEAT_NONE, 0xda0a000, 0xbfe0ec00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_S,
			sa_index_3__Q_S,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST4  { <Vt>.D, <Vt2>.D, <Vt3>.D, <Vt4>.D }[<index>], [<Xn|SP>], #32
	{AVST4, aST4, FEAT_NONE, 0xdbfa400, 0xbffffc00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPOSTIMM_32,
		}},
	}},

	// ST4  { <Vt>.D, <Vt2>.D, <Vt3>.D, <Vt4>.D }[<index>], [<Xn|SP>], <Xm>
	{AVST4, aST4, FEAT_NONE, 0xda0a400, 0xbfe0fc00, false, []arg{
		{AC_LISTIDX, []elmType{
			sa_vt__Rt,
			sa_vt2__Rt,
			sa_vt3__Rt,
			sa_vt4__Rt,
			sa_const_LISTIDX_D,
			sa_index_1__Q,
		}},
		{AC_MEMPOSTREG, []elmType{
			sa_xn_sp__Rn,
			sa_xm__Rm,
		}},
	}},

	// ST4B  { <Zt1>.B, <Zt2>.B, <Zt3>.B, <Zt4>.B }, <Pg>, [<Xn|SP>, <Xm>]
	{AZST4B, aST4B, FEAT_NONE, 0xe4606000, 0xffe0e000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_B,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// ST4B  { <Zt1>.B, <Zt2>.B, <Zt3>.B, <Zt4>.B }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST4B, aST4B, FEAT_NONE, 0xe470e000, 0xfff0e000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_B,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST4D  { <Zt1>.D, <Zt2>.D, <Zt3>.D, <Zt4>.D }, <Pg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZST4D, aST4D, FEAT_NONE, 0xe5e06000, 0xffe0e000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// ST4D  { <Zt1>.D, <Zt2>.D, <Zt3>.D, <Zt4>.D }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST4D, aST4D, FEAT_NONE, 0xe5f0e000, 0xfff0e000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST4H  { <Zt1>.H, <Zt2>.H, <Zt3>.H, <Zt4>.H }, <Pg>, [<Xn|SP>, <Xm>, LSL #1]
	{AZST4H, aST4H, FEAT_NONE, 0xe4e06000, 0xffe0e000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_H,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// ST4H  { <Zt1>.H, <Zt2>.H, <Zt3>.H, <Zt4>.H }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST4H, aST4H, FEAT_NONE, 0xe4f0e000, 0xfff0e000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_H,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST4Q  { <Zt1>.Q, <Zt2>.Q, <Zt3>.Q, <Zt4>.Q }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST4Q, aST4Q, FEAT_SVE2p1, 0xe4c00000, 0xfff0e000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_Q,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST4Q  { <Zt1>.Q, <Zt2>.Q, <Zt3>.Q, <Zt4>.Q }, <Pg>, [<Xn|SP>, <Xm>, LSL #4]
	{AZST4Q, aST4Q, FEAT_SVE2p1, 0xe4e00000, 0xffe0e000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_Q,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_4,
		}},
	}},

	// ST4W  { <Zt1>.S, <Zt2>.S, <Zt3>.S, <Zt4>.S }, <Pg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZST4W, aST4W, FEAT_NONE, 0xe5606000, 0xffe0e000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// ST4W  { <Zt1>.S, <Zt2>.S, <Zt3>.S, <Zt4>.S }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZST4W, aST4W, FEAT_NONE, 0xe570e000, 0xfff0e000, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1__Zt_4_5,
			sa_zt2__Zt_4_5,
			sa_zt3__Zt,
			sa_zt4__Zt_4_5,
			sa_const_REGLIST4_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// ST64B  <Xt>, [<Xn|SP> {,#0}]
	{AST64B, aST64B, FEAT_LS64, 0xf83f9000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// ST64BV  <Xs>, <Xt>, [<Xn|SP>]
	{AST64BV, aST64BV, FEAT_LS64_V, 0xf820b000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// ST64BV0  <Xs>, <Xt>, [<Xn|SP>]
	{AST64BV0, aST64BV0, FEAT_LS64_ACCDATA, 0xf820a000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// STADD  <Ws>, [<Xn|SP>]
	{ASTADDW, aSTADD, FEAT_LSE, 0xb820001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STADDL  <Ws>, [<Xn|SP>]
	{ASTADDLW, aSTADDL, FEAT_LSE, 0xb860001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STADD  <Xs>, [<Xn|SP>]
	{ASTADDD, aSTADD, FEAT_LSE, 0xf820001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STADDL  <Xs>, [<Xn|SP>]
	{ASTADDLD, aSTADDL, FEAT_LSE, 0xf860001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STADDB  <Ws>, [<Xn|SP>]
	{ASTADDB, aSTADDB, FEAT_LSE, 0x3820001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STADDLB  <Ws>, [<Xn|SP>]
	{ASTADDLB, aSTADDLB, FEAT_LSE, 0x3860001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STADDH  <Ws>, [<Xn|SP>]
	{ASTADDH, aSTADDH, FEAT_LSE, 0x7820001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STADDLH  <Ws>, [<Xn|SP>]
	{ASTADDLH, aSTADDLH, FEAT_LSE, 0x7860001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STCLR  <Ws>, [<Xn|SP>]
	{ASTCLRW, aSTCLR, FEAT_LSE, 0xb820101f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STCLRL  <Ws>, [<Xn|SP>]
	{ASTCLRLW, aSTCLRL, FEAT_LSE, 0xb860101f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STCLR  <Xs>, [<Xn|SP>]
	{ASTCLRD, aSTCLR, FEAT_LSE, 0xf820101f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STCLRL  <Xs>, [<Xn|SP>]
	{ASTCLRLD, aSTCLRL, FEAT_LSE, 0xf860101f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STCLRB  <Ws>, [<Xn|SP>]
	{ASTCLRB, aSTCLRB, FEAT_LSE, 0x3820101f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STCLRLB  <Ws>, [<Xn|SP>]
	{ASTCLRLB, aSTCLRLB, FEAT_LSE, 0x3860101f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STCLRH  <Ws>, [<Xn|SP>]
	{ASTCLRH, aSTCLRH, FEAT_LSE, 0x7820101f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STCLRLH  <Ws>, [<Xn|SP>]
	{ASTCLRLH, aSTCLRLH, FEAT_LSE, 0x7860101f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STEOR  <Ws>, [<Xn|SP>]
	{ASTEORW, aSTEOR, FEAT_LSE, 0xb820201f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STEORL  <Ws>, [<Xn|SP>]
	{ASTEORLW, aSTEORL, FEAT_LSE, 0xb860201f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STEOR  <Xs>, [<Xn|SP>]
	{ASTEORD, aSTEOR, FEAT_LSE, 0xf820201f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STEORL  <Xs>, [<Xn|SP>]
	{ASTEORLD, aSTEORL, FEAT_LSE, 0xf860201f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STEORB  <Ws>, [<Xn|SP>]
	{ASTEORB, aSTEORB, FEAT_LSE, 0x3820201f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STEORLB  <Ws>, [<Xn|SP>]
	{ASTEORLB, aSTEORLB, FEAT_LSE, 0x3860201f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STEORH  <Ws>, [<Xn|SP>]
	{ASTEORH, aSTEORH, FEAT_LSE, 0x7820201f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STEORLH  <Ws>, [<Xn|SP>]
	{ASTEORLH, aSTEORLH, FEAT_LSE, 0x7860201f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STG  <Xt|SP>, [<Xn|SP>], #<simm>
	{ASTG, aSTG, FEAT_MTE, 0xd9200400, 0xffe00c00, false, []arg{
		{AC_RSP, []elmType{
			sa_xt_sp__Xt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Xn,
			sa_simm__imm9,
		}},
	}},

	// STG  <Xt|SP>, [<Xn|SP>, #<simm>]!
	{ASTG, aSTG, FEAT_MTE, 0xd9200c00, 0xffe00c00, false, []arg{
		{AC_RSP, []elmType{
			sa_xt_sp__Xt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Xn,
			sa_simm__imm9,
		}},
	}},

	// STG  <Xt|SP>, [<Xn|SP>{, #<simm>}]
	{ASTG, aSTG, FEAT_MTE, 0xd9200800, 0xffe00c00, false, []arg{
		{AC_RSP, []elmType{
			sa_xt_sp__Xt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Xn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STGM  <Xt>, [<Xn|SP>]
	{ASTGM, aSTGM, FEAT_MTE2, 0xd9a00000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Xt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Xn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STGP  <Xt1>, <Xt2>, [<Xn|SP>], #<imm>
	{ASTGP, aSTGP, FEAT_MTE, 0x68800000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_xt1__Xt,
			sa_xt2__Xt2,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Xn,
			sa_imm_1__simm7,
		}},
	}},

	// STGP  <Xt1>, <Xt2>, [<Xn|SP>, #<imm>]!
	{ASTGP, aSTGP, FEAT_MTE, 0x69800000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_xt1__Xt,
			sa_xt2__Xt2,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Xn,
			sa_imm_1__simm7,
		}},
	}},

	// STGP  <Xt1>, <Xt2>, [<Xn|SP>{, #<imm>}]
	{ASTGP, aSTGP, FEAT_MTE, 0x69000000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_xt1__Xt,
			sa_xt2__Xt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Xn,
			sa_const_MEMIMM_no_arng,
			sa_imm__simm7,
		}},
	}},

	// STILP  <Wt1>, <Wt2>, [<Xn|SP>]
	{ASTILPW, aSTILP, FEAT_LRCPC3, 0x99001800, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STILP  <Wt1>, <Wt2>, [<Xn|SP>, #-8]!
	{ASTILPW, aSTILP, FEAT_LRCPC3, 0x99000800, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPREIMM_n8,
		}},
	}},

	// STILP  <Xt1>, <Xt2>, [<Xn|SP>]
	{ASTILP, aSTILP, FEAT_LRCPC3, 0xd9001800, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STILP  <Xt1>, <Xt2>, [<Xn|SP>, #-16]!
	{ASTILP, aSTILP, FEAT_LRCPC3, 0xd9000800, 0xffe0fc00, false, []arg{
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPREIMM_n16,
		}},
	}},

	// STL1  { <Vt>.D }[<index>], [<Xn|SP>]
	{AVSTL1, aSTL1, FEAT_LRCPC3, 0xd018400, 0xbffffc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vt__Rt,
			sa_const_ARNGIDX_D,
			sa_index__Q,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STLLR  <Wt>, [<Xn|SP>{,#0}]
	{ASTLLRW, aSTLLR, FEAT_LOR, 0x889f7c00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STLLR  <Xt>, [<Xn|SP>{,#0}]
	{ASTLLR, aSTLLR, FEAT_LOR, 0xc89f7c00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STLLRB  <Wt>, [<Xn|SP>{,#0}]
	{ASTLLRB, aSTLLRB, FEAT_LOR, 0x89f7c00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STLLRH  <Wt>, [<Xn|SP>{,#0}]
	{ASTLLRH, aSTLLRH, FEAT_LOR, 0x489f7c00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STLR  <Wt>, [<Xn|SP>{,#0}]
	{ASTLRW, aSTLR, FEAT_NONE, 0x889ffc00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STLR  <Xt>, [<Xn|SP>{,#0}]
	{ASTLR, aSTLR, FEAT_NONE, 0xc89ffc00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STLR  <Wt>, [<Xn|SP>, #-4]!
	{ASTLRW, aSTLR, FEAT_LRCPC3, 0x99800800, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPREIMM_n4,
		}},
	}},

	// STLR  <Xt>, [<Xn|SP>, #-8]!
	{ASTLR, aSTLR, FEAT_LRCPC3, 0xd9800800, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMPREIMM_n8,
		}},
	}},

	// STLRB  <Wt>, [<Xn|SP>{,#0}]
	{ASTLRB, aSTLRB, FEAT_NONE, 0x89ffc00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STLRH  <Wt>, [<Xn|SP>{,#0}]
	{ASTLRH, aSTLRH, FEAT_NONE, 0x489ffc00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STLUR  <Wt>, [<Xn|SP>{, #<simm>}]
	{ASTLURW, aSTLUR, FEAT_LRCPC2, 0x99000000, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STLUR  <Xt>, [<Xn|SP>{, #<simm>}]
	{ASTLUR, aSTLUR, FEAT_LRCPC2, 0xd9000000, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STLUR  <Bt>, [<Xn|SP>{, #<simm>}]
	{AFSTLURB, aSTLUR, FEAT_LRCPC3, 0x1d000800, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_bt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STLUR  <Ht>, [<Xn|SP>{, #<simm>}]
	{AFSTLURH, aSTLUR, FEAT_LRCPC3, 0x5d000800, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_ht__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STLUR  <St>, [<Xn|SP>{, #<simm>}]
	{AFSTLURS, aSTLUR, FEAT_LRCPC3, 0x9d000800, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_st__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STLUR  <Dt>, [<Xn|SP>{, #<simm>}]
	{AFSTLURD, aSTLUR, FEAT_LRCPC3, 0xdd000800, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_dt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STLUR  <Qt>, [<Xn|SP>{, #<simm>}]
	{AFSTLURQ, aSTLUR, FEAT_LRCPC3, 0x1d800800, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_qt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STLURB  <Wt>, [<Xn|SP>{, #<simm>}]
	{ASTLURB, aSTLURB, FEAT_LRCPC2, 0x19000000, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STLURH  <Wt>, [<Xn|SP>{, #<simm>}]
	{ASTLURH, aSTLURH, FEAT_LRCPC2, 0x59000000, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STLXP  <Ws>, <Wt1>, <Wt2>, [<Xn|SP>{,#0}]
	{ASTLXPW, aSTLXP, FEAT_NONE, 0x88208000, 0xffe08000, false, []arg{
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
	}},

	// STLXP  <Ws>, <Xt1>, <Xt2>, [<Xn|SP>{,#0}]
	{ASTLXP, aSTLXP, FEAT_NONE, 0xc8208000, 0xffe08000, false, []arg{
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
	}},

	// STLXR  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ASTLXRW, aSTLXR, FEAT_NONE, 0x8800fc00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
	}},

	// STLXR  <Ws>, <Xt>, [<Xn|SP>{,#0}]
	{ASTLXR, aSTLXR, FEAT_NONE, 0xc800fc00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
	}},

	// STLXRB  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ASTLXRB, aSTLXRB, FEAT_NONE, 0x800fc00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
	}},

	// STLXRH  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ASTLXRH, aSTLXRH, FEAT_NONE, 0x4800fc00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
	}},

	// STNP  <Wt1>, <Wt2>, [<Xn|SP>{, #<imm>}]
	{ASTNPW, aSTNP, FEAT_NONE, 0x28000000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm7,
		}},
	}},

	// STNP  <Xt1>, <Xt2>, [<Xn|SP>{, #<imm>}]
	{ASTNP, aSTNP, FEAT_NONE, 0xa8000000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm_1__imm7,
		}},
	}},

	// STNP  <St1>, <St2>, [<Xn|SP>{, #<imm>}]
	{AFSTNPS, aSTNP, FEAT_NONE, 0x2c000000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_st1__Rt,
			sa_st2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm_2__imm7,
		}},
	}},

	// STNP  <Dt1>, <Dt2>, [<Xn|SP>{, #<imm>}]
	{AFSTNPD, aSTNP, FEAT_NONE, 0x6c000000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_dt1__Rt,
			sa_dt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm7,
		}},
	}},

	// STNP  <Qt1>, <Qt2>, [<Xn|SP>{, #<imm>}]
	{AFSTNPQ, aSTNP, FEAT_NONE, 0xac000000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_qt1__Rt,
			sa_qt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm_1__imm7,
		}},
	}},

	// STNT1B  { <Zt>.B }, <Pg>, [<Xn|SP>, <Xm>]
	{AZSTNT1B, aSTNT1B, FEAT_NONE, 0xe4006000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_B,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// STNT1B  { <Zt>.B }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1B, aSTNT1B, FEAT_NONE, 0xe410e000, 0xfff0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_B,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// STNT1B  { <Zt1>.B-<Zt2>.B }, <PNg>, [<Xn|SP>, <Xm>]
	{AZSTNT1B, aSTNT1B, FEAT_SVE2p1, 0xa0200001, 0xffe0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// STNT1B  { <Zt1>.B-<Zt4>.B }, <PNg>, [<Xn|SP>, <Xm>]
	{AZSTNT1B, aSTNT1B, FEAT_SVE2p1, 0xa0208001, 0xffe0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// STNT1B  { <Zt1>.B-<Zt2>.B }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1B, aSTNT1B, FEAT_SVE2p1, 0xa0600001, 0xfff0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// STNT1B  { <Zt1>.B-<Zt4>.B }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1B, aSTNT1B, FEAT_SVE2p1, 0xa0608001, 0xfff0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// STNT1B  { <Zt>.S }, <Pg>, [<Zn>.S{, <Xm>}]
	{AZSTNT1B, aSTNT1B, FEAT_NONE, 0xe4402000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_S_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// STNT1B  { <Zt>.D }, <Pg>, [<Zn>.D{, <Xm>}]
	{AZSTNT1B, aSTNT1B, FEAT_NONE, 0xe4002000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// STNT1B  { <Zt1>.B, <Zt2>.B }, <PNg>, [<Xn|SP>, <Xm>]
	{AZSTNT1B, aSTNT1B, FEAT_SME2, 0xa1200008, 0xffe0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// STNT1B  { <Zt1>.B, <Zt2>.B, <Zt3>.B, <Zt4>.B }, <PNg>, [<Xn|SP>, <Xm>]
	{AZSTNT1B, aSTNT1B, FEAT_SME2, 0xa1208008, 0xffe0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// STNT1B  { <Zt1>.B, <Zt2>.B }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1B, aSTNT1B, FEAT_SME2, 0xa1600008, 0xfff0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// STNT1B  { <Zt1>.B, <Zt2>.B, <Zt3>.B, <Zt4>.B }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1B, aSTNT1B, FEAT_SME2, 0xa1608008, 0xfff0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_B,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// STNT1D  { <Zt>.D }, <Pg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZSTNT1D, aSTNT1D, FEAT_NONE, 0xe5806000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// STNT1D  { <Zt>.D }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1D, aSTNT1D, FEAT_NONE, 0xe590e000, 0xfff0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// STNT1D  { <Zt1>.D-<Zt2>.D }, <PNg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZSTNT1D, aSTNT1D, FEAT_SVE2p1, 0xa0206001, 0xffe0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// STNT1D  { <Zt1>.D-<Zt4>.D }, <PNg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZSTNT1D, aSTNT1D, FEAT_SVE2p1, 0xa020e001, 0xffe0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// STNT1D  { <Zt1>.D-<Zt2>.D }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1D, aSTNT1D, FEAT_SVE2p1, 0xa0606001, 0xfff0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// STNT1D  { <Zt1>.D-<Zt4>.D }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1D, aSTNT1D, FEAT_SVE2p1, 0xa060e001, 0xfff0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// STNT1D  { <Zt>.D }, <Pg>, [<Zn>.D{, <Xm>}]
	{AZSTNT1D, aSTNT1D, FEAT_NONE, 0xe5802000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// STNT1D  { <Zt1>.D, <Zt2>.D }, <PNg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZSTNT1D, aSTNT1D, FEAT_SME2, 0xa1206008, 0xffe0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// STNT1D  { <Zt1>.D, <Zt2>.D, <Zt3>.D, <Zt4>.D }, <PNg>, [<Xn|SP>, <Xm>, LSL #3]
	{AZSTNT1D, aSTNT1D, FEAT_SME2, 0xa120e008, 0xffe0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_3,
		}},
	}},

	// STNT1D  { <Zt1>.D, <Zt2>.D }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1D, aSTNT1D, FEAT_SME2, 0xa1606008, 0xfff0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// STNT1D  { <Zt1>.D, <Zt2>.D, <Zt3>.D, <Zt4>.D }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1D, aSTNT1D, FEAT_SME2, 0xa160e008, 0xfff0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_D,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// STNT1H  { <Zt>.H }, <Pg>, [<Xn|SP>, <Xm>, LSL #1]
	{AZSTNT1H, aSTNT1H, FEAT_NONE, 0xe4806000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// STNT1H  { <Zt>.H }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1H, aSTNT1H, FEAT_NONE, 0xe490e000, 0xfff0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_H,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// STNT1H  { <Zt1>.H-<Zt2>.H }, <PNg>, [<Xn|SP>, <Xm>, LSL #1]
	{AZSTNT1H, aSTNT1H, FEAT_SVE2p1, 0xa0202001, 0xffe0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// STNT1H  { <Zt1>.H-<Zt4>.H }, <PNg>, [<Xn|SP>, <Xm>, LSL #1]
	{AZSTNT1H, aSTNT1H, FEAT_SVE2p1, 0xa020a001, 0xffe0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// STNT1H  { <Zt1>.H-<Zt2>.H }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1H, aSTNT1H, FEAT_SVE2p1, 0xa0602001, 0xfff0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// STNT1H  { <Zt1>.H-<Zt4>.H }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1H, aSTNT1H, FEAT_SVE2p1, 0xa060a001, 0xfff0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// STNT1H  { <Zt>.S }, <Pg>, [<Zn>.S{, <Xm>}]
	{AZSTNT1H, aSTNT1H, FEAT_NONE, 0xe4c02000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_S_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// STNT1H  { <Zt>.D }, <Pg>, [<Zn>.D{, <Xm>}]
	{AZSTNT1H, aSTNT1H, FEAT_NONE, 0xe4802000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// STNT1H  { <Zt1>.H, <Zt2>.H }, <PNg>, [<Xn|SP>, <Xm>, LSL #1]
	{AZSTNT1H, aSTNT1H, FEAT_SME2, 0xa1202008, 0xffe0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// STNT1H  { <Zt1>.H, <Zt2>.H, <Zt3>.H, <Zt4>.H }, <PNg>, [<Xn|SP>, <Xm>, LSL #1]
	{AZSTNT1H, aSTNT1H, FEAT_SME2, 0xa120a008, 0xffe0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_1,
		}},
	}},

	// STNT1H  { <Zt1>.H, <Zt2>.H }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1H, aSTNT1H, FEAT_SME2, 0xa1602008, 0xfff0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// STNT1H  { <Zt1>.H, <Zt2>.H, <Zt3>.H, <Zt4>.H }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1H, aSTNT1H, FEAT_SME2, 0xa160a008, 0xfff0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_H,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// STNT1W  { <Zt>.S }, <Pg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZSTNT1W, aSTNT1W, FEAT_NONE, 0xe5006000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// STNT1W  { <Zt>.S }, <Pg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1W, aSTNT1W, FEAT_NONE, 0xe510e000, 0xfff0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// STNT1W  { <Zt1>.S-<Zt2>.S }, <PNg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZSTNT1W, aSTNT1W, FEAT_SVE2p1, 0xa0204001, 0xffe0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// STNT1W  { <Zt1>.S-<Zt4>.S }, <PNg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZSTNT1W, aSTNT1W, FEAT_SVE2p1, 0xa020c001, 0xffe0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// STNT1W  { <Zt1>.S-<Zt2>.S }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1W, aSTNT1W, FEAT_SVE2p1, 0xa0604001, 0xfff0e001, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__Zt_4_4,
			sa_zt2__Zt_4_4,
			sa_const_REGLIST2_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// STNT1W  { <Zt1>.S-<Zt4>.S }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1W, aSTNT1W, FEAT_SVE2p1, 0xa060c001, 0xfff0e003, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__Zt,
			sa_zt4__Zt_4_3,
			sa_const_REGLIST4_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// STNT1W  { <Zt>.S }, <Pg>, [<Zn>.S{, <Xm>}]
	{AZSTNT1W, aSTNT1W, FEAT_NONE, 0xe5402000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_S_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// STNT1W  { <Zt>.D }, <Pg>, [<Zn>.D{, <Xm>}]
	{AZSTNT1W, aSTNT1W, FEAT_NONE, 0xe5002000, 0xffe0e000, false, []arg{
		{AC_REGLIST1, []elmType{
			sa_zt__Zt,
			sa_const_REGLIST1_D,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_MEMEXT, []elmType{
			sa_zn__Zn,
			sa_const_MEMEXT_D_1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_no_ext,
			sa_const_MEMEXT_no_amount,
		}},
	}},

	// STNT1W  { <Zt1>.S, <Zt2>.S }, <PNg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZSTNT1W, aSTNT1W, FEAT_SME2, 0xa1204008, 0xffe0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// STNT1W  { <Zt1>.S, <Zt2>.S, <Zt3>.S, <Zt4>.S }, <PNg>, [<Xn|SP>, <Xm>, LSL #2]
	{AZSTNT1W, aSTNT1W, FEAT_SME2, 0xa120c008, 0xffe0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_const_MEMEXT_LSL,
			sa_const_MEMEXT_2,
		}},
	}},

	// STNT1W  { <Zt1>.S, <Zt2>.S }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1W, aSTNT1W, FEAT_SME2, 0xa1604008, 0xfff0e008, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zt1__T_0_Zt,
			sa_zt2__T_1_Zt,
			sa_const_REGLIST2_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm4,
		}},
	}},

	// STNT1W  { <Zt1>.S, <Zt2>.S, <Zt3>.S, <Zt4>.S }, <PNg>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTNT1W, aSTNT1W, FEAT_SME2, 0xa160c008, 0xfff0e00c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zt1_1__T_00_Zt,
			sa_zt2_1__T_01_Zt,
			sa_zt3__T_10_Zt,
			sa_zt4__T_11_Zt,
			sa_const_REGLIST4_S,
		}},
		{AC_PNREG, []elmType{
			sa_png__PNg,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm4,
		}},
	}},

	// STP  <Wt1>, <Wt2>, [<Xn|SP>], #<imm>
	{ASTPW, aSTP, FEAT_NONE, 0x28800000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm7,
		}},
	}},

	// STP  <Xt1>, <Xt2>, [<Xn|SP>], #<imm>
	{ASTP, aSTP, FEAT_NONE, 0xa8800000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_3__imm7,
		}},
	}},

	// STP  <Wt1>, <Wt2>, [<Xn|SP>, #<imm>]!
	{ASTPW, aSTP, FEAT_NONE, 0x29800000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm7,
		}},
	}},

	// STP  <Xt1>, <Xt2>, [<Xn|SP>, #<imm>]!
	{ASTP, aSTP, FEAT_NONE, 0xa9800000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_3__imm7,
		}},
	}},

	// STP  <Wt1>, <Wt2>, [<Xn|SP>{, #<imm>}]
	{ASTPW, aSTP, FEAT_NONE, 0x29000000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm7,
		}},
	}},

	// STP  <Xt1>, <Xt2>, [<Xn|SP>{, #<imm>}]
	{ASTP, aSTP, FEAT_NONE, 0xa9000000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm_2__imm7,
		}},
	}},

	// STP  <St1>, <St2>, [<Xn|SP>], #<imm>
	{AFSTPS, aSTP, FEAT_NONE, 0x2c800000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_st1__Rt,
			sa_st2__Rt2,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_5__imm7,
		}},
	}},

	// STP  <Dt1>, <Dt2>, [<Xn|SP>], #<imm>
	{AFSTPD, aSTP, FEAT_NONE, 0x6c800000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_dt1__Rt,
			sa_dt2__Rt2,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm7,
		}},
	}},

	// STP  <Qt1>, <Qt2>, [<Xn|SP>], #<imm>
	{AFSTPQ, aSTP, FEAT_NONE, 0xac800000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_qt1__Rt,
			sa_qt2__Rt2,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_3__imm7,
		}},
	}},

	// STP  <St1>, <St2>, [<Xn|SP>, #<imm>]!
	{AFSTPS, aSTP, FEAT_NONE, 0x2d800000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_st1__Rt,
			sa_st2__Rt2,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_5__imm7,
		}},
	}},

	// STP  <Dt1>, <Dt2>, [<Xn|SP>, #<imm>]!
	{AFSTPD, aSTP, FEAT_NONE, 0x6d800000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_dt1__Rt,
			sa_dt2__Rt2,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_1__imm7,
		}},
	}},

	// STP  <Qt1>, <Qt2>, [<Xn|SP>, #<imm>]!
	{AFSTPQ, aSTP, FEAT_NONE, 0xad800000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_qt1__Rt,
			sa_qt2__Rt2,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_imm_3__imm7,
		}},
	}},

	// STP  <St1>, <St2>, [<Xn|SP>{, #<imm>}]
	{AFSTPS, aSTP, FEAT_NONE, 0x2d000000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_st1__Rt,
			sa_st2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm_4__imm7,
		}},
	}},

	// STP  <Dt1>, <Dt2>, [<Xn|SP>{, #<imm>}]
	{AFSTPD, aSTP, FEAT_NONE, 0x6d000000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_dt1__Rt,
			sa_dt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm__imm7,
		}},
	}},

	// STP  <Qt1>, <Qt2>, [<Xn|SP>{, #<imm>}]
	{AFSTPQ, aSTP, FEAT_NONE, 0xad000000, 0xffc00000, false, []arg{
		{AC_PAIR, []elmType{
			sa_qt1__Rt,
			sa_qt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_imm_2__imm7,
		}},
	}},

	// STR  <Wt>, [<Xn|SP>], #<simm>
	{AMOVWU, aSTR, FEAT_NONE, 0xb8000400, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Xt>, [<Xn|SP>], #<simm>
	{AMOVD, aSTR, FEAT_NONE, 0xf8000400, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Wt>, [<Xn|SP>], #<simm>
	{AMOVW, aSTR, FEAT_NONE, 0xb8000400, 0xffe00c00, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Wt>, [<Xn|SP>, #<simm>]!
	{AMOVWU, aSTR, FEAT_NONE, 0xb8000c00, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Xt>, [<Xn|SP>, #<simm>]!
	{AMOVD, aSTR, FEAT_NONE, 0xf8000c00, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Wt>, [<Xn|SP>, #<simm>]!
	{AMOVW, aSTR, FEAT_NONE, 0xb8000c00, 0xffe00c00, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Wt>, [<Xn|SP>{, #<pimm>}]
	{AMOVWU, aSTR, FEAT_NONE, 0xb9000000, 0xffc00000, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
	}},

	// STR  <Xt>, [<Xn|SP>{, #<pimm>}]
	{AMOVD, aSTR, FEAT_NONE, 0xf9000000, 0xffc00000, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm_1__imm12,
		}},
	}},

	// STR  <Wt>, [<Xn|SP>{, #<pimm>}]
	{AMOVW, aSTR, FEAT_NONE, 0xb9000000, 0xffc00000, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
	}},

	// STR  <Wt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AMOVWU, aSTR, FEAT_NONE, 0xb8200800, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__LSL_SXTW_SXTX_UXTW,
			sa_amount__S__0_2,
		}},
	}},

	// STR  <Xt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AMOVD, aSTR, FEAT_NONE, 0xf8200800, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__LSL_SXTW_SXTX_UXTW,
			sa_amount_1__S__0_3,
		}},
	}},

	// STR  <Wt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AMOVW, aSTR, FEAT_NONE, 0xb8200800, 0xffe00c00, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__LSL_SXTW_SXTX_UXTW,
			sa_amount__S__0_2,
		}},
	}},

	// STR  <Bt>, [<Xn|SP>], #<simm>
	{AFMOVB, aSTR, FEAT_NONE, 0x3c000400, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_bt__Rt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Ht>, [<Xn|SP>], #<simm>
	{AFMOVH, aSTR, FEAT_NONE, 0x7c000400, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_ht__Rt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <St>, [<Xn|SP>], #<simm>
	{AFMOVS, aSTR, FEAT_NONE, 0xbc000400, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_st__Rt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Dt>, [<Xn|SP>], #<simm>
	{AFMOVD, aSTR, FEAT_NONE, 0xfc000400, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_dt__Rt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Qt>, [<Xn|SP>], #<simm>
	{AFMOVQ, aSTR, FEAT_NONE, 0x3c800400, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_qt__Rt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Bt>, [<Xn|SP>, #<simm>]!
	{AFMOVB, aSTR, FEAT_NONE, 0x3c000c00, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_bt__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Ht>, [<Xn|SP>, #<simm>]!
	{AFMOVH, aSTR, FEAT_NONE, 0x7c000c00, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_ht__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <St>, [<Xn|SP>, #<simm>]!
	{AFMOVS, aSTR, FEAT_NONE, 0xbc000c00, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_st__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Dt>, [<Xn|SP>, #<simm>]!
	{AFMOVD, aSTR, FEAT_NONE, 0xfc000c00, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_dt__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Qt>, [<Xn|SP>, #<simm>]!
	{AFMOVQ, aSTR, FEAT_NONE, 0x3c800c00, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_qt__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STR  <Bt>, [<Xn|SP>{, #<pimm>}]
	{AFMOVB, aSTR, FEAT_NONE, 0x3d000000, 0xffc00000, false, []arg{
		{AC_FREG, []elmType{
			sa_bt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
	}},

	// STR  <Ht>, [<Xn|SP>{, #<pimm>}]
	{AFMOVH, aSTR, FEAT_NONE, 0x7d000000, 0xffc00000, false, []arg{
		{AC_FREG, []elmType{
			sa_ht__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm_2__imm12,
		}},
	}},

	// STR  <St>, [<Xn|SP>{, #<pimm>}]
	{AFMOVS, aSTR, FEAT_NONE, 0xbd000000, 0xffc00000, false, []arg{
		{AC_FREG, []elmType{
			sa_st__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm_4__imm12,
		}},
	}},

	// STR  <Dt>, [<Xn|SP>{, #<pimm>}]
	{AFMOVD, aSTR, FEAT_NONE, 0xfd000000, 0xffc00000, false, []arg{
		{AC_FREG, []elmType{
			sa_dt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm_1__imm12,
		}},
	}},

	// STR  <Qt>, [<Xn|SP>{, #<pimm>}]
	{AFMOVQ, aSTR, FEAT_NONE, 0x3d800000, 0xffc00000, false, []arg{
		{AC_FREG, []elmType{
			sa_qt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm_3__imm12,
		}},
	}},

	// STR  <Bt>, [<Xn|SP>, (<Wm>|<Xm>), <extend> {<amount>}]
	{AFMOVB, aSTR, FEAT_NONE, 0x3c200800, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_bt__Rt,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__SXTW_SXTX_UXTW,
			sa_amount__S,
		}},
	}},

	// STR  <Ht>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AFMOVH, aSTR, FEAT_NONE, 0x7c200800, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_ht__Rt,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend_1__option__LSL_SXTW_SXTX_UXTW,
			sa_amount_2__S__0_1,
		}},
	}},

	// STR  <St>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AFMOVS, aSTR, FEAT_NONE, 0xbc200800, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_st__Rt,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend_1__option__LSL_SXTW_SXTX_UXTW,
			sa_amount_4__S__0_2,
		}},
	}},

	// STR  <Dt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AFMOVD, aSTR, FEAT_NONE, 0xfc200800, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_dt__Rt,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend_1__option__LSL_SXTW_SXTX_UXTW,
			sa_amount_1__S__0_3,
		}},
	}},

	// STR  <Qt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AFMOVQ, aSTR, FEAT_NONE, 0x3ca00800, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_qt__Rt,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend_1__option__LSL_SXTW_SXTX_UXTW,
			sa_amount_3__S__0_4,
		}},
	}},

	// STR  <Pt>, [<Xn|SP>{, #<imm>, MUL VL}]
	{APSTR, aSTR, FEAT_NONE, 0xe5800000, 0xffc0e010, false, []arg{
		{AC_PREG, []elmType{
			sa_pt__Pt,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm9h_imm9l,
		}},
	}},

	// STR  <Zt>, [<Xn|SP>{, #<imm>, MUL VL}]
	{AZSTR, aSTR, FEAT_NONE, 0xe5804000, 0xffc0e000, false, []arg{
		{AC_ZREG, []elmType{
			sa_zt__Zt,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_imm__imm9h_imm9l,
		}},
	}},

	// STR  ZA[<Wv>, <offs>], [<Xn|SP>{, #<offs>, MUL VL}]
	{AZSTR, aSTR, FEAT_SME, 0xe1200000, 0xffff9c10, false, []arg{
		{AC_ZAVECTORIDX, []elmType{
			sa_wv__Rv,
			sa_offs__off4,
		}},
		{AC_MEMIMMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_offs__off4,
		}},
	}},

	// STR  ZT0, [<Xn|SP>]
	{AZSTR, aSTR, FEAT_SME2, 0xe13f8000, 0xfffffc1f, false, []arg{
		{AC_ZTREG, []elmType{
			sa_const_ZTREG_ZT0,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STRB  <Wt>, [<Xn|SP>], #<simm>
	{AMOVBU, aSTRB, FEAT_NONE, 0x38000400, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STRB  <Wt>, [<Xn|SP>], #<simm>
	{AMOVB, aSTRB, FEAT_NONE, 0x38000400, 0xffe00c00, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STRB  <Wt>, [<Xn|SP>, #<simm>]!
	{AMOVBU, aSTRB, FEAT_NONE, 0x38000c00, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STRB  <Wt>, [<Xn|SP>, #<simm>]!
	{AMOVB, aSTRB, FEAT_NONE, 0x38000c00, 0xffe00c00, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STRB  <Wt>, [<Xn|SP>{, #<pimm>}]
	{AMOVBU, aSTRB, FEAT_NONE, 0x39000000, 0xffc00000, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
	}},

	// STRB  <Wt>, [<Xn|SP>{, #<pimm>}]
	{AMOVB, aSTRB, FEAT_NONE, 0x39000000, 0xffc00000, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
	}},

	// STRB  <Wt>, [<Xn|SP>, (<Wm>|<Xm>), <extend> {<amount>}]
	{AMOVBU, aSTRB, FEAT_NONE, 0x38200800, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__SXTW_SXTX_UXTW,
			sa_amount__S,
		}},
	}},

	// STRB  <Wt>, [<Xn|SP>, (<Wm>|<Xm>), <extend> {<amount>}]
	{AMOVB, aSTRB, FEAT_NONE, 0x38200800, 0xffe00c00, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__SXTW_SXTX_UXTW,
			sa_amount__S,
		}},
	}},

	// STRH  <Wt>, [<Xn|SP>], #<simm>
	{AMOVHU, aSTRH, FEAT_NONE, 0x78000400, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STRH  <Wt>, [<Xn|SP>], #<simm>
	{AMOVH, aSTRH, FEAT_NONE, 0x78000400, 0xffe00c00, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STRH  <Wt>, [<Xn|SP>, #<simm>]!
	{AMOVHU, aSTRH, FEAT_NONE, 0x78000c00, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STRH  <Wt>, [<Xn|SP>, #<simm>]!
	{AMOVH, aSTRH, FEAT_NONE, 0x78000c00, 0xffe00c00, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Rn,
			sa_simm__imm9,
		}},
	}},

	// STRH  <Wt>, [<Xn|SP>{, #<pimm>}]
	{AMOVHU, aSTRH, FEAT_NONE, 0x79000000, 0xffc00000, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
	}},

	// STRH  <Wt>, [<Xn|SP>{, #<pimm>}]
	{AMOVH, aSTRH, FEAT_NONE, 0x79000000, 0xffc00000, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_pimm__imm12,
		}},
	}},

	// STRH  <Wt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AMOVHU, aSTRH, FEAT_NONE, 0x78200800, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__LSL_SXTW_SXTX_UXTW,
			sa_amount__S__0_1,
		}},
	}},

	// STRH  <Wt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]
	{AMOVH, aSTRH, FEAT_NONE, 0x78200800, 0xffe00c00, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMEXT, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMEXT_no_arng1,
			sa_wm__Rm,
			sa_xm__Rm,
			sa_const_MEMEXT_no_arng2,
			sa_extend__option__LSL_SXTW_SXTX_UXTW,
			sa_amount__S__0_1,
		}},
	}},

	// STSET  <Ws>, [<Xn|SP>]
	{ASTORW, aSTSET, FEAT_LSE, 0xb820301f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSETL  <Ws>, [<Xn|SP>]
	{ASTORLW, aSTSETL, FEAT_LSE, 0xb860301f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSET  <Xs>, [<Xn|SP>]
	{ASTORD, aSTSET, FEAT_LSE, 0xf820301f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSETL  <Xs>, [<Xn|SP>]
	{ASTORLD, aSTSETL, FEAT_LSE, 0xf860301f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSETB  <Ws>, [<Xn|SP>]
	{ASTORB, aSTSETB, FEAT_LSE, 0x3820301f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSETLB  <Ws>, [<Xn|SP>]
	{ASTORLB, aSTSETLB, FEAT_LSE, 0x3860301f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSETH  <Ws>, [<Xn|SP>]
	{ASTORH, aSTSETH, FEAT_LSE, 0x7820301f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSETLH  <Ws>, [<Xn|SP>]
	{ASTORLH, aSTSETLH, FEAT_LSE, 0x7860301f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMAX  <Ws>, [<Xn|SP>]
	{ASTSMAXW, aSTSMAX, FEAT_LSE, 0xb820401f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMAXL  <Ws>, [<Xn|SP>]
	{ASTSMAXLW, aSTSMAXL, FEAT_LSE, 0xb860401f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMAX  <Xs>, [<Xn|SP>]
	{ASTSMAXD, aSTSMAX, FEAT_LSE, 0xf820401f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMAXL  <Xs>, [<Xn|SP>]
	{ASTSMAXLD, aSTSMAXL, FEAT_LSE, 0xf860401f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMAXB  <Ws>, [<Xn|SP>]
	{ASTSMAXB, aSTSMAXB, FEAT_LSE, 0x3820401f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMAXLB  <Ws>, [<Xn|SP>]
	{ASTSMAXLB, aSTSMAXLB, FEAT_LSE, 0x3860401f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMAXH  <Ws>, [<Xn|SP>]
	{ASTSMAXH, aSTSMAXH, FEAT_LSE, 0x7820401f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMAXLH  <Ws>, [<Xn|SP>]
	{ASTSMAXLH, aSTSMAXLH, FEAT_LSE, 0x7860401f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMIN  <Ws>, [<Xn|SP>]
	{ASTSMINW, aSTSMIN, FEAT_LSE, 0xb820501f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMINL  <Ws>, [<Xn|SP>]
	{ASTSMINLW, aSTSMINL, FEAT_LSE, 0xb860501f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMIN  <Xs>, [<Xn|SP>]
	{ASTSMIND, aSTSMIN, FEAT_LSE, 0xf820501f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMINL  <Xs>, [<Xn|SP>]
	{ASTSMINLD, aSTSMINL, FEAT_LSE, 0xf860501f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMINB  <Ws>, [<Xn|SP>]
	{ASTSMINB, aSTSMINB, FEAT_LSE, 0x3820501f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMINLB  <Ws>, [<Xn|SP>]
	{ASTSMINLB, aSTSMINLB, FEAT_LSE, 0x3860501f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMINH  <Ws>, [<Xn|SP>]
	{ASTSMINH, aSTSMINH, FEAT_LSE, 0x7820501f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STSMINLH  <Ws>, [<Xn|SP>]
	{ASTSMINLH, aSTSMINLH, FEAT_LSE, 0x7860501f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STTR  <Wt>, [<Xn|SP>{, #<simm>}]
	{ASTTRW, aSTTR, FEAT_NONE, 0xb8000800, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STTR  <Xt>, [<Xn|SP>{, #<simm>}]
	{ASTTR, aSTTR, FEAT_NONE, 0xf8000800, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STTRB  <Wt>, [<Xn|SP>{, #<simm>}]
	{ASTTRB, aSTTRB, FEAT_NONE, 0x38000800, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STTRH  <Wt>, [<Xn|SP>{, #<simm>}]
	{ASTTRH, aSTTRH, FEAT_NONE, 0x78000800, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STUMAX  <Ws>, [<Xn|SP>]
	{ASTUMAXW, aSTUMAX, FEAT_LSE, 0xb820601f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMAXL  <Ws>, [<Xn|SP>]
	{ASTUMAXLW, aSTUMAXL, FEAT_LSE, 0xb860601f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMAX  <Xs>, [<Xn|SP>]
	{ASTUMAXD, aSTUMAX, FEAT_LSE, 0xf820601f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMAXL  <Xs>, [<Xn|SP>]
	{ASTUMAXLD, aSTUMAXL, FEAT_LSE, 0xf860601f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMAXB  <Ws>, [<Xn|SP>]
	{ASTUMAXB, aSTUMAXB, FEAT_LSE, 0x3820601f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMAXLB  <Ws>, [<Xn|SP>]
	{ASTUMAXLB, aSTUMAXLB, FEAT_LSE, 0x3860601f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMAXH  <Ws>, [<Xn|SP>]
	{ASTUMAXH, aSTUMAXH, FEAT_LSE, 0x7820601f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMAXLH  <Ws>, [<Xn|SP>]
	{ASTUMAXLH, aSTUMAXLH, FEAT_LSE, 0x7860601f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMIN  <Ws>, [<Xn|SP>]
	{ASTUMINW, aSTUMIN, FEAT_LSE, 0xb820701f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMINL  <Ws>, [<Xn|SP>]
	{ASTUMINLW, aSTUMINL, FEAT_LSE, 0xb860701f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMIN  <Xs>, [<Xn|SP>]
	{ASTUMIND, aSTUMIN, FEAT_LSE, 0xf820701f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMINL  <Xs>, [<Xn|SP>]
	{ASTUMINLD, aSTUMINL, FEAT_LSE, 0xf860701f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMINB  <Ws>, [<Xn|SP>]
	{ASTUMINB, aSTUMINB, FEAT_LSE, 0x3820701f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMINLB  <Ws>, [<Xn|SP>]
	{ASTUMINLB, aSTUMINLB, FEAT_LSE, 0x3860701f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMINH  <Ws>, [<Xn|SP>]
	{ASTUMINH, aSTUMINH, FEAT_LSE, 0x7820701f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUMINLH  <Ws>, [<Xn|SP>]
	{ASTUMINLH, aSTUMINLH, FEAT_LSE, 0x7860701f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// STUR  <Wt>, [<Xn|SP>{, #<simm>}]
	{AMOVWU, aSTUR, FEAT_NONE, 0xb8000000, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STUR  <Xt>, [<Xn|SP>{, #<simm>}]
	{AMOVD, aSTUR, FEAT_NONE, 0xf8000000, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STUR  <Wt>, [<Xn|SP>{, #<simm>}]
	{AMOVW, aSTUR, FEAT_NONE, 0xb8000000, 0xffe00c00, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STUR  <Bt>, [<Xn|SP>{, #<simm>}]
	{AFMOVB, aSTUR, FEAT_NONE, 0x3c000000, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_bt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STUR  <Ht>, [<Xn|SP>{, #<simm>}]
	{AFMOVH, aSTUR, FEAT_NONE, 0x7c000000, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_ht__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STUR  <St>, [<Xn|SP>{, #<simm>}]
	{AFMOVS, aSTUR, FEAT_NONE, 0xbc000000, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_st__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STUR  <Dt>, [<Xn|SP>{, #<simm>}]
	{AFMOVD, aSTUR, FEAT_NONE, 0xfc000000, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_dt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STUR  <Qt>, [<Xn|SP>{, #<simm>}]
	{AFMOVQ, aSTUR, FEAT_NONE, 0x3c800000, 0xffe00c00, false, []arg{
		{AC_FREG, []elmType{
			sa_qt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STURB  <Wt>, [<Xn|SP>{, #<simm>}]
	{AMOVBU, aSTURB, FEAT_NONE, 0x38000000, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STURB  <Wt>, [<Xn|SP>{, #<simm>}]
	{AMOVB, aSTURB, FEAT_NONE, 0x38000000, 0xffe00c00, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STURH  <Wt>, [<Xn|SP>{, #<simm>}]
	{AMOVHU, aSTURH, FEAT_NONE, 0x78000000, 0xffe00c00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STURH  <Wt>, [<Xn|SP>{, #<simm>}]
	{AMOVH, aSTURH, FEAT_NONE, 0x78000000, 0xffe00c00, true, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STXP  <Ws>, <Wt1>, <Wt2>, [<Xn|SP>{,#0}]
	{ASTXPW, aSTXP, FEAT_NONE, 0x88200000, 0xffe08000, false, []arg{
		{AC_PAIR, []elmType{
			sa_wt1__Rt,
			sa_wt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
	}},

	// STXP  <Ws>, <Xt1>, <Xt2>, [<Xn|SP>{,#0}]
	{ASTXP, aSTXP, FEAT_NONE, 0xc8200000, 0xffe08000, false, []arg{
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
	}},

	// STXR  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ASTXRW, aSTXR, FEAT_NONE, 0x88007c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
	}},

	// STXR  <Ws>, <Xt>, [<Xn|SP>{,#0}]
	{ASTXR, aSTXR, FEAT_NONE, 0xc8007c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
	}},

	// STXRB  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ASTXRB, aSTXRB, FEAT_NONE, 0x8007c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
	}},

	// STXRH  <Ws>, <Wt>, [<Xn|SP>{,#0}]
	{ASTXRH, aSTXRH, FEAT_NONE, 0x48007c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
	}},

	// STZ2G  <Xt|SP>, [<Xn|SP>], #<simm>
	{ASTZ2G, aSTZ2G, FEAT_MTE, 0xd9e00400, 0xffe00c00, false, []arg{
		{AC_RSP, []elmType{
			sa_xt_sp__Xt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Xn,
			sa_simm__imm9,
		}},
	}},

	// STZ2G  <Xt|SP>, [<Xn|SP>, #<simm>]!
	{ASTZ2G, aSTZ2G, FEAT_MTE, 0xd9e00c00, 0xffe00c00, false, []arg{
		{AC_RSP, []elmType{
			sa_xt_sp__Xt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Xn,
			sa_simm__imm9,
		}},
	}},

	// STZ2G  <Xt|SP>, [<Xn|SP>{, #<simm>}]
	{ASTZ2G, aSTZ2G, FEAT_MTE, 0xd9e00800, 0xffe00c00, false, []arg{
		{AC_RSP, []elmType{
			sa_xt_sp__Xt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Xn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STZG  <Xt|SP>, [<Xn|SP>], #<simm>
	{ASTZG, aSTZG, FEAT_MTE, 0xd9600400, 0xffe00c00, false, []arg{
		{AC_RSP, []elmType{
			sa_xt_sp__Xt,
		}},
		{AC_MEMPOSTIMM, []elmType{
			sa_xn_sp__Xn,
			sa_simm__imm9,
		}},
	}},

	// STZG  <Xt|SP>, [<Xn|SP>, #<simm>]!
	{ASTZG, aSTZG, FEAT_MTE, 0xd9600c00, 0xffe00c00, false, []arg{
		{AC_RSP, []elmType{
			sa_xt_sp__Xt,
		}},
		{AC_MEMPREIMM, []elmType{
			sa_xn_sp__Xn,
			sa_simm__imm9,
		}},
	}},

	// STZG  <Xt|SP>, [<Xn|SP>{, #<simm>}]
	{ASTZG, aSTZG, FEAT_MTE, 0xd9600800, 0xffe00c00, false, []arg{
		{AC_RSP, []elmType{
			sa_xt_sp__Xt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Xn,
			sa_const_MEMIMM_no_arng,
			sa_simm__imm9,
		}},
	}},

	// STZGM  <Xt>, [<Xn|SP>]
	{ASTZGM, aSTZGM, FEAT_MTE2, 0xd9200000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Xt,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Xn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
	}},

	// SUB  <Wd>, <Wn>, <Wm>
	{ASUBW, aSUB, FEAT_NONE, 0x4b000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SUB  <Xd>, <Xn>, <Xm>
	{ASUB, aSUB, FEAT_NONE, 0xcb000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SUB  <Wd>, <Wn>, <Wm>{, <shift> #<amount>}
	{ASUBW, aSUB, FEAT_NONE, 0x4b000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SUB  <Xd>, <Xn>, <Xm>{, <shift> #<amount>}
	{ASUB, aSUB, FEAT_NONE, 0xcb000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SUB  <Wd|WSP>, <Wn|WSP>, <Wm>
	{ASUBW, aSUB, FEAT_NONE, 0x4b204000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_wd_wsp__Rd,
		}},
	}},

	// SUB  <Xd|SP>, <Xn|SP>, <R><m>
	{ASUB, aSUB, FEAT_NONE, 0xcb206000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_r__option__W_X,
			sa_m__Rm,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// SUB  <Wd|WSP>, <Wn|WSP>, <Wm>{, <extend> {#<amount>}}
	{ASUBW, aSUB, FEAT_NONE, 0x4b200000, 0xffe00000, false, []arg{
		{AC_REGEXT, []elmType{
			sa_wm__Rm,
			sa_extend__option__LSL_SXTB_SXTH_SXTW_SXTX_UXTB_UXTH_UXTW_UXTX,
			sa_amount__imm3,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_wd_wsp__Rd,
		}},
	}},

	// SUB  <Xd|SP>, <Xn|SP>, <R><m>{, <extend> {#<amount>}}
	{ASUB, aSUB, FEAT_NONE, 0xcb200000, 0xffe00000, false, []arg{
		{AC_REGEXT, []elmType{
			sa_r__option__W_X,
			sa_m__Rm,
			sa_extend_1__option__LSL_SXTB_SXTH_SXTW_SXTX_UXTB_UXTH_UXTW_UXTX,
			sa_amount__imm3,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// SUB  <Wd|WSP>, <Wn|WSP>, #<imm>{, <shift>}
	{ASUBW, aSUB, FEAT_NONE, 0x51000000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm12,
			sa_shift__sh__LSL_0_LSL_12,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_wd_wsp__Rd,
		}},
	}},

	// SUB  <Xd|SP>, <Xn|SP>, #<imm>{, <shift>}
	{ASUB, aSUB, FEAT_NONE, 0xd1000000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm12,
			sa_shift__sh__LSL_0_LSL_12,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Rd,
		}},
	}},

	// SUB  <V><d>, <V><n>, <V><m>
	{AVSUB, aSUB, FEAT_NONE, 0x7ee08400, 0xffe0fc00, false, []arg{
		{AC_VREG, []elmType{
			sa_v__size__D,
			sa_m__Rm,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// SUB  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVSUB, aSUB, FEAT_NONE, 0x2e208400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SUB  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZSUB, aSUB, FEAT_NONE, 0x4200400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SUB  <Zdn>.<T>, <Zdn>.<T>, #<imm>{, <shift>}
	{AZSUB, aSUB, FEAT_NONE, 0x2521c000, 0xff3fc000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
			sa_shift__sh__LSL_0_LSL_8,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SUB  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSUB, aSUB, FEAT_NONE, 0x4010000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SUB  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zm1>.<T>-<Zm2>.<T> }
	{AZSUB, aSUB, FEAT_SME2, 0xc1a01c18, 0xffbf9c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_9_4,
			sa_t__sz__D_S,
			sa_zm2__Zm_9_4,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// SUB  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zm1>.<T>-<Zm4>.<T> }
	{AZSUB, aSUB, FEAT_SME2, 0xc1a11c18, 0xffbf9c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_9_3,
			sa_t__sz__D_S,
			sa_zm4__Zm_9_3,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SUB  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zn1>.<T>-<Zn2>.<T> }, <Zm>.<T>
	{AZSUB, aSUB, FEAT_SME2, 0xc1201818, 0xffb09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_t__sz__D_S,
			sa_zn2__Zn_9_5,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// SUB  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zn1>.<T>-<Zn4>.<T> }, <Zm>.<T>
	{AZSUB, aSUB, FEAT_SME2, 0xc1301818, 0xffb09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_t__sz__D_S,
			sa_zn4__Zn_9_5,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SUB  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zn1>.<T>-<Zn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZSUB, aSUB, FEAT_SME2, 0xc1a01818, 0xffa19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__sz__D_S,
			sa_zm2__Zm_20_4,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_t__sz__D_S,
			sa_zn2__Zn_9_4,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// SUB  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zn1>.<T>-<Zn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZSUB, aSUB, FEAT_SME2, 0xc1a11818, 0xffa39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__sz__D_S,
			sa_zm4__Zm_20_3,
			sa_t__sz__D_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_t__sz__D_S,
			sa_zn4__Zn_9_3,
			sa_t__sz__D_S,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SUBG  <Xd|SP>, <Xn|SP>, #<uimm6>, #<uimm4>
	{ASUBG, aSUBG, FEAT_MTE, 0xd1800000, 0xffc0c000, false, []arg{
		{AC_IMM, []elmType{
			sa_uimm4__uimm4,
		}},
		{AC_IMM, []elmType{
			sa_uimm6__uimm6,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Xn,
		}},
		{AC_RSP, []elmType{
			sa_xd_sp__Xd,
		}},
	}},

	// SUBHN  <Vd>.<Tb>, <Vn>.<Ta>, <Vm>.<Ta>
	{AVSUBHN, aSUBHN, FEAT_NONE, 0xe206000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SUBHN2  <Vd>.<Tb>, <Vn>.<Ta>, <Vm>.<Ta>
	{AVSUBHN2, aSUBHN2, FEAT_NONE, 0x4e206000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SUBHNB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSUBHNB, aSUBHNB, FEAT_NONE, 0x45207000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// SUBHNT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZSUBHNT, aSUBHNT, FEAT_NONE, 0x45207400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size_23_2__B_H_S,
		}},
	}},

	// SUBP  <Xd>, <Xn|SP>, <Xm|SP>
	{ASUBP, aSUBP, FEAT_MTE, 0x9ac00000, 0xffe0fc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xm_sp__Xm,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Xn,
		}},
		{AC_REG, []elmType{
			sa_xd__Xd,
		}},
	}},

	// SUBPS  <Xd>, <Xn|SP>, <Xm|SP>
	{ASUBPS, aSUBPS, FEAT_MTE, 0xbac00000, 0xffe0fc00, false, []arg{
		{AC_RSP, []elmType{
			sa_xm_sp__Xm,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Xn,
		}},
		{AC_REG, []elmType{
			sa_xd__Xd,
		}},
	}},

	// SUBR  <Zdn>.<T>, <Zdn>.<T>, #<imm>{, <shift>}
	{AZSUBR, aSUBR, FEAT_NONE, 0x2523c000, 0xff3fc000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
			sa_shift__sh__LSL_0_LSL_8,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SUBR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSUBR, aSUBR, FEAT_NONE, 0x4030000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SUBS  <Wd>, <Wn>, <Wm>
	{ASUBSW, aSUBS, FEAT_NONE, 0x6b000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SUBS  <Xd>, <Xn>, <Xm>
	{ASUBS, aSUBS, FEAT_NONE, 0xeb000000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SUBS  <Wd>, <Wn>, <Wm>{, <shift> #<amount>}
	{ASUBSW, aSUBS, FEAT_NONE, 0x6b000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SUBS  <Xd>, <Xn>, <Xm>{, <shift> #<amount>}
	{ASUBS, aSUBS, FEAT_NONE, 0xeb000000, 0xff200000, false, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SUBS  <Wd>, <Wn|WSP>, <Wm>
	{ASUBSW, aSUBS, FEAT_NONE, 0x6b204000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SUBS  <Xd>, <Xn|SP>, <R><m>
	{ASUBS, aSUBS, FEAT_NONE, 0xeb206000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_r__option__W_X,
			sa_m__Rm,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SUBS  <Wd>, <Wn|WSP>, <Wm>{, <extend> {#<amount>}}
	{ASUBSW, aSUBS, FEAT_NONE, 0x6b200000, 0xffe00000, false, []arg{
		{AC_REGEXT, []elmType{
			sa_wm__Rm,
			sa_extend__option__LSL_SXTB_SXTH_SXTW_SXTX_UXTB_UXTH_UXTW_UXTX,
			sa_amount__imm3,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SUBS  <Xd>, <Xn|SP>, <R><m>{, <extend> {#<amount>}}
	{ASUBS, aSUBS, FEAT_NONE, 0xeb200000, 0xffe00000, false, []arg{
		{AC_REGEXT, []elmType{
			sa_r__option__W_X,
			sa_m__Rm,
			sa_extend_1__option__LSL_SXTB_SXTH_SXTW_SXTX_UXTB_UXTH_UXTW_UXTX,
			sa_amount__imm3,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SUBS  <Wd>, <Wn|WSP>, #<imm>{, <shift>}
	{ASUBSW, aSUBS, FEAT_NONE, 0x71000000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm12,
			sa_shift__sh__LSL_0_LSL_12,
		}},
		{AC_RSP, []elmType{
			sa_wn_wsp__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SUBS  <Xd>, <Xn|SP>, #<imm>{, <shift>}
	{ASUBS, aSUBS, FEAT_NONE, 0xf1000000, 0xff800000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm12,
			sa_shift__sh__LSL_0_LSL_12,
		}},
		{AC_RSP, []elmType{
			sa_xn_sp__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SUDOT  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.4B[<index>]
	{AVSUDOT, aSUDOT, FEAT_I8MM, 0xf00f000, 0xbfc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__M_Rm,
			sa_const_ARNGIDX_4B,
			sa_index__H_L,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// SUDOT  <Zda>.S, <Zn>.B, <Zm>.B[<imm>]
	{AZSUDOT, aSUDOT, FEAT_I8MM, 0x44a01c00, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_B,
			sa_imm__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// SUDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B
	{AZSUDOT, aSUDOT, FEAT_SME2, 0xc1201418, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// SUDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B
	{AZSUDOT, aSUDOT, FEAT_SME2, 0xc1301418, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SUDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B[<index>]
	{AZSUDOT, aSUDOT, FEAT_SME2, 0xc1501038, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// SUDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZSUDOT, aSUDOT, FEAT_SME2, 0xc1509038, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SUMLALL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.B, <Zm>.B[<index>]
	{AZSUMLALL, aSUMLALL, FEAT_SME2, 0xc1000014, 0xfff0001c, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index__i4h_15_1_i4l_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// SUMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B[<index>]
	{AZSUMLALL, aSUMLALL, FEAT_SME2, 0xc1100030, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index__i4h_11_2_i4l_2_2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SUMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZSUMLALL, aSUMLALL, FEAT_SME2, 0xc1108030, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index__i4h_11_2_i4l_2_2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SUMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B
	{AZSUMLALL, aSUMLALL, FEAT_SME2, 0xc1200014, 0xfff09c1e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf__o1,
			sa_offsl__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// SUMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B
	{AZSUMLALL, aSUMLALL, FEAT_SME2, 0xc1300014, 0xfff09c1e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf__o1,
			sa_offsl__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// SUMOPA  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.B, <Zm>.B
	{AZSUMOPA, aSUMOPA, FEAT_SME, 0xa0a00000, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// SUMOPA  <ZAda>.D, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZSUMOPA, aSUMOPA, FEAT_SME_I16I64, 0xa0e00000, 0xffe00018, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_1__ZAda,
			sa_const_ARNG_D,
		}},
	}},

	// SUMOPS  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.B, <Zm>.B
	{AZSUMOPS, aSUMOPS, FEAT_SME, 0xa0a00010, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// SUMOPS  <ZAda>.D, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZSUMOPS, aSUMOPS, FEAT_SME_I16I64, 0xa0e00010, 0xffe00018, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_1__ZAda,
			sa_const_ARNG_D,
		}},
	}},

	// SUNPK  { <Zd1>.<T>-<Zd2>.<T> }, <Zn>.<Tb>
	{AZSUNPK, aSUNPK, FEAT_SME2, 0xc125e000, 0xff3ffc01, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_t__size__D_H_S,
			sa_zd2__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SUNPK  { <Zd1>.<T>-<Zd4>.<T> }, { <Zn1>.<Tb>-<Zn2>.<Tb> }
	{AZSUNPK, aSUNPK, FEAT_SME2, 0xc135e000, 0xff3ffc23, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_tb__size__B_H_S,
			sa_zn2__Zn_9_4,
			sa_tb__size__B_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_t__size__D_H_S,
			sa_zd4__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SUNPKHI  <Zd>.<T>, <Zn>.<Tb>
	{AZSUNPKHI, aSUNPKHI, FEAT_NONE, 0x5313800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SUNPKLO  <Zd>.<T>, <Zn>.<Tb>
	{AZSUNPKLO, aSUNPKLO, FEAT_NONE, 0x5303800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SUQADD  <V><d>, <V><n>
	{AVSUQADDS, aSUQADD, FEAT_NONE, 0x5ea03800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SUQADD  <V><d>, <V><n>
	{AVSUQADDB, aSUQADD, FEAT_NONE, 0x5e203800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SUQADD  <V><d>, <V><n>
	{AVSUQADDD, aSUQADD, FEAT_NONE, 0x5ee03800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SUQADD  <V><d>, <V><n>
	{AVSUQADDH, aSUQADD, FEAT_NONE, 0x5e603800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// SUQADD  <Vd>.<T>, <Vn>.<T>
	{AVSUQADD, aSUQADD, FEAT_NONE, 0xe203800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// SUQADD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZSUQADD, aSUQADD, FEAT_NONE, 0x441c8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// SUVDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZSUVDOT, aSUVDOT, FEAT_SME2, 0xc1508038, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SVC  #<imm>
	{ASVC, aSVC, FEAT_NONE, 0xd4000001, 0xffe0001f, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
		}},
	}},

	// SVDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZSVDOT, aSVDOT, FEAT_SME2, 0xc1500020, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// SVDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZSVDOT, aSVDOT, FEAT_SME2, 0xc1508020, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SVDOT  ZA.D[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZSVDOT, aSVDOT, FEAT_SME_I16I64, 0xc1d08808, 0xfff09878, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// SWP  <Ws>, <Wt>, [<Xn|SP>]
	{ASWPW, aSWP, FEAT_LSE, 0xb8208000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// SWPA  <Ws>, <Wt>, [<Xn|SP>]
	{ASWPAW, aSWPA, FEAT_LSE, 0xb8a08000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// SWPAL  <Ws>, <Wt>, [<Xn|SP>]
	{ASWPALW, aSWPAL, FEAT_LSE, 0xb8e08000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// SWPL  <Ws>, <Wt>, [<Xn|SP>]
	{ASWPLW, aSWPL, FEAT_LSE, 0xb8608000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// SWP  <Xs>, <Xt>, [<Xn|SP>]
	{ASWPD, aSWP, FEAT_LSE, 0xf8208000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// SWPA  <Xs>, <Xt>, [<Xn|SP>]
	{ASWPAD, aSWPA, FEAT_LSE, 0xf8a08000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// SWPAL  <Xs>, <Xt>, [<Xn|SP>]
	{ASWPALD, aSWPAL, FEAT_LSE, 0xf8e08000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// SWPL  <Xs>, <Xt>, [<Xn|SP>]
	{ASWPLD, aSWPL, FEAT_LSE, 0xf8608000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xs__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// SWPAB  <Ws>, <Wt>, [<Xn|SP>]
	{ASWPAB, aSWPAB, FEAT_LSE, 0x38a08000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// SWPALB  <Ws>, <Wt>, [<Xn|SP>]
	{ASWPALB, aSWPALB, FEAT_LSE, 0x38e08000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// SWPB  <Ws>, <Wt>, [<Xn|SP>]
	{ASWPB, aSWPB, FEAT_LSE, 0x38208000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// SWPLB  <Ws>, <Wt>, [<Xn|SP>]
	{ASWPLB, aSWPLB, FEAT_LSE, 0x38608000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// SWPAH  <Ws>, <Wt>, [<Xn|SP>]
	{ASWPAH, aSWPAH, FEAT_LSE, 0x78a08000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// SWPALH  <Ws>, <Wt>, [<Xn|SP>]
	{ASWPALH, aSWPALH, FEAT_LSE, 0x78e08000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// SWPH  <Ws>, <Wt>, [<Xn|SP>]
	{ASWPH, aSWPH, FEAT_LSE, 0x78208000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// SWPLH  <Ws>, <Wt>, [<Xn|SP>]
	{ASWPLH, aSWPLH, FEAT_LSE, 0x78608000, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_ws__Rs,
		}},
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_REG, []elmType{
			sa_wt__Rt,
		}},
	}},

	// SWPP  <Xt1>, <Xt2>, [<Xn|SP>]
	{ASWPP, aSWPP, FEAT_LSE128, 0x19208000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// SWPPA  <Xt1>, <Xt2>, [<Xn|SP>]
	{ASWPPA, aSWPPA, FEAT_LSE128, 0x19a08000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// SWPPAL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ASWPPAL, aSWPPAL, FEAT_LSE128, 0x19e08000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// SWPPL  <Xt1>, <Xt2>, [<Xn|SP>]
	{ASWPPL, aSWPPL, FEAT_LSE128, 0x19608000, 0xffe0fc00, false, []arg{
		{AC_MEMIMM, []elmType{
			sa_xn_sp__Rn,
			sa_const_MEMIMM_no_arng,
			sa_const_MEMIMM_0,
		}},
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt2,
		}},
	}},

	// SXTB  <Wd>, <Wn>
	{ASXTBW, aSXTB, FEAT_NONE, 0x13001c00, 0xfffffc00, true, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SXTB  <Xd>, <Wn>
	{ASXTB, aSXTB, FEAT_NONE, 0x93401c00, 0xfffffc00, true, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SXTB  <Xd>, <Wn>
	{AMOVB, aSXTB, FEAT_NONE, 0x93401c00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SXTB  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZSXTB, aSXTB, FEAT_NONE, 0x410a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// SXTH  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZSXTH, aSXTH, FEAT_NONE, 0x412a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t_1__size_0__D_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t_1__size_0__D_S,
		}},
	}},

	// SXTW  <Zd>.D, <Pg>/M, <Zn>.D
	{AZSXTW, aSXTW, FEAT_NONE, 0x414a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// SXTH  <Wd>, <Wn>
	{ASXTHW, aSXTH, FEAT_NONE, 0x13003c00, 0xfffffc00, true, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// SXTH  <Xd>, <Wn>
	{ASXTH, aSXTH, FEAT_NONE, 0x93403c00, 0xfffffc00, true, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SXTH  <Xd>, <Wn>
	{AMOVH, aSXTH, FEAT_NONE, 0x93403c00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SXTL  <Vd>.<Ta>, <Vn>.<Tb>
	{AVSXTL, aSXTL, FEAT_NONE, 0xf00a400, 0xff87fc00, true, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
	}},

	// SXTL2  <Vd>.<Ta>, <Vn>.<Tb>
	{AVSXTL2, aSXTL2, FEAT_NONE, 0x4f00a400, 0xff87fc00, true, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
	}},

	// SXTW  <Xd>, <Wn>
	{ASXTW, aSXTW, FEAT_NONE, 0x93407c00, 0xfffffc00, true, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SXTW  <Xd>, <Wn>
	{AMOVW, aSXTW, FEAT_NONE, 0x93407c00, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// SYS  #<op1>, <Cn>, <Cm>, #<op2>
	{ASYS, aSYS, FEAT_NONE, 0xd508001f, 0xfff8001f, false, []arg{
		{AC_IMM, []elmType{
			sa_op1_Cn_Cm_op2,
		}},
	}},

	// SYS  #<op1>, <Cn>, <Cm>, #<op2>, <Xt>
	{ASYS, aSYS, FEAT_NONE, 0xd5080000, 0xfff80000, false, []arg{
		{AC_IMM, []elmType{
			sa_op1_Cn_Cm_op2,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// SYSL  <Xt>, #<op1>, <Cn>, <Cm>, #<op2>
	{ASYSL, aSYSL, FEAT_NONE, 0xd5280000, 0xfff80000, false, []arg{
		{AC_IMM, []elmType{
			sa_op1_Cn_Cm_op2,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// SYSP  #<op1>, <Cn>, <Cm>, #<op2>
	{ASYSP, aSYSP, FEAT_SYSINSTR128, 0xd548001f, 0xfff8001f, false, []arg{
		{AC_IMM, []elmType{
			sa_op1_Cn_Cm_op2,
		}},
	}},

	// SYSP  #<op1>, <Cn>, <Cm>, #<op2>, <Xt1>, <Xt2>
	{ASYSP, aSYSP, FEAT_SYSINSTR128, 0xd5480000, 0xfff80000, false, []arg{
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt,
		}},
		{AC_IMM, []elmType{
			sa_op1_Cn_Cm_op2,
		}},
	}},

	// TBL  <Vd>.<Ta>, { <Vn>.16B, <Vn+1>.16B }, <Vm>.<Ta>
	{AVTBL, aTBL, FEAT_NONE, 0xe002000, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__Q__8B_16B,
		}},
		{AC_REGLIST2, []elmType{
			sa_vn_1__Rn,
			sa_vn_plus_1__Rn,
			sa_const_REGLIST2_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__8B_16B,
		}},
	}},

	// TBL  <Vd>.<Ta>, { <Vn>.16B, <Vn+1>.16B, <Vn+2>.16B }, <Vm>.<Ta>
	{AVTBL, aTBL, FEAT_NONE, 0xe004000, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__Q__8B_16B,
		}},
		{AC_REGLIST3, []elmType{
			sa_vn_1__Rn,
			sa_vn_plus_1__Rn,
			sa_vn_plus_2__Rn,
			sa_const_REGLIST3_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__8B_16B,
		}},
	}},

	// TBL  <Vd>.<Ta>, { <Vn>.16B, <Vn+1>.16B, <Vn+2>.16B, <Vn+3>.16B }, <Vm>.<Ta>
	{AVTBL, aTBL, FEAT_NONE, 0xe006000, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__Q__8B_16B,
		}},
		{AC_REGLIST4, []elmType{
			sa_vn_1__Rn,
			sa_vn_plus_1__Rn,
			sa_vn_plus_2__Rn,
			sa_vn_plus_3__Rn,
			sa_const_REGLIST4_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__8B_16B,
		}},
	}},

	// TBL  <Vd>.<Ta>, { <Vn>.16B }, <Vm>.<Ta>
	{AVTBL, aTBL, FEAT_NONE, 0xe000000, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__Q__8B_16B,
		}},
		{AC_REGLIST1, []elmType{
			sa_vn__Rn,
			sa_const_REGLIST1_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__8B_16B,
		}},
	}},

	// TBL  <Zd>.<T>, { <Zn>.<T> }, <Zm>.<T>
	{AZTBL, aTBL, FEAT_NONE, 0x5203000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST1, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// TBL  <Zd>.<T>, { <Zn1>.<T>, <Zn2>.<T> }, <Zm>.<T>
	{AZTBL, aTBL, FEAT_NONE, 0x5202800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_t__size__B_D_H_S,
			sa_zn2__Zn_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// TBLQ  <Zd>.<T>, { <Zn>.<T> }, <Zm>.<T>
	{AZTBLQ, aTBLQ, FEAT_SVE2p1, 0x4400f800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST1, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// TBNZ  <R><t>, #<imm>, <label>
	{ATBNZ, aTBNZ, FEAT_NONE, 0x37000000, 0x7f000000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__b5_b40,
		}},
		{AC_REG, []elmType{
			sa_r__b5__W_X,
			sa_t__Rt,
		}},
		{AC_LABEL, []elmType{
			sa_label__imm14,
		}},
	}},

	// TBX  <Vd>.<Ta>, { <Vn>.16B, <Vn+1>.16B }, <Vm>.<Ta>
	{AVTBX, aTBX, FEAT_NONE, 0xe003000, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__Q__8B_16B,
		}},
		{AC_REGLIST2, []elmType{
			sa_vn_1__Rn,
			sa_vn_plus_1__Rn,
			sa_const_REGLIST2_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__8B_16B,
		}},
	}},

	// TBX  <Vd>.<Ta>, { <Vn>.16B, <Vn+1>.16B, <Vn+2>.16B }, <Vm>.<Ta>
	{AVTBX, aTBX, FEAT_NONE, 0xe005000, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__Q__8B_16B,
		}},
		{AC_REGLIST3, []elmType{
			sa_vn_1__Rn,
			sa_vn_plus_1__Rn,
			sa_vn_plus_2__Rn,
			sa_const_REGLIST3_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__8B_16B,
		}},
	}},

	// TBX  <Vd>.<Ta>, { <Vn>.16B, <Vn+1>.16B, <Vn+2>.16B, <Vn+3>.16B }, <Vm>.<Ta>
	{AVTBX, aTBX, FEAT_NONE, 0xe007000, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__Q__8B_16B,
		}},
		{AC_REGLIST4, []elmType{
			sa_vn_1__Rn,
			sa_vn_plus_1__Rn,
			sa_vn_plus_2__Rn,
			sa_vn_plus_3__Rn,
			sa_const_REGLIST4_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__8B_16B,
		}},
	}},

	// TBX  <Vd>.<Ta>, { <Vn>.16B }, <Vm>.<Ta>
	{AVTBX, aTBX, FEAT_NONE, 0xe001000, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_ta__Q__8B_16B,
		}},
		{AC_REGLIST1, []elmType{
			sa_vn__Rn,
			sa_const_REGLIST1_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__8B_16B,
		}},
	}},

	// TBX  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZTBX, aTBX, FEAT_NONE, 0x5202c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// TBXQ  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZTBXQ, aTBXQ, FEAT_SVE2p1, 0x5203400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// TBZ  <R><t>, #<imm>, <label>
	{ATBZ, aTBZ, FEAT_NONE, 0x36000000, 0x7f000000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__b5_b40,
		}},
		{AC_REG, []elmType{
			sa_r__b5__W_X,
			sa_t__Rt,
		}},
		{AC_LABEL, []elmType{
			sa_label__imm14,
		}},
	}},

	// TCANCEL  #<imm>
	{ATCANCEL, aTCANCEL, FEAT_TME, 0xd4600000, 0xffe0001f, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
		}},
	}},

	// TCOMMIT
	{ATCOMMIT, aTCOMMIT, FEAT_TME, 0xd503307f, 0xffffffff, false, nil},

	// TLBI  <tlbi_op>
	{ATLBI, aTLBI, FEAT_NONE, 0xd508801f, 0xfff8e01f, true, []arg{
		{AC_SPOP, []elmType{
			sa_tlbi_op__op1_CRn_CRm_op2,
		}},
	}},

	// TLBI  <tlbi_op>, <Xt>
	{ATLBI, aTLBI, FEAT_NONE, 0xd5088000, 0xfff8e000, true, []arg{
		{AC_SPOP, []elmType{
			sa_tlbi_op__op1_CRn_CRm_op2,
		}},
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// TLBIP  <tlbip_op>
	{ATLBIP, aTLBIP, FEAT_D128, 0xd548801f, 0xfff8e01f, true, []arg{
		{AC_SPOP, []elmType{
			sa_tlbip_op__op1_CRn_CRm_op2,
		}},
	}},

	// TLBIP  <tlbip_op>, <Xt1>, <Xt2>
	{ATLBIP, aTLBIP, FEAT_D128, 0xd5488000, 0xfff8e000, true, []arg{
		{AC_PAIR, []elmType{
			sa_xt1__Rt,
			sa_xt2__Rt,
		}},
		{AC_SPOP, []elmType{
			sa_tlbip_op__op1_CRn_CRm_op2,
		}},
	}},

	// TRCIT  <Xt>
	{ATRCIT, aTRCIT, FEAT_ITE, 0xd50b72e0, 0xffffffe0, true, []arg{
		{AC_REG, []elmType{
			sa_xt_1__Rt,
		}},
	}},

	// TRN1  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVTRN1, aTRN1, FEAT_NONE, 0xe002800, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// TRN1  <Pd>.<T>, <Pn>.<T>, <Pm>.<T>
	{APTRN1, aTRN1, FEAT_NONE, 0x5205000, 0xff30fe10, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// TRN2  <Pd>.<T>, <Pn>.<T>, <Pm>.<T>
	{APTRN2, aTRN2, FEAT_NONE, 0x5205400, 0xff30fe10, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// TRN1  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZTRN1, aTRN1, FEAT_NONE, 0x5207000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// TRN1  <Zd>.Q, <Zn>.Q, <Zm>.Q
	{AZTRN1, aTRN1, FEAT_F64MM, 0x5a01800, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_Q,
		}},
	}},

	// TRN2  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZTRN2, aTRN2, FEAT_NONE, 0x5207400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// TRN2  <Zd>.Q, <Zn>.Q, <Zm>.Q
	{AZTRN2, aTRN2, FEAT_F64MM, 0x5a01c00, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_Q,
		}},
	}},

	// TRN2  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVTRN2, aTRN2, FEAT_NONE, 0xe006800, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// TSB  CSYNC
	{ATSB, aTSB, FEAT_TRF, 0xd503225f, 0xffffffff, false, []arg{
		{AC_SPOP, []elmType{
			sa_const_SPOP_CSYNC,
		}},
	}},

	// TST  <Wn>, <Wm>
	{ATSTW, aTST, FEAT_NONE, 0x6a00001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
	}},

	// TST  <Xn>, <Xm>
	{ATST, aTST, FEAT_NONE, 0xea00001f, 0xffe0fc1f, true, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// TST  <Wn>, <Wm>{, <shift> #<amount>}
	{ATSTW, aTST, FEAT_NONE, 0x6a00001f, 0xff20001f, true, []arg{
		{AC_REGSHIFT, []elmType{
			sa_wm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount__imm6,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
	}},

	// TST  <Xn>, <Xm>{, <shift> #<amount>}
	{ATST, aTST, FEAT_NONE, 0xea00001f, 0xff20001f, true, []arg{
		{AC_REGSHIFT, []elmType{
			sa_xm__Rm,
			sa_shift__shift__ASR_LSL_LSR_ROR,
			sa_amount_1__imm6,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// TST  <Wn>, #<imm>
	{ATSTW, aTST, FEAT_NONE, 0x7200001f, 0xffc0001f, true, []arg{
		{AC_IMM, []elmType{
			sa_imm__imms_immr,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
	}},

	// TST  <Xn>, #<imm>
	{ATST, aTST, FEAT_NONE, 0xf200001f, 0xff80001f, true, []arg{
		{AC_IMM, []elmType{
			sa_imm_1__N_imms_immr,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
	}},

	// TSTART  <Xt>
	{ATSTART, aTSTART, FEAT_TME, 0xd5233060, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// TTEST  <Xt>
	{ATTEST, aTTEST, FEAT_TME, 0xd5233160, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rt,
		}},
	}},

	// UABA  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUABA, aUABA, FEAT_NONE, 0x2e207c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UABA  <Zda>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZUABA, aUABA, FEAT_NONE, 0x4500fc00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UABAL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUABAL, aUABAL, FEAT_NONE, 0x2e205000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UABAL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUABAL2, aUABAL2, FEAT_NONE, 0x6e205000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UABALB  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUABALB, aUABALB, FEAT_NONE, 0x4500c800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// UABALT  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUABALT, aUABALT, FEAT_NONE, 0x4500cc00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// UABD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUABD, aUABD, FEAT_NONE, 0x2e207400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UABD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUABD, aUABD, FEAT_NONE, 0x40d0000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UABDL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUABDL, aUABDL, FEAT_NONE, 0x2e207000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UABDL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUABDL2, aUABDL2, FEAT_NONE, 0x6e207000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UABDLB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUABDLB, aUABDLB, FEAT_NONE, 0x45003800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// UABDLT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUABDLT, aUABDLT, FEAT_NONE, 0x45003c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// UADALP  <Vd>.<Ta>, <Vn>.<Tb>
	{AVUADALP, aUADALP, FEAT_NONE, 0x2e206800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size_Q__1D_2D_2S_4H_4S_8H,
		}},
	}},

	// UADALP  <Zda>.<T>, <Pg>/M, <Zn>.<Tb>
	{AZUADALP, aUADALP, FEAT_NONE, 0x4405a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// UADDL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUADDL, aUADDL, FEAT_NONE, 0x2e200000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UADDL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUADDL2, aUADDL2, FEAT_NONE, 0x6e200000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UADDLB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUADDLB, aUADDLB, FEAT_NONE, 0x45000800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// UADDLP  <Vd>.<Ta>, <Vn>.<Tb>
	{AVUADDLP, aUADDLP, FEAT_NONE, 0x2e202800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size_Q__1D_2D_2S_4H_4S_8H,
		}},
	}},

	// UADDLT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUADDLT, aUADDLT, FEAT_NONE, 0x45000c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// UADDLV  <V><d>, <Vn>.<T>
	{AVUADDLV, aUADDLV, FEAT_NONE, 0x2e303800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__4H_4S_8B_8H_16B,
		}},
		{AC_VREG, []elmType{
			sa_v__size__D_H_S,
			sa_d__Rd,
		}},
	}},

	// UADDV  <Dd>, <Pg>, <Zn>.<T>
	{AZUADDV, aUADDV, FEAT_NONE, 0x4012000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_dd__Vd,
		}},
	}},

	// UADDW  <Vd>.<Ta>, <Vn>.<Ta>, <Vm>.<Tb>
	{AVUADDW, aUADDW, FEAT_NONE, 0x2e201000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UADDW2  <Vd>.<Ta>, <Vn>.<Ta>, <Vm>.<Tb>
	{AVUADDW2, aUADDW2, FEAT_NONE, 0x6e201000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UADDWB  <Zd>.<T>, <Zn>.<T>, <Zm>.<Tb>
	{AZUADDWB, aUADDWB, FEAT_NONE, 0x45004800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// UADDWT  <Zd>.<T>, <Zn>.<T>, <Zm>.<Tb>
	{AZUADDWT, aUADDWT, FEAT_NONE, 0x45004c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// UBFIZ  <Wd>, <Wn>, #<lsb>, #<width>
	{AUBFIZW, aUBFIZ, FEAT_NONE, 0x53000000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_lsb,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_width,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// UBFIZ  <Xd>, <Xn>, #<lsb>, #<width>
	{AUBFIZ, aUBFIZ, FEAT_NONE, 0xd3400000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_lsb_2,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_width_1,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UBFM  <Wd>, <Wn>, #<immr>, #<imms>
	{AUBFMW, aUBFM, FEAT_NONE, 0x53000000, 0xffc00000, false, []arg{
		{AC_IMM, []elmType{
			sa_immr__immr,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_imms__imms,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// UBFM  <Xd>, <Xn>, #<immr>, #<imms>
	{AUBFM, aUBFM, FEAT_NONE, 0xd3400000, 0xffc00000, false, []arg{
		{AC_IMM, []elmType{
			sa_immr_1__immr,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_imms_1__imms,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UBFX  <Wd>, <Wn>, #<lsb>, #<width>
	{AUBFXW, aUBFX, FEAT_NONE, 0x53000000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_lsb_1,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_width,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// UBFX  <Xd>, <Xn>, #<lsb>, #<width>
	{AUBFX, aUBFX, FEAT_NONE, 0xd3400000, 0xffc00000, true, []arg{
		{AC_IMM, []elmType{
			sa_lsb_3,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_IMM, []elmType{
			sa_width_1,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UCLAMP  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZUCLAMP, aUCLAMP, FEAT_SVE2p1, 0x4400c400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UCLAMP  { <Zd1>.<T>-<Zd2>.<T> }, <Zn>.<T>, <Zm>.<T>
	{AZUCLAMP, aUCLAMP, FEAT_SME2, 0xc120c401, 0xff20fc01, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_t__size__B_D_H_S,
			sa_zd2__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UCLAMP  { <Zd1>.<T>-<Zd4>.<T> }, <Zn>.<T>, <Zm>.<T>
	{AZUCLAMP, aUCLAMP, FEAT_SME2, 0xc120cc01, 0xff20fc03, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_t__size__B_D_H_S,
			sa_zd4__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UCVTF  <Hd>, <Hn>
	{AVUCVTFH, aUCVTF, FEAT_FP16, 0x7e79d800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_hn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// UCVTF  <V><d>, <V><n>
	{AVUCVTFS, aUCVTF, FEAT_NONE, 0x7e21d800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// UCVTF  <V><d>, <V><n>
	{AVUCVTFD, aUCVTF, FEAT_NONE, 0x7e61d800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__sz__D_S,
			sa_d__Rd,
		}},
	}},

	// UCVTF  <Vd>.<T>, <Vn>.<T>
	{AVUCVTF, aUCVTF, FEAT_FP16, 0x2e79d800, 0xbffffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t_1__Q__4H_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t_1__Q__4H_8H,
		}},
	}},

	// UCVTF  <Vd>.<T>, <Vn>.<T>
	{AVUCVTF, aUCVTF, FEAT_NONE, 0x2e21d800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2D_2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2D_2S_4S,
		}},
	}},

	// UCVTF  <V><d>, <V><n>, #<fbits>
	{AVUCVTFS, aUCVTF, FEAT_NONE, 0x7f20e400, 0xffe0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_d__Rd,
		}},
	}},

	// UCVTF  <V><d>, <V><n>, #<fbits>
	{AVUCVTFD, aUCVTF, FEAT_NONE, 0x7f40e400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_d__Rd,
		}},
	}},

	// UCVTF  <V><d>, <V><n>, #<fbits>
	{AVUCVTFH, aUCVTF, FEAT_NONE, 0x7f10e400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D_H_S,
			sa_d__Rd,
		}},
	}},

	// UCVTF  <Vd>.<T>, <Vn>.<T>, #<fbits>
	{AVUCVTF, aUCVTF, FEAT_NONE, 0x2f00e400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__immh_immb__32_Uint_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8H_SEE_asimdimm,
		}},
	}},

	// UCVTF  <Hd>, <Wn>
	{AUCVTFWH, aUCVTF, FEAT_NONE, 0x1ee30000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// UCVTF  <Sd>, <Wn>
	{AUCVTFWS, aUCVTF, FEAT_NONE, 0x1e230000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// UCVTF  <Dd>, <Wn>
	{AUCVTFWD, aUCVTF, FEAT_NONE, 0x1e630000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// UCVTF  <Hd>, <Xn>
	{AUCVTFH, aUCVTF, FEAT_NONE, 0x9ee30000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// UCVTF  <Sd>, <Xn>
	{AUCVTFS, aUCVTF, FEAT_NONE, 0x9e230000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// UCVTF  <Dd>, <Xn>
	{AUCVTFD, aUCVTF, FEAT_NONE, 0x9e630000, 0xfffffc00, false, []arg{
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// UCVTF  <Hd>, <Wn>, #<fbits>
	{AUCVTFWH, aUCVTF, FEAT_NONE, 0x1ec30000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__scale,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// UCVTF  <Sd>, <Wn>, #<fbits>
	{AUCVTFWS, aUCVTF, FEAT_NONE, 0x1e030000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__scale,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// UCVTF  <Dd>, <Wn>, #<fbits>
	{AUCVTFWD, aUCVTF, FEAT_NONE, 0x1e430000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits__scale,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// UCVTF  <Hd>, <Xn>, #<fbits>
	{AUCVTFH, aUCVTF, FEAT_NONE, 0x9ec30000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__scale,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_hd__Rd,
		}},
	}},

	// UCVTF  <Sd>, <Xn>, #<fbits>
	{AUCVTFS, aUCVTF, FEAT_NONE, 0x9e030000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__scale,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_sd__Rd,
		}},
	}},

	// UCVTF  <Dd>, <Xn>, #<fbits>
	{AUCVTFD, aUCVTF, FEAT_NONE, 0x9e430000, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_fbits_1__scale,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_FREG, []elmType{
			sa_dd__Rd,
		}},
	}},

	// UCVTF  <Zd>.H, <Pg>/M, <Zn>.H
	{AZUCVTF, aUCVTF, FEAT_NONE, 0x6553a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// UCVTF  <Zd>.H, <Pg>/M, <Zn>.S
	{AZUCVTF, aUCVTF, FEAT_NONE, 0x6555a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// UCVTF  <Zd>.S, <Pg>/M, <Zn>.S
	{AZUCVTF, aUCVTF, FEAT_NONE, 0x6595a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// UCVTF  <Zd>.D, <Pg>/M, <Zn>.S
	{AZUCVTF, aUCVTF, FEAT_NONE, 0x65d1a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// UCVTF  <Zd>.H, <Pg>/M, <Zn>.D
	{AZUCVTF, aUCVTF, FEAT_NONE, 0x6557a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// UCVTF  <Zd>.S, <Pg>/M, <Zn>.D
	{AZUCVTF, aUCVTF, FEAT_NONE, 0x65d5a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// UCVTF  <Zd>.D, <Pg>/M, <Zn>.D
	{AZUCVTF, aUCVTF, FEAT_NONE, 0x65d7a000, 0xffffe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// UCVTF  { <Zd1>.S-<Zd2>.S }, { <Zn1>.S-<Zn2>.S }
	{AZUCVTF, aUCVTF, FEAT_SME2, 0xc122e020, 0xfffffc21, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_S,
		}},
	}},

	// UCVTF  { <Zd1>.S-<Zd4>.S }, { <Zn1>.S-<Zn4>.S }
	{AZUCVTF, aUCVTF, FEAT_SME2, 0xc132e020, 0xfffffc63, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_zd4__Zd,
			sa_const_REGLIST4_S,
		}},
	}},

	// UDF  #<imm>
	{AUDF, aUDF, FEAT_NONE, 0x0, 0xffff0000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm16,
		}},
	}},

	// UDIV  <Wd>, <Wn>, <Wm>
	{AUDIVW, aUDIV, FEAT_NONE, 0x1ac00800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// UDIV  <Xd>, <Xn>, <Xm>
	{AUDIV, aUDIV, FEAT_NONE, 0x9ac00800, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UDIV  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUDIV, aUDIV, FEAT_NONE, 0x4150000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size_0__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_0__D_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_0__D_S,
		}},
	}},

	// UDIVR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUDIVR, aUDIVR, FEAT_NONE, 0x4170000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size_0__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_0__D_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size_0__D_S,
		}},
	}},

	// UDOT  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUDOT, aUDOT, FEAT_DotProd, 0x2e009400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// UDOT  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.4B[<index>]
	{AVUDOT, aUDOT, FEAT_DotProd, 0x2f00e000, 0xbf00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__M_Rm,
			sa_const_ARNGIDX_4B,
			sa_index__H_L,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// UDOT  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUDOT, aUDOT, FEAT_NONE, 0x44000400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size_0__B_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size_0__B_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size_0__D_S,
		}},
	}},

	// UDOT  <Zda>.S, <Zn>.B, <Zm>.B[<imm>]
	{AZUDOT, aUDOT, FEAT_NONE, 0x44a00400, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_B,
			sa_imm_1__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// UDOT  <Zda>.D, <Zn>.H, <Zm>.H[<imm>]
	{AZUDOT, aUDOT, FEAT_NONE, 0x44e00400, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_imm__i1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// UDOT  <Zda>.S, <Zn>.H, <Zm>.H
	{AZUDOT, aUDOT, FEAT_SVE2p1, 0x4400cc00, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// UDOT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZUDOT, aUDOT, FEAT_SVE2p1, 0x4480cc00, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_H,
			sa_imm__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// UDOT  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zn1>.<Tb>-<Zn2>.<Tb> }, <Zm>.<Tb>
	{AZUDOT, aUDOT, FEAT_SME2, 0xc1201410, 0xffb09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_tb__sz__B_H,
			sa_zn2__Zn_9_5,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// UDOT  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zn1>.<Tb>-<Zn4>.<Tb> }, <Zm>.<Tb>
	{AZUDOT, aUDOT, FEAT_SME2, 0xc1301410, 0xffb09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_tb__sz__B_H,
			sa_zn4__Zn_9_5,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// UDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZUDOT, aUDOT, FEAT_SME2, 0xc1501010, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// UDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZUDOT, aUDOT, FEAT_SME2, 0xc1509010, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// UDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B[<index>]
	{AZUDOT, aUDOT, FEAT_SME2, 0xc1501030, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// UDOT  ZA.D[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZUDOT, aUDOT, FEAT_SME_I16I64, 0xc1d00018, 0xfff09838, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// UDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZUDOT, aUDOT, FEAT_SME2, 0xc1509030, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// UDOT  ZA.D[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZUDOT, aUDOT, FEAT_SME_I16I64, 0xc1d08018, 0xfff09878, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// UDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZUDOT, aUDOT, FEAT_SME2, 0xc1601418, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// UDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZUDOT, aUDOT, FEAT_SME2, 0xc1701418, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// UDOT  ZA.<T>[<Wv>, <offs>{, VGx2}], { <Zn1>.<Tb>-<Zn2>.<Tb> }, { <Zm1>.<Tb>-<Zm2>.<Tb> }
	{AZUDOT, aUDOT, FEAT_SME2, 0xc1a01410, 0xffa19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_tb__sz__B_H,
			sa_zm2__Zm_20_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_tb__sz__B_H,
			sa_zn2__Zn_9_4,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// UDOT  ZA.<T>[<Wv>, <offs>{, VGx4}], { <Zn1>.<Tb>-<Zn4>.<Tb> }, { <Zm1>.<Tb>-<Zm4>.<Tb> }
	{AZUDOT, aUDOT, FEAT_SME2, 0xc1a11410, 0xffa39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_tb__sz__B_H,
			sa_zm4__Zm_20_3,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_tb__sz__B_H,
			sa_zn4__Zn_9_3,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// UDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZUDOT, aUDOT, FEAT_SME2, 0xc1e01418, 0xffe19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// UDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZUDOT, aUDOT, FEAT_SME2, 0xc1e11418, 0xffe39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// UHADD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUHADD, aUHADD, FEAT_NONE, 0x2e200400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UHADD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUHADD, aUHADD, FEAT_NONE, 0x44118000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UHSUB  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUHSUB, aUHSUB, FEAT_NONE, 0x2e202400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UHSUB  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUHSUB, aUHSUB, FEAT_NONE, 0x44138000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UHSUBR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUHSUBR, aUHSUBR, FEAT_NONE, 0x44178000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMADDL  <Xd>, <Wn>, <Wm>, <Xa>
	{AUMADDL, aUMADDL, FEAT_NONE, 0x9ba00000, 0xffe08000, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xa__Ra,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UMAX  <Wd>, <Wn>, #<uimm>
	{AUMAXW, aUMAX, FEAT_CSSC, 0x11c40000, 0xfffc0000, false, []arg{
		{AC_IMM, []elmType{
			sa_uimm__imm8,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// UMAX  <Xd>, <Xn>, #<uimm>
	{AUMAX, aUMAX, FEAT_CSSC, 0x91c40000, 0xfffc0000, false, []arg{
		{AC_IMM, []elmType{
			sa_uimm__imm8,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UMAX  <Wd>, <Wn>, <Wm>
	{AUMAXW, aUMAX, FEAT_CSSC, 0x1ac06400, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// UMAX  <Xd>, <Xn>, <Xm>
	{AUMAX, aUMAX, FEAT_CSSC, 0x9ac06400, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UMAX  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUMAX, aUMAX, FEAT_NONE, 0x2e206400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UMAX  <Zdn>.<T>, <Zdn>.<T>, #<imm>
	{AZUMAX, aUMAX, FEAT_NONE, 0x2529c000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMAX  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUMAX, aUMAX, FEAT_NONE, 0x4090000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMAX  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, <Zm>.<T>
	{AZUMAX, aUMAX, FEAT_SME2, 0xc120a001, 0xff30ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMAX  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, <Zm>.<T>
	{AZUMAX, aUMAX, FEAT_SME2, 0xc120a801, 0xff30ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMAX  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZUMAX, aUMAX, FEAT_SME2, 0xc120b001, 0xff21ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__size__B_D_H_S,
			sa_zm2__Zm_20_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMAX  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZUMAX, aUMAX, FEAT_SME2, 0xc120b801, 0xff23ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__size__B_D_H_S,
			sa_zm4__Zm_20_3,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMAXP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUMAXP, aUMAXP, FEAT_NONE, 0x2e20a400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UMAXP  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUMAXP, aUMAXP, FEAT_NONE, 0x4415a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMAXQV  <Vd>.<T>, <Pg>, <Zn>.<Tb>
	{AZUMAXQV, aUMAXQV, FEAT_SVE2p1, 0x40d2000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Vd,
			sa_t__size__2D_4S_8H_16B,
		}},
	}},

	// UMAXV  <V><d>, <Vn>.<T>
	{AVUMAXV, aUMAXV, FEAT_NONE, 0x2e30a800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__4H_4S_8B_8H_16B,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// UMAXV  <V><d>, <Pg>, <Zn>.<T>
	{AZUMAXV, aUMAXV, FEAT_NONE, 0x4092000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Vd,
		}},
	}},

	// UMIN  <Wd>, <Wn>, #<uimm>
	{AUMINW, aUMIN, FEAT_CSSC, 0x11cc0000, 0xfffc0000, false, []arg{
		{AC_IMM, []elmType{
			sa_uimm__imm8,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// UMIN  <Xd>, <Xn>, #<uimm>
	{AUMIN, aUMIN, FEAT_CSSC, 0x91cc0000, 0xfffc0000, false, []arg{
		{AC_IMM, []elmType{
			sa_uimm__imm8,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UMIN  <Wd>, <Wn>, <Wm>
	{AUMINW, aUMIN, FEAT_CSSC, 0x1ac06c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// UMIN  <Xd>, <Xn>, <Xm>
	{AUMIN, aUMIN, FEAT_CSSC, 0x9ac06c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UMIN  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUMIN, aUMIN, FEAT_NONE, 0x2e206c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UMIN  <Zdn>.<T>, <Zdn>.<T>, #<imm>
	{AZUMIN, aUMIN, FEAT_NONE, 0x252bc000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMIN  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUMIN, aUMIN, FEAT_NONE, 0x40b0000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMIN  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, <Zm>.<T>
	{AZUMIN, aUMIN, FEAT_SME2, 0xc120a021, 0xff30ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMIN  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, <Zm>.<T>
	{AZUMIN, aUMIN, FEAT_SME2, 0xc120a821, 0xff30ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMIN  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZUMIN, aUMIN, FEAT_SME2, 0xc120b021, 0xff21ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__size__B_D_H_S,
			sa_zm2__Zm_20_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMIN  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZUMIN, aUMIN, FEAT_SME2, 0xc120b821, 0xff23ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__size__B_D_H_S,
			sa_zm4__Zm_20_3,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMINP  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUMINP, aUMINP, FEAT_NONE, 0x2e20ac00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UMINP  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUMINP, aUMINP, FEAT_NONE, 0x4417a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMINQV  <Vd>.<T>, <Pg>, <Zn>.<Tb>
	{AZUMINQV, aUMINQV, FEAT_SVE2p1, 0x40f2000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Vd,
			sa_t__size__2D_4S_8H_16B,
		}},
	}},

	// UMINV  <V><d>, <Vn>.<T>
	{AVUMINV, aUMINV, FEAT_NONE, 0x2e31a800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__4H_4S_8B_8H_16B,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// UMINV  <V><d>, <Pg>, <Zn>.<T>
	{AZUMINV, aUMINV, FEAT_NONE, 0x40b2000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREG, []elmType{
			sa_pg__Pg_12_3,
		}},
		{AC_VREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Vd,
		}},
	}},

	// UMLAL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUMLAL, aUMLAL, FEAT_NONE, 0x2e208000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UMLAL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUMLAL2, aUMLAL2, FEAT_NONE, 0x6e208000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UMLAL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVUMLAL, aUMLAL, FEAT_NONE, 0x2f002000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// UMLAL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVUMLAL2, aUMLAL2, FEAT_NONE, 0x6f002000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// UMLAL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H
	{AZUMLAL, aUMLAL, FEAT_SME2, 0xc1600c10, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// UMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZUMLAL, aUMLAL, FEAT_SME2, 0xc1600810, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZUMLAL, aUMLAL, FEAT_SME2, 0xc1700810, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLAL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H[<index>]
	{AZUMLAL, aUMLAL, FEAT_SME2, 0xc1c01010, 0xfff01018, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_15_1_i3l_11_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// UMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZUMLAL, aUMLAL, FEAT_SME2, 0xc1d01010, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZUMLAL, aUMLAL, FEAT_SME2, 0xc1d09010, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZUMLAL, aUMLAL, FEAT_SME2, 0xc1e00810, 0xffe19c3c, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLAL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZUMLAL, aUMLAL, FEAT_SME2, 0xc1e10810, 0xffe39c7c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLALB  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUMLALB, aUMLALB, FEAT_NONE, 0x44004800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// UMLALB  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZUMLALB, aUMLALB, FEAT_NONE, 0x44a09000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// UMLALB  <Zda>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZUMLALB, aUMLALB, FEAT_NONE, 0x44e09000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// UMLALL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.B, <Zm>.B[<index>]
	{AZUMLALL, aUMLALL, FEAT_SME2, 0xc1000010, 0xfff0001c, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i4h_15_1_i4l_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// UMLALL  ZA.D[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H[<index>]
	{AZUMLALL, aUMLALL, FEAT_SME_I16I64, 0xc1800010, 0xfff0101c, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_15_1_i3l_11_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_D,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// UMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B[<index>]
	{AZUMLALL, aUMLALL, FEAT_SME2, 0xc1100010, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i4h_11_2_i4l_2_2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLALL  ZA.D[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZUMLALL, aUMLALL, FEAT_SME_I16I64, 0xc1900010, 0xfff09838, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_10_1_i3l_2_2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_D,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZUMLALL, aUMLALL, FEAT_SME2, 0xc1108010, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i4h_11_2_i4l_2_2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLALL  ZA.D[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZUMLALL, aUMLALL, FEAT_SME_I16I64, 0xc1908010, 0xfff09878, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_10_1_i3l_2_2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_D,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLALL  ZA.<T>[<Wv>, <offsf>:<offsl>], <Zn>.<Tb>, <Zm>.<Tb>
	{AZUMLALL, aUMLALL, FEAT_SME2, 0xc1200410, 0xffb09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// UMLALL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.<Tb>-<Zn2>.<Tb> }, <Zm>.<Tb>
	{AZUMLALL, aUMLALL, FEAT_SME2, 0xc1200010, 0xffb09c1e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_tb__sz__B_H,
			sa_zn2__Zn_9_5,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLALL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.<Tb>-<Zn4>.<Tb> }, <Zm>.<Tb>
	{AZUMLALL, aUMLALL, FEAT_SME2, 0xc1300010, 0xffb09c1e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_tb__sz__B_H,
			sa_zn4__Zn_9_5,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLALL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.<Tb>-<Zn2>.<Tb> }, { <Zm1>.<Tb>-<Zm2>.<Tb> }
	{AZUMLALL, aUMLALL, FEAT_SME2, 0xc1a00010, 0xffa19c3e, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_tb__sz__B_H,
			sa_zm2__Zm_20_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_tb__sz__B_H,
			sa_zn2__Zn_9_4,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf__o1,
			sa_offsl__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLALL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.<Tb>-<Zn4>.<Tb> }, { <Zm1>.<Tb>-<Zm4>.<Tb> }
	{AZUMLALL, aUMLALL, FEAT_SME2, 0xc1a10010, 0xffa39c7e, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_tb__sz__B_H,
			sa_zm4__Zm_20_3,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_tb__sz__B_H,
			sa_zn4__Zn_9_3,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf__o1,
			sa_offsl__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLALT  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUMLALT, aUMLALT, FEAT_NONE, 0x44004c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// UMLALT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZUMLALT, aUMLALT, FEAT_NONE, 0x44a09400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// UMLALT  <Zda>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZUMLALT, aUMLALT, FEAT_NONE, 0x44e09400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// UMLSL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUMLSL, aUMLSL, FEAT_NONE, 0x2e20a000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UMLSL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUMLSL2, aUMLSL2, FEAT_NONE, 0x6e20a000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UMLSL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVUMLSL, aUMLSL, FEAT_NONE, 0x2f006000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// UMLSL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVUMLSL2, aUMLSL2, FEAT_NONE, 0x6f006000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// UMLSL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H
	{AZUMLSL, aUMLSL, FEAT_SME2, 0xc1600c18, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// UMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H
	{AZUMLSL, aUMLSL, FEAT_SME2, 0xc1600818, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H
	{AZUMLSL, aUMLSL, FEAT_SME2, 0xc1700818, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLSL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H[<index>]
	{AZUMLSL, aUMLSL, FEAT_SME2, 0xc1c01018, 0xfff01018, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_15_1_i3l_11_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// UMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZUMLSL, aUMLSL, FEAT_SME2, 0xc1d01018, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZUMLSL, aUMLSL, FEAT_SME2, 0xc1d09018, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_11_2_i3l_2_1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, { <Zm1>.H-<Zm2>.H }
	{AZUMLSL, aUMLSL, FEAT_SME2, 0xc1e00818, 0xffe19c3c, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLSL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, { <Zm1>.H-<Zm4>.H }
	{AZUMLSL, aUMLSL, FEAT_SME2, 0xc1e10818, 0xffe39c7c, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLSLB  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUMLSLB, aUMLSLB, FEAT_NONE, 0x44005800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// UMLSLB  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZUMLSLB, aUMLSLB, FEAT_NONE, 0x44a0b000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// UMLSLB  <Zda>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZUMLSLB, aUMLSLB, FEAT_NONE, 0x44e0b000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// UMLSLL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.B, <Zm>.B[<index>]
	{AZUMLSLL, aUMLSLL, FEAT_SME2, 0xc1000018, 0xfff0001c, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i4h_15_1_i4l_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// UMLSLL  ZA.D[<Wv>, <offsf>:<offsl>], <Zn>.H, <Zm>.H[<index>]
	{AZUMLSLL, aUMLSLL, FEAT_SME_I16I64, 0xc1800018, 0xfff0101c, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_15_1_i3l_11_2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_D,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// UMLSLL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B[<index>]
	{AZUMLSLL, aUMLSLL, FEAT_SME2, 0xc1100018, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i4h_11_2_i4l_2_2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLSLL  ZA.D[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZUMLSLL, aUMLSLL, FEAT_SME_I16I64, 0xc1900018, 0xfff09838, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_10_1_i3l_2_2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_D,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLSLL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZUMLSLL, aUMLSLL, FEAT_SME2, 0xc1108018, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i4h_11_2_i4l_2_2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLSLL  ZA.D[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZUMLSLL, aUMLSLL, FEAT_SME_I16I64, 0xc1908018, 0xfff09878, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i3h_10_1_i3l_2_2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_D,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLSLL  ZA.<T>[<Wv>, <offsf>:<offsl>], <Zn>.<Tb>, <Zm>.<Tb>
	{AZUMLSLL, aUMLSLL, FEAT_SME2, 0xc1200418, 0xffb09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// UMLSLL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.<Tb>-<Zn2>.<Tb> }, <Zm>.<Tb>
	{AZUMLSLL, aUMLSLL, FEAT_SME2, 0xc1200018, 0xffb09c1e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_tb__sz__B_H,
			sa_zn2__Zn_9_5,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLSLL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.<Tb>-<Zn4>.<Tb> }, <Zm>.<Tb>
	{AZUMLSLL, aUMLSLL, FEAT_SME2, 0xc1300018, 0xffb09c1e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_tb__sz__B_H,
			sa_zn4__Zn_9_5,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLSLL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.<Tb>-<Zn2>.<Tb> }, { <Zm1>.<Tb>-<Zm2>.<Tb> }
	{AZUMLSLL, aUMLSLL, FEAT_SME2, 0xc1a00018, 0xffa19c3e, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_tb__sz__B_H,
			sa_zm2__Zm_20_4,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_tb__sz__B_H,
			sa_zn2__Zn_9_4,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf__o1,
			sa_offsl__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// UMLSLL  ZA.<T>[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.<Tb>-<Zn4>.<Tb> }, { <Zm1>.<Tb>-<Zm4>.<Tb> }
	{AZUMLSLL, aUMLSLL, FEAT_SME2, 0xc1a10018, 0xffa39c7e, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_tb__sz__B_H,
			sa_zm4__Zm_20_3,
			sa_tb__sz__B_H,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_tb__sz__B_H,
			sa_zn4__Zn_9_3,
			sa_tb__sz__B_H,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_t__sz__D_S,
			sa_wv__Rv,
			sa_offsf__o1,
			sa_offsl__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// UMLSLT  <Zda>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUMLSLT, aUMLSLT, FEAT_NONE, 0x44005c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__size__D_H_S,
		}},
	}},

	// UMLSLT  <Zda>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZUMLSLT, aUMLSLT, FEAT_NONE, 0x44a0b400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// UMLSLT  <Zda>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZUMLSLT, aUMLSLT, FEAT_NONE, 0x44e0b400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_D,
		}},
	}},

	// UMMLA  <Vd>.4S, <Vn>.16B, <Vm>.16B
	{AVUMMLA, aUMMLA, FEAT_I8MM, 0x6e80a400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// UMMLA  <Zda>.S, <Zn>.B, <Zm>.B
	{AZUMMLA, aUMMLA, FEAT_I8MM, 0x45c09800, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// UMNEGL  <Xd>, <Wn>, <Wm>
	{AUMNEGL, aUMNEGL, FEAT_NONE, 0x9ba0fc00, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UMOPA  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.B, <Zm>.B
	{AZUMOPA, aUMOPA, FEAT_SME, 0xa1a00000, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// UMOPA  <ZAda>.D, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZUMOPA, aUMOPA, FEAT_SME_I16I64, 0xa1e00000, 0xffe00018, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_1__ZAda,
			sa_const_ARNG_D,
		}},
	}},

	// UMOPA  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZUMOPA, aUMOPA, FEAT_SME2, 0xa1800008, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// UMOPS  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.B, <Zm>.B
	{AZUMOPS, aUMOPS, FEAT_SME, 0xa1a00010, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// UMOPS  <ZAda>.D, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZUMOPS, aUMOPS, FEAT_SME_I16I64, 0xa1e00010, 0xffe00018, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_1__ZAda,
			sa_const_ARNG_D,
		}},
	}},

	// UMOPS  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZUMOPS, aUMOPS, FEAT_SME2, 0xa1800018, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// UMOV  <Wd>, <Vn>.<Ts>[<index>]
	{AVMOV, aUMOV, FEAT_NONE, 0xe003c00, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vn__Rn,
			sa_ts__imm5__B_H_S,
			sa_index__imm5,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// UMOV  <Xd>, <Vn>.<Ts>[<index>]
	{AVMOV, aUMOV, FEAT_NONE, 0x4e083c00, 0xffeffc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vn__Rn,
			sa_ts_1__imm5__D,
			sa_index_1__imm5_4,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UMSUBL  <Xd>, <Wn>, <Wm>, <Xa>
	{AUMSUBL, aUMSUBL, FEAT_NONE, 0x9ba08000, 0xffe08000, false, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xa__Ra,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UMULH  <Xd>, <Xn>, <Xm>
	{AUMULH, aUMULH, FEAT_NONE, 0x9bc07c00, 0xffe0fc00, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UMULH  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUMULH, aUMULH, FEAT_NONE, 0x4130000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMULH  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZUMULH, aUMULH, FEAT_NONE, 0x4206c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UMULL  <Xd>, <Wn>, <Wm>
	{AUMULL, aUMULL, FEAT_NONE, 0x9ba07c00, 0xffe0fc00, true, []arg{
		{AC_REG, []elmType{
			sa_wm__Rm,
		}},
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// UMULL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUMULL, aUMULL, FEAT_NONE, 0x2e20c000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UMULL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUMULL2, aUMULL2, FEAT_NONE, 0x6e20c000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// UMULL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVUMULL, aUMULL, FEAT_NONE, 0x2f00a000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// UMULL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]
	{AVUMULL2, aUMULL2, FEAT_NONE, 0x6f00a000, 0xff00f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__size_M_Rm,
			sa_ts__size__H_S,
			sa_index__size_L_H_M__H_L_H_L_M,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S,
		}},
	}},

	// UMULLB  <Zd>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZUMULLB, aUMULLB, FEAT_NONE, 0x44a0d000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// UMULLB  <Zd>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZUMULLB, aUMULLB, FEAT_NONE, 0x44e0d000, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// UMULLB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUMULLB, aUMULLB, FEAT_NONE, 0x45007800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// UMULLT  <Zd>.S, <Zn>.H, <Zm>.H[<imm>]
	{AZUMULLT, aUMULLT, FEAT_NONE, 0x44a0d400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm_1__Zm,
			sa_const_ARNGIDX_H,
			sa_imm_1__i3h_20_2_i3l_11_1,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// UMULLT  <Zd>.D, <Zn>.S, <Zm>.S[<imm>]
	{AZUMULLT, aUMULLT, FEAT_NONE, 0x44e0d400, 0xffe0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_S,
			sa_imm__i2h_i2l,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// UMULLT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUMULLT, aUMULLT, FEAT_NONE, 0x45007c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// UQADD  <V><d>, <V><n>, <V><m>
	{AVUQADDS, aUQADD, FEAT_NONE, 0x7ea00c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQADD  <V><d>, <V><n>, <V><m>
	{AVUQADDB, aUQADD, FEAT_NONE, 0x7e200c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQADD  <V><d>, <V><n>, <V><m>
	{AVUQADDD, aUQADD, FEAT_NONE, 0x7ee00c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQADD  <V><d>, <V><n>, <V><m>
	{AVUQADDH, aUQADD, FEAT_NONE, 0x7e600c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQADD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUQADD, aUQADD, FEAT_NONE, 0x2e200c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UQADD  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZUQADD, aUQADD, FEAT_NONE, 0x4201400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UQADD  <Zdn>.<T>, <Zdn>.<T>, #<imm>{, <shift>}
	{AZUQADD, aUQADD, FEAT_NONE, 0x2525c000, 0xff3fc000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
			sa_shift__sh__LSL_0_LSL_8,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UQADD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUQADD, aUQADD, FEAT_NONE, 0x44198000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UQCVT  <Zd>.H, { <Zn1>.S-<Zn2>.S }
	{AZUQCVT, aUQCVT, FEAT_SME2, 0xc123e020, 0xfffffc20, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// UQCVT  <Zd>.<T>, { <Zn1>.<Tb>-<Zn4>.<Tb> }
	{AZUQCVT, aUQCVT, FEAT_SME2, 0xc133e020, 0xff7ffc60, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_tb__sz__D_S,
			sa_zn4__Zn_9_3,
			sa_tb__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__sz__B_H,
		}},
	}},

	// UQCVTN  <Zd>.H, { <Zn1>.S-<Zn2>.S }
	{AZUQCVTN, aUQCVTN, FEAT_SVE2p1, 0x45314800, 0xfffffc20, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// UQCVTN  <Zd>.<T>, { <Zn1>.<Tb>-<Zn4>.<Tb> }
	{AZUQCVTN, aUQCVTN, FEAT_SME2, 0xc133e060, 0xff7ffc60, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_tb__sz__D_S,
			sa_zn4__Zn_9_3,
			sa_tb__sz__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__sz__B_H,
		}},
	}},

	// UQDECB  <Wdn>
	{AUQDECBS, aUQDECB, FEAT_NONE, 0x421ffe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQDECB  <Wdn>, <pattern>, #<imm>
	{AUQDECBS, aUQDECB, FEAT_NONE, 0x420fc00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQDECB  <Wdn>, <pattern>
	{AUQDECBS, aUQDECB, FEAT_NONE, 0x421fc00, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQDECB  <Xdn>
	{AUQDECBD, aUQDECB, FEAT_NONE, 0x431ffe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQDECB  <Xdn>, <pattern>, #<imm>
	{AUQDECBD, aUQDECB, FEAT_NONE, 0x430fc00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQDECB  <Xdn>, <pattern>
	{AUQDECBD, aUQDECB, FEAT_NONE, 0x431fc00, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQDECD  <Wdn>
	{AUQDECDS, aUQDECD, FEAT_NONE, 0x4e1ffe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQDECD  <Wdn>, <pattern>, #<imm>
	{AUQDECDS, aUQDECD, FEAT_NONE, 0x4e0fc00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQDECD  <Wdn>, <pattern>
	{AUQDECDS, aUQDECD, FEAT_NONE, 0x4e1fc00, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQDECD  <Xdn>
	{AUQDECDD, aUQDECD, FEAT_NONE, 0x4f1ffe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQDECD  <Xdn>, <pattern>, #<imm>
	{AUQDECDD, aUQDECD, FEAT_NONE, 0x4f0fc00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQDECD  <Xdn>, <pattern>
	{AUQDECDD, aUQDECD, FEAT_NONE, 0x4f1fc00, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQDECD  <Zdn>.D
	{AZUQDECD, aUQDECD, FEAT_NONE, 0x4e1cfe0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// UQDECD  <Zdn>.D, <pattern>, #<imm>
	{AZUQDECD, aUQDECD, FEAT_NONE, 0x4e0cc00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// UQDECD  <Zdn>.D, <pattern>
	{AZUQDECD, aUQDECD, FEAT_NONE, 0x4e1cc00, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// UQDECH  <Wdn>
	{AUQDECHS, aUQDECH, FEAT_NONE, 0x461ffe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQDECH  <Wdn>, <pattern>, #<imm>
	{AUQDECHS, aUQDECH, FEAT_NONE, 0x460fc00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQDECH  <Wdn>, <pattern>
	{AUQDECHS, aUQDECH, FEAT_NONE, 0x461fc00, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQDECH  <Xdn>
	{AUQDECHD, aUQDECH, FEAT_NONE, 0x471ffe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQDECH  <Xdn>, <pattern>, #<imm>
	{AUQDECHD, aUQDECH, FEAT_NONE, 0x470fc00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQDECH  <Xdn>, <pattern>
	{AUQDECHD, aUQDECH, FEAT_NONE, 0x471fc00, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQDECH  <Zdn>.H
	{AZUQDECH, aUQDECH, FEAT_NONE, 0x461cfe0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// UQDECH  <Zdn>.H, <pattern>, #<imm>
	{AZUQDECH, aUQDECH, FEAT_NONE, 0x460cc00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// UQDECH  <Zdn>.H, <pattern>
	{AZUQDECH, aUQDECH, FEAT_NONE, 0x461cc00, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// UQDECP  <Wdn>, <Pm>.<T>
	{APUQDECP, aUQDECP, FEAT_NONE, 0x252b8800, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQDECP  <Xdn>, <Pm>.<T>
	{APUQDECP, aUQDECP, FEAT_NONE, 0x252b8c00, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQDECP  <Zdn>.<T>, <Pm>.<T>
	{AZUQDECP, aUQDECP, FEAT_NONE, 0x252b8000, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// UQDECW  <Wdn>
	{AUQDECWS, aUQDECW, FEAT_NONE, 0x4a1ffe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQDECW  <Wdn>, <pattern>, #<imm>
	{AUQDECWS, aUQDECW, FEAT_NONE, 0x4a0fc00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQDECW  <Wdn>, <pattern>
	{AUQDECWS, aUQDECW, FEAT_NONE, 0x4a1fc00, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQDECW  <Xdn>
	{AUQDECWD, aUQDECW, FEAT_NONE, 0x4b1ffe0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQDECW  <Xdn>, <pattern>, #<imm>
	{AUQDECWD, aUQDECW, FEAT_NONE, 0x4b0fc00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQDECW  <Xdn>, <pattern>
	{AUQDECWD, aUQDECW, FEAT_NONE, 0x4b1fc00, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQDECW  <Zdn>.S
	{AZUQDECW, aUQDECW, FEAT_NONE, 0x4a1cfe0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// UQDECW  <Zdn>.S, <pattern>, #<imm>
	{AZUQDECW, aUQDECW, FEAT_NONE, 0x4a0cc00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// UQDECW  <Zdn>.S, <pattern>
	{AZUQDECW, aUQDECW, FEAT_NONE, 0x4a1cc00, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// UQINCB  <Wdn>
	{AUQINCBS, aUQINCB, FEAT_NONE, 0x421f7e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQINCB  <Wdn>, <pattern>, #<imm>
	{AUQINCBS, aUQINCB, FEAT_NONE, 0x420f400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQINCB  <Wdn>, <pattern>
	{AUQINCBS, aUQINCB, FEAT_NONE, 0x421f400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQINCB  <Xdn>
	{AUQINCBD, aUQINCB, FEAT_NONE, 0x431f7e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQINCB  <Xdn>, <pattern>, #<imm>
	{AUQINCBD, aUQINCB, FEAT_NONE, 0x430f400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQINCB  <Xdn>, <pattern>
	{AUQINCBD, aUQINCB, FEAT_NONE, 0x431f400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQINCD  <Wdn>
	{AUQINCDS, aUQINCD, FEAT_NONE, 0x4e1f7e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQINCD  <Wdn>, <pattern>, #<imm>
	{AUQINCDS, aUQINCD, FEAT_NONE, 0x4e0f400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQINCD  <Wdn>, <pattern>
	{AUQINCDS, aUQINCD, FEAT_NONE, 0x4e1f400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQINCD  <Xdn>
	{AUQINCDD, aUQINCD, FEAT_NONE, 0x4f1f7e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQINCD  <Xdn>, <pattern>, #<imm>
	{AUQINCDD, aUQINCD, FEAT_NONE, 0x4f0f400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQINCD  <Xdn>, <pattern>
	{AUQINCDD, aUQINCD, FEAT_NONE, 0x4f1f400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQINCD  <Zdn>.D
	{AZUQINCD, aUQINCD, FEAT_NONE, 0x4e1c7e0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// UQINCD  <Zdn>.D, <pattern>, #<imm>
	{AZUQINCD, aUQINCD, FEAT_NONE, 0x4e0c400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// UQINCD  <Zdn>.D, <pattern>
	{AZUQINCD, aUQINCD, FEAT_NONE, 0x4e1c400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_D,
		}},
	}},

	// UQINCH  <Wdn>
	{AUQINCHS, aUQINCH, FEAT_NONE, 0x461f7e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQINCH  <Wdn>, <pattern>, #<imm>
	{AUQINCHS, aUQINCH, FEAT_NONE, 0x460f400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQINCH  <Wdn>, <pattern>
	{AUQINCHS, aUQINCH, FEAT_NONE, 0x461f400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQINCH  <Xdn>
	{AUQINCHD, aUQINCH, FEAT_NONE, 0x471f7e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQINCH  <Xdn>, <pattern>, #<imm>
	{AUQINCHD, aUQINCH, FEAT_NONE, 0x470f400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQINCH  <Xdn>, <pattern>
	{AUQINCHD, aUQINCH, FEAT_NONE, 0x471f400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQINCH  <Zdn>.H
	{AZUQINCH, aUQINCH, FEAT_NONE, 0x461c7e0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// UQINCH  <Zdn>.H, <pattern>, #<imm>
	{AZUQINCH, aUQINCH, FEAT_NONE, 0x460c400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// UQINCH  <Zdn>.H, <pattern>
	{AZUQINCH, aUQINCH, FEAT_NONE, 0x461c400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_H,
		}},
	}},

	// UQINCP  <Wdn>, <Pm>.<T>
	{APUQINCP, aUQINCP, FEAT_NONE, 0x25298800, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQINCP  <Xdn>, <Pm>.<T>
	{APUQINCP, aUQINCP, FEAT_NONE, 0x25298c00, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQINCP  <Zdn>.<T>, <Pm>.<T>
	{AZUQINCP, aUQINCP, FEAT_NONE, 0x25298000, 0xff3ffe00, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_8_4,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__D_H_S,
		}},
	}},

	// UQINCW  <Wdn>
	{AUQINCWS, aUQINCW, FEAT_NONE, 0x4a1f7e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQINCW  <Wdn>, <pattern>, #<imm>
	{AUQINCWS, aUQINCW, FEAT_NONE, 0x4a0f400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQINCW  <Wdn>, <pattern>
	{AUQINCWS, aUQINCW, FEAT_NONE, 0x4a1f400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_wdn__Rdn,
		}},
	}},

	// UQINCW  <Xdn>
	{AUQINCWD, aUQINCW, FEAT_NONE, 0x4b1f7e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQINCW  <Xdn>, <pattern>, #<imm>
	{AUQINCWD, aUQINCW, FEAT_NONE, 0x4b0f400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQINCW  <Xdn>, <pattern>
	{AUQINCWD, aUQINCW, FEAT_NONE, 0x4b1f400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_REG, []elmType{
			sa_xdn__Rdn,
		}},
	}},

	// UQINCW  <Zdn>.S
	{AZUQINCW, aUQINCW, FEAT_NONE, 0x4a1c7e0, 0xffffffe0, false, []arg{
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// UQINCW  <Zdn>.S, <pattern>, #<imm>
	{AZUQINCW, aUQINCW, FEAT_NONE, 0x4a0c400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm4,
		}},
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// UQINCW  <Zdn>.S, <pattern>
	{AZUQINCW, aUQINCW, FEAT_NONE, 0x4a1c400, 0xfffffc00, false, []arg{
		{AC_SPOP, []elmType{
			sa_pattern__pattern__uimm5_ALL_MUL3_MUL4_POW2_VL1_VL2_VL3_VL4_VL5_VL6_VL7_VL8_VL16_VL32_VL64_VL128_VL256,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_const_ARNG_S,
		}},
	}},

	// UQRSHL  <V><d>, <V><n>, <V><m>
	{AVUQRSHLS, aUQRSHL, FEAT_NONE, 0x7ea05c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQRSHL  <V><d>, <V><n>, <V><m>
	{AVUQRSHLB, aUQRSHL, FEAT_NONE, 0x7e205c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQRSHL  <V><d>, <V><n>, <V><m>
	{AVUQRSHLD, aUQRSHL, FEAT_NONE, 0x7ee05c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQRSHL  <V><d>, <V><n>, <V><m>
	{AVUQRSHLH, aUQRSHL, FEAT_NONE, 0x7e605c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQRSHL  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUQRSHL, aUQRSHL, FEAT_NONE, 0x2e205c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UQRSHL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUQRSHL, aUQRSHL, FEAT_NONE, 0x440b8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UQRSHLR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUQRSHLR, aUQRSHLR, FEAT_NONE, 0x440f8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UQRSHR  <Zd>.<T>, { <Zn1>.<Tb>-<Zn4>.<Tb> }, #<const>
	{AZUQRSHR, aUQRSHR, FEAT_SME2, 0xc120d820, 0xff20fc60, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tsize_imm5,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_tb__tsize__D_S,
			sa_zn4__Zn_9_3,
			sa_tb__tsize__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tsize__B_H,
		}},
	}},

	// UQRSHR  <Zd>.H, { <Zn1>.S-<Zn2>.S }, #<const>
	{AZUQRSHR, aUQRSHR, FEAT_SME2, 0xc1e0d420, 0xfff0fc20, false, []arg{
		{AC_IMM, []elmType{
			sa_const__imm4,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// UQRSHRN  <Vb><d>, <Va><n>, #<shift>
	{AVUQRSHRNS, aUQRSHRN, FEAT_NONE, 0x7f209c00, 0xffe0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// UQRSHRN  <Vb><d>, <Va><n>, #<shift>
	{AVUQRSHRNB, aUQRSHRN, FEAT_NONE, 0x7f089c00, 0xfff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// UQRSHRN  <Vb><d>, <Va><n>, #<shift>
	{AVUQRSHRNH, aUQRSHRN, FEAT_NONE, 0x7f109c00, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// UQRSHRN  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVUQRSHRN, aUQRSHRN, FEAT_NONE, 0x2f009c00, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// UQRSHRN2  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVUQRSHRN2, aUQRSHRN2, FEAT_NONE, 0x6f009c00, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// UQRSHRN  <Zd>.H, { <Zn1>.S-<Zn2>.S }, #<const>
	{AZUQRSHRN, aUQRSHRN, FEAT_SVE2p1, 0x45b03800, 0xfff0fc20, false, []arg{
		{AC_IMM, []elmType{
			sa_const__imm4,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_H,
		}},
	}},

	// UQRSHRN  <Zd>.<T>, { <Zn1>.<Tb>-<Zn4>.<Tb> }, #<const>
	{AZUQRSHRN, aUQRSHRN, FEAT_SME2, 0xc120dc20, 0xff20fc60, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tsize_imm5,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_tb__tsize__D_S,
			sa_zn4__Zn_9_3,
			sa_tb__tsize__D_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tsize__B_H,
		}},
	}},

	// UQRSHRNB  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZUQRSHRNB, aUQRSHRNB, FEAT_NONE, 0x45203800, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// UQRSHRNT  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZUQRSHRNT, aUQRSHRNT, FEAT_NONE, 0x45203c00, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// UQSHL  <V><d>, <V><n>, <V><m>
	{AVUQSHLS, aUQSHL, FEAT_NONE, 0x7ea04c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSHL  <V><d>, <V><n>, <V><m>
	{AVUQSHLB, aUQSHL, FEAT_NONE, 0x7e204c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSHL  <V><d>, <V><n>, <V><m>
	{AVUQSHLD, aUQSHL, FEAT_NONE, 0x7ee04c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSHL  <V><d>, <V><n>, <V><m>
	{AVUQSHLH, aUQSHL, FEAT_NONE, 0x7e604c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSHL  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUQSHL, aUQSHL, FEAT_NONE, 0x2e204c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UQSHL  <V><d>, <V><n>, #<shift>
	{AVUQSHLS, aUQSHL, FEAT_NONE, 0x7f207400, 0xffe0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSHL  <V><d>, <V><n>, #<shift>
	{AVUQSHLB, aUQSHL, FEAT_NONE, 0x7f087400, 0xfff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSHL  <V><d>, <V><n>, #<shift>
	{AVUQSHLD, aUQSHL, FEAT_NONE, 0x7f407400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSHL  <V><d>, <V><n>, #<shift>
	{AVUQSHLH, aUQSHL, FEAT_NONE, 0x7f107400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSHL  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVUQSHL, aUQSHL, FEAT_NONE, 0x2f007400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__UInt_immh_immb_8_UInt_immh_immb_16_UInt_immh_immb_32_UInt_immh_immb_64_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// UQSHL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, #<const>
	{AZUQSHL, aUQSHL, FEAT_NONE, 0x4078000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_9_2_imm3_7_3,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
	}},

	// UQSHL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUQSHL, aUQSHL, FEAT_NONE, 0x44098000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UQSHLR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUQSHLR, aUQSHLR, FEAT_NONE, 0x440d8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UQSHRN  <Vb><d>, <Va><n>, #<shift>
	{AVUQSHRNS, aUQSHRN, FEAT_NONE, 0x7f209400, 0xffe0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSHRN  <Vb><d>, <Va><n>, #<shift>
	{AVUQSHRNB, aUQSHRN, FEAT_NONE, 0x7f089400, 0xfff8fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSHRN  <Vb><d>, <Va><n>, #<shift>
	{AVUQSHRNH, aUQSHRN, FEAT_NONE, 0x7f109400, 0xfff0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_va__immh__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__immh__B_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSHRN  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVUQSHRN, aUQSHRN, FEAT_NONE, 0x2f009400, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// UQSHRN2  <Vd>.<Tb>, <Vn>.<Ta>, #<shift>
	{AVUQSHRN2, aUQSHRN2, FEAT_NONE, 0x6f009400, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// UQSHRNB  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZUQSHRNB, aUQSHRNB, FEAT_NONE, 0x45203000, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// UQSHRNT  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZUQSHRNT, aUQSHRNT, FEAT_NONE, 0x45203400, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// UQSUB  <V><d>, <V><n>, <V><m>
	{AVUQSUBS, aUQSUB, FEAT_NONE, 0x7ea02c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSUB  <V><d>, <V><n>, <V><m>
	{AVUQSUBB, aUQSUB, FEAT_NONE, 0x7e202c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSUB  <V><d>, <V><n>, <V><m>
	{AVUQSUBD, aUQSUB, FEAT_NONE, 0x7ee02c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSUB  <V><d>, <V><n>, <V><m>
	{AVUQSUBH, aUQSUB, FEAT_NONE, 0x7e602c00, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// UQSUB  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUQSUB, aUQSUB, FEAT_NONE, 0x2e202c00, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UQSUB  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZUQSUB, aUQSUB, FEAT_NONE, 0x4201c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UQSUB  <Zdn>.<T>, <Zdn>.<T>, #<imm>{, <shift>}
	{AZUQSUB, aUQSUB, FEAT_NONE, 0x2527c000, 0xff3fc000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm__imm8,
			sa_shift__sh__LSL_0_LSL_8,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UQSUB  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUQSUB, aUQSUB, FEAT_NONE, 0x441b8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UQSUBR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUQSUBR, aUQSUBR, FEAT_NONE, 0x441f8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UQXTN  <Vb><d>, <Va><n>
	{AVUQXTNS, aUQXTN, FEAT_NONE, 0x7ea14800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_va__size__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// UQXTN  <Vb><d>, <Va><n>
	{AVUQXTNB, aUQXTN, FEAT_NONE, 0x7e214800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_va__size__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// UQXTN  <Vb><d>, <Va><n>
	{AVUQXTNH, aUQXTN, FEAT_NONE, 0x7e614800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_va__size__D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_vb__size__B_H_S,
			sa_d__Rd,
		}},
	}},

	// UQXTN  <Vd>.<Tb>, <Vn>.<Ta>
	{AVUQXTN, aUQXTN, FEAT_NONE, 0x2e214800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UQXTN2  <Vd>.<Tb>, <Vn>.<Ta>
	{AVUQXTN2, aUQXTN2, FEAT_NONE, 0x6e214800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UQXTNB  <Zd>.<T>, <Zn>.<Tb>
	{AZUQXTNB, aUQXTNB, FEAT_NONE, 0x45204800, 0xffa7fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// UQXTNT  <Zd>.<T>, <Zn>.<Tb>
	{AZUQXTNT, aUQXTNT, FEAT_NONE, 0x45204c00, 0xffa7fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__B_H_S,
		}},
	}},

	// URECPE  <Vd>.<T>, <Vn>.<T>
	{AVURECPE, aURECPE, FEAT_NONE, 0xea1c800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2S_4S,
		}},
	}},

	// URECPE  <Zd>.S, <Pg>/M, <Zn>.S
	{AZURECPE, aURECPE, FEAT_NONE, 0x4400a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// URHADD  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVURHADD, aURHADD, FEAT_NONE, 0x2e201400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// URHADD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZURHADD, aURHADD, FEAT_NONE, 0x44158000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// URSHL  <V><d>, <V><n>, <V><m>
	{AVURSHLD, aURSHL, FEAT_NONE, 0x7ee05400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// URSHL  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVURSHL, aURSHL, FEAT_NONE, 0x2e205400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// URSHL  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZURSHL, aURSHL, FEAT_NONE, 0x44038000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// URSHL  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, <Zm>.<T>
	{AZURSHL, aURSHL, FEAT_SME2, 0xc120a221, 0xff30ffe1, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// URSHL  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, <Zm>.<T>
	{AZURSHL, aURSHL, FEAT_SME2, 0xc120aa21, 0xff30ffe3, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// URSHL  { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zdn1>.<T>-<Zdn2>.<T> }, { <Zm1>.<T>-<Zm2>.<T> }
	{AZURSHL, aURSHL, FEAT_SME2, 0xc120b221, 0xff21ffe1, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_t__size__B_D_H_S,
			sa_zm2__Zm_20_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zdn1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn2__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// URSHL  { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zdn1>.<T>-<Zdn4>.<T> }, { <Zm1>.<T>-<Zm4>.<T> }
	{AZURSHL, aURSHL, FEAT_SME2, 0xc120ba21, 0xff23ffe3, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_t__size__B_D_H_S,
			sa_zm4__Zm_20_3,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zdn1_1__Zdn,
			sa_t__size__B_D_H_S,
			sa_zdn4__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// URSHLR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZURSHLR, aURSHLR, FEAT_NONE, 0x44078000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// URSHR  <V><d>, <V><n>, #<shift>
	{AVURSHRD, aURSHR, FEAT_NONE, 0x7f402400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_d__Rd,
		}},
	}},

	// URSHR  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVURSHR, aURSHR, FEAT_NONE, 0x2f002400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__16_UInt_immh_immb_32_UInt_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// URSHR  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, #<const>
	{AZURSHR, aURSHR, FEAT_NONE, 0x40d8000, 0xff3fe000, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_9_2_imm3_7_3,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_9_2__B_D_H_S,
		}},
	}},

	// URSQRTE  <Vd>.<T>, <Vn>.<T>
	{AVURSQRTE, aURSQRTE, FEAT_NONE, 0x2ea1c800, 0xbfbffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__sz_Q__2S_4S,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__sz_Q__2S_4S,
		}},
	}},

	// URSQRTE  <Zd>.S, <Pg>/M, <Zn>.S
	{AZURSQRTE, aURSQRTE, FEAT_NONE, 0x4401a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_S,
		}},
	}},

	// URSRA  <V><d>, <V><n>, #<shift>
	{AVURSRAD, aURSRA, FEAT_NONE, 0x7f403400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_d__Rd,
		}},
	}},

	// URSRA  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVURSRA, aURSRA, FEAT_NONE, 0x2f003400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__16_UInt_immh_immb_32_UInt_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// URSRA  <Zda>.<T>, <Zn>.<T>, #<const>
	{AZURSRA, aURSRA, FEAT_NONE, 0x4500ec00, 0xff20fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
	}},

	// USDOT  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUSDOT, aUSDOT, FEAT_I8MM, 0xe809c00, 0xbfe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// USDOT  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.4B[<index>]
	{AVUSDOT, aUSDOT, FEAT_I8MM, 0xf80f000, 0xbfc0f400, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_vm__M_Rm,
			sa_const_ARNGIDX_4B,
			sa_index__H_L,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__Q__8B_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__Q__2S_4S,
		}},
	}},

	// USDOT  <Zda>.S, <Zn>.B, <Zm>.B
	{AZUSDOT, aUSDOT, FEAT_I8MM, 0x44807800, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// USDOT  <Zda>.S, <Zn>.B, <Zm>.B[<imm>]
	{AZUSDOT, aUSDOT, FEAT_I8MM, 0x44a01800, 0xffe0fc00, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_18_3,
			sa_const_ARNGIDX_B,
			sa_imm__i2,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// USDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B
	{AZUSDOT, aUSDOT, FEAT_SME2, 0xc1201408, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// USDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B
	{AZUSDOT, aUSDOT, FEAT_SME2, 0xc1301408, 0xfff09c18, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// USDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B[<index>]
	{AZUSDOT, aUSDOT, FEAT_SME2, 0xc1501028, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// USDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZUSDOT, aUSDOT, FEAT_SME2, 0xc1509028, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// USDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.B-<Zn2>.B }, { <Zm1>.B-<Zm2>.B }
	{AZUSDOT, aUSDOT, FEAT_SME2, 0xc1a01408, 0xffe19c38, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_B,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// USDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.B-<Zn4>.B }, { <Zm1>.B-<Zm4>.B }
	{AZUSDOT, aUSDOT, FEAT_SME2, 0xc1a11408, 0xffe39c78, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_B,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// USHL  <V><d>, <V><n>, <V><m>
	{AVUSHLD, aUSHL, FEAT_NONE, 0x7ee04400, 0xffe0fc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_m__Rm,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__D,
			sa_d__Rd,
		}},
	}},

	// USHL  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUSHL, aUSHL, FEAT_NONE, 0x2e204400, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// USHLL  <Vd>.<Ta>, <Vn>.<Tb>, #<shift>
	{AVUSHLL, aUSHLL, FEAT_NONE, 0x2f00a400, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
	}},

	// USHLL2  <Vd>.<Ta>, <Vn>.<Tb>, #<shift>
	{AVUSHLL2, aUSHLL2, FEAT_NONE, 0x6f00a400, 0xff80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
	}},

	// USHLLB  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZUSHLLB, aUSHLLB, FEAT_NONE, 0x4500a800, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__D_H_S,
		}},
	}},

	// USHLLT  <Zd>.<T>, <Zn>.<Tb>, #<const>
	{AZUSHLLT, aUSHLLT, FEAT_NONE, 0x4500ac00, 0xffa0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_22_1_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__tszh_tszl__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__tszh_tszl__D_H_S,
		}},
	}},

	// USHR  <V><d>, <V><n>, #<shift>
	{AVUSHRD, aUSHR, FEAT_NONE, 0x7f400400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_d__Rd,
		}},
	}},

	// USHR  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVUSHR, aUSHR, FEAT_NONE, 0x2f000400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__16_UInt_immh_immb_32_UInt_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// USMLALL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.B, <Zm>.B[<index>]
	{AZUSMLALL, aUSMLALL, FEAT_SME2, 0xc1000004, 0xfff0001c, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index__i4h_15_1_i4l_12_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// USMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B[<index>]
	{AZUSMLALL, aUSMLALL, FEAT_SME2, 0xc1100020, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index__i4h_11_2_i4l_2_2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// USMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZUSMLALL, aUSMLALL, FEAT_SME2, 0xc1108020, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index__i4h_11_2_i4l_2_2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// USMLALL  ZA.S[<Wv>, <offsf>:<offsl>], <Zn>.B, <Zm>.B
	{AZUSMLALL, aUSMLALL, FEAT_SME2, 0xc1200404, 0xfff09c1c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_S,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// USMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.B-<Zn2>.B }, <Zm>.B
	{AZUSMLALL, aUSMLALL, FEAT_SME2, 0xc1200004, 0xfff09c1e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn2__Zn_9_5,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// USMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B
	{AZUSMLALL, aUSMLALL, FEAT_SME2, 0xc1300004, 0xfff09c1e, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNG_B,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_5,
			sa_zn4__Zn_9_5,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// USMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx2}], { <Zn1>.B-<Zn2>.B }, { <Zm1>.B-<Zm2>.B }
	{AZUSMLALL, aUSMLALL, FEAT_SME2, 0xc1a00004, 0xffe19c3e, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zm1__Zm_20_4,
			sa_zm2__Zm_20_4,
			sa_const_REGLIST2_B,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_B,
		}},
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_S,
			sa_wv__Rv,
			sa_offsf__o1,
			sa_offsl__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// USMLALL  ZA.S[<Wv>, <offsf>:<offsl>{, VGx4}], { <Zn1>.B-<Zn4>.B }, { <Zm1>.B-<Zm4>.B }
	{AZUSMLALL, aUSMLALL, FEAT_SME2, 0xc1a10004, 0xffe39c7e, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zm1_1__Zm_20_3,
			sa_zm4__Zm_20_3,
			sa_const_REGLIST4_B,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1_1__Zn,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_S,
			sa_wv__Rv,
			sa_offsf__o1,
			sa_offsl__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// USMMLA  <Vd>.4S, <Vn>.16B, <Vm>.16B
	{AVUSMMLA, aUSMMLA, FEAT_I8MM, 0x4e80ac00, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_4S,
		}},
	}},

	// USMMLA  <Zda>.S, <Zn>.B, <Zm>.B
	{AZUSMMLA, aUSMMLA, FEAT_I8MM, 0x45809800, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_const_ARNG_S,
		}},
	}},

	// USMOPA  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.B, <Zm>.B
	{AZUSMOPA, aUSMOPA, FEAT_SME, 0xa1800000, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// USMOPA  <ZAda>.D, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZUSMOPA, aUSMOPA, FEAT_SME_I16I64, 0xa1c00000, 0xffe00018, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_1__ZAda,
			sa_const_ARNG_D,
		}},
	}},

	// USMOPS  <ZAda>.S, <Pn>/M, <Pm>/M, <Zn>.B, <Zm>.B
	{AZUSMOPS, aUSMOPS, FEAT_SME, 0xa1800010, 0xffe0001c, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_B,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_B,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada__ZAda,
			sa_const_ARNG_S,
		}},
	}},

	// USMOPS  <ZAda>.D, <Pn>/M, <Pm>/M, <Zn>.H, <Zm>.H
	{AZUSMOPS, aUSMOPS, FEAT_SME_I16I64, 0xa1c00010, 0xffe00018, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_H,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_H,
		}},
		{AC_PREGM, []elmType{
			sa_pm__Pm_15_3,
			sa_const_PREGM_M,
		}},
		{AC_PREGM, []elmType{
			sa_pn__Pn_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zada_1__ZAda,
			sa_const_ARNG_D,
		}},
	}},

	// USQADD  <V><d>, <V><n>
	{AVUSQADDS, aUSQADD, FEAT_NONE, 0x7ea03800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// USQADD  <V><d>, <V><n>
	{AVUSQADDB, aUSQADD, FEAT_NONE, 0x7e203800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// USQADD  <V><d>, <V><n>
	{AVUSQADDD, aUSQADD, FEAT_NONE, 0x7ee03800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// USQADD  <V><d>, <V><n>
	{AVUSQADDH, aUSQADD, FEAT_NONE, 0x7e603800, 0xfffffc00, false, []arg{
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__size__B_D_H_S,
			sa_d__Rd,
		}},
	}},

	// USQADD  <Vd>.<T>, <Vn>.<T>
	{AVUSQADD, aUSQADD, FEAT_NONE, 0x2e203800, 0xbf3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// USQADD  <Zdn>.<T>, <Pg>/M, <Zdn>.<T>, <Zm>.<T>
	{AZUSQADD, aUSQADD, FEAT_NONE, 0x441d8000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__size__B_D_H_S,
		}},
	}},

	// USRA  <V><d>, <V><n>, #<shift>
	{AVUSRAD, aUSRA, FEAT_NONE, 0x7f401400, 0xffc0fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift_1__immh_immb__128_UInt_immh_immb,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_n__Rn,
		}},
		{AC_FREG, []elmType{
			sa_v__immh__D,
			sa_d__Rd,
		}},
	}},

	// USRA  <Vd>.<T>, <Vn>.<T>, #<shift>
	{AVUSRA, aUSRA, FEAT_NONE, 0x2f001400, 0xbf80fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_shift__immh_immb__16_UInt_immh_immb_32_UInt_immh_immb_64_UInt_immh_immb_128_UInt_immh_immb_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__immh_Q__2D_2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
	}},

	// USRA  <Zda>.<T>, <Zn>.<T>, #<const>
	{AZUSRA, aUSRA, FEAT_NONE, 0x4500e400, 0xff20fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zda__Zda,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
	}},

	// USUBL  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUSUBL, aUSUBL, FEAT_NONE, 0x2e202000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// USUBL2  <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>
	{AVUSUBL2, aUSUBL2, FEAT_NONE, 0x6e202000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// USUBLB  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUSUBLB, aUSUBLB, FEAT_NONE, 0x45001800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// USUBLT  <Zd>.<T>, <Zn>.<Tb>, <Zm>.<Tb>
	{AZUSUBLT, aUSUBLT, FEAT_NONE, 0x45001c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// USUBW  <Vd>.<Ta>, <Vn>.<Ta>, <Vm>.<Tb>
	{AVUSUBW, aUSUBW, FEAT_NONE, 0x2e203000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// USUBW2  <Vd>.<Ta>, <Vn>.<Ta>, <Vm>.<Tb>
	{AVUSUBW2, aUSUBW2, FEAT_NONE, 0x6e203000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__size__2D_4S_8H,
		}},
	}},

	// USUBWB  <Zd>.<T>, <Zn>.<T>, <Zm>.<Tb>
	{AZUSUBWB, aUSUBWB, FEAT_NONE, 0x45005800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// USUBWT  <Zd>.<T>, <Zn>.<T>, <Zm>.<Tb>
	{AZUSUBWT, aUSUBWT, FEAT_NONE, 0x45005c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// USVDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZUSVDOT, aUSVDOT, FEAT_SME2, 0xc1508028, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// UUNPK  { <Zd1>.<T>-<Zd2>.<T> }, <Zn>.<Tb>
	{AZUUNPK, aUUNPK, FEAT_SME2, 0xc125e001, 0xff3ffc01, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_t__size__D_H_S,
			sa_zd2__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// UUNPK  { <Zd1>.<T>-<Zd4>.<T> }, { <Zn1>.<Tb>-<Zn2>.<Tb> }
	{AZUUNPK, aUUNPK, FEAT_SME2, 0xc135e001, 0xff3ffc23, false, []arg{
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_tb__size__B_H_S,
			sa_zn2__Zn_9_4,
			sa_tb__size__B_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1_1__Zd,
			sa_t__size__D_H_S,
			sa_zd4__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// UUNPKHI  <Zd>.<T>, <Zn>.<Tb>
	{AZUUNPKHI, aUUNPKHI, FEAT_NONE, 0x5333800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// UUNPKLO  <Zd>.<T>, <Zn>.<Tb>
	{AZUUNPKLO, aUUNPKLO, FEAT_NONE, 0x5323800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_tb__size__B_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// UVDOT  ZA.S[<Wv>, <offs>{, VGx2}], { <Zn1>.H-<Zn2>.H }, <Zm>.H[<index>]
	{AZUVDOT, aUVDOT, FEAT_SME2, 0xc1500030, 0xfff09038, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i2,
		}},
		{AC_REGLIST2, []elmType{
			sa_zn1__Zn_9_4,
			sa_zn2__Zn_9_4,
			sa_const_REGLIST2_H,
		}},
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// UVDOT  ZA.S[<Wv>, <offs>{, VGx4}], { <Zn1>.B-<Zn4>.B }, <Zm>.B[<index>]
	{AZUVDOT, aUVDOT, FEAT_SME2, 0xc1508030, 0xfff09078, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_B,
			sa_index_1__i2,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_B,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_S,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// UVDOT  ZA.D[<Wv>, <offs>{, VGx4}], { <Zn1>.H-<Zn4>.H }, <Zm>.H[<index>]
	{AZUVDOT, aUVDOT, FEAT_SME_I16I64, 0xc1d08818, 0xfff09878, false, []arg{
		{AC_ARNGIDX, []elmType{
			sa_zm__Zm_19_4,
			sa_const_ARNGIDX_H,
			sa_index__i1,
		}},
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_H,
		}},
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// UXTB  <Wd>, <Wn>
	{AUXTBW, aUXTB, FEAT_NONE, 0x53001c00, 0xfffffc00, true, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// UXTB  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZUXTB, aUXTB, FEAT_NONE, 0x411a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__D_H_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__D_H_S,
		}},
	}},

	// UXTH  <Zd>.<T>, <Pg>/M, <Zn>.<T>
	{AZUXTH, aUXTH, FEAT_NONE, 0x413a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t_1__size_0__D_S,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t_1__size_0__D_S,
		}},
	}},

	// UXTW  <Zd>.D, <Pg>/M, <Zn>.D
	{AZUXTW, aUXTW, FEAT_NONE, 0x415a000, 0xff3fe000, false, []arg{
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_D,
		}},
		{AC_PREGM, []elmType{
			sa_pg__Pg_12_3,
			sa_const_PREGM_M,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_D,
		}},
	}},

	// UXTH  <Wd>, <Wn>
	{AUXTHW, aUXTH, FEAT_NONE, 0x53003c00, 0xfffffc00, true, []arg{
		{AC_REG, []elmType{
			sa_wn__Rn,
		}},
		{AC_REG, []elmType{
			sa_wd__Rd,
		}},
	}},

	// UXTL  <Vd>.<Ta>, <Vn>.<Tb>
	{AVUXTL, aUXTL, FEAT_NONE, 0x2f00a400, 0xff87fc00, true, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
	}},

	// UXTL2  <Vd>.<Ta>, <Vn>.<Tb>
	{AVUXTL2, aUXTL2, FEAT_NONE, 0x6f00a400, 0xff87fc00, true, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_tb__immh_Q__2S_4H_4S_8B_8H_16B_SEE_asimdimm,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_ta__immh__2D_4S_8H_SEE_asimdimm,
		}},
	}},

	// UZP  { <Zd1>.<T>-<Zd4>.<T> }, { <Zn1>.<T>-<Zn4>.<T> }
	{AZUZP, aUZP, FEAT_SME2, 0xc136e002, 0xff3ffc63, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_t__size__B_D_H_S,
			sa_zn4__Zn_9_3,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_t__size__B_D_H_S,
			sa_zd4__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UZP  { <Zd1>.Q-<Zd4>.Q }, { <Zn1>.Q-<Zn4>.Q }
	{AZUZP, aUZP, FEAT_SME2, 0xc137e002, 0xfffffc63, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_Q,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_Q,
		}},
	}},

	// UZP  { <Zd1>.<T>-<Zd2>.<T> }, <Zn>.<T>, <Zm>.<T>
	{AZUZP, aUZP, FEAT_SME2, 0xc120d001, 0xff20fc01, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_t__size__B_D_H_S,
			sa_zd2__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UZP  { <Zd1>.Q-<Zd2>.Q }, <Zn>.Q, <Zm>.Q
	{AZUZP, aUZP, FEAT_SME2, 0xc120d401, 0xffe0fc01, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_Q,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_Q,
		}},
	}},

	// UZP1  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUZP1, aUZP1, FEAT_NONE, 0xe001800, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UZP1  <Pd>.<T>, <Pn>.<T>, <Pm>.<T>
	{APUZP1, aUZP1, FEAT_NONE, 0x5204800, 0xff30fe10, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UZP2  <Pd>.<T>, <Pn>.<T>, <Pm>.<T>
	{APUZP2, aUZP2, FEAT_NONE, 0x5204c00, 0xff30fe10, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UZP1  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZUZP1, aUZP1, FEAT_NONE, 0x5206800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UZP1  <Zd>.Q, <Zn>.Q, <Zm>.Q
	{AZUZP1, aUZP1, FEAT_F64MM, 0x5a00800, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_Q,
		}},
	}},

	// UZP2  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZUZP2, aUZP2, FEAT_NONE, 0x5206c00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UZP2  <Zd>.Q, <Zn>.Q, <Zm>.Q
	{AZUZP2, aUZP2, FEAT_F64MM, 0x5a00c00, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_Q,
		}},
	}},

	// UZP2  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVUZP2, aUZP2, FEAT_NONE, 0xe005800, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// UZPQ1  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZUZPQ1, aUZPQ1, FEAT_SVE2p1, 0x4400e800, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// UZPQ2  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZUZPQ2, aUZPQ2, FEAT_SVE2p1, 0x4400ec00, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WFE
	{AWFE, aWFE, FEAT_NONE, 0xd503205f, 0xffffffff, false, nil},

	// WFET  <Xt>
	{AWFET, aWFET, FEAT_WFxT, 0xd5031000, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rd,
		}},
	}},

	// WFI
	{AWFI, aWFI, FEAT_NONE, 0xd503207f, 0xffffffff, false, nil},

	// WFIT  <Xt>
	{AWFIT, aWFIT, FEAT_WFxT, 0xd5031020, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xt__Rd,
		}},
	}},

	// WHILEGE  <Pd>.<T>, <R><n>, <R><m>
	{AWHILEGE, aWHILEGE, FEAT_NONE, 0x25201000, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEGE  <Pd>.<T>, <R><n>, <R><m>
	{AWHILEGEW, aWHILEGE, FEAT_NONE, 0x25200000, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEGE  { <Pd1>.<T>, <Pd2>.<T> }, <Xn>, <Xm>
	{AWHILEGE, aWHILEGE, FEAT_SVE2p1, 0x25205010, 0xff20fc11, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REGLIST2, []elmType{
			sa_pd1__Pd,
			sa_t__size__B_D_H_S,
			sa_pd2__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEGE  <PNd>.<T>, <Xn>, <Xm>, <vl>
	{AWHILEGE, aWHILEGE, FEAT_SVE2p1, 0x25204010, 0xff20dc18, false, []arg{
		{AC_SPOP, []elmType{
			sa_vl__vl__VLx2_VLx4,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pnd__PNd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEGT  <Pd>.<T>, <R><n>, <R><m>
	{AWHILEGT, aWHILEGT, FEAT_NONE, 0x25201010, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEGT  <Pd>.<T>, <R><n>, <R><m>
	{AWHILEGTW, aWHILEGT, FEAT_NONE, 0x25200010, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEGT  { <Pd1>.<T>, <Pd2>.<T> }, <Xn>, <Xm>
	{AWHILEGT, aWHILEGT, FEAT_SVE2p1, 0x25205011, 0xff20fc11, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REGLIST2, []elmType{
			sa_pd1__Pd,
			sa_t__size__B_D_H_S,
			sa_pd2__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEGT  <PNd>.<T>, <Xn>, <Xm>, <vl>
	{AWHILEGT, aWHILEGT, FEAT_SVE2p1, 0x25204018, 0xff20dc18, false, []arg{
		{AC_SPOP, []elmType{
			sa_vl__vl__VLx2_VLx4,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pnd__PNd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEHI  <Pd>.<T>, <R><n>, <R><m>
	{AWHILEHI, aWHILEHI, FEAT_NONE, 0x25201810, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEHI  <Pd>.<T>, <R><n>, <R><m>
	{AWHILEHIW, aWHILEHI, FEAT_NONE, 0x25200810, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEHI  { <Pd1>.<T>, <Pd2>.<T> }, <Xn>, <Xm>
	{AWHILEHI, aWHILEHI, FEAT_SVE2p1, 0x25205811, 0xff20fc11, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REGLIST2, []elmType{
			sa_pd1__Pd,
			sa_t__size__B_D_H_S,
			sa_pd2__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEHI  <PNd>.<T>, <Xn>, <Xm>, <vl>
	{AWHILEHI, aWHILEHI, FEAT_SVE2p1, 0x25204818, 0xff20dc18, false, []arg{
		{AC_SPOP, []elmType{
			sa_vl__vl__VLx2_VLx4,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pnd__PNd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEHS  <Pd>.<T>, <R><n>, <R><m>
	{AWHILEHS, aWHILEHS, FEAT_NONE, 0x25201800, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEHS  <Pd>.<T>, <R><n>, <R><m>
	{AWHILEHSW, aWHILEHS, FEAT_NONE, 0x25200800, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEHS  { <Pd1>.<T>, <Pd2>.<T> }, <Xn>, <Xm>
	{AWHILEHS, aWHILEHS, FEAT_SVE2p1, 0x25205810, 0xff20fc11, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REGLIST2, []elmType{
			sa_pd1__Pd,
			sa_t__size__B_D_H_S,
			sa_pd2__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEHS  <PNd>.<T>, <Xn>, <Xm>, <vl>
	{AWHILEHS, aWHILEHS, FEAT_SVE2p1, 0x25204810, 0xff20dc18, false, []arg{
		{AC_SPOP, []elmType{
			sa_vl__vl__VLx2_VLx4,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pnd__PNd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELE  <Pd>.<T>, <R><n>, <R><m>
	{AWHILELE, aWHILELE, FEAT_NONE, 0x25201410, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELE  <Pd>.<T>, <R><n>, <R><m>
	{AWHILELEW, aWHILELE, FEAT_NONE, 0x25200410, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELE  { <Pd1>.<T>, <Pd2>.<T> }, <Xn>, <Xm>
	{AWHILELE, aWHILELE, FEAT_SVE2p1, 0x25205411, 0xff20fc11, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REGLIST2, []elmType{
			sa_pd1__Pd,
			sa_t__size__B_D_H_S,
			sa_pd2__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELE  <PNd>.<T>, <Xn>, <Xm>, <vl>
	{AWHILELE, aWHILELE, FEAT_SVE2p1, 0x25204418, 0xff20dc18, false, []arg{
		{AC_SPOP, []elmType{
			sa_vl__vl__VLx2_VLx4,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pnd__PNd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELO  <Pd>.<T>, <R><n>, <R><m>
	{AWHILELO, aWHILELO, FEAT_NONE, 0x25201c00, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELO  <Pd>.<T>, <R><n>, <R><m>
	{AWHILELOW, aWHILELO, FEAT_NONE, 0x25200c00, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELO  { <Pd1>.<T>, <Pd2>.<T> }, <Xn>, <Xm>
	{AWHILELO, aWHILELO, FEAT_SVE2p1, 0x25205c10, 0xff20fc11, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REGLIST2, []elmType{
			sa_pd1__Pd,
			sa_t__size__B_D_H_S,
			sa_pd2__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELO  <PNd>.<T>, <Xn>, <Xm>, <vl>
	{AWHILELO, aWHILELO, FEAT_SVE2p1, 0x25204c10, 0xff20dc18, false, []arg{
		{AC_SPOP, []elmType{
			sa_vl__vl__VLx2_VLx4,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pnd__PNd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELS  <Pd>.<T>, <R><n>, <R><m>
	{AWHILELS, aWHILELS, FEAT_NONE, 0x25201c10, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELS  <Pd>.<T>, <R><n>, <R><m>
	{AWHILELSW, aWHILELS, FEAT_NONE, 0x25200c10, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELS  { <Pd1>.<T>, <Pd2>.<T> }, <Xn>, <Xm>
	{AWHILELS, aWHILELS, FEAT_SVE2p1, 0x25205c11, 0xff20fc11, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REGLIST2, []elmType{
			sa_pd1__Pd,
			sa_t__size__B_D_H_S,
			sa_pd2__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELS  <PNd>.<T>, <Xn>, <Xm>, <vl>
	{AWHILELS, aWHILELS, FEAT_SVE2p1, 0x25204c18, 0xff20dc18, false, []arg{
		{AC_SPOP, []elmType{
			sa_vl__vl__VLx2_VLx4,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pnd__PNd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELT  <Pd>.<T>, <R><n>, <R><m>
	{AWHILELT, aWHILELT, FEAT_NONE, 0x25201400, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELT  <Pd>.<T>, <R><n>, <R><m>
	{AWHILELTW, aWHILELT, FEAT_NONE, 0x25200400, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_m__Rm,
		}},
		{AC_REG, []elmType{
			sa_r__sf__W_X,
			sa_n__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELT  { <Pd1>.<T>, <Pd2>.<T> }, <Xn>, <Xm>
	{AWHILELT, aWHILELT, FEAT_SVE2p1, 0x25205410, 0xff20fc11, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_REGLIST2, []elmType{
			sa_pd1__Pd,
			sa_t__size__B_D_H_S,
			sa_pd2__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILELT  <PNd>.<T>, <Xn>, <Xm>, <vl>
	{AWHILELT, aWHILELT, FEAT_SVE2p1, 0x25204410, 0xff20dc18, false, []arg{
		{AC_SPOP, []elmType{
			sa_vl__vl__VLx2_VLx4,
		}},
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pnd__PNd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILERW  <Pd>.<T>, <Xn>, <Xm>
	{APWHILERW, aWHILERW, FEAT_NONE, 0x25203010, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WHILEWR  <Pd>.<T>, <Xn>, <Xm>
	{APWHILEWR, aWHILEWR, FEAT_NONE, 0x25203000, 0xff20fc10, false, []arg{
		{AC_REG, []elmType{
			sa_xm__Rm,
		}},
		{AC_REG, []elmType{
			sa_xn__Rn,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// WRFFR  <Pn>.B
	{APWRFFR, aWRFFR, FEAT_NONE, 0x25289000, 0xfffffe1f, false, []arg{
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_const_ARNG_B,
		}},
	}},

	// XAFLAG
	{AXAFLAG, aXAFLAG, FEAT_FlagM2, 0xd500403f, 0xffffffff, false, nil},

	// XAR  <Vd>.2D, <Vn>.2D, <Vm>.2D, #<imm6>
	{AVXAR, aXAR, FEAT_SHA3, 0xce800000, 0xffe00000, false, []arg{
		{AC_IMM, []elmType{
			sa_imm6__imm6,
		}},
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_const_ARNG_2D,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_const_ARNG_2D,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_const_ARNG_2D,
		}},
	}},

	// XAR  <Zdn>.<T>, <Zdn>.<T>, <Zm>.<T>, #<const>
	{AZXAR, aXAR, FEAT_NONE, 0x4203400, 0xff20fc00, false, []arg{
		{AC_IMM, []elmType{
			sa_const__tszh_23_2_tszl_20_2_imm3_18_3,
		}},
		{AC_ARNG, []elmType{
			sa_zm__Zm_9_5,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zdn__Zdn,
			sa_t__tszh_23_2_tszl_20_2__B_D_H_S,
		}},
	}},

	// XPACD  <Xd>
	{AXPACD, aXPACD, FEAT_PAuth, 0xdac147e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// XPACI  <Xd>
	{AXPACI, aXPACI, FEAT_PAuth, 0xdac143e0, 0xffffffe0, false, []arg{
		{AC_REG, []elmType{
			sa_xd__Rd,
		}},
	}},

	// XPACLRI
	{AXPACLRI, aXPACLRI, FEAT_PAuth, 0xd50320ff, 0xffffffff, false, nil},

	// XTN  <Vd>.<Tb>, <Vn>.<Ta>
	{AVXTN, aXTN, FEAT_NONE, 0xe212800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// XTN2  <Vd>.<Tb>, <Vn>.<Ta>
	{AVXTN2, aXTN2, FEAT_NONE, 0x4e212800, 0xff3ffc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_ta__size__2D_4S_8H,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_tb__size_Q__2S_4H_4S_8B_8H_16B,
		}},
	}},

	// YIELD
	{AYIELD, aYIELD, FEAT_NONE, 0xd503203f, 0xffffffff, false, nil},

	// ZERO  { <mask> }
	{AZERO, aZERO, FEAT_SME, 0xc0080000, 0xffffff00, false, []arg{
		{AC_IMM, []elmType{
			sa_mask__imm8,
		}},
	}},

	// ZERO  ZA.D[<Wv>, <offs>, VGx2]
	{AZERO, aZERO, FEAT_SME2p1, 0xc00c0000, 0xffff9ff8, false, []arg{
		{AC_ZAVECTORIDXVG2, []elmType{
			sa_const_ZAVECTORIDXVG2_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG2_VGx2,
		}},
	}},

	// ZERO  ZA.D[<Wv>, <offs>, VGx4]
	{AZERO, aZERO, FEAT_SME2p1, 0xc00e0000, 0xffff9ff8, false, []arg{
		{AC_ZAVECTORIDXVG4, []elmType{
			sa_const_ZAVECTORIDXVG4_D,
			sa_wv__Rv,
			sa_offs__off3_2_3,
			sa_const_ZAVECTORIDXVG4_VGx4,
		}},
	}},

	// ZERO  ZA.D[<Wv>, <offsf>:<offsl>]
	{AZERO, aZERO, FEAT_SME2p1, 0xc00c8000, 0xffff9ff8, false, []arg{
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_D,
			sa_wv__Rv,
			sa_offsf__off3,
			sa_offsl__off3,
		}},
	}},

	// ZERO  ZA.D[<Wv>, <offsf>:<offsl>, VGx2]
	{AZERO, aZERO, FEAT_SME2p1, 0xc00d0000, 0xffff9ffc, false, []arg{
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_D,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// ZERO  ZA.D[<Wv>, <offsf>:<offsl>, VGx4]
	{AZERO, aZERO, FEAT_SME2p1, 0xc00d8000, 0xffff9ffc, false, []arg{
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_D,
			sa_wv__Rv,
			sa_offsf_1__off2,
			sa_offsl_1__off2,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// ZERO  ZA.D[<Wv>, <offsf>:<offsl>]
	{AZERO, aZERO, FEAT_SME2p1, 0xc00e8000, 0xffff9ffc, false, []arg{
		{AC_ZAVECTORSEL, []elmType{
			sa_const_ZAVECTORSEL_D,
			sa_wv__Rv,
			sa_offsf__off2,
			sa_offsl__off2,
		}},
	}},

	// ZERO  ZA.D[<Wv>, <offsf>:<offsl>, VGx2]
	{AZERO, aZERO, FEAT_SME2p1, 0xc00f0000, 0xffff9ffe, false, []arg{
		{AC_ZAVECTORSELVG2, []elmType{
			sa_const_ZAVECTORSELVG2_D,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG2_VGx2,
		}},
	}},

	// ZERO  ZA.D[<Wv>, <offsf>:<offsl>, VGx4]
	{AZERO, aZERO, FEAT_SME2p1, 0xc00f8000, 0xffff9ffe, false, []arg{
		{AC_ZAVECTORSELVG4, []elmType{
			sa_const_ZAVECTORSELVG4_D,
			sa_wv__Rv,
			sa_offsf_1__o1,
			sa_offsl_1__o1,
			sa_const_ZAVECTORSELVG4_VGx4,
		}},
	}},

	// ZERO  { ZT0 }
	{AZERO, aZERO, FEAT_SME2, 0xc0480001, 0xffffffff, false, []arg{
		{AC_ZTREG, []elmType{
			sa_const_ZTREG_ZT0_1,
		}},
	}},

	// ZIP  { <Zd1>.<T>-<Zd4>.<T> }, { <Zn1>.<T>-<Zn4>.<T> }
	{AZZIP, aZIP, FEAT_SME2, 0xc136e000, 0xff3ffc63, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_t__size__B_D_H_S,
			sa_zn4__Zn_9_3,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_t__size__B_D_H_S,
			sa_zd4__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ZIP  { <Zd1>.Q-<Zd4>.Q }, { <Zn1>.Q-<Zn4>.Q }
	{AZZIP, aZIP, FEAT_SME2, 0xc137e000, 0xfffffc63, false, []arg{
		{AC_REGLIST4, []elmType{
			sa_zn1__Zn_9_3,
			sa_zn4__Zn_9_3,
			sa_const_REGLIST4_Q,
		}},
		{AC_REGLIST4, []elmType{
			sa_zd1__Zd_4_3,
			sa_zd4__Zd,
			sa_const_REGLIST4_Q,
		}},
	}},

	// ZIP  { <Zd1>.<T>-<Zd2>.<T> }, <Zn>.<T>, <Zm>.<T>
	{AZZIP, aZIP, FEAT_SME2, 0xc120d000, 0xff20fc01, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_t__size__B_D_H_S,
			sa_zd2__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ZIP  { <Zd1>.Q-<Zd2>.Q }, <Zn>.Q, <Zm>.Q
	{AZZIP, aZIP, FEAT_SME2, 0xc120d400, 0xffe0fc01, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_Q,
		}},
		{AC_REGLIST2, []elmType{
			sa_zd1__Zd_4_4,
			sa_zd2__Zd,
			sa_const_REGLIST2_Q,
		}},
	}},

	// ZIP1  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVZIP1, aZIP1, FEAT_NONE, 0xe003800, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// ZIP2  <Vd>.<T>, <Vn>.<T>, <Vm>.<T>
	{AVZIP2, aZIP2, FEAT_NONE, 0xe007800, 0xbf20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_vm__Rm_20_5,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vn__Rn,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
		{AC_ARNG, []elmType{
			sa_vd__Rd,
			sa_t__size_Q__2D_2S_4H_4S_8B_8H_16B,
		}},
	}},

	// ZIP2  <Pd>.<T>, <Pn>.<T>, <Pm>.<T>
	{APZIP2, aZIP2, FEAT_NONE, 0x5204400, 0xff30fe10, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ZIP1  <Pd>.<T>, <Pn>.<T>, <Pm>.<T>
	{APZIP1, aZIP1, FEAT_NONE, 0x5204000, 0xff30fe10, false, []arg{
		{AC_ARNG, []elmType{
			sa_pm__Pm_19_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_pn__Pn_8_4,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_pd__Pd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ZIP2  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZZIP2, aZIP2, FEAT_NONE, 0x5206400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ZIP2  <Zd>.Q, <Zn>.Q, <Zm>.Q
	{AZZIP2, aZIP2, FEAT_F64MM, 0x5a00400, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_Q,
		}},
	}},

	// ZIP1  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZZIP1, aZIP1, FEAT_NONE, 0x5206000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ZIP1  <Zd>.Q, <Zn>.Q, <Zm>.Q
	{AZZIP1, aZIP1, FEAT_F64MM, 0x5a00000, 0xffe0fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_const_ARNG_Q,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_const_ARNG_Q,
		}},
	}},

	// ZIPQ1  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZZIPQ1, aZIPQ1, FEAT_SVE2p1, 0x4400e000, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},

	// ZIPQ2  <Zd>.<T>, <Zn>.<T>, <Zm>.<T>
	{AZZIPQ2, aZIPQ2, FEAT_SVE2p1, 0x4400e400, 0xff20fc00, false, []arg{
		{AC_ARNG, []elmType{
			sa_zm__Zm_20_5,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zn__Zn,
			sa_t__size__B_D_H_S,
		}},
		{AC_ARNG, []elmType{
			sa_zd__Zd,
			sa_t__size__B_D_H_S,
		}},
	}},
}
