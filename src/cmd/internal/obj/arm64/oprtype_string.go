// Code generated by "stringer -type oprType -trimprefix AC_"; DO NOT EDIT.

package arm64

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AC_NONE-0]
	_ = x[AC_REG-1]
	_ = x[AC_RSP-2]
	_ = x[AC_FREG-3]
	_ = x[AC_VREG-4]
	_ = x[AC_ZREG-5]
	_ = x[AC_ZAREG-6]
	_ = x[AC_ZTREG-7]
	_ = x[AC_PREG-8]
	_ = x[AC_PNREG-9]
	_ = x[AC_PREGM-10]
	_ = x[AC_PREGZ-11]
	_ = x[AC_SPR-12]
	_ = x[AC_REGIDX-13]
	_ = x[AC_PAIR-14]
	_ = x[AC_REGEXT-15]
	_ = x[AC_REGSHIFT-16]
	_ = x[AC_COND-17]
	_ = x[AC_SPOP-18]
	_ = x[AC_LABEL-19]
	_ = x[AC_IMM-20]
	_ = x[AC_REGLIST1-21]
	_ = x[AC_REGLIST2-22]
	_ = x[AC_REGLIST2C-23]
	_ = x[AC_REGLIST3-24]
	_ = x[AC_REGLIST4-25]
	_ = x[AC_REGLIST4C-26]
	_ = x[AC_LISTIDX-27]
	_ = x[AC_ARNG-28]
	_ = x[AC_ARNGIDX-29]
	_ = x[AC_MEMIMM-30]
	_ = x[AC_MEMIMMEXT-31]
	_ = x[AC_MEMEXT-32]
	_ = x[AC_MEMPOSTIMM-33]
	_ = x[AC_MEMPOSTREG-34]
	_ = x[AC_MEMPREIMM-35]
	_ = x[AC_ZAHVTILEIDX-36]
	_ = x[AC_ZAHVTILESEL-37]
	_ = x[AC_ZAVECTORIDX-38]
	_ = x[AC_ZAVECTORIDXVG2-39]
	_ = x[AC_ZAVECTORIDXVG4-40]
	_ = x[AC_ZAVECTORSEL-41]
	_ = x[AC_ZAVECTORSELVG2-42]
	_ = x[AC_ZAVECTORSELVG4-43]
	_ = x[AC_TEXTSIZE-44]
	_ = x[AC_ANY-45]
}

const _oprType_name = "NONEREGRSPFREGVREGZREGZAREGZTREGPREGPNREGPREGMPREGZSPRREGIDXPAIRREGEXTREGSHIFTCONDSPOPLABELIMMREGLIST1REGLIST2REGLIST2CREGLIST3REGLIST4REGLIST4CLISTIDXARNGARNGIDXMEMIMMMEMIMMEXTMEMEXTMEMPOSTIMMMEMPOSTREGMEMPREIMMZAHVTILEIDXZAHVTILESELZAVECTORIDXZAVECTORIDXVG2ZAVECTORIDXVG4ZAVECTORSELZAVECTORSELVG2ZAVECTORSELVG4TEXTSIZEANY"

var _oprType_index = [...]uint16{0, 4, 7, 10, 14, 18, 22, 27, 32, 36, 41, 46, 51, 54, 60, 64, 70, 78, 82, 86, 91, 94, 102, 110, 119, 127, 135, 144, 151, 155, 162, 168, 177, 183, 193, 203, 212, 223, 234, 245, 259, 273, 284, 298, 312, 320, 323}

func (i oprType) String() string {
	if i >= oprType(len(_oprType_index)-1) {
		return "oprType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _oprType_name[_oprType_index[i]:_oprType_index[i+1]]
}
