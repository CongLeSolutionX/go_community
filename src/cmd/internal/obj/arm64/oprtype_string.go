// Code generated by "stringer -type oprType -trimprefix AC_"; DO NOT EDIT.

package arm64

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AC_NONE-0]
	_ = x[AC_REG-1]
	_ = x[AC_RSP-2]
	_ = x[AC_FREG-3]
	_ = x[AC_VREG-4]
	_ = x[AC_ZREG-5]
	_ = x[AC_ZAREG-6]
	_ = x[AC_ZTREG-7]
	_ = x[AC_PREG-8]
	_ = x[AC_PREGM-9]
	_ = x[AC_PREGZ-10]
	_ = x[AC_SPR-11]
	_ = x[AC_REGIDX-12]
	_ = x[AC_PAIR-13]
	_ = x[AC_REGEXT-14]
	_ = x[AC_REGSHIFT-15]
	_ = x[AC_COND-16]
	_ = x[AC_SPOP-17]
	_ = x[AC_LABEL-18]
	_ = x[AC_IMM-19]
	_ = x[AC_REGLIST1-20]
	_ = x[AC_REGLIST2-21]
	_ = x[AC_REGLIST2C-22]
	_ = x[AC_REGLIST3-23]
	_ = x[AC_REGLIST4-24]
	_ = x[AC_REGLIST4C-25]
	_ = x[AC_LISTIDX-26]
	_ = x[AC_ARNG-27]
	_ = x[AC_ARNGIDX-28]
	_ = x[AC_MEMIMM-29]
	_ = x[AC_MEMIMMEXT-30]
	_ = x[AC_MEMEXT-31]
	_ = x[AC_MEMPOSTIMM-32]
	_ = x[AC_MEMPOSTREG-33]
	_ = x[AC_MEMPREIMM-34]
	_ = x[AC_ZAHVTILEIDX-35]
	_ = x[AC_ZAHVTILESEL-36]
	_ = x[AC_ZAVECTORIDX-37]
	_ = x[AC_ZAVECTORIDXVG2-38]
	_ = x[AC_ZAVECTORIDXVG4-39]
	_ = x[AC_ZAVECTORSEL-40]
	_ = x[AC_ZAVECTORSELVG2-41]
	_ = x[AC_ZAVECTORSELVG4-42]
	_ = x[AC_TEXTSIZE-43]
	_ = x[AC_ANY-44]
}

const _oprType_name = "NONEREGRSPFREGVREGZREGZAREGZTREGPREGPREGMPREGZSPRREGIDXPAIRREGEXTREGSHIFTCONDSPOPLABELIMMREGLIST1REGLIST2REGLIST2CREGLIST3REGLIST4REGLIST4CLISTIDXARNGARNGIDXMEMIMMMEMIMMEXTMEMEXTMEMPOSTIMMMEMPOSTREGMEMPREIMMZAHVTILEIDXZAHVTILESELZAVECTORIDXZAVECTORIDXVG2ZAVECTORIDXVG4ZAVECTORSELZAVECTORSELVG2ZAVECTORSELVG4TEXTSIZEANY"

var _oprType_index = [...]uint16{0, 4, 7, 10, 14, 18, 22, 27, 32, 36, 41, 46, 49, 55, 59, 65, 73, 77, 81, 86, 89, 97, 105, 114, 122, 130, 139, 146, 150, 157, 163, 172, 178, 188, 198, 207, 218, 229, 240, 254, 268, 279, 293, 307, 315, 318}

func (i oprType) String() string {
	if i >= oprType(len(_oprType_index)-1) {
		return "oprType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _oprType_name[_oprType_index[i]:_oprType_index[i+1]]
}
