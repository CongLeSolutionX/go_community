// run
// Code generated by gen/cmpConstGen.go. DO NOT EDIT.

package main

import "fmt"

// results show the expected result for the elements left of, equal to and right of the index.
type result struct{ l, e, r bool }

var (
	_eq = result{l: false, e: true, r: false}
	_ne = result{l: true, e: false, r: true}
	_lt = result{l: true, e: false, r: false}
	_le = result{l: true, e: true, r: false}
	_gt = result{l: false, e: false, r: true}
	_ge = result{l: false, e: true, r: true}
)

// uint64 tests
var uint64_vals = []uint64{
	0,
	1,
	126,
	127,
	128,
	254,
	255,
	256,
	32766,
	32767,
	32768,
	65534,
	65535,
	65536,
	2147483646,
	2147483647,
	2147483648,
	4278190080,
	4294967294,
	4294967295,
	4294967296,
	1095216660480,
	9223372036854775806,
	9223372036854775807,
	9223372036854775808,
	18374686479671623680,
	18446744073709551614,
	18446744073709551615,
}
var uint64_tests = []struct {
	idx int    // index of the constant used
	exp result // expected results
	fn  func(uint64) bool
	msg string // test description for error message
}{
	{idx: 0, exp: _lt, fn: func(x uint64) bool { return x < 0 }, msg: "x < 0"},
	{idx: 0, exp: _le, fn: func(x uint64) bool { return x <= 0 }, msg: "x <= 0"},
	{idx: 0, exp: _gt, fn: func(x uint64) bool { return x > 0 }, msg: "x > 0"},
	{idx: 0, exp: _ge, fn: func(x uint64) bool { return x >= 0 }, msg: "x >= 0"},
	{idx: 0, exp: _eq, fn: func(x uint64) bool { return x == 0 }, msg: "x == 0"},
	{idx: 0, exp: _ne, fn: func(x uint64) bool { return x != 0 }, msg: "x != 0"},
	{idx: 1, exp: _lt, fn: func(x uint64) bool { return x < 1 }, msg: "x < 1"},
	{idx: 1, exp: _le, fn: func(x uint64) bool { return x <= 1 }, msg: "x <= 1"},
	{idx: 1, exp: _gt, fn: func(x uint64) bool { return x > 1 }, msg: "x > 1"},
	{idx: 1, exp: _ge, fn: func(x uint64) bool { return x >= 1 }, msg: "x >= 1"},
	{idx: 1, exp: _eq, fn: func(x uint64) bool { return x == 1 }, msg: "x == 1"},
	{idx: 1, exp: _ne, fn: func(x uint64) bool { return x != 1 }, msg: "x != 1"},
	{idx: 2, exp: _lt, fn: func(x uint64) bool { return x < 126 }, msg: "x < 126"},
	{idx: 2, exp: _le, fn: func(x uint64) bool { return x <= 126 }, msg: "x <= 126"},
	{idx: 2, exp: _gt, fn: func(x uint64) bool { return x > 126 }, msg: "x > 126"},
	{idx: 2, exp: _ge, fn: func(x uint64) bool { return x >= 126 }, msg: "x >= 126"},
	{idx: 2, exp: _eq, fn: func(x uint64) bool { return x == 126 }, msg: "x == 126"},
	{idx: 2, exp: _ne, fn: func(x uint64) bool { return x != 126 }, msg: "x != 126"},
	{idx: 3, exp: _lt, fn: func(x uint64) bool { return x < 127 }, msg: "x < 127"},
	{idx: 3, exp: _le, fn: func(x uint64) bool { return x <= 127 }, msg: "x <= 127"},
	{idx: 3, exp: _gt, fn: func(x uint64) bool { return x > 127 }, msg: "x > 127"},
	{idx: 3, exp: _ge, fn: func(x uint64) bool { return x >= 127 }, msg: "x >= 127"},
	{idx: 3, exp: _eq, fn: func(x uint64) bool { return x == 127 }, msg: "x == 127"},
	{idx: 3, exp: _ne, fn: func(x uint64) bool { return x != 127 }, msg: "x != 127"},
	{idx: 4, exp: _lt, fn: func(x uint64) bool { return x < 128 }, msg: "x < 128"},
	{idx: 4, exp: _le, fn: func(x uint64) bool { return x <= 128 }, msg: "x <= 128"},
	{idx: 4, exp: _gt, fn: func(x uint64) bool { return x > 128 }, msg: "x > 128"},
	{idx: 4, exp: _ge, fn: func(x uint64) bool { return x >= 128 }, msg: "x >= 128"},
	{idx: 4, exp: _eq, fn: func(x uint64) bool { return x == 128 }, msg: "x == 128"},
	{idx: 4, exp: _ne, fn: func(x uint64) bool { return x != 128 }, msg: "x != 128"},
	{idx: 5, exp: _lt, fn: func(x uint64) bool { return x < 254 }, msg: "x < 254"},
	{idx: 5, exp: _le, fn: func(x uint64) bool { return x <= 254 }, msg: "x <= 254"},
	{idx: 5, exp: _gt, fn: func(x uint64) bool { return x > 254 }, msg: "x > 254"},
	{idx: 5, exp: _ge, fn: func(x uint64) bool { return x >= 254 }, msg: "x >= 254"},
	{idx: 5, exp: _eq, fn: func(x uint64) bool { return x == 254 }, msg: "x == 254"},
	{idx: 5, exp: _ne, fn: func(x uint64) bool { return x != 254 }, msg: "x != 254"},
	{idx: 6, exp: _lt, fn: func(x uint64) bool { return x < 255 }, msg: "x < 255"},
	{idx: 6, exp: _le, fn: func(x uint64) bool { return x <= 255 }, msg: "x <= 255"},
	{idx: 6, exp: _gt, fn: func(x uint64) bool { return x > 255 }, msg: "x > 255"},
	{idx: 6, exp: _ge, fn: func(x uint64) bool { return x >= 255 }, msg: "x >= 255"},
	{idx: 6, exp: _eq, fn: func(x uint64) bool { return x == 255 }, msg: "x == 255"},
	{idx: 6, exp: _ne, fn: func(x uint64) bool { return x != 255 }, msg: "x != 255"},
	{idx: 7, exp: _lt, fn: func(x uint64) bool { return x < 256 }, msg: "x < 256"},
	{idx: 7, exp: _le, fn: func(x uint64) bool { return x <= 256 }, msg: "x <= 256"},
	{idx: 7, exp: _gt, fn: func(x uint64) bool { return x > 256 }, msg: "x > 256"},
	{idx: 7, exp: _ge, fn: func(x uint64) bool { return x >= 256 }, msg: "x >= 256"},
	{idx: 7, exp: _eq, fn: func(x uint64) bool { return x == 256 }, msg: "x == 256"},
	{idx: 7, exp: _ne, fn: func(x uint64) bool { return x != 256 }, msg: "x != 256"},
	{idx: 8, exp: _lt, fn: func(x uint64) bool { return x < 32766 }, msg: "x < 32766"},
	{idx: 8, exp: _le, fn: func(x uint64) bool { return x <= 32766 }, msg: "x <= 32766"},
	{idx: 8, exp: _gt, fn: func(x uint64) bool { return x > 32766 }, msg: "x > 32766"},
	{idx: 8, exp: _ge, fn: func(x uint64) bool { return x >= 32766 }, msg: "x >= 32766"},
	{idx: 8, exp: _eq, fn: func(x uint64) bool { return x == 32766 }, msg: "x == 32766"},
	{idx: 8, exp: _ne, fn: func(x uint64) bool { return x != 32766 }, msg: "x != 32766"},
	{idx: 9, exp: _lt, fn: func(x uint64) bool { return x < 32767 }, msg: "x < 32767"},
	{idx: 9, exp: _le, fn: func(x uint64) bool { return x <= 32767 }, msg: "x <= 32767"},
	{idx: 9, exp: _gt, fn: func(x uint64) bool { return x > 32767 }, msg: "x > 32767"},
	{idx: 9, exp: _ge, fn: func(x uint64) bool { return x >= 32767 }, msg: "x >= 32767"},
	{idx: 9, exp: _eq, fn: func(x uint64) bool { return x == 32767 }, msg: "x == 32767"},
	{idx: 9, exp: _ne, fn: func(x uint64) bool { return x != 32767 }, msg: "x != 32767"},
	{idx: 10, exp: _lt, fn: func(x uint64) bool { return x < 32768 }, msg: "x < 32768"},
	{idx: 10, exp: _le, fn: func(x uint64) bool { return x <= 32768 }, msg: "x <= 32768"},
	{idx: 10, exp: _gt, fn: func(x uint64) bool { return x > 32768 }, msg: "x > 32768"},
	{idx: 10, exp: _ge, fn: func(x uint64) bool { return x >= 32768 }, msg: "x >= 32768"},
	{idx: 10, exp: _eq, fn: func(x uint64) bool { return x == 32768 }, msg: "x == 32768"},
	{idx: 10, exp: _ne, fn: func(x uint64) bool { return x != 32768 }, msg: "x != 32768"},
	{idx: 11, exp: _lt, fn: func(x uint64) bool { return x < 65534 }, msg: "x < 65534"},
	{idx: 11, exp: _le, fn: func(x uint64) bool { return x <= 65534 }, msg: "x <= 65534"},
	{idx: 11, exp: _gt, fn: func(x uint64) bool { return x > 65534 }, msg: "x > 65534"},
	{idx: 11, exp: _ge, fn: func(x uint64) bool { return x >= 65534 }, msg: "x >= 65534"},
	{idx: 11, exp: _eq, fn: func(x uint64) bool { return x == 65534 }, msg: "x == 65534"},
	{idx: 11, exp: _ne, fn: func(x uint64) bool { return x != 65534 }, msg: "x != 65534"},
	{idx: 12, exp: _lt, fn: func(x uint64) bool { return x < 65535 }, msg: "x < 65535"},
	{idx: 12, exp: _le, fn: func(x uint64) bool { return x <= 65535 }, msg: "x <= 65535"},
	{idx: 12, exp: _gt, fn: func(x uint64) bool { return x > 65535 }, msg: "x > 65535"},
	{idx: 12, exp: _ge, fn: func(x uint64) bool { return x >= 65535 }, msg: "x >= 65535"},
	{idx: 12, exp: _eq, fn: func(x uint64) bool { return x == 65535 }, msg: "x == 65535"},
	{idx: 12, exp: _ne, fn: func(x uint64) bool { return x != 65535 }, msg: "x != 65535"},
	{idx: 13, exp: _lt, fn: func(x uint64) bool { return x < 65536 }, msg: "x < 65536"},
	{idx: 13, exp: _le, fn: func(x uint64) bool { return x <= 65536 }, msg: "x <= 65536"},
	{idx: 13, exp: _gt, fn: func(x uint64) bool { return x > 65536 }, msg: "x > 65536"},
	{idx: 13, exp: _ge, fn: func(x uint64) bool { return x >= 65536 }, msg: "x >= 65536"},
	{idx: 13, exp: _eq, fn: func(x uint64) bool { return x == 65536 }, msg: "x == 65536"},
	{idx: 13, exp: _ne, fn: func(x uint64) bool { return x != 65536 }, msg: "x != 65536"},
	{idx: 14, exp: _lt, fn: func(x uint64) bool { return x < 2147483646 }, msg: "x < 2147483646"},
	{idx: 14, exp: _le, fn: func(x uint64) bool { return x <= 2147483646 }, msg: "x <= 2147483646"},
	{idx: 14, exp: _gt, fn: func(x uint64) bool { return x > 2147483646 }, msg: "x > 2147483646"},
	{idx: 14, exp: _ge, fn: func(x uint64) bool { return x >= 2147483646 }, msg: "x >= 2147483646"},
	{idx: 14, exp: _eq, fn: func(x uint64) bool { return x == 2147483646 }, msg: "x == 2147483646"},
	{idx: 14, exp: _ne, fn: func(x uint64) bool { return x != 2147483646 }, msg: "x != 2147483646"},
	{idx: 15, exp: _lt, fn: func(x uint64) bool { return x < 2147483647 }, msg: "x < 2147483647"},
	{idx: 15, exp: _le, fn: func(x uint64) bool { return x <= 2147483647 }, msg: "x <= 2147483647"},
	{idx: 15, exp: _gt, fn: func(x uint64) bool { return x > 2147483647 }, msg: "x > 2147483647"},
	{idx: 15, exp: _ge, fn: func(x uint64) bool { return x >= 2147483647 }, msg: "x >= 2147483647"},
	{idx: 15, exp: _eq, fn: func(x uint64) bool { return x == 2147483647 }, msg: "x == 2147483647"},
	{idx: 15, exp: _ne, fn: func(x uint64) bool { return x != 2147483647 }, msg: "x != 2147483647"},
	{idx: 16, exp: _lt, fn: func(x uint64) bool { return x < 2147483648 }, msg: "x < 2147483648"},
	{idx: 16, exp: _le, fn: func(x uint64) bool { return x <= 2147483648 }, msg: "x <= 2147483648"},
	{idx: 16, exp: _gt, fn: func(x uint64) bool { return x > 2147483648 }, msg: "x > 2147483648"},
	{idx: 16, exp: _ge, fn: func(x uint64) bool { return x >= 2147483648 }, msg: "x >= 2147483648"},
	{idx: 16, exp: _eq, fn: func(x uint64) bool { return x == 2147483648 }, msg: "x == 2147483648"},
	{idx: 16, exp: _ne, fn: func(x uint64) bool { return x != 2147483648 }, msg: "x != 2147483648"},
	{idx: 17, exp: _lt, fn: func(x uint64) bool { return x < 4278190080 }, msg: "x < 4278190080"},
	{idx: 17, exp: _le, fn: func(x uint64) bool { return x <= 4278190080 }, msg: "x <= 4278190080"},
	{idx: 17, exp: _gt, fn: func(x uint64) bool { return x > 4278190080 }, msg: "x > 4278190080"},
	{idx: 17, exp: _ge, fn: func(x uint64) bool { return x >= 4278190080 }, msg: "x >= 4278190080"},
	{idx: 17, exp: _eq, fn: func(x uint64) bool { return x == 4278190080 }, msg: "x == 4278190080"},
	{idx: 17, exp: _ne, fn: func(x uint64) bool { return x != 4278190080 }, msg: "x != 4278190080"},
	{idx: 18, exp: _lt, fn: func(x uint64) bool { return x < 4294967294 }, msg: "x < 4294967294"},
	{idx: 18, exp: _le, fn: func(x uint64) bool { return x <= 4294967294 }, msg: "x <= 4294967294"},
	{idx: 18, exp: _gt, fn: func(x uint64) bool { return x > 4294967294 }, msg: "x > 4294967294"},
	{idx: 18, exp: _ge, fn: func(x uint64) bool { return x >= 4294967294 }, msg: "x >= 4294967294"},
	{idx: 18, exp: _eq, fn: func(x uint64) bool { return x == 4294967294 }, msg: "x == 4294967294"},
	{idx: 18, exp: _ne, fn: func(x uint64) bool { return x != 4294967294 }, msg: "x != 4294967294"},
	{idx: 19, exp: _lt, fn: func(x uint64) bool { return x < 4294967295 }, msg: "x < 4294967295"},
	{idx: 19, exp: _le, fn: func(x uint64) bool { return x <= 4294967295 }, msg: "x <= 4294967295"},
	{idx: 19, exp: _gt, fn: func(x uint64) bool { return x > 4294967295 }, msg: "x > 4294967295"},
	{idx: 19, exp: _ge, fn: func(x uint64) bool { return x >= 4294967295 }, msg: "x >= 4294967295"},
	{idx: 19, exp: _eq, fn: func(x uint64) bool { return x == 4294967295 }, msg: "x == 4294967295"},
	{idx: 19, exp: _ne, fn: func(x uint64) bool { return x != 4294967295 }, msg: "x != 4294967295"},
	{idx: 20, exp: _lt, fn: func(x uint64) bool { return x < 4294967296 }, msg: "x < 4294967296"},
	{idx: 20, exp: _le, fn: func(x uint64) bool { return x <= 4294967296 }, msg: "x <= 4294967296"},
	{idx: 20, exp: _gt, fn: func(x uint64) bool { return x > 4294967296 }, msg: "x > 4294967296"},
	{idx: 20, exp: _ge, fn: func(x uint64) bool { return x >= 4294967296 }, msg: "x >= 4294967296"},
	{idx: 20, exp: _eq, fn: func(x uint64) bool { return x == 4294967296 }, msg: "x == 4294967296"},
	{idx: 20, exp: _ne, fn: func(x uint64) bool { return x != 4294967296 }, msg: "x != 4294967296"},
	{idx: 21, exp: _lt, fn: func(x uint64) bool { return x < 1095216660480 }, msg: "x < 1095216660480"},
	{idx: 21, exp: _le, fn: func(x uint64) bool { return x <= 1095216660480 }, msg: "x <= 1095216660480"},
	{idx: 21, exp: _gt, fn: func(x uint64) bool { return x > 1095216660480 }, msg: "x > 1095216660480"},
	{idx: 21, exp: _ge, fn: func(x uint64) bool { return x >= 1095216660480 }, msg: "x >= 1095216660480"},
	{idx: 21, exp: _eq, fn: func(x uint64) bool { return x == 1095216660480 }, msg: "x == 1095216660480"},
	{idx: 21, exp: _ne, fn: func(x uint64) bool { return x != 1095216660480 }, msg: "x != 1095216660480"},
	{idx: 22, exp: _lt, fn: func(x uint64) bool { return x < 9223372036854775806 }, msg: "x < 9223372036854775806"},
	{idx: 22, exp: _le, fn: func(x uint64) bool { return x <= 9223372036854775806 }, msg: "x <= 9223372036854775806"},
	{idx: 22, exp: _gt, fn: func(x uint64) bool { return x > 9223372036854775806 }, msg: "x > 9223372036854775806"},
	{idx: 22, exp: _ge, fn: func(x uint64) bool { return x >= 9223372036854775806 }, msg: "x >= 9223372036854775806"},
	{idx: 22, exp: _eq, fn: func(x uint64) bool { return x == 9223372036854775806 }, msg: "x == 9223372036854775806"},
	{idx: 22, exp: _ne, fn: func(x uint64) bool { return x != 9223372036854775806 }, msg: "x != 9223372036854775806"},
	{idx: 23, exp: _lt, fn: func(x uint64) bool { return x < 9223372036854775807 }, msg: "x < 9223372036854775807"},
	{idx: 23, exp: _le, fn: func(x uint64) bool { return x <= 9223372036854775807 }, msg: "x <= 9223372036854775807"},
	{idx: 23, exp: _gt, fn: func(x uint64) bool { return x > 9223372036854775807 }, msg: "x > 9223372036854775807"},
	{idx: 23, exp: _ge, fn: func(x uint64) bool { return x >= 9223372036854775807 }, msg: "x >= 9223372036854775807"},
	{idx: 23, exp: _eq, fn: func(x uint64) bool { return x == 9223372036854775807 }, msg: "x == 9223372036854775807"},
	{idx: 23, exp: _ne, fn: func(x uint64) bool { return x != 9223372036854775807 }, msg: "x != 9223372036854775807"},
	{idx: 24, exp: _lt, fn: func(x uint64) bool { return x < 9223372036854775808 }, msg: "x < 9223372036854775808"},
	{idx: 24, exp: _le, fn: func(x uint64) bool { return x <= 9223372036854775808 }, msg: "x <= 9223372036854775808"},
	{idx: 24, exp: _gt, fn: func(x uint64) bool { return x > 9223372036854775808 }, msg: "x > 9223372036854775808"},
	{idx: 24, exp: _ge, fn: func(x uint64) bool { return x >= 9223372036854775808 }, msg: "x >= 9223372036854775808"},
	{idx: 24, exp: _eq, fn: func(x uint64) bool { return x == 9223372036854775808 }, msg: "x == 9223372036854775808"},
	{idx: 24, exp: _ne, fn: func(x uint64) bool { return x != 9223372036854775808 }, msg: "x != 9223372036854775808"},
	{idx: 25, exp: _lt, fn: func(x uint64) bool { return x < 18374686479671623680 }, msg: "x < 18374686479671623680"},
	{idx: 25, exp: _le, fn: func(x uint64) bool { return x <= 18374686479671623680 }, msg: "x <= 18374686479671623680"},
	{idx: 25, exp: _gt, fn: func(x uint64) bool { return x > 18374686479671623680 }, msg: "x > 18374686479671623680"},
	{idx: 25, exp: _ge, fn: func(x uint64) bool { return x >= 18374686479671623680 }, msg: "x >= 18374686479671623680"},
	{idx: 25, exp: _eq, fn: func(x uint64) bool { return x == 18374686479671623680 }, msg: "x == 18374686479671623680"},
	{idx: 25, exp: _ne, fn: func(x uint64) bool { return x != 18374686479671623680 }, msg: "x != 18374686479671623680"},
	{idx: 26, exp: _lt, fn: func(x uint64) bool { return x < 18446744073709551614 }, msg: "x < 18446744073709551614"},
	{idx: 26, exp: _le, fn: func(x uint64) bool { return x <= 18446744073709551614 }, msg: "x <= 18446744073709551614"},
	{idx: 26, exp: _gt, fn: func(x uint64) bool { return x > 18446744073709551614 }, msg: "x > 18446744073709551614"},
	{idx: 26, exp: _ge, fn: func(x uint64) bool { return x >= 18446744073709551614 }, msg: "x >= 18446744073709551614"},
	{idx: 26, exp: _eq, fn: func(x uint64) bool { return x == 18446744073709551614 }, msg: "x == 18446744073709551614"},
	{idx: 26, exp: _ne, fn: func(x uint64) bool { return x != 18446744073709551614 }, msg: "x != 18446744073709551614"},
	{idx: 27, exp: _lt, fn: func(x uint64) bool { return x < 18446744073709551615 }, msg: "x < 18446744073709551615"},
	{idx: 27, exp: _le, fn: func(x uint64) bool { return x <= 18446744073709551615 }, msg: "x <= 18446744073709551615"},
	{idx: 27, exp: _gt, fn: func(x uint64) bool { return x > 18446744073709551615 }, msg: "x > 18446744073709551615"},
	{idx: 27, exp: _ge, fn: func(x uint64) bool { return x >= 18446744073709551615 }, msg: "x >= 18446744073709551615"},
	{idx: 27, exp: _eq, fn: func(x uint64) bool { return x == 18446744073709551615 }, msg: "x == 18446744073709551615"},
	{idx: 27, exp: _ne, fn: func(x uint64) bool { return x != 18446744073709551615 }, msg: "x != 18446744073709551615"},
}

// uint32 tests
var uint32_vals = []uint32{
	0,
	1,
	126,
	127,
	128,
	254,
	255,
	256,
	32766,
	32767,
	32768,
	65534,
	65535,
	65536,
	2147483646,
	2147483647,
	2147483648,
	4278190080,
	4294967294,
	4294967295,
}
var uint32_tests = []struct {
	idx int    // index of the constant used
	exp result // expected results
	fn  func(uint32) bool
	msg string // test description for error message
}{
	{idx: 0, exp: _lt, fn: func(x uint32) bool { return x < 0 }, msg: "x < 0"},
	{idx: 0, exp: _le, fn: func(x uint32) bool { return x <= 0 }, msg: "x <= 0"},
	{idx: 0, exp: _gt, fn: func(x uint32) bool { return x > 0 }, msg: "x > 0"},
	{idx: 0, exp: _ge, fn: func(x uint32) bool { return x >= 0 }, msg: "x >= 0"},
	{idx: 0, exp: _eq, fn: func(x uint32) bool { return x == 0 }, msg: "x == 0"},
	{idx: 0, exp: _ne, fn: func(x uint32) bool { return x != 0 }, msg: "x != 0"},
	{idx: 1, exp: _lt, fn: func(x uint32) bool { return x < 1 }, msg: "x < 1"},
	{idx: 1, exp: _le, fn: func(x uint32) bool { return x <= 1 }, msg: "x <= 1"},
	{idx: 1, exp: _gt, fn: func(x uint32) bool { return x > 1 }, msg: "x > 1"},
	{idx: 1, exp: _ge, fn: func(x uint32) bool { return x >= 1 }, msg: "x >= 1"},
	{idx: 1, exp: _eq, fn: func(x uint32) bool { return x == 1 }, msg: "x == 1"},
	{idx: 1, exp: _ne, fn: func(x uint32) bool { return x != 1 }, msg: "x != 1"},
	{idx: 2, exp: _lt, fn: func(x uint32) bool { return x < 126 }, msg: "x < 126"},
	{idx: 2, exp: _le, fn: func(x uint32) bool { return x <= 126 }, msg: "x <= 126"},
	{idx: 2, exp: _gt, fn: func(x uint32) bool { return x > 126 }, msg: "x > 126"},
	{idx: 2, exp: _ge, fn: func(x uint32) bool { return x >= 126 }, msg: "x >= 126"},
	{idx: 2, exp: _eq, fn: func(x uint32) bool { return x == 126 }, msg: "x == 126"},
	{idx: 2, exp: _ne, fn: func(x uint32) bool { return x != 126 }, msg: "x != 126"},
	{idx: 3, exp: _lt, fn: func(x uint32) bool { return x < 127 }, msg: "x < 127"},
	{idx: 3, exp: _le, fn: func(x uint32) bool { return x <= 127 }, msg: "x <= 127"},
	{idx: 3, exp: _gt, fn: func(x uint32) bool { return x > 127 }, msg: "x > 127"},
	{idx: 3, exp: _ge, fn: func(x uint32) bool { return x >= 127 }, msg: "x >= 127"},
	{idx: 3, exp: _eq, fn: func(x uint32) bool { return x == 127 }, msg: "x == 127"},
	{idx: 3, exp: _ne, fn: func(x uint32) bool { return x != 127 }, msg: "x != 127"},
	{idx: 4, exp: _lt, fn: func(x uint32) bool { return x < 128 }, msg: "x < 128"},
	{idx: 4, exp: _le, fn: func(x uint32) bool { return x <= 128 }, msg: "x <= 128"},
	{idx: 4, exp: _gt, fn: func(x uint32) bool { return x > 128 }, msg: "x > 128"},
	{idx: 4, exp: _ge, fn: func(x uint32) bool { return x >= 128 }, msg: "x >= 128"},
	{idx: 4, exp: _eq, fn: func(x uint32) bool { return x == 128 }, msg: "x == 128"},
	{idx: 4, exp: _ne, fn: func(x uint32) bool { return x != 128 }, msg: "x != 128"},
	{idx: 5, exp: _lt, fn: func(x uint32) bool { return x < 254 }, msg: "x < 254"},
	{idx: 5, exp: _le, fn: func(x uint32) bool { return x <= 254 }, msg: "x <= 254"},
	{idx: 5, exp: _gt, fn: func(x uint32) bool { return x > 254 }, msg: "x > 254"},
	{idx: 5, exp: _ge, fn: func(x uint32) bool { return x >= 254 }, msg: "x >= 254"},
	{idx: 5, exp: _eq, fn: func(x uint32) bool { return x == 254 }, msg: "x == 254"},
	{idx: 5, exp: _ne, fn: func(x uint32) bool { return x != 254 }, msg: "x != 254"},
	{idx: 6, exp: _lt, fn: func(x uint32) bool { return x < 255 }, msg: "x < 255"},
	{idx: 6, exp: _le, fn: func(x uint32) bool { return x <= 255 }, msg: "x <= 255"},
	{idx: 6, exp: _gt, fn: func(x uint32) bool { return x > 255 }, msg: "x > 255"},
	{idx: 6, exp: _ge, fn: func(x uint32) bool { return x >= 255 }, msg: "x >= 255"},
	{idx: 6, exp: _eq, fn: func(x uint32) bool { return x == 255 }, msg: "x == 255"},
	{idx: 6, exp: _ne, fn: func(x uint32) bool { return x != 255 }, msg: "x != 255"},
	{idx: 7, exp: _lt, fn: func(x uint32) bool { return x < 256 }, msg: "x < 256"},
	{idx: 7, exp: _le, fn: func(x uint32) bool { return x <= 256 }, msg: "x <= 256"},
	{idx: 7, exp: _gt, fn: func(x uint32) bool { return x > 256 }, msg: "x > 256"},
	{idx: 7, exp: _ge, fn: func(x uint32) bool { return x >= 256 }, msg: "x >= 256"},
	{idx: 7, exp: _eq, fn: func(x uint32) bool { return x == 256 }, msg: "x == 256"},
	{idx: 7, exp: _ne, fn: func(x uint32) bool { return x != 256 }, msg: "x != 256"},
	{idx: 8, exp: _lt, fn: func(x uint32) bool { return x < 32766 }, msg: "x < 32766"},
	{idx: 8, exp: _le, fn: func(x uint32) bool { return x <= 32766 }, msg: "x <= 32766"},
	{idx: 8, exp: _gt, fn: func(x uint32) bool { return x > 32766 }, msg: "x > 32766"},
	{idx: 8, exp: _ge, fn: func(x uint32) bool { return x >= 32766 }, msg: "x >= 32766"},
	{idx: 8, exp: _eq, fn: func(x uint32) bool { return x == 32766 }, msg: "x == 32766"},
	{idx: 8, exp: _ne, fn: func(x uint32) bool { return x != 32766 }, msg: "x != 32766"},
	{idx: 9, exp: _lt, fn: func(x uint32) bool { return x < 32767 }, msg: "x < 32767"},
	{idx: 9, exp: _le, fn: func(x uint32) bool { return x <= 32767 }, msg: "x <= 32767"},
	{idx: 9, exp: _gt, fn: func(x uint32) bool { return x > 32767 }, msg: "x > 32767"},
	{idx: 9, exp: _ge, fn: func(x uint32) bool { return x >= 32767 }, msg: "x >= 32767"},
	{idx: 9, exp: _eq, fn: func(x uint32) bool { return x == 32767 }, msg: "x == 32767"},
	{idx: 9, exp: _ne, fn: func(x uint32) bool { return x != 32767 }, msg: "x != 32767"},
	{idx: 10, exp: _lt, fn: func(x uint32) bool { return x < 32768 }, msg: "x < 32768"},
	{idx: 10, exp: _le, fn: func(x uint32) bool { return x <= 32768 }, msg: "x <= 32768"},
	{idx: 10, exp: _gt, fn: func(x uint32) bool { return x > 32768 }, msg: "x > 32768"},
	{idx: 10, exp: _ge, fn: func(x uint32) bool { return x >= 32768 }, msg: "x >= 32768"},
	{idx: 10, exp: _eq, fn: func(x uint32) bool { return x == 32768 }, msg: "x == 32768"},
	{idx: 10, exp: _ne, fn: func(x uint32) bool { return x != 32768 }, msg: "x != 32768"},
	{idx: 11, exp: _lt, fn: func(x uint32) bool { return x < 65534 }, msg: "x < 65534"},
	{idx: 11, exp: _le, fn: func(x uint32) bool { return x <= 65534 }, msg: "x <= 65534"},
	{idx: 11, exp: _gt, fn: func(x uint32) bool { return x > 65534 }, msg: "x > 65534"},
	{idx: 11, exp: _ge, fn: func(x uint32) bool { return x >= 65534 }, msg: "x >= 65534"},
	{idx: 11, exp: _eq, fn: func(x uint32) bool { return x == 65534 }, msg: "x == 65534"},
	{idx: 11, exp: _ne, fn: func(x uint32) bool { return x != 65534 }, msg: "x != 65534"},
	{idx: 12, exp: _lt, fn: func(x uint32) bool { return x < 65535 }, msg: "x < 65535"},
	{idx: 12, exp: _le, fn: func(x uint32) bool { return x <= 65535 }, msg: "x <= 65535"},
	{idx: 12, exp: _gt, fn: func(x uint32) bool { return x > 65535 }, msg: "x > 65535"},
	{idx: 12, exp: _ge, fn: func(x uint32) bool { return x >= 65535 }, msg: "x >= 65535"},
	{idx: 12, exp: _eq, fn: func(x uint32) bool { return x == 65535 }, msg: "x == 65535"},
	{idx: 12, exp: _ne, fn: func(x uint32) bool { return x != 65535 }, msg: "x != 65535"},
	{idx: 13, exp: _lt, fn: func(x uint32) bool { return x < 65536 }, msg: "x < 65536"},
	{idx: 13, exp: _le, fn: func(x uint32) bool { return x <= 65536 }, msg: "x <= 65536"},
	{idx: 13, exp: _gt, fn: func(x uint32) bool { return x > 65536 }, msg: "x > 65536"},
	{idx: 13, exp: _ge, fn: func(x uint32) bool { return x >= 65536 }, msg: "x >= 65536"},
	{idx: 13, exp: _eq, fn: func(x uint32) bool { return x == 65536 }, msg: "x == 65536"},
	{idx: 13, exp: _ne, fn: func(x uint32) bool { return x != 65536 }, msg: "x != 65536"},
	{idx: 14, exp: _lt, fn: func(x uint32) bool { return x < 2147483646 }, msg: "x < 2147483646"},
	{idx: 14, exp: _le, fn: func(x uint32) bool { return x <= 2147483646 }, msg: "x <= 2147483646"},
	{idx: 14, exp: _gt, fn: func(x uint32) bool { return x > 2147483646 }, msg: "x > 2147483646"},
	{idx: 14, exp: _ge, fn: func(x uint32) bool { return x >= 2147483646 }, msg: "x >= 2147483646"},
	{idx: 14, exp: _eq, fn: func(x uint32) bool { return x == 2147483646 }, msg: "x == 2147483646"},
	{idx: 14, exp: _ne, fn: func(x uint32) bool { return x != 2147483646 }, msg: "x != 2147483646"},
	{idx: 15, exp: _lt, fn: func(x uint32) bool { return x < 2147483647 }, msg: "x < 2147483647"},
	{idx: 15, exp: _le, fn: func(x uint32) bool { return x <= 2147483647 }, msg: "x <= 2147483647"},
	{idx: 15, exp: _gt, fn: func(x uint32) bool { return x > 2147483647 }, msg: "x > 2147483647"},
	{idx: 15, exp: _ge, fn: func(x uint32) bool { return x >= 2147483647 }, msg: "x >= 2147483647"},
	{idx: 15, exp: _eq, fn: func(x uint32) bool { return x == 2147483647 }, msg: "x == 2147483647"},
	{idx: 15, exp: _ne, fn: func(x uint32) bool { return x != 2147483647 }, msg: "x != 2147483647"},
	{idx: 16, exp: _lt, fn: func(x uint32) bool { return x < 2147483648 }, msg: "x < 2147483648"},
	{idx: 16, exp: _le, fn: func(x uint32) bool { return x <= 2147483648 }, msg: "x <= 2147483648"},
	{idx: 16, exp: _gt, fn: func(x uint32) bool { return x > 2147483648 }, msg: "x > 2147483648"},
	{idx: 16, exp: _ge, fn: func(x uint32) bool { return x >= 2147483648 }, msg: "x >= 2147483648"},
	{idx: 16, exp: _eq, fn: func(x uint32) bool { return x == 2147483648 }, msg: "x == 2147483648"},
	{idx: 16, exp: _ne, fn: func(x uint32) bool { return x != 2147483648 }, msg: "x != 2147483648"},
	{idx: 17, exp: _lt, fn: func(x uint32) bool { return x < 4278190080 }, msg: "x < 4278190080"},
	{idx: 17, exp: _le, fn: func(x uint32) bool { return x <= 4278190080 }, msg: "x <= 4278190080"},
	{idx: 17, exp: _gt, fn: func(x uint32) bool { return x > 4278190080 }, msg: "x > 4278190080"},
	{idx: 17, exp: _ge, fn: func(x uint32) bool { return x >= 4278190080 }, msg: "x >= 4278190080"},
	{idx: 17, exp: _eq, fn: func(x uint32) bool { return x == 4278190080 }, msg: "x == 4278190080"},
	{idx: 17, exp: _ne, fn: func(x uint32) bool { return x != 4278190080 }, msg: "x != 4278190080"},
	{idx: 18, exp: _lt, fn: func(x uint32) bool { return x < 4294967294 }, msg: "x < 4294967294"},
	{idx: 18, exp: _le, fn: func(x uint32) bool { return x <= 4294967294 }, msg: "x <= 4294967294"},
	{idx: 18, exp: _gt, fn: func(x uint32) bool { return x > 4294967294 }, msg: "x > 4294967294"},
	{idx: 18, exp: _ge, fn: func(x uint32) bool { return x >= 4294967294 }, msg: "x >= 4294967294"},
	{idx: 18, exp: _eq, fn: func(x uint32) bool { return x == 4294967294 }, msg: "x == 4294967294"},
	{idx: 18, exp: _ne, fn: func(x uint32) bool { return x != 4294967294 }, msg: "x != 4294967294"},
	{idx: 19, exp: _lt, fn: func(x uint32) bool { return x < 4294967295 }, msg: "x < 4294967295"},
	{idx: 19, exp: _le, fn: func(x uint32) bool { return x <= 4294967295 }, msg: "x <= 4294967295"},
	{idx: 19, exp: _gt, fn: func(x uint32) bool { return x > 4294967295 }, msg: "x > 4294967295"},
	{idx: 19, exp: _ge, fn: func(x uint32) bool { return x >= 4294967295 }, msg: "x >= 4294967295"},
	{idx: 19, exp: _eq, fn: func(x uint32) bool { return x == 4294967295 }, msg: "x == 4294967295"},
	{idx: 19, exp: _ne, fn: func(x uint32) bool { return x != 4294967295 }, msg: "x != 4294967295"},
}

// uint16 tests
var uint16_vals = []uint16{
	0,
	1,
	126,
	127,
	128,
	254,
	255,
	256,
	32766,
	32767,
	32768,
	65534,
	65535,
}
var uint16_tests = []struct {
	idx int    // index of the constant used
	exp result // expected results
	fn  func(uint16) bool
	msg string // test description for error message
}{
	{idx: 0, exp: _lt, fn: func(x uint16) bool { return x < 0 }, msg: "x < 0"},
	{idx: 0, exp: _le, fn: func(x uint16) bool { return x <= 0 }, msg: "x <= 0"},
	{idx: 0, exp: _gt, fn: func(x uint16) bool { return x > 0 }, msg: "x > 0"},
	{idx: 0, exp: _ge, fn: func(x uint16) bool { return x >= 0 }, msg: "x >= 0"},
	{idx: 0, exp: _eq, fn: func(x uint16) bool { return x == 0 }, msg: "x == 0"},
	{idx: 0, exp: _ne, fn: func(x uint16) bool { return x != 0 }, msg: "x != 0"},
	{idx: 1, exp: _lt, fn: func(x uint16) bool { return x < 1 }, msg: "x < 1"},
	{idx: 1, exp: _le, fn: func(x uint16) bool { return x <= 1 }, msg: "x <= 1"},
	{idx: 1, exp: _gt, fn: func(x uint16) bool { return x > 1 }, msg: "x > 1"},
	{idx: 1, exp: _ge, fn: func(x uint16) bool { return x >= 1 }, msg: "x >= 1"},
	{idx: 1, exp: _eq, fn: func(x uint16) bool { return x == 1 }, msg: "x == 1"},
	{idx: 1, exp: _ne, fn: func(x uint16) bool { return x != 1 }, msg: "x != 1"},
	{idx: 2, exp: _lt, fn: func(x uint16) bool { return x < 126 }, msg: "x < 126"},
	{idx: 2, exp: _le, fn: func(x uint16) bool { return x <= 126 }, msg: "x <= 126"},
	{idx: 2, exp: _gt, fn: func(x uint16) bool { return x > 126 }, msg: "x > 126"},
	{idx: 2, exp: _ge, fn: func(x uint16) bool { return x >= 126 }, msg: "x >= 126"},
	{idx: 2, exp: _eq, fn: func(x uint16) bool { return x == 126 }, msg: "x == 126"},
	{idx: 2, exp: _ne, fn: func(x uint16) bool { return x != 126 }, msg: "x != 126"},
	{idx: 3, exp: _lt, fn: func(x uint16) bool { return x < 127 }, msg: "x < 127"},
	{idx: 3, exp: _le, fn: func(x uint16) bool { return x <= 127 }, msg: "x <= 127"},
	{idx: 3, exp: _gt, fn: func(x uint16) bool { return x > 127 }, msg: "x > 127"},
	{idx: 3, exp: _ge, fn: func(x uint16) bool { return x >= 127 }, msg: "x >= 127"},
	{idx: 3, exp: _eq, fn: func(x uint16) bool { return x == 127 }, msg: "x == 127"},
	{idx: 3, exp: _ne, fn: func(x uint16) bool { return x != 127 }, msg: "x != 127"},
	{idx: 4, exp: _lt, fn: func(x uint16) bool { return x < 128 }, msg: "x < 128"},
	{idx: 4, exp: _le, fn: func(x uint16) bool { return x <= 128 }, msg: "x <= 128"},
	{idx: 4, exp: _gt, fn: func(x uint16) bool { return x > 128 }, msg: "x > 128"},
	{idx: 4, exp: _ge, fn: func(x uint16) bool { return x >= 128 }, msg: "x >= 128"},
	{idx: 4, exp: _eq, fn: func(x uint16) bool { return x == 128 }, msg: "x == 128"},
	{idx: 4, exp: _ne, fn: func(x uint16) bool { return x != 128 }, msg: "x != 128"},
	{idx: 5, exp: _lt, fn: func(x uint16) bool { return x < 254 }, msg: "x < 254"},
	{idx: 5, exp: _le, fn: func(x uint16) bool { return x <= 254 }, msg: "x <= 254"},
	{idx: 5, exp: _gt, fn: func(x uint16) bool { return x > 254 }, msg: "x > 254"},
	{idx: 5, exp: _ge, fn: func(x uint16) bool { return x >= 254 }, msg: "x >= 254"},
	{idx: 5, exp: _eq, fn: func(x uint16) bool { return x == 254 }, msg: "x == 254"},
	{idx: 5, exp: _ne, fn: func(x uint16) bool { return x != 254 }, msg: "x != 254"},
	{idx: 6, exp: _lt, fn: func(x uint16) bool { return x < 255 }, msg: "x < 255"},
	{idx: 6, exp: _le, fn: func(x uint16) bool { return x <= 255 }, msg: "x <= 255"},
	{idx: 6, exp: _gt, fn: func(x uint16) bool { return x > 255 }, msg: "x > 255"},
	{idx: 6, exp: _ge, fn: func(x uint16) bool { return x >= 255 }, msg: "x >= 255"},
	{idx: 6, exp: _eq, fn: func(x uint16) bool { return x == 255 }, msg: "x == 255"},
	{idx: 6, exp: _ne, fn: func(x uint16) bool { return x != 255 }, msg: "x != 255"},
	{idx: 7, exp: _lt, fn: func(x uint16) bool { return x < 256 }, msg: "x < 256"},
	{idx: 7, exp: _le, fn: func(x uint16) bool { return x <= 256 }, msg: "x <= 256"},
	{idx: 7, exp: _gt, fn: func(x uint16) bool { return x > 256 }, msg: "x > 256"},
	{idx: 7, exp: _ge, fn: func(x uint16) bool { return x >= 256 }, msg: "x >= 256"},
	{idx: 7, exp: _eq, fn: func(x uint16) bool { return x == 256 }, msg: "x == 256"},
	{idx: 7, exp: _ne, fn: func(x uint16) bool { return x != 256 }, msg: "x != 256"},
	{idx: 8, exp: _lt, fn: func(x uint16) bool { return x < 32766 }, msg: "x < 32766"},
	{idx: 8, exp: _le, fn: func(x uint16) bool { return x <= 32766 }, msg: "x <= 32766"},
	{idx: 8, exp: _gt, fn: func(x uint16) bool { return x > 32766 }, msg: "x > 32766"},
	{idx: 8, exp: _ge, fn: func(x uint16) bool { return x >= 32766 }, msg: "x >= 32766"},
	{idx: 8, exp: _eq, fn: func(x uint16) bool { return x == 32766 }, msg: "x == 32766"},
	{idx: 8, exp: _ne, fn: func(x uint16) bool { return x != 32766 }, msg: "x != 32766"},
	{idx: 9, exp: _lt, fn: func(x uint16) bool { return x < 32767 }, msg: "x < 32767"},
	{idx: 9, exp: _le, fn: func(x uint16) bool { return x <= 32767 }, msg: "x <= 32767"},
	{idx: 9, exp: _gt, fn: func(x uint16) bool { return x > 32767 }, msg: "x > 32767"},
	{idx: 9, exp: _ge, fn: func(x uint16) bool { return x >= 32767 }, msg: "x >= 32767"},
	{idx: 9, exp: _eq, fn: func(x uint16) bool { return x == 32767 }, msg: "x == 32767"},
	{idx: 9, exp: _ne, fn: func(x uint16) bool { return x != 32767 }, msg: "x != 32767"},
	{idx: 10, exp: _lt, fn: func(x uint16) bool { return x < 32768 }, msg: "x < 32768"},
	{idx: 10, exp: _le, fn: func(x uint16) bool { return x <= 32768 }, msg: "x <= 32768"},
	{idx: 10, exp: _gt, fn: func(x uint16) bool { return x > 32768 }, msg: "x > 32768"},
	{idx: 10, exp: _ge, fn: func(x uint16) bool { return x >= 32768 }, msg: "x >= 32768"},
	{idx: 10, exp: _eq, fn: func(x uint16) bool { return x == 32768 }, msg: "x == 32768"},
	{idx: 10, exp: _ne, fn: func(x uint16) bool { return x != 32768 }, msg: "x != 32768"},
	{idx: 11, exp: _lt, fn: func(x uint16) bool { return x < 65534 }, msg: "x < 65534"},
	{idx: 11, exp: _le, fn: func(x uint16) bool { return x <= 65534 }, msg: "x <= 65534"},
	{idx: 11, exp: _gt, fn: func(x uint16) bool { return x > 65534 }, msg: "x > 65534"},
	{idx: 11, exp: _ge, fn: func(x uint16) bool { return x >= 65534 }, msg: "x >= 65534"},
	{idx: 11, exp: _eq, fn: func(x uint16) bool { return x == 65534 }, msg: "x == 65534"},
	{idx: 11, exp: _ne, fn: func(x uint16) bool { return x != 65534 }, msg: "x != 65534"},
	{idx: 12, exp: _lt, fn: func(x uint16) bool { return x < 65535 }, msg: "x < 65535"},
	{idx: 12, exp: _le, fn: func(x uint16) bool { return x <= 65535 }, msg: "x <= 65535"},
	{idx: 12, exp: _gt, fn: func(x uint16) bool { return x > 65535 }, msg: "x > 65535"},
	{idx: 12, exp: _ge, fn: func(x uint16) bool { return x >= 65535 }, msg: "x >= 65535"},
	{idx: 12, exp: _eq, fn: func(x uint16) bool { return x == 65535 }, msg: "x == 65535"},
	{idx: 12, exp: _ne, fn: func(x uint16) bool { return x != 65535 }, msg: "x != 65535"},
}

// uint8 tests
var uint8_vals = []uint8{
	0,
	1,
	126,
	127,
	128,
	254,
	255,
}
var uint8_tests = []struct {
	idx int    // index of the constant used
	exp result // expected results
	fn  func(uint8) bool
	msg string // test description for error message
}{
	{idx: 0, exp: _lt, fn: func(x uint8) bool { return x < 0 }, msg: "x < 0"},
	{idx: 0, exp: _le, fn: func(x uint8) bool { return x <= 0 }, msg: "x <= 0"},
	{idx: 0, exp: _gt, fn: func(x uint8) bool { return x > 0 }, msg: "x > 0"},
	{idx: 0, exp: _ge, fn: func(x uint8) bool { return x >= 0 }, msg: "x >= 0"},
	{idx: 0, exp: _eq, fn: func(x uint8) bool { return x == 0 }, msg: "x == 0"},
	{idx: 0, exp: _ne, fn: func(x uint8) bool { return x != 0 }, msg: "x != 0"},
	{idx: 1, exp: _lt, fn: func(x uint8) bool { return x < 1 }, msg: "x < 1"},
	{idx: 1, exp: _le, fn: func(x uint8) bool { return x <= 1 }, msg: "x <= 1"},
	{idx: 1, exp: _gt, fn: func(x uint8) bool { return x > 1 }, msg: "x > 1"},
	{idx: 1, exp: _ge, fn: func(x uint8) bool { return x >= 1 }, msg: "x >= 1"},
	{idx: 1, exp: _eq, fn: func(x uint8) bool { return x == 1 }, msg: "x == 1"},
	{idx: 1, exp: _ne, fn: func(x uint8) bool { return x != 1 }, msg: "x != 1"},
	{idx: 2, exp: _lt, fn: func(x uint8) bool { return x < 126 }, msg: "x < 126"},
	{idx: 2, exp: _le, fn: func(x uint8) bool { return x <= 126 }, msg: "x <= 126"},
	{idx: 2, exp: _gt, fn: func(x uint8) bool { return x > 126 }, msg: "x > 126"},
	{idx: 2, exp: _ge, fn: func(x uint8) bool { return x >= 126 }, msg: "x >= 126"},
	{idx: 2, exp: _eq, fn: func(x uint8) bool { return x == 126 }, msg: "x == 126"},
	{idx: 2, exp: _ne, fn: func(x uint8) bool { return x != 126 }, msg: "x != 126"},
	{idx: 3, exp: _lt, fn: func(x uint8) bool { return x < 127 }, msg: "x < 127"},
	{idx: 3, exp: _le, fn: func(x uint8) bool { return x <= 127 }, msg: "x <= 127"},
	{idx: 3, exp: _gt, fn: func(x uint8) bool { return x > 127 }, msg: "x > 127"},
	{idx: 3, exp: _ge, fn: func(x uint8) bool { return x >= 127 }, msg: "x >= 127"},
	{idx: 3, exp: _eq, fn: func(x uint8) bool { return x == 127 }, msg: "x == 127"},
	{idx: 3, exp: _ne, fn: func(x uint8) bool { return x != 127 }, msg: "x != 127"},
	{idx: 4, exp: _lt, fn: func(x uint8) bool { return x < 128 }, msg: "x < 128"},
	{idx: 4, exp: _le, fn: func(x uint8) bool { return x <= 128 }, msg: "x <= 128"},
	{idx: 4, exp: _gt, fn: func(x uint8) bool { return x > 128 }, msg: "x > 128"},
	{idx: 4, exp: _ge, fn: func(x uint8) bool { return x >= 128 }, msg: "x >= 128"},
	{idx: 4, exp: _eq, fn: func(x uint8) bool { return x == 128 }, msg: "x == 128"},
	{idx: 4, exp: _ne, fn: func(x uint8) bool { return x != 128 }, msg: "x != 128"},
	{idx: 5, exp: _lt, fn: func(x uint8) bool { return x < 254 }, msg: "x < 254"},
	{idx: 5, exp: _le, fn: func(x uint8) bool { return x <= 254 }, msg: "x <= 254"},
	{idx: 5, exp: _gt, fn: func(x uint8) bool { return x > 254 }, msg: "x > 254"},
	{idx: 5, exp: _ge, fn: func(x uint8) bool { return x >= 254 }, msg: "x >= 254"},
	{idx: 5, exp: _eq, fn: func(x uint8) bool { return x == 254 }, msg: "x == 254"},
	{idx: 5, exp: _ne, fn: func(x uint8) bool { return x != 254 }, msg: "x != 254"},
	{idx: 6, exp: _lt, fn: func(x uint8) bool { return x < 255 }, msg: "x < 255"},
	{idx: 6, exp: _le, fn: func(x uint8) bool { return x <= 255 }, msg: "x <= 255"},
	{idx: 6, exp: _gt, fn: func(x uint8) bool { return x > 255 }, msg: "x > 255"},
	{idx: 6, exp: _ge, fn: func(x uint8) bool { return x >= 255 }, msg: "x >= 255"},
	{idx: 6, exp: _eq, fn: func(x uint8) bool { return x == 255 }, msg: "x == 255"},
	{idx: 6, exp: _ne, fn: func(x uint8) bool { return x != 255 }, msg: "x != 255"},
}

// int64 tests
var int64_vals = []int64{
	-9223372036854775808,
	-9223372036854775807,
	-2147483649,
	-2147483648,
	-2147483647,
	-32769,
	-32768,
	-32767,
	-129,
	-128,
	-127,
	-1,
	0,
	1,
	126,
	127,
	128,
	254,
	255,
	256,
	32766,
	32767,
	32768,
	65534,
	65535,
	65536,
	2147483646,
	2147483647,
	2147483648,
	4278190080,
	4294967294,
	4294967295,
	4294967296,
	1095216660480,
	9223372036854775806,
	9223372036854775807,
}
var int64_tests = []struct {
	idx int    // index of the constant used
	exp result // expected results
	fn  func(int64) bool
	msg string // test description for error message
}{
	{idx: 0, exp: _lt, fn: func(x int64) bool { return x < -9223372036854775808 }, msg: "x < -9223372036854775808"},
	{idx: 0, exp: _le, fn: func(x int64) bool { return x <= -9223372036854775808 }, msg: "x <= -9223372036854775808"},
	{idx: 0, exp: _gt, fn: func(x int64) bool { return x > -9223372036854775808 }, msg: "x > -9223372036854775808"},
	{idx: 0, exp: _ge, fn: func(x int64) bool { return x >= -9223372036854775808 }, msg: "x >= -9223372036854775808"},
	{idx: 0, exp: _eq, fn: func(x int64) bool { return x == -9223372036854775808 }, msg: "x == -9223372036854775808"},
	{idx: 0, exp: _ne, fn: func(x int64) bool { return x != -9223372036854775808 }, msg: "x != -9223372036854775808"},
	{idx: 1, exp: _lt, fn: func(x int64) bool { return x < -9223372036854775807 }, msg: "x < -9223372036854775807"},
	{idx: 1, exp: _le, fn: func(x int64) bool { return x <= -9223372036854775807 }, msg: "x <= -9223372036854775807"},
	{idx: 1, exp: _gt, fn: func(x int64) bool { return x > -9223372036854775807 }, msg: "x > -9223372036854775807"},
	{idx: 1, exp: _ge, fn: func(x int64) bool { return x >= -9223372036854775807 }, msg: "x >= -9223372036854775807"},
	{idx: 1, exp: _eq, fn: func(x int64) bool { return x == -9223372036854775807 }, msg: "x == -9223372036854775807"},
	{idx: 1, exp: _ne, fn: func(x int64) bool { return x != -9223372036854775807 }, msg: "x != -9223372036854775807"},
	{idx: 2, exp: _lt, fn: func(x int64) bool { return x < -2147483649 }, msg: "x < -2147483649"},
	{idx: 2, exp: _le, fn: func(x int64) bool { return x <= -2147483649 }, msg: "x <= -2147483649"},
	{idx: 2, exp: _gt, fn: func(x int64) bool { return x > -2147483649 }, msg: "x > -2147483649"},
	{idx: 2, exp: _ge, fn: func(x int64) bool { return x >= -2147483649 }, msg: "x >= -2147483649"},
	{idx: 2, exp: _eq, fn: func(x int64) bool { return x == -2147483649 }, msg: "x == -2147483649"},
	{idx: 2, exp: _ne, fn: func(x int64) bool { return x != -2147483649 }, msg: "x != -2147483649"},
	{idx: 3, exp: _lt, fn: func(x int64) bool { return x < -2147483648 }, msg: "x < -2147483648"},
	{idx: 3, exp: _le, fn: func(x int64) bool { return x <= -2147483648 }, msg: "x <= -2147483648"},
	{idx: 3, exp: _gt, fn: func(x int64) bool { return x > -2147483648 }, msg: "x > -2147483648"},
	{idx: 3, exp: _ge, fn: func(x int64) bool { return x >= -2147483648 }, msg: "x >= -2147483648"},
	{idx: 3, exp: _eq, fn: func(x int64) bool { return x == -2147483648 }, msg: "x == -2147483648"},
	{idx: 3, exp: _ne, fn: func(x int64) bool { return x != -2147483648 }, msg: "x != -2147483648"},
	{idx: 4, exp: _lt, fn: func(x int64) bool { return x < -2147483647 }, msg: "x < -2147483647"},
	{idx: 4, exp: _le, fn: func(x int64) bool { return x <= -2147483647 }, msg: "x <= -2147483647"},
	{idx: 4, exp: _gt, fn: func(x int64) bool { return x > -2147483647 }, msg: "x > -2147483647"},
	{idx: 4, exp: _ge, fn: func(x int64) bool { return x >= -2147483647 }, msg: "x >= -2147483647"},
	{idx: 4, exp: _eq, fn: func(x int64) bool { return x == -2147483647 }, msg: "x == -2147483647"},
	{idx: 4, exp: _ne, fn: func(x int64) bool { return x != -2147483647 }, msg: "x != -2147483647"},
	{idx: 5, exp: _lt, fn: func(x int64) bool { return x < -32769 }, msg: "x < -32769"},
	{idx: 5, exp: _le, fn: func(x int64) bool { return x <= -32769 }, msg: "x <= -32769"},
	{idx: 5, exp: _gt, fn: func(x int64) bool { return x > -32769 }, msg: "x > -32769"},
	{idx: 5, exp: _ge, fn: func(x int64) bool { return x >= -32769 }, msg: "x >= -32769"},
	{idx: 5, exp: _eq, fn: func(x int64) bool { return x == -32769 }, msg: "x == -32769"},
	{idx: 5, exp: _ne, fn: func(x int64) bool { return x != -32769 }, msg: "x != -32769"},
	{idx: 6, exp: _lt, fn: func(x int64) bool { return x < -32768 }, msg: "x < -32768"},
	{idx: 6, exp: _le, fn: func(x int64) bool { return x <= -32768 }, msg: "x <= -32768"},
	{idx: 6, exp: _gt, fn: func(x int64) bool { return x > -32768 }, msg: "x > -32768"},
	{idx: 6, exp: _ge, fn: func(x int64) bool { return x >= -32768 }, msg: "x >= -32768"},
	{idx: 6, exp: _eq, fn: func(x int64) bool { return x == -32768 }, msg: "x == -32768"},
	{idx: 6, exp: _ne, fn: func(x int64) bool { return x != -32768 }, msg: "x != -32768"},
	{idx: 7, exp: _lt, fn: func(x int64) bool { return x < -32767 }, msg: "x < -32767"},
	{idx: 7, exp: _le, fn: func(x int64) bool { return x <= -32767 }, msg: "x <= -32767"},
	{idx: 7, exp: _gt, fn: func(x int64) bool { return x > -32767 }, msg: "x > -32767"},
	{idx: 7, exp: _ge, fn: func(x int64) bool { return x >= -32767 }, msg: "x >= -32767"},
	{idx: 7, exp: _eq, fn: func(x int64) bool { return x == -32767 }, msg: "x == -32767"},
	{idx: 7, exp: _ne, fn: func(x int64) bool { return x != -32767 }, msg: "x != -32767"},
	{idx: 8, exp: _lt, fn: func(x int64) bool { return x < -129 }, msg: "x < -129"},
	{idx: 8, exp: _le, fn: func(x int64) bool { return x <= -129 }, msg: "x <= -129"},
	{idx: 8, exp: _gt, fn: func(x int64) bool { return x > -129 }, msg: "x > -129"},
	{idx: 8, exp: _ge, fn: func(x int64) bool { return x >= -129 }, msg: "x >= -129"},
	{idx: 8, exp: _eq, fn: func(x int64) bool { return x == -129 }, msg: "x == -129"},
	{idx: 8, exp: _ne, fn: func(x int64) bool { return x != -129 }, msg: "x != -129"},
	{idx: 9, exp: _lt, fn: func(x int64) bool { return x < -128 }, msg: "x < -128"},
	{idx: 9, exp: _le, fn: func(x int64) bool { return x <= -128 }, msg: "x <= -128"},
	{idx: 9, exp: _gt, fn: func(x int64) bool { return x > -128 }, msg: "x > -128"},
	{idx: 9, exp: _ge, fn: func(x int64) bool { return x >= -128 }, msg: "x >= -128"},
	{idx: 9, exp: _eq, fn: func(x int64) bool { return x == -128 }, msg: "x == -128"},
	{idx: 9, exp: _ne, fn: func(x int64) bool { return x != -128 }, msg: "x != -128"},
	{idx: 10, exp: _lt, fn: func(x int64) bool { return x < -127 }, msg: "x < -127"},
	{idx: 10, exp: _le, fn: func(x int64) bool { return x <= -127 }, msg: "x <= -127"},
	{idx: 10, exp: _gt, fn: func(x int64) bool { return x > -127 }, msg: "x > -127"},
	{idx: 10, exp: _ge, fn: func(x int64) bool { return x >= -127 }, msg: "x >= -127"},
	{idx: 10, exp: _eq, fn: func(x int64) bool { return x == -127 }, msg: "x == -127"},
	{idx: 10, exp: _ne, fn: func(x int64) bool { return x != -127 }, msg: "x != -127"},
	{idx: 11, exp: _lt, fn: func(x int64) bool { return x < -1 }, msg: "x < -1"},
	{idx: 11, exp: _le, fn: func(x int64) bool { return x <= -1 }, msg: "x <= -1"},
	{idx: 11, exp: _gt, fn: func(x int64) bool { return x > -1 }, msg: "x > -1"},
	{idx: 11, exp: _ge, fn: func(x int64) bool { return x >= -1 }, msg: "x >= -1"},
	{idx: 11, exp: _eq, fn: func(x int64) bool { return x == -1 }, msg: "x == -1"},
	{idx: 11, exp: _ne, fn: func(x int64) bool { return x != -1 }, msg: "x != -1"},
	{idx: 12, exp: _lt, fn: func(x int64) bool { return x < 0 }, msg: "x < 0"},
	{idx: 12, exp: _le, fn: func(x int64) bool { return x <= 0 }, msg: "x <= 0"},
	{idx: 12, exp: _gt, fn: func(x int64) bool { return x > 0 }, msg: "x > 0"},
	{idx: 12, exp: _ge, fn: func(x int64) bool { return x >= 0 }, msg: "x >= 0"},
	{idx: 12, exp: _eq, fn: func(x int64) bool { return x == 0 }, msg: "x == 0"},
	{idx: 12, exp: _ne, fn: func(x int64) bool { return x != 0 }, msg: "x != 0"},
	{idx: 13, exp: _lt, fn: func(x int64) bool { return x < 1 }, msg: "x < 1"},
	{idx: 13, exp: _le, fn: func(x int64) bool { return x <= 1 }, msg: "x <= 1"},
	{idx: 13, exp: _gt, fn: func(x int64) bool { return x > 1 }, msg: "x > 1"},
	{idx: 13, exp: _ge, fn: func(x int64) bool { return x >= 1 }, msg: "x >= 1"},
	{idx: 13, exp: _eq, fn: func(x int64) bool { return x == 1 }, msg: "x == 1"},
	{idx: 13, exp: _ne, fn: func(x int64) bool { return x != 1 }, msg: "x != 1"},
	{idx: 14, exp: _lt, fn: func(x int64) bool { return x < 126 }, msg: "x < 126"},
	{idx: 14, exp: _le, fn: func(x int64) bool { return x <= 126 }, msg: "x <= 126"},
	{idx: 14, exp: _gt, fn: func(x int64) bool { return x > 126 }, msg: "x > 126"},
	{idx: 14, exp: _ge, fn: func(x int64) bool { return x >= 126 }, msg: "x >= 126"},
	{idx: 14, exp: _eq, fn: func(x int64) bool { return x == 126 }, msg: "x == 126"},
	{idx: 14, exp: _ne, fn: func(x int64) bool { return x != 126 }, msg: "x != 126"},
	{idx: 15, exp: _lt, fn: func(x int64) bool { return x < 127 }, msg: "x < 127"},
	{idx: 15, exp: _le, fn: func(x int64) bool { return x <= 127 }, msg: "x <= 127"},
	{idx: 15, exp: _gt, fn: func(x int64) bool { return x > 127 }, msg: "x > 127"},
	{idx: 15, exp: _ge, fn: func(x int64) bool { return x >= 127 }, msg: "x >= 127"},
	{idx: 15, exp: _eq, fn: func(x int64) bool { return x == 127 }, msg: "x == 127"},
	{idx: 15, exp: _ne, fn: func(x int64) bool { return x != 127 }, msg: "x != 127"},
	{idx: 16, exp: _lt, fn: func(x int64) bool { return x < 128 }, msg: "x < 128"},
	{idx: 16, exp: _le, fn: func(x int64) bool { return x <= 128 }, msg: "x <= 128"},
	{idx: 16, exp: _gt, fn: func(x int64) bool { return x > 128 }, msg: "x > 128"},
	{idx: 16, exp: _ge, fn: func(x int64) bool { return x >= 128 }, msg: "x >= 128"},
	{idx: 16, exp: _eq, fn: func(x int64) bool { return x == 128 }, msg: "x == 128"},
	{idx: 16, exp: _ne, fn: func(x int64) bool { return x != 128 }, msg: "x != 128"},
	{idx: 17, exp: _lt, fn: func(x int64) bool { return x < 254 }, msg: "x < 254"},
	{idx: 17, exp: _le, fn: func(x int64) bool { return x <= 254 }, msg: "x <= 254"},
	{idx: 17, exp: _gt, fn: func(x int64) bool { return x > 254 }, msg: "x > 254"},
	{idx: 17, exp: _ge, fn: func(x int64) bool { return x >= 254 }, msg: "x >= 254"},
	{idx: 17, exp: _eq, fn: func(x int64) bool { return x == 254 }, msg: "x == 254"},
	{idx: 17, exp: _ne, fn: func(x int64) bool { return x != 254 }, msg: "x != 254"},
	{idx: 18, exp: _lt, fn: func(x int64) bool { return x < 255 }, msg: "x < 255"},
	{idx: 18, exp: _le, fn: func(x int64) bool { return x <= 255 }, msg: "x <= 255"},
	{idx: 18, exp: _gt, fn: func(x int64) bool { return x > 255 }, msg: "x > 255"},
	{idx: 18, exp: _ge, fn: func(x int64) bool { return x >= 255 }, msg: "x >= 255"},
	{idx: 18, exp: _eq, fn: func(x int64) bool { return x == 255 }, msg: "x == 255"},
	{idx: 18, exp: _ne, fn: func(x int64) bool { return x != 255 }, msg: "x != 255"},
	{idx: 19, exp: _lt, fn: func(x int64) bool { return x < 256 }, msg: "x < 256"},
	{idx: 19, exp: _le, fn: func(x int64) bool { return x <= 256 }, msg: "x <= 256"},
	{idx: 19, exp: _gt, fn: func(x int64) bool { return x > 256 }, msg: "x > 256"},
	{idx: 19, exp: _ge, fn: func(x int64) bool { return x >= 256 }, msg: "x >= 256"},
	{idx: 19, exp: _eq, fn: func(x int64) bool { return x == 256 }, msg: "x == 256"},
	{idx: 19, exp: _ne, fn: func(x int64) bool { return x != 256 }, msg: "x != 256"},
	{idx: 20, exp: _lt, fn: func(x int64) bool { return x < 32766 }, msg: "x < 32766"},
	{idx: 20, exp: _le, fn: func(x int64) bool { return x <= 32766 }, msg: "x <= 32766"},
	{idx: 20, exp: _gt, fn: func(x int64) bool { return x > 32766 }, msg: "x > 32766"},
	{idx: 20, exp: _ge, fn: func(x int64) bool { return x >= 32766 }, msg: "x >= 32766"},
	{idx: 20, exp: _eq, fn: func(x int64) bool { return x == 32766 }, msg: "x == 32766"},
	{idx: 20, exp: _ne, fn: func(x int64) bool { return x != 32766 }, msg: "x != 32766"},
	{idx: 21, exp: _lt, fn: func(x int64) bool { return x < 32767 }, msg: "x < 32767"},
	{idx: 21, exp: _le, fn: func(x int64) bool { return x <= 32767 }, msg: "x <= 32767"},
	{idx: 21, exp: _gt, fn: func(x int64) bool { return x > 32767 }, msg: "x > 32767"},
	{idx: 21, exp: _ge, fn: func(x int64) bool { return x >= 32767 }, msg: "x >= 32767"},
	{idx: 21, exp: _eq, fn: func(x int64) bool { return x == 32767 }, msg: "x == 32767"},
	{idx: 21, exp: _ne, fn: func(x int64) bool { return x != 32767 }, msg: "x != 32767"},
	{idx: 22, exp: _lt, fn: func(x int64) bool { return x < 32768 }, msg: "x < 32768"},
	{idx: 22, exp: _le, fn: func(x int64) bool { return x <= 32768 }, msg: "x <= 32768"},
	{idx: 22, exp: _gt, fn: func(x int64) bool { return x > 32768 }, msg: "x > 32768"},
	{idx: 22, exp: _ge, fn: func(x int64) bool { return x >= 32768 }, msg: "x >= 32768"},
	{idx: 22, exp: _eq, fn: func(x int64) bool { return x == 32768 }, msg: "x == 32768"},
	{idx: 22, exp: _ne, fn: func(x int64) bool { return x != 32768 }, msg: "x != 32768"},
	{idx: 23, exp: _lt, fn: func(x int64) bool { return x < 65534 }, msg: "x < 65534"},
	{idx: 23, exp: _le, fn: func(x int64) bool { return x <= 65534 }, msg: "x <= 65534"},
	{idx: 23, exp: _gt, fn: func(x int64) bool { return x > 65534 }, msg: "x > 65534"},
	{idx: 23, exp: _ge, fn: func(x int64) bool { return x >= 65534 }, msg: "x >= 65534"},
	{idx: 23, exp: _eq, fn: func(x int64) bool { return x == 65534 }, msg: "x == 65534"},
	{idx: 23, exp: _ne, fn: func(x int64) bool { return x != 65534 }, msg: "x != 65534"},
	{idx: 24, exp: _lt, fn: func(x int64) bool { return x < 65535 }, msg: "x < 65535"},
	{idx: 24, exp: _le, fn: func(x int64) bool { return x <= 65535 }, msg: "x <= 65535"},
	{idx: 24, exp: _gt, fn: func(x int64) bool { return x > 65535 }, msg: "x > 65535"},
	{idx: 24, exp: _ge, fn: func(x int64) bool { return x >= 65535 }, msg: "x >= 65535"},
	{idx: 24, exp: _eq, fn: func(x int64) bool { return x == 65535 }, msg: "x == 65535"},
	{idx: 24, exp: _ne, fn: func(x int64) bool { return x != 65535 }, msg: "x != 65535"},
	{idx: 25, exp: _lt, fn: func(x int64) bool { return x < 65536 }, msg: "x < 65536"},
	{idx: 25, exp: _le, fn: func(x int64) bool { return x <= 65536 }, msg: "x <= 65536"},
	{idx: 25, exp: _gt, fn: func(x int64) bool { return x > 65536 }, msg: "x > 65536"},
	{idx: 25, exp: _ge, fn: func(x int64) bool { return x >= 65536 }, msg: "x >= 65536"},
	{idx: 25, exp: _eq, fn: func(x int64) bool { return x == 65536 }, msg: "x == 65536"},
	{idx: 25, exp: _ne, fn: func(x int64) bool { return x != 65536 }, msg: "x != 65536"},
	{idx: 26, exp: _lt, fn: func(x int64) bool { return x < 2147483646 }, msg: "x < 2147483646"},
	{idx: 26, exp: _le, fn: func(x int64) bool { return x <= 2147483646 }, msg: "x <= 2147483646"},
	{idx: 26, exp: _gt, fn: func(x int64) bool { return x > 2147483646 }, msg: "x > 2147483646"},
	{idx: 26, exp: _ge, fn: func(x int64) bool { return x >= 2147483646 }, msg: "x >= 2147483646"},
	{idx: 26, exp: _eq, fn: func(x int64) bool { return x == 2147483646 }, msg: "x == 2147483646"},
	{idx: 26, exp: _ne, fn: func(x int64) bool { return x != 2147483646 }, msg: "x != 2147483646"},
	{idx: 27, exp: _lt, fn: func(x int64) bool { return x < 2147483647 }, msg: "x < 2147483647"},
	{idx: 27, exp: _le, fn: func(x int64) bool { return x <= 2147483647 }, msg: "x <= 2147483647"},
	{idx: 27, exp: _gt, fn: func(x int64) bool { return x > 2147483647 }, msg: "x > 2147483647"},
	{idx: 27, exp: _ge, fn: func(x int64) bool { return x >= 2147483647 }, msg: "x >= 2147483647"},
	{idx: 27, exp: _eq, fn: func(x int64) bool { return x == 2147483647 }, msg: "x == 2147483647"},
	{idx: 27, exp: _ne, fn: func(x int64) bool { return x != 2147483647 }, msg: "x != 2147483647"},
	{idx: 28, exp: _lt, fn: func(x int64) bool { return x < 2147483648 }, msg: "x < 2147483648"},
	{idx: 28, exp: _le, fn: func(x int64) bool { return x <= 2147483648 }, msg: "x <= 2147483648"},
	{idx: 28, exp: _gt, fn: func(x int64) bool { return x > 2147483648 }, msg: "x > 2147483648"},
	{idx: 28, exp: _ge, fn: func(x int64) bool { return x >= 2147483648 }, msg: "x >= 2147483648"},
	{idx: 28, exp: _eq, fn: func(x int64) bool { return x == 2147483648 }, msg: "x == 2147483648"},
	{idx: 28, exp: _ne, fn: func(x int64) bool { return x != 2147483648 }, msg: "x != 2147483648"},
	{idx: 29, exp: _lt, fn: func(x int64) bool { return x < 4278190080 }, msg: "x < 4278190080"},
	{idx: 29, exp: _le, fn: func(x int64) bool { return x <= 4278190080 }, msg: "x <= 4278190080"},
	{idx: 29, exp: _gt, fn: func(x int64) bool { return x > 4278190080 }, msg: "x > 4278190080"},
	{idx: 29, exp: _ge, fn: func(x int64) bool { return x >= 4278190080 }, msg: "x >= 4278190080"},
	{idx: 29, exp: _eq, fn: func(x int64) bool { return x == 4278190080 }, msg: "x == 4278190080"},
	{idx: 29, exp: _ne, fn: func(x int64) bool { return x != 4278190080 }, msg: "x != 4278190080"},
	{idx: 30, exp: _lt, fn: func(x int64) bool { return x < 4294967294 }, msg: "x < 4294967294"},
	{idx: 30, exp: _le, fn: func(x int64) bool { return x <= 4294967294 }, msg: "x <= 4294967294"},
	{idx: 30, exp: _gt, fn: func(x int64) bool { return x > 4294967294 }, msg: "x > 4294967294"},
	{idx: 30, exp: _ge, fn: func(x int64) bool { return x >= 4294967294 }, msg: "x >= 4294967294"},
	{idx: 30, exp: _eq, fn: func(x int64) bool { return x == 4294967294 }, msg: "x == 4294967294"},
	{idx: 30, exp: _ne, fn: func(x int64) bool { return x != 4294967294 }, msg: "x != 4294967294"},
	{idx: 31, exp: _lt, fn: func(x int64) bool { return x < 4294967295 }, msg: "x < 4294967295"},
	{idx: 31, exp: _le, fn: func(x int64) bool { return x <= 4294967295 }, msg: "x <= 4294967295"},
	{idx: 31, exp: _gt, fn: func(x int64) bool { return x > 4294967295 }, msg: "x > 4294967295"},
	{idx: 31, exp: _ge, fn: func(x int64) bool { return x >= 4294967295 }, msg: "x >= 4294967295"},
	{idx: 31, exp: _eq, fn: func(x int64) bool { return x == 4294967295 }, msg: "x == 4294967295"},
	{idx: 31, exp: _ne, fn: func(x int64) bool { return x != 4294967295 }, msg: "x != 4294967295"},
	{idx: 32, exp: _lt, fn: func(x int64) bool { return x < 4294967296 }, msg: "x < 4294967296"},
	{idx: 32, exp: _le, fn: func(x int64) bool { return x <= 4294967296 }, msg: "x <= 4294967296"},
	{idx: 32, exp: _gt, fn: func(x int64) bool { return x > 4294967296 }, msg: "x > 4294967296"},
	{idx: 32, exp: _ge, fn: func(x int64) bool { return x >= 4294967296 }, msg: "x >= 4294967296"},
	{idx: 32, exp: _eq, fn: func(x int64) bool { return x == 4294967296 }, msg: "x == 4294967296"},
	{idx: 32, exp: _ne, fn: func(x int64) bool { return x != 4294967296 }, msg: "x != 4294967296"},
	{idx: 33, exp: _lt, fn: func(x int64) bool { return x < 1095216660480 }, msg: "x < 1095216660480"},
	{idx: 33, exp: _le, fn: func(x int64) bool { return x <= 1095216660480 }, msg: "x <= 1095216660480"},
	{idx: 33, exp: _gt, fn: func(x int64) bool { return x > 1095216660480 }, msg: "x > 1095216660480"},
	{idx: 33, exp: _ge, fn: func(x int64) bool { return x >= 1095216660480 }, msg: "x >= 1095216660480"},
	{idx: 33, exp: _eq, fn: func(x int64) bool { return x == 1095216660480 }, msg: "x == 1095216660480"},
	{idx: 33, exp: _ne, fn: func(x int64) bool { return x != 1095216660480 }, msg: "x != 1095216660480"},
	{idx: 34, exp: _lt, fn: func(x int64) bool { return x < 9223372036854775806 }, msg: "x < 9223372036854775806"},
	{idx: 34, exp: _le, fn: func(x int64) bool { return x <= 9223372036854775806 }, msg: "x <= 9223372036854775806"},
	{idx: 34, exp: _gt, fn: func(x int64) bool { return x > 9223372036854775806 }, msg: "x > 9223372036854775806"},
	{idx: 34, exp: _ge, fn: func(x int64) bool { return x >= 9223372036854775806 }, msg: "x >= 9223372036854775806"},
	{idx: 34, exp: _eq, fn: func(x int64) bool { return x == 9223372036854775806 }, msg: "x == 9223372036854775806"},
	{idx: 34, exp: _ne, fn: func(x int64) bool { return x != 9223372036854775806 }, msg: "x != 9223372036854775806"},
	{idx: 35, exp: _lt, fn: func(x int64) bool { return x < 9223372036854775807 }, msg: "x < 9223372036854775807"},
	{idx: 35, exp: _le, fn: func(x int64) bool { return x <= 9223372036854775807 }, msg: "x <= 9223372036854775807"},
	{idx: 35, exp: _gt, fn: func(x int64) bool { return x > 9223372036854775807 }, msg: "x > 9223372036854775807"},
	{idx: 35, exp: _ge, fn: func(x int64) bool { return x >= 9223372036854775807 }, msg: "x >= 9223372036854775807"},
	{idx: 35, exp: _eq, fn: func(x int64) bool { return x == 9223372036854775807 }, msg: "x == 9223372036854775807"},
	{idx: 35, exp: _ne, fn: func(x int64) bool { return x != 9223372036854775807 }, msg: "x != 9223372036854775807"},
}

// int32 tests
var int32_vals = []int32{
	-2147483648,
	-2147483647,
	-32769,
	-32768,
	-32767,
	-129,
	-128,
	-127,
	-1,
	0,
	1,
	126,
	127,
	128,
	254,
	255,
	256,
	32766,
	32767,
	32768,
	65534,
	65535,
	65536,
	2147483646,
	2147483647,
}
var int32_tests = []struct {
	idx int    // index of the constant used
	exp result // expected results
	fn  func(int32) bool
	msg string // test description for error message
}{
	{idx: 0, exp: _lt, fn: func(x int32) bool { return x < -2147483648 }, msg: "x < -2147483648"},
	{idx: 0, exp: _le, fn: func(x int32) bool { return x <= -2147483648 }, msg: "x <= -2147483648"},
	{idx: 0, exp: _gt, fn: func(x int32) bool { return x > -2147483648 }, msg: "x > -2147483648"},
	{idx: 0, exp: _ge, fn: func(x int32) bool { return x >= -2147483648 }, msg: "x >= -2147483648"},
	{idx: 0, exp: _eq, fn: func(x int32) bool { return x == -2147483648 }, msg: "x == -2147483648"},
	{idx: 0, exp: _ne, fn: func(x int32) bool { return x != -2147483648 }, msg: "x != -2147483648"},
	{idx: 1, exp: _lt, fn: func(x int32) bool { return x < -2147483647 }, msg: "x < -2147483647"},
	{idx: 1, exp: _le, fn: func(x int32) bool { return x <= -2147483647 }, msg: "x <= -2147483647"},
	{idx: 1, exp: _gt, fn: func(x int32) bool { return x > -2147483647 }, msg: "x > -2147483647"},
	{idx: 1, exp: _ge, fn: func(x int32) bool { return x >= -2147483647 }, msg: "x >= -2147483647"},
	{idx: 1, exp: _eq, fn: func(x int32) bool { return x == -2147483647 }, msg: "x == -2147483647"},
	{idx: 1, exp: _ne, fn: func(x int32) bool { return x != -2147483647 }, msg: "x != -2147483647"},
	{idx: 2, exp: _lt, fn: func(x int32) bool { return x < -32769 }, msg: "x < -32769"},
	{idx: 2, exp: _le, fn: func(x int32) bool { return x <= -32769 }, msg: "x <= -32769"},
	{idx: 2, exp: _gt, fn: func(x int32) bool { return x > -32769 }, msg: "x > -32769"},
	{idx: 2, exp: _ge, fn: func(x int32) bool { return x >= -32769 }, msg: "x >= -32769"},
	{idx: 2, exp: _eq, fn: func(x int32) bool { return x == -32769 }, msg: "x == -32769"},
	{idx: 2, exp: _ne, fn: func(x int32) bool { return x != -32769 }, msg: "x != -32769"},
	{idx: 3, exp: _lt, fn: func(x int32) bool { return x < -32768 }, msg: "x < -32768"},
	{idx: 3, exp: _le, fn: func(x int32) bool { return x <= -32768 }, msg: "x <= -32768"},
	{idx: 3, exp: _gt, fn: func(x int32) bool { return x > -32768 }, msg: "x > -32768"},
	{idx: 3, exp: _ge, fn: func(x int32) bool { return x >= -32768 }, msg: "x >= -32768"},
	{idx: 3, exp: _eq, fn: func(x int32) bool { return x == -32768 }, msg: "x == -32768"},
	{idx: 3, exp: _ne, fn: func(x int32) bool { return x != -32768 }, msg: "x != -32768"},
	{idx: 4, exp: _lt, fn: func(x int32) bool { return x < -32767 }, msg: "x < -32767"},
	{idx: 4, exp: _le, fn: func(x int32) bool { return x <= -32767 }, msg: "x <= -32767"},
	{idx: 4, exp: _gt, fn: func(x int32) bool { return x > -32767 }, msg: "x > -32767"},
	{idx: 4, exp: _ge, fn: func(x int32) bool { return x >= -32767 }, msg: "x >= -32767"},
	{idx: 4, exp: _eq, fn: func(x int32) bool { return x == -32767 }, msg: "x == -32767"},
	{idx: 4, exp: _ne, fn: func(x int32) bool { return x != -32767 }, msg: "x != -32767"},
	{idx: 5, exp: _lt, fn: func(x int32) bool { return x < -129 }, msg: "x < -129"},
	{idx: 5, exp: _le, fn: func(x int32) bool { return x <= -129 }, msg: "x <= -129"},
	{idx: 5, exp: _gt, fn: func(x int32) bool { return x > -129 }, msg: "x > -129"},
	{idx: 5, exp: _ge, fn: func(x int32) bool { return x >= -129 }, msg: "x >= -129"},
	{idx: 5, exp: _eq, fn: func(x int32) bool { return x == -129 }, msg: "x == -129"},
	{idx: 5, exp: _ne, fn: func(x int32) bool { return x != -129 }, msg: "x != -129"},
	{idx: 6, exp: _lt, fn: func(x int32) bool { return x < -128 }, msg: "x < -128"},
	{idx: 6, exp: _le, fn: func(x int32) bool { return x <= -128 }, msg: "x <= -128"},
	{idx: 6, exp: _gt, fn: func(x int32) bool { return x > -128 }, msg: "x > -128"},
	{idx: 6, exp: _ge, fn: func(x int32) bool { return x >= -128 }, msg: "x >= -128"},
	{idx: 6, exp: _eq, fn: func(x int32) bool { return x == -128 }, msg: "x == -128"},
	{idx: 6, exp: _ne, fn: func(x int32) bool { return x != -128 }, msg: "x != -128"},
	{idx: 7, exp: _lt, fn: func(x int32) bool { return x < -127 }, msg: "x < -127"},
	{idx: 7, exp: _le, fn: func(x int32) bool { return x <= -127 }, msg: "x <= -127"},
	{idx: 7, exp: _gt, fn: func(x int32) bool { return x > -127 }, msg: "x > -127"},
	{idx: 7, exp: _ge, fn: func(x int32) bool { return x >= -127 }, msg: "x >= -127"},
	{idx: 7, exp: _eq, fn: func(x int32) bool { return x == -127 }, msg: "x == -127"},
	{idx: 7, exp: _ne, fn: func(x int32) bool { return x != -127 }, msg: "x != -127"},
	{idx: 8, exp: _lt, fn: func(x int32) bool { return x < -1 }, msg: "x < -1"},
	{idx: 8, exp: _le, fn: func(x int32) bool { return x <= -1 }, msg: "x <= -1"},
	{idx: 8, exp: _gt, fn: func(x int32) bool { return x > -1 }, msg: "x > -1"},
	{idx: 8, exp: _ge, fn: func(x int32) bool { return x >= -1 }, msg: "x >= -1"},
	{idx: 8, exp: _eq, fn: func(x int32) bool { return x == -1 }, msg: "x == -1"},
	{idx: 8, exp: _ne, fn: func(x int32) bool { return x != -1 }, msg: "x != -1"},
	{idx: 9, exp: _lt, fn: func(x int32) bool { return x < 0 }, msg: "x < 0"},
	{idx: 9, exp: _le, fn: func(x int32) bool { return x <= 0 }, msg: "x <= 0"},
	{idx: 9, exp: _gt, fn: func(x int32) bool { return x > 0 }, msg: "x > 0"},
	{idx: 9, exp: _ge, fn: func(x int32) bool { return x >= 0 }, msg: "x >= 0"},
	{idx: 9, exp: _eq, fn: func(x int32) bool { return x == 0 }, msg: "x == 0"},
	{idx: 9, exp: _ne, fn: func(x int32) bool { return x != 0 }, msg: "x != 0"},
	{idx: 10, exp: _lt, fn: func(x int32) bool { return x < 1 }, msg: "x < 1"},
	{idx: 10, exp: _le, fn: func(x int32) bool { return x <= 1 }, msg: "x <= 1"},
	{idx: 10, exp: _gt, fn: func(x int32) bool { return x > 1 }, msg: "x > 1"},
	{idx: 10, exp: _ge, fn: func(x int32) bool { return x >= 1 }, msg: "x >= 1"},
	{idx: 10, exp: _eq, fn: func(x int32) bool { return x == 1 }, msg: "x == 1"},
	{idx: 10, exp: _ne, fn: func(x int32) bool { return x != 1 }, msg: "x != 1"},
	{idx: 11, exp: _lt, fn: func(x int32) bool { return x < 126 }, msg: "x < 126"},
	{idx: 11, exp: _le, fn: func(x int32) bool { return x <= 126 }, msg: "x <= 126"},
	{idx: 11, exp: _gt, fn: func(x int32) bool { return x > 126 }, msg: "x > 126"},
	{idx: 11, exp: _ge, fn: func(x int32) bool { return x >= 126 }, msg: "x >= 126"},
	{idx: 11, exp: _eq, fn: func(x int32) bool { return x == 126 }, msg: "x == 126"},
	{idx: 11, exp: _ne, fn: func(x int32) bool { return x != 126 }, msg: "x != 126"},
	{idx: 12, exp: _lt, fn: func(x int32) bool { return x < 127 }, msg: "x < 127"},
	{idx: 12, exp: _le, fn: func(x int32) bool { return x <= 127 }, msg: "x <= 127"},
	{idx: 12, exp: _gt, fn: func(x int32) bool { return x > 127 }, msg: "x > 127"},
	{idx: 12, exp: _ge, fn: func(x int32) bool { return x >= 127 }, msg: "x >= 127"},
	{idx: 12, exp: _eq, fn: func(x int32) bool { return x == 127 }, msg: "x == 127"},
	{idx: 12, exp: _ne, fn: func(x int32) bool { return x != 127 }, msg: "x != 127"},
	{idx: 13, exp: _lt, fn: func(x int32) bool { return x < 128 }, msg: "x < 128"},
	{idx: 13, exp: _le, fn: func(x int32) bool { return x <= 128 }, msg: "x <= 128"},
	{idx: 13, exp: _gt, fn: func(x int32) bool { return x > 128 }, msg: "x > 128"},
	{idx: 13, exp: _ge, fn: func(x int32) bool { return x >= 128 }, msg: "x >= 128"},
	{idx: 13, exp: _eq, fn: func(x int32) bool { return x == 128 }, msg: "x == 128"},
	{idx: 13, exp: _ne, fn: func(x int32) bool { return x != 128 }, msg: "x != 128"},
	{idx: 14, exp: _lt, fn: func(x int32) bool { return x < 254 }, msg: "x < 254"},
	{idx: 14, exp: _le, fn: func(x int32) bool { return x <= 254 }, msg: "x <= 254"},
	{idx: 14, exp: _gt, fn: func(x int32) bool { return x > 254 }, msg: "x > 254"},
	{idx: 14, exp: _ge, fn: func(x int32) bool { return x >= 254 }, msg: "x >= 254"},
	{idx: 14, exp: _eq, fn: func(x int32) bool { return x == 254 }, msg: "x == 254"},
	{idx: 14, exp: _ne, fn: func(x int32) bool { return x != 254 }, msg: "x != 254"},
	{idx: 15, exp: _lt, fn: func(x int32) bool { return x < 255 }, msg: "x < 255"},
	{idx: 15, exp: _le, fn: func(x int32) bool { return x <= 255 }, msg: "x <= 255"},
	{idx: 15, exp: _gt, fn: func(x int32) bool { return x > 255 }, msg: "x > 255"},
	{idx: 15, exp: _ge, fn: func(x int32) bool { return x >= 255 }, msg: "x >= 255"},
	{idx: 15, exp: _eq, fn: func(x int32) bool { return x == 255 }, msg: "x == 255"},
	{idx: 15, exp: _ne, fn: func(x int32) bool { return x != 255 }, msg: "x != 255"},
	{idx: 16, exp: _lt, fn: func(x int32) bool { return x < 256 }, msg: "x < 256"},
	{idx: 16, exp: _le, fn: func(x int32) bool { return x <= 256 }, msg: "x <= 256"},
	{idx: 16, exp: _gt, fn: func(x int32) bool { return x > 256 }, msg: "x > 256"},
	{idx: 16, exp: _ge, fn: func(x int32) bool { return x >= 256 }, msg: "x >= 256"},
	{idx: 16, exp: _eq, fn: func(x int32) bool { return x == 256 }, msg: "x == 256"},
	{idx: 16, exp: _ne, fn: func(x int32) bool { return x != 256 }, msg: "x != 256"},
	{idx: 17, exp: _lt, fn: func(x int32) bool { return x < 32766 }, msg: "x < 32766"},
	{idx: 17, exp: _le, fn: func(x int32) bool { return x <= 32766 }, msg: "x <= 32766"},
	{idx: 17, exp: _gt, fn: func(x int32) bool { return x > 32766 }, msg: "x > 32766"},
	{idx: 17, exp: _ge, fn: func(x int32) bool { return x >= 32766 }, msg: "x >= 32766"},
	{idx: 17, exp: _eq, fn: func(x int32) bool { return x == 32766 }, msg: "x == 32766"},
	{idx: 17, exp: _ne, fn: func(x int32) bool { return x != 32766 }, msg: "x != 32766"},
	{idx: 18, exp: _lt, fn: func(x int32) bool { return x < 32767 }, msg: "x < 32767"},
	{idx: 18, exp: _le, fn: func(x int32) bool { return x <= 32767 }, msg: "x <= 32767"},
	{idx: 18, exp: _gt, fn: func(x int32) bool { return x > 32767 }, msg: "x > 32767"},
	{idx: 18, exp: _ge, fn: func(x int32) bool { return x >= 32767 }, msg: "x >= 32767"},
	{idx: 18, exp: _eq, fn: func(x int32) bool { return x == 32767 }, msg: "x == 32767"},
	{idx: 18, exp: _ne, fn: func(x int32) bool { return x != 32767 }, msg: "x != 32767"},
	{idx: 19, exp: _lt, fn: func(x int32) bool { return x < 32768 }, msg: "x < 32768"},
	{idx: 19, exp: _le, fn: func(x int32) bool { return x <= 32768 }, msg: "x <= 32768"},
	{idx: 19, exp: _gt, fn: func(x int32) bool { return x > 32768 }, msg: "x > 32768"},
	{idx: 19, exp: _ge, fn: func(x int32) bool { return x >= 32768 }, msg: "x >= 32768"},
	{idx: 19, exp: _eq, fn: func(x int32) bool { return x == 32768 }, msg: "x == 32768"},
	{idx: 19, exp: _ne, fn: func(x int32) bool { return x != 32768 }, msg: "x != 32768"},
	{idx: 20, exp: _lt, fn: func(x int32) bool { return x < 65534 }, msg: "x < 65534"},
	{idx: 20, exp: _le, fn: func(x int32) bool { return x <= 65534 }, msg: "x <= 65534"},
	{idx: 20, exp: _gt, fn: func(x int32) bool { return x > 65534 }, msg: "x > 65534"},
	{idx: 20, exp: _ge, fn: func(x int32) bool { return x >= 65534 }, msg: "x >= 65534"},
	{idx: 20, exp: _eq, fn: func(x int32) bool { return x == 65534 }, msg: "x == 65534"},
	{idx: 20, exp: _ne, fn: func(x int32) bool { return x != 65534 }, msg: "x != 65534"},
	{idx: 21, exp: _lt, fn: func(x int32) bool { return x < 65535 }, msg: "x < 65535"},
	{idx: 21, exp: _le, fn: func(x int32) bool { return x <= 65535 }, msg: "x <= 65535"},
	{idx: 21, exp: _gt, fn: func(x int32) bool { return x > 65535 }, msg: "x > 65535"},
	{idx: 21, exp: _ge, fn: func(x int32) bool { return x >= 65535 }, msg: "x >= 65535"},
	{idx: 21, exp: _eq, fn: func(x int32) bool { return x == 65535 }, msg: "x == 65535"},
	{idx: 21, exp: _ne, fn: func(x int32) bool { return x != 65535 }, msg: "x != 65535"},
	{idx: 22, exp: _lt, fn: func(x int32) bool { return x < 65536 }, msg: "x < 65536"},
	{idx: 22, exp: _le, fn: func(x int32) bool { return x <= 65536 }, msg: "x <= 65536"},
	{idx: 22, exp: _gt, fn: func(x int32) bool { return x > 65536 }, msg: "x > 65536"},
	{idx: 22, exp: _ge, fn: func(x int32) bool { return x >= 65536 }, msg: "x >= 65536"},
	{idx: 22, exp: _eq, fn: func(x int32) bool { return x == 65536 }, msg: "x == 65536"},
	{idx: 22, exp: _ne, fn: func(x int32) bool { return x != 65536 }, msg: "x != 65536"},
	{idx: 23, exp: _lt, fn: func(x int32) bool { return x < 2147483646 }, msg: "x < 2147483646"},
	{idx: 23, exp: _le, fn: func(x int32) bool { return x <= 2147483646 }, msg: "x <= 2147483646"},
	{idx: 23, exp: _gt, fn: func(x int32) bool { return x > 2147483646 }, msg: "x > 2147483646"},
	{idx: 23, exp: _ge, fn: func(x int32) bool { return x >= 2147483646 }, msg: "x >= 2147483646"},
	{idx: 23, exp: _eq, fn: func(x int32) bool { return x == 2147483646 }, msg: "x == 2147483646"},
	{idx: 23, exp: _ne, fn: func(x int32) bool { return x != 2147483646 }, msg: "x != 2147483646"},
	{idx: 24, exp: _lt, fn: func(x int32) bool { return x < 2147483647 }, msg: "x < 2147483647"},
	{idx: 24, exp: _le, fn: func(x int32) bool { return x <= 2147483647 }, msg: "x <= 2147483647"},
	{idx: 24, exp: _gt, fn: func(x int32) bool { return x > 2147483647 }, msg: "x > 2147483647"},
	{idx: 24, exp: _ge, fn: func(x int32) bool { return x >= 2147483647 }, msg: "x >= 2147483647"},
	{idx: 24, exp: _eq, fn: func(x int32) bool { return x == 2147483647 }, msg: "x == 2147483647"},
	{idx: 24, exp: _ne, fn: func(x int32) bool { return x != 2147483647 }, msg: "x != 2147483647"},
}

// int16 tests
var int16_vals = []int16{
	-32768,
	-32767,
	-129,
	-128,
	-127,
	-1,
	0,
	1,
	126,
	127,
	128,
	254,
	255,
	256,
	32766,
	32767,
}
var int16_tests = []struct {
	idx int    // index of the constant used
	exp result // expected results
	fn  func(int16) bool
	msg string // test description for error message
}{
	{idx: 0, exp: _lt, fn: func(x int16) bool { return x < -32768 }, msg: "x < -32768"},
	{idx: 0, exp: _le, fn: func(x int16) bool { return x <= -32768 }, msg: "x <= -32768"},
	{idx: 0, exp: _gt, fn: func(x int16) bool { return x > -32768 }, msg: "x > -32768"},
	{idx: 0, exp: _ge, fn: func(x int16) bool { return x >= -32768 }, msg: "x >= -32768"},
	{idx: 0, exp: _eq, fn: func(x int16) bool { return x == -32768 }, msg: "x == -32768"},
	{idx: 0, exp: _ne, fn: func(x int16) bool { return x != -32768 }, msg: "x != -32768"},
	{idx: 1, exp: _lt, fn: func(x int16) bool { return x < -32767 }, msg: "x < -32767"},
	{idx: 1, exp: _le, fn: func(x int16) bool { return x <= -32767 }, msg: "x <= -32767"},
	{idx: 1, exp: _gt, fn: func(x int16) bool { return x > -32767 }, msg: "x > -32767"},
	{idx: 1, exp: _ge, fn: func(x int16) bool { return x >= -32767 }, msg: "x >= -32767"},
	{idx: 1, exp: _eq, fn: func(x int16) bool { return x == -32767 }, msg: "x == -32767"},
	{idx: 1, exp: _ne, fn: func(x int16) bool { return x != -32767 }, msg: "x != -32767"},
	{idx: 2, exp: _lt, fn: func(x int16) bool { return x < -129 }, msg: "x < -129"},
	{idx: 2, exp: _le, fn: func(x int16) bool { return x <= -129 }, msg: "x <= -129"},
	{idx: 2, exp: _gt, fn: func(x int16) bool { return x > -129 }, msg: "x > -129"},
	{idx: 2, exp: _ge, fn: func(x int16) bool { return x >= -129 }, msg: "x >= -129"},
	{idx: 2, exp: _eq, fn: func(x int16) bool { return x == -129 }, msg: "x == -129"},
	{idx: 2, exp: _ne, fn: func(x int16) bool { return x != -129 }, msg: "x != -129"},
	{idx: 3, exp: _lt, fn: func(x int16) bool { return x < -128 }, msg: "x < -128"},
	{idx: 3, exp: _le, fn: func(x int16) bool { return x <= -128 }, msg: "x <= -128"},
	{idx: 3, exp: _gt, fn: func(x int16) bool { return x > -128 }, msg: "x > -128"},
	{idx: 3, exp: _ge, fn: func(x int16) bool { return x >= -128 }, msg: "x >= -128"},
	{idx: 3, exp: _eq, fn: func(x int16) bool { return x == -128 }, msg: "x == -128"},
	{idx: 3, exp: _ne, fn: func(x int16) bool { return x != -128 }, msg: "x != -128"},
	{idx: 4, exp: _lt, fn: func(x int16) bool { return x < -127 }, msg: "x < -127"},
	{idx: 4, exp: _le, fn: func(x int16) bool { return x <= -127 }, msg: "x <= -127"},
	{idx: 4, exp: _gt, fn: func(x int16) bool { return x > -127 }, msg: "x > -127"},
	{idx: 4, exp: _ge, fn: func(x int16) bool { return x >= -127 }, msg: "x >= -127"},
	{idx: 4, exp: _eq, fn: func(x int16) bool { return x == -127 }, msg: "x == -127"},
	{idx: 4, exp: _ne, fn: func(x int16) bool { return x != -127 }, msg: "x != -127"},
	{idx: 5, exp: _lt, fn: func(x int16) bool { return x < -1 }, msg: "x < -1"},
	{idx: 5, exp: _le, fn: func(x int16) bool { return x <= -1 }, msg: "x <= -1"},
	{idx: 5, exp: _gt, fn: func(x int16) bool { return x > -1 }, msg: "x > -1"},
	{idx: 5, exp: _ge, fn: func(x int16) bool { return x >= -1 }, msg: "x >= -1"},
	{idx: 5, exp: _eq, fn: func(x int16) bool { return x == -1 }, msg: "x == -1"},
	{idx: 5, exp: _ne, fn: func(x int16) bool { return x != -1 }, msg: "x != -1"},
	{idx: 6, exp: _lt, fn: func(x int16) bool { return x < 0 }, msg: "x < 0"},
	{idx: 6, exp: _le, fn: func(x int16) bool { return x <= 0 }, msg: "x <= 0"},
	{idx: 6, exp: _gt, fn: func(x int16) bool { return x > 0 }, msg: "x > 0"},
	{idx: 6, exp: _ge, fn: func(x int16) bool { return x >= 0 }, msg: "x >= 0"},
	{idx: 6, exp: _eq, fn: func(x int16) bool { return x == 0 }, msg: "x == 0"},
	{idx: 6, exp: _ne, fn: func(x int16) bool { return x != 0 }, msg: "x != 0"},
	{idx: 7, exp: _lt, fn: func(x int16) bool { return x < 1 }, msg: "x < 1"},
	{idx: 7, exp: _le, fn: func(x int16) bool { return x <= 1 }, msg: "x <= 1"},
	{idx: 7, exp: _gt, fn: func(x int16) bool { return x > 1 }, msg: "x > 1"},
	{idx: 7, exp: _ge, fn: func(x int16) bool { return x >= 1 }, msg: "x >= 1"},
	{idx: 7, exp: _eq, fn: func(x int16) bool { return x == 1 }, msg: "x == 1"},
	{idx: 7, exp: _ne, fn: func(x int16) bool { return x != 1 }, msg: "x != 1"},
	{idx: 8, exp: _lt, fn: func(x int16) bool { return x < 126 }, msg: "x < 126"},
	{idx: 8, exp: _le, fn: func(x int16) bool { return x <= 126 }, msg: "x <= 126"},
	{idx: 8, exp: _gt, fn: func(x int16) bool { return x > 126 }, msg: "x > 126"},
	{idx: 8, exp: _ge, fn: func(x int16) bool { return x >= 126 }, msg: "x >= 126"},
	{idx: 8, exp: _eq, fn: func(x int16) bool { return x == 126 }, msg: "x == 126"},
	{idx: 8, exp: _ne, fn: func(x int16) bool { return x != 126 }, msg: "x != 126"},
	{idx: 9, exp: _lt, fn: func(x int16) bool { return x < 127 }, msg: "x < 127"},
	{idx: 9, exp: _le, fn: func(x int16) bool { return x <= 127 }, msg: "x <= 127"},
	{idx: 9, exp: _gt, fn: func(x int16) bool { return x > 127 }, msg: "x > 127"},
	{idx: 9, exp: _ge, fn: func(x int16) bool { return x >= 127 }, msg: "x >= 127"},
	{idx: 9, exp: _eq, fn: func(x int16) bool { return x == 127 }, msg: "x == 127"},
	{idx: 9, exp: _ne, fn: func(x int16) bool { return x != 127 }, msg: "x != 127"},
	{idx: 10, exp: _lt, fn: func(x int16) bool { return x < 128 }, msg: "x < 128"},
	{idx: 10, exp: _le, fn: func(x int16) bool { return x <= 128 }, msg: "x <= 128"},
	{idx: 10, exp: _gt, fn: func(x int16) bool { return x > 128 }, msg: "x > 128"},
	{idx: 10, exp: _ge, fn: func(x int16) bool { return x >= 128 }, msg: "x >= 128"},
	{idx: 10, exp: _eq, fn: func(x int16) bool { return x == 128 }, msg: "x == 128"},
	{idx: 10, exp: _ne, fn: func(x int16) bool { return x != 128 }, msg: "x != 128"},
	{idx: 11, exp: _lt, fn: func(x int16) bool { return x < 254 }, msg: "x < 254"},
	{idx: 11, exp: _le, fn: func(x int16) bool { return x <= 254 }, msg: "x <= 254"},
	{idx: 11, exp: _gt, fn: func(x int16) bool { return x > 254 }, msg: "x > 254"},
	{idx: 11, exp: _ge, fn: func(x int16) bool { return x >= 254 }, msg: "x >= 254"},
	{idx: 11, exp: _eq, fn: func(x int16) bool { return x == 254 }, msg: "x == 254"},
	{idx: 11, exp: _ne, fn: func(x int16) bool { return x != 254 }, msg: "x != 254"},
	{idx: 12, exp: _lt, fn: func(x int16) bool { return x < 255 }, msg: "x < 255"},
	{idx: 12, exp: _le, fn: func(x int16) bool { return x <= 255 }, msg: "x <= 255"},
	{idx: 12, exp: _gt, fn: func(x int16) bool { return x > 255 }, msg: "x > 255"},
	{idx: 12, exp: _ge, fn: func(x int16) bool { return x >= 255 }, msg: "x >= 255"},
	{idx: 12, exp: _eq, fn: func(x int16) bool { return x == 255 }, msg: "x == 255"},
	{idx: 12, exp: _ne, fn: func(x int16) bool { return x != 255 }, msg: "x != 255"},
	{idx: 13, exp: _lt, fn: func(x int16) bool { return x < 256 }, msg: "x < 256"},
	{idx: 13, exp: _le, fn: func(x int16) bool { return x <= 256 }, msg: "x <= 256"},
	{idx: 13, exp: _gt, fn: func(x int16) bool { return x > 256 }, msg: "x > 256"},
	{idx: 13, exp: _ge, fn: func(x int16) bool { return x >= 256 }, msg: "x >= 256"},
	{idx: 13, exp: _eq, fn: func(x int16) bool { return x == 256 }, msg: "x == 256"},
	{idx: 13, exp: _ne, fn: func(x int16) bool { return x != 256 }, msg: "x != 256"},
	{idx: 14, exp: _lt, fn: func(x int16) bool { return x < 32766 }, msg: "x < 32766"},
	{idx: 14, exp: _le, fn: func(x int16) bool { return x <= 32766 }, msg: "x <= 32766"},
	{idx: 14, exp: _gt, fn: func(x int16) bool { return x > 32766 }, msg: "x > 32766"},
	{idx: 14, exp: _ge, fn: func(x int16) bool { return x >= 32766 }, msg: "x >= 32766"},
	{idx: 14, exp: _eq, fn: func(x int16) bool { return x == 32766 }, msg: "x == 32766"},
	{idx: 14, exp: _ne, fn: func(x int16) bool { return x != 32766 }, msg: "x != 32766"},
	{idx: 15, exp: _lt, fn: func(x int16) bool { return x < 32767 }, msg: "x < 32767"},
	{idx: 15, exp: _le, fn: func(x int16) bool { return x <= 32767 }, msg: "x <= 32767"},
	{idx: 15, exp: _gt, fn: func(x int16) bool { return x > 32767 }, msg: "x > 32767"},
	{idx: 15, exp: _ge, fn: func(x int16) bool { return x >= 32767 }, msg: "x >= 32767"},
	{idx: 15, exp: _eq, fn: func(x int16) bool { return x == 32767 }, msg: "x == 32767"},
	{idx: 15, exp: _ne, fn: func(x int16) bool { return x != 32767 }, msg: "x != 32767"},
}

// int8 tests
var int8_vals = []int8{
	-128,
	-127,
	-1,
	0,
	1,
	126,
	127,
}
var int8_tests = []struct {
	idx int    // index of the constant used
	exp result // expected results
	fn  func(int8) bool
	msg string // test description for error message
}{
	{idx: 0, exp: _lt, fn: func(x int8) bool { return x < -128 }, msg: "x < -128"},
	{idx: 0, exp: _le, fn: func(x int8) bool { return x <= -128 }, msg: "x <= -128"},
	{idx: 0, exp: _gt, fn: func(x int8) bool { return x > -128 }, msg: "x > -128"},
	{idx: 0, exp: _ge, fn: func(x int8) bool { return x >= -128 }, msg: "x >= -128"},
	{idx: 0, exp: _eq, fn: func(x int8) bool { return x == -128 }, msg: "x == -128"},
	{idx: 0, exp: _ne, fn: func(x int8) bool { return x != -128 }, msg: "x != -128"},
	{idx: 1, exp: _lt, fn: func(x int8) bool { return x < -127 }, msg: "x < -127"},
	{idx: 1, exp: _le, fn: func(x int8) bool { return x <= -127 }, msg: "x <= -127"},
	{idx: 1, exp: _gt, fn: func(x int8) bool { return x > -127 }, msg: "x > -127"},
	{idx: 1, exp: _ge, fn: func(x int8) bool { return x >= -127 }, msg: "x >= -127"},
	{idx: 1, exp: _eq, fn: func(x int8) bool { return x == -127 }, msg: "x == -127"},
	{idx: 1, exp: _ne, fn: func(x int8) bool { return x != -127 }, msg: "x != -127"},
	{idx: 2, exp: _lt, fn: func(x int8) bool { return x < -1 }, msg: "x < -1"},
	{idx: 2, exp: _le, fn: func(x int8) bool { return x <= -1 }, msg: "x <= -1"},
	{idx: 2, exp: _gt, fn: func(x int8) bool { return x > -1 }, msg: "x > -1"},
	{idx: 2, exp: _ge, fn: func(x int8) bool { return x >= -1 }, msg: "x >= -1"},
	{idx: 2, exp: _eq, fn: func(x int8) bool { return x == -1 }, msg: "x == -1"},
	{idx: 2, exp: _ne, fn: func(x int8) bool { return x != -1 }, msg: "x != -1"},
	{idx: 3, exp: _lt, fn: func(x int8) bool { return x < 0 }, msg: "x < 0"},
	{idx: 3, exp: _le, fn: func(x int8) bool { return x <= 0 }, msg: "x <= 0"},
	{idx: 3, exp: _gt, fn: func(x int8) bool { return x > 0 }, msg: "x > 0"},
	{idx: 3, exp: _ge, fn: func(x int8) bool { return x >= 0 }, msg: "x >= 0"},
	{idx: 3, exp: _eq, fn: func(x int8) bool { return x == 0 }, msg: "x == 0"},
	{idx: 3, exp: _ne, fn: func(x int8) bool { return x != 0 }, msg: "x != 0"},
	{idx: 4, exp: _lt, fn: func(x int8) bool { return x < 1 }, msg: "x < 1"},
	{idx: 4, exp: _le, fn: func(x int8) bool { return x <= 1 }, msg: "x <= 1"},
	{idx: 4, exp: _gt, fn: func(x int8) bool { return x > 1 }, msg: "x > 1"},
	{idx: 4, exp: _ge, fn: func(x int8) bool { return x >= 1 }, msg: "x >= 1"},
	{idx: 4, exp: _eq, fn: func(x int8) bool { return x == 1 }, msg: "x == 1"},
	{idx: 4, exp: _ne, fn: func(x int8) bool { return x != 1 }, msg: "x != 1"},
	{idx: 5, exp: _lt, fn: func(x int8) bool { return x < 126 }, msg: "x < 126"},
	{idx: 5, exp: _le, fn: func(x int8) bool { return x <= 126 }, msg: "x <= 126"},
	{idx: 5, exp: _gt, fn: func(x int8) bool { return x > 126 }, msg: "x > 126"},
	{idx: 5, exp: _ge, fn: func(x int8) bool { return x >= 126 }, msg: "x >= 126"},
	{idx: 5, exp: _eq, fn: func(x int8) bool { return x == 126 }, msg: "x == 126"},
	{idx: 5, exp: _ne, fn: func(x int8) bool { return x != 126 }, msg: "x != 126"},
	{idx: 6, exp: _lt, fn: func(x int8) bool { return x < 127 }, msg: "x < 127"},
	{idx: 6, exp: _le, fn: func(x int8) bool { return x <= 127 }, msg: "x <= 127"},
	{idx: 6, exp: _gt, fn: func(x int8) bool { return x > 127 }, msg: "x > 127"},
	{idx: 6, exp: _ge, fn: func(x int8) bool { return x >= 127 }, msg: "x >= 127"},
	{idx: 6, exp: _eq, fn: func(x int8) bool { return x == 127 }, msg: "x == 127"},
	{idx: 6, exp: _ne, fn: func(x int8) bool { return x != 127 }, msg: "x != 127"},
}

func main() {
	for _, test := range uint64_tests {
		for i := range uint64_vals {
			want := test.exp.l
			if i == test.idx {
				want = test.exp.e
			} else if i > test.idx {
				want = test.exp.r
			}
			if test.fn(uint64_vals[i]) != want {
				msg := fmt.Sprintf("test failed: %v != %v (x = uint64(%v))", test.msg, want, uint64_vals[i])
				panic(msg)
			}
		}
	}
	for _, test := range uint32_tests {
		for i := range uint32_vals {
			want := test.exp.l
			if i == test.idx {
				want = test.exp.e
			} else if i > test.idx {
				want = test.exp.r
			}
			if test.fn(uint32_vals[i]) != want {
				msg := fmt.Sprintf("test failed: %v != %v (x = uint32(%v))", test.msg, want, uint32_vals[i])
				panic(msg)
			}
		}
	}
	for _, test := range uint16_tests {
		for i := range uint16_vals {
			want := test.exp.l
			if i == test.idx {
				want = test.exp.e
			} else if i > test.idx {
				want = test.exp.r
			}
			if test.fn(uint16_vals[i]) != want {
				msg := fmt.Sprintf("test failed: %v != %v (x = uint16(%v))", test.msg, want, uint16_vals[i])
				panic(msg)
			}
		}
	}
	for _, test := range uint8_tests {
		for i := range uint8_vals {
			want := test.exp.l
			if i == test.idx {
				want = test.exp.e
			} else if i > test.idx {
				want = test.exp.r
			}
			if test.fn(uint8_vals[i]) != want {
				msg := fmt.Sprintf("test failed: %v != %v (x = uint8(%v))", test.msg, want, uint8_vals[i])
				panic(msg)
			}
		}
	}
	for _, test := range int64_tests {
		for i := range int64_vals {
			want := test.exp.l
			if i == test.idx {
				want = test.exp.e
			} else if i > test.idx {
				want = test.exp.r
			}
			if test.fn(int64_vals[i]) != want {
				msg := fmt.Sprintf("test failed: %v != %v (x = int64(%v))", test.msg, want, int64_vals[i])
				panic(msg)
			}
		}
	}
	for _, test := range int32_tests {
		for i := range int32_vals {
			want := test.exp.l
			if i == test.idx {
				want = test.exp.e
			} else if i > test.idx {
				want = test.exp.r
			}
			if test.fn(int32_vals[i]) != want {
				msg := fmt.Sprintf("test failed: %v != %v (x = int32(%v))", test.msg, want, int32_vals[i])
				panic(msg)
			}
		}
	}
	for _, test := range int16_tests {
		for i := range int16_vals {
			want := test.exp.l
			if i == test.idx {
				want = test.exp.e
			} else if i > test.idx {
				want = test.exp.r
			}
			if test.fn(int16_vals[i]) != want {
				msg := fmt.Sprintf("test failed: %v != %v (x = int16(%v))", test.msg, want, int16_vals[i])
				panic(msg)
			}
		}
	}
	for _, test := range int8_tests {
		for i := range int8_vals {
			want := test.exp.l
			if i == test.idx {
				want = test.exp.e
			} else if i > test.idx {
				want = test.exp.r
			}
			if test.fn(int8_vals[i]) != want {
				msg := fmt.Sprintf("test failed: %v != %v (x = int8(%v))", test.msg, want, int8_vals[i])
				panic(msg)
			}
		}
	}
}
