{
  "comments": [
    {
      "key": {
        "uuid": "51795972_5011d4e5",
        "filename": "src/net/http/transport.go",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-03-31T08:10:46Z",
      "side": 1,
      "message": "Less than 1 means to use a default limit. If a user passes in MaxHeaderBytes as -1 this will contradict this doc yet we\u0027ll use the default limit as you can see in the code below from server.go\n`\nfunc (srv *Server) maxHeaderBytes() int {\n        if srv.MaxHeaderBytes \u003e 0 {\n                return srv.MaxHeaderBytes\n        }\n        return DefaultMaxHeaderBytes\n}\n`",
      "revId": "6c7e6a5fbd2766b4295661fea69cdf4ef7df98f8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51795972_30e3781c",
        "filename": "src/net/http/transport_test.go",
        "patchSetId": 1
      },
      "lineNbr": 3097,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-03-31T08:14:46Z",
      "side": 1,
      "message": "Not that important but could we use instead use `512 \u003c\u003c 11` just so that while reading through the code a user can easily compare magnitude without having to think about `1\u003c\u003c20` vs `512\u003c\u003c10`.",
      "revId": "6c7e6a5fbd2766b4295661fea69cdf4ef7df98f8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51795972_112e7b85",
        "filename": "src/net/http/transport_test.go",
        "patchSetId": 1
      },
      "lineNbr": 3097,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-04-01T00:47:15Z",
      "side": 1,
      "message": "Yes, but we have a rule in the codebase: we only use shifts of \u003c\u003c10 (KB), \u003c\u003c20 (MB), \u003c\u003c30 (GB), etc.",
      "parentUuid": "51795972_30e3781c",
      "revId": "6c7e6a5fbd2766b4295661fea69cdf4ef7df98f8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}