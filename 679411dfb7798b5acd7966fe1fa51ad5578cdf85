{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1a7e2c6b_67902677",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 55613
      },
      "writtenOn": "2022-02-20T05:15:03Z",
      "side": 1,
      "message": "ping",
      "revId": "679411dfb7798b5acd7966fe1fa51ad5578cdf85",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f84c7a89_f4cffcd7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 13550
      },
      "writtenOn": "2022-02-20T10:46:59Z",
      "side": 1,
      "message": "I\u0027m not an encoding/xml owner, but from the point of view of reflect.Value, this looks good. Just one nit.\n\nI\u0027ll leave it to Russ or Ian to decide if it\u0027s OK to merge for 1.18.",
      "revId": "679411dfb7798b5acd7966fe1fa51ad5578cdf85",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "191a0a4e_fae03294",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-20T10:47:16Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d679411df",
      "tag": "autogenerated:trybots~beginning",
      "revId": "679411dfb7798b5acd7966fe1fa51ad5578cdf85",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ef8c616_d869f369",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-20T10:58:38Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "191a0a4e_fae03294",
      "tag": "autogenerated:trybots~happy",
      "revId": "679411dfb7798b5acd7966fe1fa51ad5578cdf85",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1a8c498_ed9cc772",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-02-20T20:58:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1a7e2c6b_67902677",
      "revId": "679411dfb7798b5acd7966fe1fa51ad5578cdf85",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41970318_11433dea",
        "filename": "src/encoding/xml/marshal.go",
        "patchSetId": 5
      },
      "lineNbr": 515,
      "author": {
        "id": 13550
      },
      "writtenOn": "2022-02-20T10:46:59Z",
      "side": 1,
      "message": "nit: invert the order, so that we check that the reflect.Value is valid before we check if it\u0027s empty. isEmptyValue happens to not panic on an invalid value, because the Kind method just returns Invalid, but it\u0027s a bit more consistent and safer to not rely on that edge case.",
      "revId": "679411dfb7798b5acd7966fe1fa51ad5578cdf85",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ef6b63e_c0bd7b0b",
        "filename": "src/encoding/xml/marshal.go",
        "patchSetId": 5
      },
      "lineNbr": 515,
      "author": {
        "id": 55613
      },
      "writtenOn": "2022-02-20T11:59:14Z",
      "side": 1,
      "message": "You are humble, I changed it, you see if it will be more consistent and reliable.",
      "parentUuid": "41970318_11433dea",
      "revId": "679411dfb7798b5acd7966fe1fa51ad5578cdf85",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}