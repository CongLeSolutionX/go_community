{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ac647f1b_6a13e159",
        "filename": "src/net/http/serve_test.go",
        "patchSetId": 2
      },
      "lineNbr": 619,
      "author": {
        "id": 14570
      },
      "writtenOn": "2024-06-26T10:00:52Z",
      "side": 1,
      "message": "I don\u0027t see how this tests MethodNotAllowed.\nIt seems that the request should be something like POST a/b/c, and we should expect a 405.\nAnd you might as well check that the Allow header is \"GET\".",
      "range": {
        "startLine": 619,
        "startChar": 0,
        "endLine": 619,
        "endChar": 4
      },
      "revId": "57980d23661cbc45a2bb7d8998fa40880d99543b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34f463fe_a3f75797",
        "filename": "src/net/http/serve_test.go",
        "patchSetId": 2
      },
      "lineNbr": 619,
      "author": {
        "id": 66749
      },
      "writtenOn": "2024-06-26T16:24:55Z",
      "side": 1,
      "message": "It\u0027s not to test `MethodNotAllowed`, but to avoid replying `MethodNotAllowed`.\nI copied `TestMuxNoSlashRedirectWithTrailingSlash`, changed `HandleFunc(\"/{x}/\"...` to `HandleFunc(\"GET /{x}/\"`:\n```\nfunc TestMuxNoSlash405WithTrailingSlash(t *testing.T) {\n\tmux :\u003d NewServeMux()\n\tmux.HandleFunc(\"GET /{x}/\", func(w ResponseWriter, r *Request) {\n\t\tfmt.Fprintln(w, \"ok\")\n\t})\n\tw :\u003d httptest.NewRecorder()\n\treq, _ :\u003d NewRequest(\"GET\", \"/\", nil)\n\tmux.ServeHTTP(w, req)\n\tif g, w :\u003d w.Code, 404; g !\u003d w {\n\t\tt.Errorf(\"got %d, want %d\", g, w)\n\t}\n}\n```\nJust to fix #67657, please let me know if I\u0027m on the wrong way.",
      "parentUuid": "ac647f1b_6a13e159",
      "range": {
        "startLine": 619,
        "startChar": 0,
        "endLine": 619,
        "endChar": 4
      },
      "revId": "57980d23661cbc45a2bb7d8998fa40880d99543b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e075e92_5a5ba63b",
        "filename": "src/net/http/serve_test.go",
        "patchSetId": 2
      },
      "lineNbr": 619,
      "author": {
        "id": 14570
      },
      "writtenOn": "2024-06-26T17:15:44Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "34f463fe_a3f75797",
      "range": {
        "startLine": 619,
        "startChar": 0,
        "endLine": 619,
        "endChar": 4
      },
      "revId": "57980d23661cbc45a2bb7d8998fa40880d99543b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "049fc6fd_fabd6b9e",
        "filename": "src/net/http/server.go",
        "patchSetId": 2
      },
      "lineNbr": 2729,
      "author": {
        "id": 14570
      },
      "writtenOn": "2024-06-26T10:00:52Z",
      "side": 1,
      "message": "I believe you can now write this as\n\n    return slices.Sorted(maps.Keys(ms))",
      "range": {
        "startLine": 2727,
        "startChar": 1,
        "endLine": 2729,
        "endChar": 15
      },
      "revId": "57980d23661cbc45a2bb7d8998fa40880d99543b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b35c4ef_4c8eb05a",
        "filename": "src/net/http/server.go",
        "patchSetId": 2
      },
      "lineNbr": 2729,
      "author": {
        "id": 66749
      },
      "writtenOn": "2024-06-26T16:39:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "049fc6fd_fabd6b9e",
      "range": {
        "startLine": 2727,
        "startChar": 1,
        "endLine": 2729,
        "endChar": 15
      },
      "revId": "57980d23661cbc45a2bb7d8998fa40880d99543b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "790c3b2c_48dcb712",
        "filename": "src/net/http/server.go",
        "patchSetId": 2
      },
      "lineNbr": 2732,
      "author": {
        "id": 14570
      },
      "writtenOn": "2024-06-26T10:00:52Z",
      "side": 1,
      "message": "You can now delete this function.",
      "range": {
        "startLine": 2732,
        "startChar": 1,
        "endLine": 2732,
        "endChar": 2
      },
      "revId": "57980d23661cbc45a2bb7d8998fa40880d99543b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41517f7d_a52a07ce",
        "filename": "src/net/http/server.go",
        "patchSetId": 2
      },
      "lineNbr": 2732,
      "author": {
        "id": 66749
      },
      "writtenOn": "2024-06-26T16:39:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "790c3b2c_48dcb712",
      "range": {
        "startLine": 2732,
        "startChar": 1,
        "endLine": 2732,
        "endChar": 2
      },
      "revId": "57980d23661cbc45a2bb7d8998fa40880d99543b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}