{
  "comments": [
    {
      "key": {
        "uuid": "9d7dd7ad_8d8f2c19",
        "filename": "src/math/rand/rand.go",
        "patchSetId": 3
      },
      "lineNbr": 215,
      "author": {
        "id": 5385
      },
      "writtenOn": "2018-02-13T18:32:28Z",
      "side": 1,
      "message": "Bool() calls r.Intn(2), which checks that the argument fits an int32, \nand then call calls r.Int31n(2), which checks that the arguments is a\npower of two, and then calls r.Int31(), which calls r.Int63() and then\nshifts the result and cast it into an int32. This is what the call \nstack under your Bool implementation looks like:\n\n  math/rand.(*Rand).Int63(0xc42007a1e0, 0xff)\n\tmath/rand/rand.go:84 +0x22\n  math/rand.(*Rand).Int31(0xc42007a1e0, 0xc42002def0)\n\tmath/rand/rand.go:101 +0x2b\n  math/rand.(*Rand).Int31n(0xc42007a1e0, 0x13b2c00000002, 0x390ffd3f)\n\tmath/rand/rand.go:133 +0xb4\n  math/rand.(*Rand).Intn(0xc42007a1e0, 0x2, 0x5a832bc1)\n\tmath/rand/rand.go:174 +0x45\n  math/rand.Intn(0x2, 0x4a91e1)\n\tmath/rand/rand.go:331 +0x37\n\nThat\u0027s a lot of overhead for flipping a coin. If this proposal gets accepted,\nI suggest implementing Bool as \n\n  return Int63() % 2 \u003d\u003d 0\n\nor something like that.",
      "range": {
        "startLine": 215,
        "startChar": 8,
        "endLine": 215,
        "endChar": 22
      },
      "revId": "521e2d03b48c022291132ddca6509f2900568521",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}