{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3e6529f1_def382bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 26957
      },
      "writtenOn": "2021-05-20T19:44:00Z",
      "side": 1,
      "message": "A larger change seems risky in code freeze as explained in my comments.\n\nPlease let me know how to proceed,",
      "revId": "2fe333d806e2de2890839ff52cc3348659647bbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d879b5a_f85b13df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-05-21T13:20:41Z",
      "side": 1,
      "message": "If it ends up being too complicated, we can tag this #wait-release, then merge it when 1.18 development starts. I don\u0027t think this issue can be considered fixed though as long as these checks are using different code.",
      "parentUuid": "3e6529f1_def382bf",
      "revId": "2fe333d806e2de2890839ff52cc3348659647bbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45f80bc4_210213cc",
        "filename": "src/cmd/go/internal/modload/init.go",
        "patchSetId": 1
      },
      "lineNbr": 495,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-05-17T18:31:50Z",
      "side": 1,
      "message": "Is there any reason to keep checkModulePathLax around? Since we relaxed CheckImportPath, we can probably delete it and update all calls.",
      "revId": "2fe333d806e2de2890839ff52cc3348659647bbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78cdb88a_c87dc481",
        "filename": "src/cmd/go/internal/modload/init.go",
        "patchSetId": 1
      },
      "lineNbr": 495,
      "author": {
        "id": 26957
      },
      "writtenOn": "2021-05-20T19:44:00Z",
      "side": 1,
      "message": "The checks below of checkModulePathLax are partially covered by CheckImportPath. CheckPath is doing more but the specific \".\" path case is not present.\n\nError messages might also change to \u0027not an import path\u0027 in these cases.\nSuch a change seems inappropriate during code freeze.\n\n// Ensure path.IsAbs and build.IsLocalImport are false, and that the path is\n\t// invariant under path.Clean, also to avoid confusing the module cache.\n\tif path.IsAbs(p) {\n\t\treturn errorf(\"is an absolute path\")\n\t}\n\tif build.IsLocalImport(p) {\n\t\treturn errorf(\"is a local import path\")\n\t}\n\tif path.Clean(p) !\u003d p {\n\t\treturn errorf(\"is not clean\")\n\t}",
      "parentUuid": "45f80bc4_210213cc",
      "revId": "2fe333d806e2de2890839ff52cc3348659647bbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a8d0ceb_7a599448",
        "filename": "src/cmd/go/internal/modload/init.go",
        "patchSetId": 1
      },
      "lineNbr": 495,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-05-21T13:20:41Z",
      "side": 1,
      "message": "module.CheckImportPath returns a module.InvalidPathError, so I think we can handle that to make sure it says \"module path\" instead of \"import path\".\n\n  if pathErr, ok :\u003d (*module.ImportPathError); ok {\n    pathErr.Kind \u003d \"module\"\n  }\n\nI think the other cases are either already handled in module.checkPath or have messages that could be improved.",
      "parentUuid": "78cdb88a_c87dc481",
      "revId": "2fe333d806e2de2890839ff52cc3348659647bbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f443f872_c8292285",
        "filename": "src/cmd/go/internal/modload/init.go",
        "patchSetId": 1
      },
      "lineNbr": 495,
      "author": {
        "id": 26957
      },
      "writtenOn": "2021-05-24T05:16:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a8d0ceb_7a599448",
      "revId": "2fe333d806e2de2890839ff52cc3348659647bbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "080e9945_e30b1d53",
        "filename": "src/cmd/go/testdata/script/mod_init_path.txt",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-05-17T18:31:50Z",
      "side": 1,
      "message": "The previous error message was more descriptive. Let\u0027s fix that in golang.org/x/mod/module in a separate CL first. When that\u0027s done, you can \u0027go get\u0027 and \u0027go mod vendor\u0027 it into this module.",
      "revId": "2fe333d806e2de2890839ff52cc3348659647bbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2a4fe8f_11fa7e6c",
        "filename": "src/cmd/go/testdata/script/mod_init_path.txt",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 26957
      },
      "writtenOn": "2021-05-20T19:44:00Z",
      "side": 1,
      "message": "(see above)",
      "parentUuid": "080e9945_e30b1d53",
      "revId": "2fe333d806e2de2890839ff52cc3348659647bbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d0cd31e_35ab3b30",
        "filename": "src/cmd/go/testdata/script/mod_init_path.txt",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 26957
      },
      "writtenOn": "2021-05-24T05:16:57Z",
      "side": 1,
      "message": "Change is minimal to align on the word \"malformed\" used everywhere else.",
      "parentUuid": "f2a4fe8f_11fa7e6c",
      "revId": "2fe333d806e2de2890839ff52cc3348659647bbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}