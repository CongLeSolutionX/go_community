{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "76be4409_ae318798",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-11T21:04:18Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dba07ffa1",
      "tag": "autogenerated:trybots~beginning",
      "revId": "ba07ffa1b2223f9f777f7ecb0fe926a423381422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f929e361_f85f2c38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-11T21:14:51Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "76be4409_ae318798",
      "tag": "autogenerated:trybots~happy",
      "revId": "ba07ffa1b2223f9f777f7ecb0fe926a423381422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44b967a1_18916c96",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 44008
      },
      "writtenOn": "2021-08-11T21:37:17Z",
      "side": 1,
      "message": "Note to the reviewers: this CL incorporates changes in https://go-review.googlesource.com/c/go/+/334873 as it is not clear will that CL be submitted or not, based on the beginning of the discussion in #47309.",
      "revId": "ba07ffa1b2223f9f777f7ecb0fe926a423381422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac3071e6_ae8c2f23",
        "filename": "src/cmd/go/internal/test/flagdefs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-08-11T22:01:45Z",
      "side": 1,
      "message": "The property that we\u0027re testing for here is basically “the generated code is not stale”. Perhaps we could factor out the generator method into a function in an internal package, so that the test can import and run it?\n\n(A hard-coded list in the test is not helpful, since it will presumably also be stale whenever the generated code is.)",
      "revId": "ba07ffa1b2223f9f777f7ecb0fe926a423381422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4300c3c_80561d07",
        "filename": "src/cmd/go/internal/test/flagdefs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 44008
      },
      "writtenOn": "2021-08-11T22:47:08Z",
      "side": 1,
      "message": "Should we put here in cmd/go/internal/test package? It seems like a good option since test is the only package using it at the moment.\n\nAnother option I see is cmd/go/internal/vet.",
      "parentUuid": "ac3071e6_ae8c2f23",
      "revId": "ba07ffa1b2223f9f777f7ecb0fe926a423381422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "082699a2_89b92125",
        "filename": "src/cmd/go/internal/test/flagdefs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-08-12T19:30:35Z",
      "side": 1,
      "message": "I don\u0027t think it ought to be in cmd/go/internal/test or cmd/go/internal/vet, since those are both linked into the `cmd/go` binary — and `cmd/go` itself does not need the code-generating functions at run time.\n\nPerhaps cmd/go/internal/test/genflags or cmd/go/internal/test/internal/genflags?",
      "parentUuid": "b4300c3c_80561d07",
      "revId": "ba07ffa1b2223f9f777f7ecb0fe926a423381422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23f11d1b_bb452125",
        "filename": "src/cmd/go/internal/test/flagdefs_test.go",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 44008
      },
      "writtenOn": "2021-08-13T22:41:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "082699a2_89b92125",
      "revId": "ba07ffa1b2223f9f777f7ecb0fe926a423381422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b254c37_8e8e9e28",
        "filename": "src/cmd/go/internal/test/genflags.go",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-08-12T19:30:35Z",
      "side": 1,
      "message": "I think we actually don\u0027t want to extract the names of the analyses from these regexps. The `-vet` flag should arguably accept the deprecated alias-names in addition to the canonical names, and for a deprecated alias the name of the alias in the name of the flag itself — not the canonical name that it aliases.\n\nFor example, we should accept `go test -vet\u003dprintfuncs` in addition to `go test -vet\u003dprintf.funcs`. (I don\u0027t see `printfuncs` in the current generated list.)",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 129,
        "endChar": 3
      },
      "revId": "ba07ffa1b2223f9f777f7ecb0fe926a423381422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4466628_06278172",
        "filename": "src/cmd/go/internal/test/genflags.go",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 44008
      },
      "writtenOn": "2021-08-13T22:41:36Z",
      "side": 1,
      "message": "Good point. But still extraction needs to happen for deprecated aliases. Otherwise, for instance, printf.funcs would not be added to the list.\n\nPTAL.",
      "parentUuid": "9b254c37_8e8e9e28",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 129,
        "endChar": 3
      },
      "revId": "ba07ffa1b2223f9f777f7ecb0fe926a423381422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e39d878_f886ac92",
        "filename": "src/cmd/go/internal/test/genflags.go",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-08-25T18:47:45Z",
      "side": 1,
      "message": "Ooh, interesting. `-printfuncs` is not actually an analyzer.\n\nSo I guess we do need to extract the flag name from the `deprecated alias for` comments, so that we can determine whether the flag is an alias for an analyzer flag or for some other flag entirely.",
      "parentUuid": "b4466628_06278172",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 129,
        "endChar": 3
      },
      "revId": "ba07ffa1b2223f9f777f7ecb0fe926a423381422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}