{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "be9790f0_0f192a01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-04-23T06:01:59Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d6ef2e44b",
      "tag": "autogenerated:trybots~beginning",
      "revId": "6ef2e44b34c665c8dd850f2406dcf0d1fa6ac648",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b43617ce_e90061b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-04-23T06:20:13Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "be9790f0_0f192a01",
      "tag": "autogenerated:trybots~happy",
      "revId": "6ef2e44b34c665c8dd850f2406dcf0d1fa6ac648",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "663c33ce_de561bf3",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 1
      },
      "lineNbr": 1083,
      "author": {
        "id": 10033
      },
      "writtenOn": "2021-04-24T00:04:20Z",
      "side": 1,
      "message": "why don\u0027t we set pm.pkg.err (Similar to what was done in the base revision)",
      "range": {
        "startLine": 1083,
        "startChar": 11,
        "endLine": 1083,
        "endChar": 14
      },
      "revId": "6ef2e44b34c665c8dd850f2406dcf0d1fa6ac648",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cf41280_8283cd0d",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 1
      },
      "lineNbr": 1083,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-04-26T18:06:57Z",
      "side": 1,
      "message": "Added a comment.",
      "parentUuid": "663c33ce_de561bf3",
      "range": {
        "startLine": 1083,
        "startChar": 11,
        "endLine": 1083,
        "endChar": 14
      },
      "revId": "6ef2e44b34c665c8dd850f2406dcf0d1fa6ac648",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dc3f780_fcc76000",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 1
      },
      "lineNbr": 1093,
      "author": {
        "id": 10033
      },
      "writtenOn": "2021-04-24T00:04:20Z",
      "side": 1,
      "message": "I\u0027m wondering what the distinction is between pm.pkg.err !\u003d nil and pm.mod.Path \u003d\u003d \"\" here",
      "range": {
        "startLine": 1093,
        "startChar": 2,
        "endLine": 1093,
        "endChar": 24
      },
      "revId": "6ef2e44b34c665c8dd850f2406dcf0d1fa6ac648",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c77562dc_4ed5218f",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 1
      },
      "lineNbr": 1093,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-04-26T18:06:57Z",
      "side": 1,
      "message": "pm.pkg.err should be invariantly non-nil here: even if we\u0027ve identified a new module to provide the package, we haven\u0027t actually loaded the package (and aren\u0027t guaranteed to do so successfully on the next attempt).\n\nOn the other hand, mod.Path !\u003d \"\" if and only if we successfully identified a candidate module to provide the missing package.\n\n(Hopefully the newly-added comment explains this more clearly.)",
      "parentUuid": "9dc3f780_fcc76000",
      "range": {
        "startLine": 1093,
        "startChar": 2,
        "endLine": 1093,
        "endChar": 24
      },
      "revId": "6ef2e44b34c665c8dd850f2406dcf0d1fa6ac648",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}