{
  "comments": [
    {
      "key": {
        "uuid": "5e5d13ec_d7e5454f",
        "filename": "src/cmd/internal/dwarf/dwarf.go",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 17090
      },
      "writtenOn": "2017-10-25T18:20:42Z",
      "side": 1,
      "message": "udata? data2 isn\u0027t big enough, but data4 seems silly.",
      "range": {
        "startLine": 307,
        "startChar": 36,
        "endLine": 307,
        "endChar": 0
      },
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "735b17dc_1067800b",
        "filename": "src/cmd/internal/dwarf/dwarf.go",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 14020
      },
      "writtenOn": "2017-10-25T18:42:43Z",
      "side": 1,
      "message": "Can\u0027t do udata since the process of updating the relocation might expand the number of bytes for the ULEB128 encoding. I love ULEB128, but you really can\u0027t have relocations that target it.",
      "parentUuid": "5e5d13ec_d7e5454f",
      "range": {
        "startLine": 307,
        "startChar": 36,
        "endLine": 307,
        "endChar": 0
      },
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ec0ef56_01743a10",
        "filename": "src/cmd/internal/dwarf/dwarf.go",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 17090
      },
      "writtenOn": "2017-10-25T18:49:48Z",
      "side": 1,
      "message": "Right. Duh.",
      "parentUuid": "735b17dc_1067800b",
      "range": {
        "startLine": 307,
        "startChar": 36,
        "endLine": 307,
        "endChar": 0
      },
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3544b04_655ccec0",
        "filename": "src/cmd/internal/dwarf/dwarf.go",
        "patchSetId": 2
      },
      "lineNbr": 638,
      "author": {
        "id": 17090
      },
      "writtenOn": "2017-10-25T18:20:42Z",
      "side": 1,
      "message": "I\u0027m not fond of this function, and IMO we might have hit the breaking point here.\n\n- the abbrev argument is barely used\n- what \"value\" and \"data\" mean is not obvious without reading the implementation of the attribute you\u0027re writing\n- coverage of form/class combinations is kind of arbitrary, so you can\u0027t use it without reading the implementation\n\nPerhaps we should have putConstantAttr, putSectionRefAttr, putFileRefAttr, putAddressAttr?",
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e77399b6_172ae81e",
        "filename": "src/cmd/internal/dwarf/dwarf.go",
        "patchSetId": 2
      },
      "lineNbr": 638,
      "author": {
        "id": 14020
      },
      "writtenOn": "2017-10-25T18:42:43Z",
      "side": 1,
      "message": "OK, I suppose I am on board with that idea. I will do that as a separate follow-up patch if that is ok.",
      "parentUuid": "d3544b04_655ccec0",
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc315d95_e21f34a9",
        "filename": "src/cmd/internal/dwarf/dwarf.go",
        "patchSetId": 2
      },
      "lineNbr": 638,
      "author": {
        "id": 17090
      },
      "writtenOn": "2017-10-25T18:49:48Z",
      "side": 1,
      "message": "Shrug. Might be a little better to do it before this CL, but definitely not a big deal.",
      "parentUuid": "e77399b6_172ae81e",
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "443d00ee_6c0e9704",
        "filename": "src/cmd/internal/dwarf/dwarf_defs.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 17090
      },
      "writtenOn": "2017-10-25T18:20:42Z",
      "side": 1,
      "message": "This is made up, not from section 7, which is a little iffy IMO. More comments on putattr().\n\n(ADDRLOC seems made up too, but we don\u0027t use it...)",
      "range": {
        "startLine": 96,
        "startChar": 15,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb3bae9f_1c8f882c",
        "filename": "src/cmd/internal/dwarf/dwarf_defs.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 14020
      },
      "writtenOn": "2017-10-25T18:42:43Z",
      "side": 1,
      "message": "Ack. If we split putattr into separate pieces then this becomes moot.",
      "parentUuid": "443d00ee_6c0e9704",
      "range": {
        "startLine": 96,
        "startChar": 15,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d862ff13_bbbd88c4",
        "filename": "src/cmd/internal/dwarf/dwarf_defs.go",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 17090
      },
      "writtenOn": "2017-10-25T18:49:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cb3bae9f_1c8f882c",
      "range": {
        "startLine": 96,
        "startChar": 15,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2802c741_f0878a13",
        "filename": "src/cmd/internal/obj/objfile.go",
        "patchSetId": 2
      },
      "lineNbr": 462,
      "author": {
        "id": 17090
      },
      "writtenOn": "2017-10-25T18:20:42Z",
      "side": 1,
      "message": "nit: newline",
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab8fc1b5_88203be5",
        "filename": "src/cmd/internal/obj/objfile.go",
        "patchSetId": 2
      },
      "lineNbr": 462,
      "author": {
        "id": 14020
      },
      "writtenOn": "2017-10-25T18:42:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2802c741_f0878a13",
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d94c2000_8623a622",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 17090
      },
      "writtenOn": "2017-10-25T18:20:42Z",
      "side": 1,
      "message": "nit: typo",
      "range": {
        "startLine": 107,
        "startChar": 23,
        "endLine": 107,
        "endChar": 32
      },
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69505cb4_55eec080",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 14020
      },
      "writtenOn": "2017-10-25T18:42:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d94c2000_8623a622",
      "range": {
        "startLine": 107,
        "startChar": 23,
        "endLine": 107,
        "endChar": 32
      },
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3c5e0cb_1a4e46d4",
        "filename": "src/cmd/link/internal/ld/data.go",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 17090
      },
      "writtenOn": "2017-10-25T18:20:42Z",
      "side": 1,
      "message": "IMO clearer to move the r.Done \u003d true below the validation than make a copy here. If not, wasDone or alreadyDone or something?\n\nActually, maybe there\u0027s a bigger point: should we even be looking at relocations that are already done? Naively, you would want to just skip them, right?",
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "883547f7_c4c8b888",
        "filename": "src/cmd/link/internal/ld/data.go",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 14020
      },
      "writtenOn": "2017-10-25T18:42:43Z",
      "side": 1,
      "message": "I thought about trying to remove the relocation at the point in writelines() when it is applied, but that would mean reshuffling/rewriting the s.R slice, which seemed painful -- better to me just leave it in place. \n\nI\u0027ll rename rdone to wasDone, that sounds reasonable.",
      "parentUuid": "f3c5e0cb_1a4e46d4",
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a108c6f_c24468fd",
        "filename": "src/cmd/link/internal/ld/data.go",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 17090
      },
      "writtenOn": "2017-10-25T18:49:48Z",
      "side": 1,
      "message": "Sorry, yeah, removing the relocations from s.R would be a pain for sure. I was trying to suggest that this function start with if r.Done { continue } and then the error for unprocessed FILEREFs can be unconditional.",
      "parentUuid": "883547f7_c4c8b888",
      "revId": "3a62845badae230b9b8e58ea1aa1c23dff1df8a0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}