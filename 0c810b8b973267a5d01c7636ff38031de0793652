{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "769e3588_e970c6ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 34895
      },
      "writtenOn": "2023-04-05T20:26:03Z",
      "side": 1,
      "message": "TRY\u003djs\n\nThanks.",
      "revId": "0c810b8b973267a5d01c7636ff38031de0793652",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "875bf64c_1e769e78",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-05T20:26:14Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d0c810b8b\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "0c810b8b973267a5d01c7636ff38031de0793652",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7446f7da_417a00c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-05T20:34:44Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* js-wasm-node18\n",
      "parentUuid": "875bf64c_1e769e78",
      "tag": "autogenerated:trybots~happy",
      "revId": "0c810b8b973267a5d01c7636ff38031de0793652",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfbb9a2b_84bdd003",
        "filename": "src/runtime/lock_wasip1.go",
        "patchSetId": 27
      },
      "lineNbr": 27,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-04-05T22:00:04Z",
      "side": 1,
      "message": "Is this case possible? I don\u0027t think it should be possible to preempt while runtime locks are held, so how would the lock already be taken?\n\nIn fact, Gosched -\u003e schedule will throw() if any locks are held.",
      "revId": "0c810b8b973267a5d01c7636ff38031de0793652",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41431f29_0249d127",
        "filename": "src/runtime/lock_wasip1.go",
        "patchSetId": 27
      },
      "lineNbr": 68,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-04-05T22:00:04Z",
      "side": 1,
      "message": "wasi",
      "range": {
        "startLine": 68,
        "startChar": 35,
        "endLine": 68,
        "endChar": 37
      },
      "revId": "0c810b8b973267a5d01c7636ff38031de0793652",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fdc9ab7_bed3f642",
        "filename": "src/runtime/mem_wasm.go",
        "patchSetId": 27
      },
      "lineNbr": 11,
      "author": {
        "id": 62138
      },
      "writtenOn": "2023-04-06T01:17:40Z",
      "side": 1,
      "message": "I wonder if we could remove this call to currentMemory, since `growMemory` below should return the previous pages. https://www.w3.org/TR/2019/REC-wasm-core-1-20191205/#syntax-instr-memory",
      "revId": "0c810b8b973267a5d01c7636ff38031de0793652",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c1b8a6f_3e1b3a38",
        "filename": "src/runtime/mem_wasm.go",
        "patchSetId": 27
      },
      "lineNbr": 11,
      "author": {
        "id": 12980
      },
      "writtenOn": "2023-04-06T02:16:55Z",
      "side": 1,
      "message": "Great idea, let me try it out!",
      "parentUuid": "5fdc9ab7_bed3f642",
      "revId": "0c810b8b973267a5d01c7636ff38031de0793652",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89776def_aa3651ce",
        "filename": "src/runtime/os_wasip1.go",
        "patchSetId": 27
      },
      "lineNbr": 18,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-04-05T22:00:04Z",
      "side": 1,
      "message": "Why are these type aliases instead of actual types?",
      "revId": "0c810b8b973267a5d01c7636ff38031de0793652",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "876f38d7_a61194f7",
        "filename": "src/runtime/os_wasip1.go",
        "patchSetId": 27
      },
      "lineNbr": 18,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-04-05T22:08:34Z",
      "side": 1,
      "message": "This was touched on in CL 479619: https://go-review.googlesource.com/c/go/+/479619/comment/3ea80ae5_eedbdeb9/. It reduces the space used by these unexported types.",
      "parentUuid": "89776def_aa3651ce",
      "revId": "0c810b8b973267a5d01c7636ff38031de0793652",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5160ce6d_0d18bd80",
        "filename": "src/runtime/os_wasip1.go",
        "patchSetId": 27
      },
      "lineNbr": 18,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-04-05T22:10:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "876f38d7_a61194f7",
      "revId": "0c810b8b973267a5d01c7636ff38031de0793652",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a28f38a_ecdb6332",
        "filename": "src/runtime/os_wasip1.go",
        "patchSetId": 27
      },
      "lineNbr": 95,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-04-06T01:48:39Z",
      "side": 1,
      "message": "an",
      "range": {
        "startLine": 95,
        "startChar": 3,
        "endLine": 95,
        "endChar": 5
      },
      "revId": "0c810b8b973267a5d01c7636ff38031de0793652",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}