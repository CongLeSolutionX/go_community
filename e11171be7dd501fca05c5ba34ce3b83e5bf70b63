{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c67dfe07_5c9a5b44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-04-22T13:45:16Z",
      "side": 1,
      "message": "LGTM. Michael can give final approval. Thanks for this contribution.",
      "revId": "e11171be7dd501fca05c5ba34ce3b83e5bf70b63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2ec28e5_c192b5bd",
        "filename": "src/cmd/go/internal/cfg/cfg.go",
        "patchSetId": 26
      },
      "lineNbr": 581,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-04-22T13:45:16Z",
      "side": 1,
      "message": "// Keep consistent with go/build.defaultGOPATH.",
      "range": {
        "startLine": 581,
        "startChar": 3,
        "endLine": 581,
        "endChar": 48
      },
      "revId": "e11171be7dd501fca05c5ba34ce3b83e5bf70b63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b76ae74b_dcf0995a",
        "filename": "src/cmd/go/internal/envcmd/env.go",
        "patchSetId": 26
      },
      "lineNbr": 361,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-04-22T13:45:16Z",
      "side": 1,
      "message": "Can we factor these two calls to printEnvAsJSON, and factor the len(args)\u003e0 conditions together? This might achieve a cleaner separation of the operations of filtering and printing. Also, findCfgEnv is called only once, and it\u0027s not obvious what the function name means, so let\u0027s inline it. It should end up looking something like this:\n\n\n\n\tif len(args) \u003e 0 {\n\t\t// Show only the named vars.\n\t\tif !*envChanged {\n\t\t\tif *envJson {\n\t\t\t\tvar es []cfg.EnvVar\n\t\t\t\tfor _, name :\u003d range args {\n\t\t\t\t\te :\u003d cfg.EnvVar{Name: name, Value: findEnv(env, name)}\n\t\t\t\t\tes \u003d append(es, e)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Print just the values, without names.\n\t\t\t\tfor _, name :\u003d range args {\n\t\t\t\t\tfmt.Printf(\"%s\\n\", findEnv(env, name))\n\t\t\t\t}\t\n\t\t\t\treturn\n\t\t\t}\n\t\t} else {\n\t\t\t// Show only the changed, named vars.\n\t\t\tvar es []cfg.EnvVar\n\t\t\tfor _, name :\u003d range args {\n\t\t\t\tfor _, e :\u003d range env {\n\t\t\t\t\tif e.Name \u003d\u003d name {\n\t\t\t\t\t\tes \u003d append(es, e)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tenv \u003d es\n\t\t}\n\t}\n\n\t// print\n\tif *envJson {\n\t\tprintEnvAsJSON(env, *envChanged)\n\t} else {\n\t\tPrintEnv(os.Stdout, env, *envChanged)\n\t}",
      "revId": "e11171be7dd501fca05c5ba34ce3b83e5bf70b63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}