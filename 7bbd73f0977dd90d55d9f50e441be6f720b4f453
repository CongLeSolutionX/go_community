{
  "comments": [
    {
      "key": {
        "uuid": "6214edd4_1803451f",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 7061
      },
      "writtenOn": "2016-10-04T19:51:13Z",
      "side": 1,
      "message": "Is there any particular benefit to doing (as I read it) 32-bit wide shifts instead of 64-bit wide shifts?  If we attempt to write additional optimizations over shifts, it helps if they are all of a single width.",
      "range": {
        "startLine": 92,
        "startChar": 50,
        "endLine": 99,
        "endChar": 55
      },
      "revId": "7bbd73f0977dd90d55d9f50e441be6f720b4f453",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42ba8938_2f5b4952",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 14650
      },
      "writtenOn": "2016-10-04T20:55:21Z",
      "side": 1,
      "message": "Related to David\u0027s comment, if I understand correctly what is implied by the above, it is not necessary to sign-extend 32 to 64 before 32-bit right shifts. The SR[A]W[I] opcodes effectively do this for you as part of their specifications.",
      "revId": "7bbd73f0977dd90d55d9f50e441be6f720b4f453",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}