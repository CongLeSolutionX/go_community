{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "09de545d_75099c18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5070
      },
      "writtenOn": "2024-03-23T06:00:13Z",
      "side": 1,
      "message": "Nice. This should speed up all Windows users.\n\nLGTM. But I give only +1 because I am not familiar with this code anymore.\n\nThank you.\n\nAlex",
      "revId": "1e9f703f8b778602e9b11abdce276b8c1133bb11",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "194ddb5a_d4ed4a7a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2024-03-24T19:37:41Z",
      "side": 1,
      "message": "Looks ok to me, but I don\u0027t have enough runtime expertise to +2.",
      "revId": "1e9f703f8b778602e9b11abdce276b8c1133bb11",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97e20e7c_d370bebe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 34993
      },
      "writtenOn": "2024-03-25T12:04:39Z",
      "side": 1,
      "message": "Thanks for the review. Who should I put as reviewer to get a +2?",
      "parentUuid": "194ddb5a_d4ed4a7a",
      "revId": "1e9f703f8b778602e9b11abdce276b8c1133bb11",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5899bce_b6aaa890",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2024-03-25T13:00:28Z",
      "side": 1,
      "message": "For lockOSThread probably Michael or Cherry. I will mention this CL the next time we chat.\n\nOne corner case that we worry about periodically is the Go -\u003e C -\u003e Go scenario, e.g. C code calls back into Go via function pointer. Could this happen with a syscall? I assume the answer is no, but I thought I would check.",
      "parentUuid": "97e20e7c_d370bebe",
      "revId": "1e9f703f8b778602e9b11abdce276b8c1133bb11",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "198ae9dc_3b0e15e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 34993
      },
      "writtenOn": "2024-03-25T13:17:40Z",
      "side": 1,
      "message": "Callbacks can happen in a syscall, but there is already a lockOsThread call in that code path, and it is tested in `TestReturnAfterStackGrowInCallback`.",
      "parentUuid": "b5899bce_b6aaa890",
      "revId": "1e9f703f8b778602e9b11abdce276b8c1133bb11",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}