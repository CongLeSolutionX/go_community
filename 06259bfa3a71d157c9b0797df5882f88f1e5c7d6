{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "19910253_2fb7d490",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-18T17:41:13Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d06259bfa\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e7b0b72_ab32b5e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-18T17:44:38Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d06259bfa\nFailed on misc-compile-go1.20: https://storage.googleapis.com/go-build-log/06259bfa/misc-compile-go1.20_7207a3a1.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "19910253_2fb7d490",
      "tag": "autogenerated:trybots~progress",
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "054bbe4e_be64361d",
        "filename": "src/cmd/link/link_test.go",
        "patchSetId": 18
      },
      "lineNbr": 53,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-18T18:31:25Z",
      "side": 1,
      "message": "(nit) These `// Create importcfg file.` comments could be dropped throughout — they seem a bit redundant with the code, since it\u0027s now only two lines.",
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c56cade_231aec46",
        "filename": "src/go/build/deps_test.go",
        "patchSetId": 18
      },
      "lineNbr": 268,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-18T18:31:25Z",
      "side": 1,
      "message": "is `internal/buildinternal` gone now?",
      "range": {
        "startLine": 268,
        "startChar": 38,
        "endLine": 268,
        "endChar": 63
      },
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee3ae47c_3d703911",
        "filename": "src/go/build/deps_test.go",
        "patchSetId": 18
      },
      "lineNbr": 451,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-18T18:31:25Z",
      "side": 1,
      "message": "I think this line should be unnecessary: IIRC the dependencies here only apply to the packages themselves, not their tests, and `teststdlib` is only used in the test.",
      "range": {
        "startLine": 448,
        "startChar": 0,
        "endLine": 451,
        "endChar": 0
      },
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ecdbdfb_e0b77f6d",
        "filename": "src/go/internal/gcimporter/gcimporter.go",
        "patchSetId": 18
      },
      "lineNbr": 40,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-18T18:31:25Z",
      "side": 1,
      "message": "Stray debug print?",
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80440d97_3b993625",
        "filename": "src/go/internal/gcimporter/gcimporter_test.go",
        "patchSetId": 18
      },
      "lineNbr": 66,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-18T18:31:25Z",
      "side": 1,
      "message": "Can we use `testenv.WriteImportcfg` here?",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 66,
        "endChar": 53
      },
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5a431c1_a94b10bc",
        "filename": "src/internal/abi/abi_test.go",
        "patchSetId": 18
      },
      "lineNbr": 53,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-18T18:31:25Z",
      "side": 1,
      "message": "`testenv.WriteImportcfg`?",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 53,
        "endChar": 53
      },
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be306527_a6a91ceb",
        "filename": "src/internal/goroot/importcfg.go",
        "patchSetId": 18
      },
      "lineNbr": 19,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-18T18:31:25Z",
      "side": 1,
      "message": "s/nil/err/",
      "range": {
        "startLine": 19,
        "startChar": 13,
        "endLine": 19,
        "endChar": 16
      },
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e67f207_785fedfd",
        "filename": "src/internal/goroot/importcfg.go",
        "patchSetId": 18
      },
      "lineNbr": 38,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-18T18:31:25Z",
      "side": 1,
      "message": "Note in the comment that the caller must not modify the map, or else return a fresh copy of the map each time?\n\n(Unexpected mutations to the global map could lead to some really subtle bugs.)",
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cca9570_3813db2d",
        "filename": "src/internal/goroot/importcfg.go",
        "patchSetId": 18
      },
      "lineNbr": 42,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-18T18:31:25Z",
      "side": 1,
      "message": "(nit) consider adding `-e` to this so that fewer tests break if just one package somewhere in the tree is broken.",
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c8afbae_6c597367",
        "filename": "src/internal/goroot/importcfg.go",
        "patchSetId": 18
      },
      "lineNbr": 51,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-18T18:31:25Z",
      "side": 1,
      "message": "(nit) If `go list` fails midway through writing a line, this could in theory panic.\n\nConsider adding:\n```\nif len(sp) !\u003d 2 {\n\treturn nil, fmt.Error(…)\n}\n```",
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5e40da9_d1b895f9",
        "filename": "src/internal/teststdlib/importcfg.go",
        "patchSetId": 18
      },
      "lineNbr": 1,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-18T18:31:25Z",
      "side": 1,
      "message": "(nit) A package comment for this package would be helpful.",
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd457f96_572d2c82",
        "filename": "src/internal/teststdlib/importcfg.go",
        "patchSetId": 18
      },
      "lineNbr": 30,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-18T18:31:25Z",
      "side": 1,
      "message": "Is the `vendor` special-case actually needed here?\n\nAs far as I can tell, `gcimporter` doesn\u0027t specifically handle vendored imports, and the vendored packages in `std` actually have `vendor` as part of their package path.\n\n(A comment would be helpful.)",
      "revId": "06259bfa3a71d157c9b0797df5882f88f1e5c7d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}