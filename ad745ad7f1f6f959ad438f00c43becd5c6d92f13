{
  "comments": [
    {
      "key": {
        "uuid": "485311b1_8538645d",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 14
      },
      "lineNbr": 3382,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-11-12T16:55:34Z",
      "side": 1,
      "message": "Thanks, but \"int\" is still a defined type, so this isn\u0027t any different from using NoDup.  What we need are cases like \"chan []byte\".",
      "revId": "ad745ad7f1f6f959ad438f00c43becd5c6d92f13",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89d7dbef_1c22a8c3",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 14
      },
      "lineNbr": 3382,
      "author": {
        "id": 27938
      },
      "writtenOn": "2019-11-13T12:30:38Z",
      "side": 1,
      "message": "The channel related rule in the spec doesn\u0027t mention channel element types. It just says one of the two channel types must be a non-defined type.\n\nBut, anyway, if it needs, I will submit a new patch.",
      "parentUuid": "485311b1_8538645d",
      "revId": "ad745ad7f1f6f959ad438f00c43becd5c6d92f13",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b0ffd6f_93cd5d17",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 14
      },
      "lineNbr": 3382,
      "author": {
        "id": 27938
      },
      "writtenOn": "2019-11-13T12:57:14Z",
      "side": 1,
      "message": "Maybe the three lines are unnecessary,\n\n\t{V((*NoDupChan)(nil)), V((*NoDupChan)(nil))},\n\t{V((*NoDupChanRecv)(nil)), V((*NoDupChanRecv)(nil))},\n\t{V((*NoDupChanSend)(nil)), V((*NoDupChanSend)(nil))},\n\nI will remove them in a new patch if you agree on this.",
      "parentUuid": "89d7dbef_1c22a8c3",
      "revId": "ad745ad7f1f6f959ad438f00c43becd5c6d92f13",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "433e6d9d_8cb81240",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 14
      },
      "lineNbr": 3382,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-11-13T15:47:42Z",
      "side": 1,
      "message": "My point is that \"int\" is a defined type.\n\nI\u0027m asking for some tests of a channel of a type that is not a defined type.  Such as []byte.",
      "parentUuid": "8b0ffd6f_93cd5d17",
      "revId": "ad745ad7f1f6f959ad438f00c43becd5c6d92f13",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0f0e015_89977ba3",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 14
      },
      "lineNbr": 3382,
      "author": {
        "id": 27938
      },
      "writtenOn": "2019-11-13T15:58:17Z",
      "side": 1,
      "message": "Do you mean changing\n\n   type IntChan chan int\n\nto\n\n   type IntChan chan []byte",
      "parentUuid": "433e6d9d_8cb81240",
      "revId": "ad745ad7f1f6f959ad438f00c43becd5c6d92f13",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bc2496c_adf468ac",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 14
      },
      "lineNbr": 3382,
      "author": {
        "id": 27938
      },
      "writtenOn": "2019-11-13T15:59:28Z",
      "side": 1,
      "message": "or precisely\n\n   type ByteSliceChan chan []byte",
      "parentUuid": "f0f0e015_89977ba3",
      "revId": "ad745ad7f1f6f959ad438f00c43becd5c6d92f13",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a1cc733_f43b20b0",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 14
      },
      "lineNbr": 3382,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-11-13T16:01:53Z",
      "side": 1,
      "message": "Yes.  Thanks.",
      "parentUuid": "9bc2496c_adf468ac",
      "revId": "ad745ad7f1f6f959ad438f00c43becd5c6d92f13",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}