{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "33d9f4ac_9e09f68a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 28783
      },
      "writtenOn": "2022-02-17T20:04:57Z",
      "side": 1,
      "message": "Thanks for the comments!  Made the suggested changes - let me know what you think.\n",
      "revId": "3133b6c380c659d39b781a8739a9f7281a671f98",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19ae1bee_bb455f11",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-17T20:05:11Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d3133b6c3",
      "tag": "autogenerated:trybots~beginning",
      "revId": "3133b6c380c659d39b781a8739a9f7281a671f98",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fcce9764_7db5708c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 28783
      },
      "writtenOn": "2022-02-17T20:08:14Z",
      "side": 1,
      "message": "Keith/Matthew: Feel free to comment on any of this, but especiall the types1 importer (typecheck/iimport.go). RobF is covering/commenting on the types2 importer.\n\n",
      "revId": "3133b6c380c659d39b781a8739a9f7281a671f98",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3b11721_388a5cfb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-02-17T20:14:27Z",
      "side": 1,
      "message": "LGTM\n\nFWIW, unified IR\u0027s code for handling recursive type constraints is here: https://github.com/golang/go/blob/eaf040502b763a6f00dced35e4173c2ce90eb52f/src/cmd/compile/internal/noder/reader2.go#L466",
      "revId": "3133b6c380c659d39b781a8739a9f7281a671f98",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a09f718_4628aa9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-17T20:17:25Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "19ae1bee_bb455f11",
      "tag": "autogenerated:trybots~happy",
      "revId": "3133b6c380c659d39b781a8739a9f7281a671f98",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79330871_869040cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 31647
      },
      "writtenOn": "2022-02-17T20:22:48Z",
      "side": 1,
      "message": "Naively that looks like it will run into the same problem: SetConstraint \"completes\" the bound, meaning it wants to compute the type parameter type set. If not all named types have been fully set up, this will fail.",
      "parentUuid": "b3b11721_388a5cfb",
      "revId": "3133b6c380c659d39b781a8739a9f7281a671f98",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52e0c118_7ffe99ca",
        "filename": "test/typeparam/issue51219.dir/a.go",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 31647
      },
      "writtenOn": "2022-02-17T20:22:48Z",
      "side": 1,
      "message": "Can this be further minified to reproduce the bug, either here or in a separate test? There\u0027s so much recursion here that it\u0027s not clear which relationship triggered the original bug.  I suspect the following would suffice?\n\n```\ntype MyStruct struct {\n\tx *I[JsonRaw]\n}\n\ntype IConstraint interface {\n\tJsonRaw | MyStruct\n}\n\ntype I[T IConstraint] struct {\n}\n```",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 9
      },
      "revId": "3133b6c380c659d39b781a8739a9f7281a671f98",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}