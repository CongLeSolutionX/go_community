{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "90247959_d33e2e48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T23:33:26Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003ddf12dc8c\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbb5bf21_c28015d5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T23:33:26Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "2f62fff0_66ceab16",
      "tag": "autogenerated:trybots~beginning",
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3487c42c_6ca211f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T23:39:43Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003ddf12dc8c\nFailed on linux-arm64: https://storage.googleapis.com/go-build-log/df12dc8c/linux-arm64_ad0feaba.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "90247959_d33e2e48",
      "tag": "autogenerated:trybots~progress",
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "663cccd5_b7bf5fa9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T23:42:02Z",
      "side": 1,
      "message": "1 of 44 TryBots failed.\nFailed on linux-arm64: https://storage.googleapis.com/go-build-log/df12dc8c/linux-arm64_ad0feaba.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "90247959_d33e2e48",
      "tag": "autogenerated:trybots~failed",
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b92749b_abcdab3e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T23:48:18Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "90247959_d33e2e48",
      "tag": "autogenerated:trybots~beginning",
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32a8fde0_620ac916",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T23:48:18Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003ddf12dc8c\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8e502cf_67124074",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T23:56:20Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "32a8fde0_620ac916",
      "tag": "autogenerated:trybots~happy",
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5219296_0966f4c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 12545
      },
      "writtenOn": "2023-03-07T22:30:56Z",
      "side": 1,
      "message": "Apart from the atomic question, LGTM.",
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "687ec1d7_4843fda9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-03-07T22:56:22Z",
      "side": 1,
      "message": "Thank you for this change Damien! Some suggestions.",
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29733e75_1f36d88b",
        "filename": "src/net/http/responsecontroller_test.go",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-03-07T22:56:22Z",
      "side": 1,
      "message": "Did you perhaps just want to invoke t.Skip(\"ctl.EnableFullDuplex is not enabled\") or even better t.Fatalf(\"...\")",
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e75bdb76_09864d00",
        "filename": "src/net/http/responsecontroller_test.go",
        "patchSetId": 2
      },
      "lineNbr": 292,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-03-07T22:56:22Z",
      "side": 1,
      "message": "This can be made further concise by putting ctl.Flush() as the first statement in the loop so:\n\n\n\t\tw.WriteHeader(200)\n\t\tfor {\n\t\t\tctl.Flush()\n\t\t\tvar buf [1]byte\n\t\t\tn, err :\u003d req.Body.Read(buf[:])\n\t\t\tif n !\u003d 1 || err !\u003d nil {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tw.Write(buf[:])\n\t\t}",
      "range": {
        "startLine": 283,
        "startChar": 2,
        "endLine": 292,
        "endChar": 3
      },
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96c39e87_1b939bd6",
        "filename": "src/net/http/responsecontroller_test.go",
        "patchSetId": 2
      },
      "lineNbr": 312,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-03-07T22:56:22Z",
      "side": 1,
      "message": "Please make this a defer pw.Close() right after defer res.Body.Close()",
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d55985a_b6f2c383",
        "filename": "src/net/http/server.go",
        "patchSetId": 2
      },
      "lineNbr": 465,
      "author": {
        "id": 12545
      },
      "writtenOn": "2023-03-07T22:30:56Z",
      "side": 1,
      "message": "Since this is set-able by a user API, should it be an `atomic.Bool` so races are not possible? (looking through other usages of these kinds of vars, it\u0027s not entirely clear to me where the line is drawn on this.)",
      "range": {
        "startLine": 465,
        "startChar": 12,
        "endLine": 465,
        "endChar": 16
      },
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08f296d8_3926a032",
        "filename": "src/net/http/server.go",
        "patchSetId": 2
      },
      "lineNbr": 465,
      "author": {
        "id": 5305
      },
      "writtenOn": "2023-03-07T22:49:47Z",
      "side": 1,
      "message": "The user needs to set full duplex mode before starting to write the response body. If setting this field races with that write, then there\u0027s a real race going on--you\u0027ll get different behavior depending on which value the body write observes.",
      "parentUuid": "3d55985a_b6f2c383",
      "range": {
        "startLine": 465,
        "startChar": 12,
        "endLine": 465,
        "endChar": 16
      },
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b16bf919_d6cfe4ea",
        "filename": "src/net/http/server.go",
        "patchSetId": 2
      },
      "lineNbr": 465,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-03-07T22:56:22Z",
      "side": 1,
      "message": "I second Roland\u0027s suggestion to use an atomic.Bool",
      "parentUuid": "3d55985a_b6f2c383",
      "range": {
        "startLine": 465,
        "startChar": 12,
        "endLine": 465,
        "endChar": 16
      },
      "revId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one Code-Review+2 is required. Self review is not allowed."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Holds",
        "description": {
          "value": "Changes with a Hold+1 vote are not submittable."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "NOT label:Hold\u003d1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"NOT label:Hold=1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Hold=1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable, unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Wait-Release",
        "description": {
          "value": "Changes with the hashtag wait-release cannot be submitted."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "hashtag:wait-release"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:wait-release"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:wait-release"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "TryBots-Pass",
        "description": {
          "value": "Changes must pass TryBots unless TryBot-Bypass+1 is set."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config -label:TryBot-Result\u003dMAX"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:TryBot-Bypass\u003dMAX"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config -label:TryBot-Result=MAX"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:TryBot-Result=MAX"],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:TryBot-Bypass=MAX"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "df12dc8cd5cddc5ad11318f9acafaf161a6e525e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}