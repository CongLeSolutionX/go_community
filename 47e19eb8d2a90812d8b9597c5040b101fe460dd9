{
  "comments": [
    {
      "key": {
        "uuid": "f10da289_d9fc7b9b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-04-10T17:12:51Z",
      "side": 1,
      "message": "In general we don\u0027t use parentheses in references to functions, since godoc doesn\u0027t understand them.  So remove \"()\".",
      "range": {
        "startLine": 7,
        "startChar": 31,
        "endLine": 7,
        "endChar": 33
      },
      "revId": "47e19eb8d2a90812d8b9597c5040b101fe460dd9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a143772_77ba2f16",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 1
      },
      "lineNbr": 1090,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-04-10T17:12:51Z",
      "side": 1,
      "message": "*func() is a pointer, not a function.  And that leads me to notice that there is no pointer section.  Also no channel section.",
      "revId": "47e19eb8d2a90812d8b9597c5040b101fe460dd9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3adf50c9_f8b442d3",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 1
      },
      "lineNbr": 1110,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-04-10T17:12:51Z",
      "side": 1,
      "message": "We usually put the value we got first.  Anyhow, write this as\n    t.Errorf(\"%d: IsZero(%v) \u003d %t, want %t",
      "range": {
        "startLine": 1110,
        "startChar": 13,
        "endLine": 1110,
        "endChar": 66
      },
      "revId": "47e19eb8d2a90812d8b9597c5040b101fe460dd9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b0a2ac5_2bf6c8ac",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 1
      },
      "lineNbr": 1111,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-04-10T17:12:51Z",
      "side": 1,
      "message": "I suggest adding\n    if !IsZero(Zero(TypeOf(c.x))) {\n        t.Errorf(\"%d: IsZero(Zero(TypeOf(%v))) is false\", i, c.x)",
      "revId": "47e19eb8d2a90812d8b9597c5040b101fe460dd9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30937f8a_881f9b01",
        "filename": "src/reflect/value.go",
        "patchSetId": 1
      },
      "lineNbr": 1074,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-04-10T17:12:51Z",
      "side": 1,
      "message": "s/a zero-value/the zero value for its type/",
      "range": {
        "startLine": 1074,
        "startChar": 44,
        "endLine": 1074,
        "endChar": 56
      },
      "revId": "47e19eb8d2a90812d8b9597c5040b101fe460dd9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f8428a1_9f7a8b50",
        "filename": "src/reflect/value.go",
        "patchSetId": 1
      },
      "lineNbr": 1077,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-04-10T17:12:51Z",
      "side": 1,
      "message": "In this package I don\u0027t think we really need these comments.  Anybody trying to read this package should understand what a zero value is.",
      "revId": "47e19eb8d2a90812d8b9597c5040b101fe460dd9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04812d23_b88c6cb5",
        "filename": "src/reflect/value.go",
        "patchSetId": 1
      },
      "lineNbr": 1086,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-04-10T17:12:51Z",
      "side": 1,
      "message": "Missing Complex64 and Complex128, which suggests that they are also missing in the test.",
      "revId": "47e19eb8d2a90812d8b9597c5040b101fe460dd9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cacd3cc_1c09df4f",
        "filename": "src/reflect/value.go",
        "patchSetId": 1
      },
      "lineNbr": 1088,
      "author": {
        "id": 9735
      },
      "writtenOn": "2019-04-10T21:36:41Z",
      "side": 1,
      "message": "An interesting question arises whether -0.0 is the \"zero value\".\n\nI personally believe no, since I mentally consider the \"zero value\" as what is equivalent to zero\u0027d out memory for the given Go type.",
      "range": {
        "startLine": 1087,
        "startChar": 2,
        "endLine": 1088,
        "endChar": 0
      },
      "revId": "47e19eb8d2a90812d8b9597c5040b101fe460dd9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "beccaa5b_cdad4d0f",
        "filename": "src/reflect/value.go",
        "patchSetId": 1
      },
      "lineNbr": 1116,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-04-10T17:12:51Z",
      "side": 1,
      "message": "Missing UnsafePointer, which also needs to be in the test.",
      "revId": "47e19eb8d2a90812d8b9597c5040b101fe460dd9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8d6e7ea_831f1d7f",
        "filename": "src/reflect/value.go",
        "patchSetId": 1
      },
      "lineNbr": 1119,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-04-10T17:12:51Z",
      "side": 1,
      "message": "It\u0027s an interesting question what to do if v.kind() \u003d\u003d Invalid.  That will be true for the zero value of reflect.Value, so I don\u0027t think we should do this panic.  The question is whether we should just return true, or whether we should panic in a different way.  If we return true that needs to be documented in the function doc comment.\n\nEither way, though, this should panic with \u0026ValueError.",
      "revId": "47e19eb8d2a90812d8b9597c5040b101fe460dd9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}