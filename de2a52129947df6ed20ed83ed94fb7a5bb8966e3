{
  "comments": [
    {
      "key": {
        "uuid": "4cdef601_26d72a56",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-02-14T10:05:57Z",
      "side": 1,
      "message": "Changing this line to:\n\nos/user: obtain a user home path on windows\n\nas per https://github.com/golang/go/wiki/CommitMessage",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a78400c_02333e1a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 26534
      },
      "writtenOn": "2018-02-14T17:20:31Z",
      "side": 1,
      "message": "ok, will do.",
      "parentUuid": "4cdef601_26d72a56",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4840ee9e_8c9472f9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-02-14T10:05:57Z",
      "side": 1,
      "message": "Do you have a reference for this information? How do you know that users home path is stored there?",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8cf7a1b_56066de2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 26534
      },
      "writtenOn": "2018-02-14T17:20:31Z",
      "side": 1,
      "message": "https://social.technet.microsoft.com/wiki/contents/articles/13895.how-to-remove-a-corrupted-user-profile-from-the-registry.aspx\n\nhttps://support.asperasoft.com/hc/en-us/articles/216127438-How-to-delete-Windows-user-profiles",
      "parentUuid": "4840ee9e_8c9472f9",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8484023_001041d1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 19560
      },
      "writtenOn": "2018-02-14T12:45:37Z",
      "side": 1,
      "message": "The Go project doesn\u0027t use Signed-off-by lines in commit messages, so this can be omitted.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 63
      },
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "627da37c_2c4a683e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 26534
      },
      "writtenOn": "2018-02-14T17:20:31Z",
      "side": 1,
      "message": "@Tobias, can i leave the \"Signed-off-by\" line if i want to?",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ed5ecab_646ca7fc",
        "filename": "src/os/user/lookup_windows.go",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-02-14T10:05:57Z",
      "side": 1,
      "message": "Check for error and return first, like on line 122. When writing Go code, you should try and avoid indenting your code - it is easier to read such code.",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f31ff6f_42b582d0",
        "filename": "src/os/user/lookup_windows.go",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 26534
      },
      "writtenOn": "2018-02-14T17:20:31Z",
      "side": 1,
      "message": "thanks for the review. i wanted to return \"Unknown directory\" in case of a failure. maybe we should always return an error here if the regkey fails?",
      "parentUuid": "1ed5ecab_646ca7fc",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45c57b82_257d98b5",
        "filename": "src/os/user/lookup_windows.go",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-02-14T10:05:57Z",
      "side": 1,
      "message": "If you have any reference about why we could use this registry key, please add it here as a comment.",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4eaa99b4_a0896c3d",
        "filename": "src/os/user/lookup_windows.go",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 26534
      },
      "writtenOn": "2018-02-14T17:20:31Z",
      "side": 1,
      "message": "ok, i will add the two links i\u0027ve posted in the commit message comment.",
      "parentUuid": "45c57b82_257d98b5",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d1e7a15_aa7eaf63",
        "filename": "src/os/user/lookup_windows.go",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-02-14T10:05:57Z",
      "side": 1,
      "message": "Same.",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d78017a_d063b099",
        "filename": "src/os/user/lookup_windows.go",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 5070
      },
      "writtenOn": "2018-02-14T10:05:57Z",
      "side": 1,
      "message": "Is it possible to add new test that verifies thah user home directory is set correctly? Can we use environment variables to retrieve home directory? Maybe there is an Windows command that we could run that prints home directory? Powershell?",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee41337b_2c9fb20d",
        "filename": "src/os/user/lookup_windows.go",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 26534
      },
      "writtenOn": "2018-02-14T17:20:31Z",
      "side": 1,
      "message": "i guess we can test the existence of the Administrator home directory.\n\n`ProfileImagePath` is an important key. if one changes this in the registry, on the next restart the user will be having issues with his home directory. environment variables can be used only to retrieve the current user\u0027s home directory. powershell - the solution i found didn\u0027t seemed portable between WIN7 and WIN10, i can search again. WINAPI - i had some issues getting GetUserProfileDirectory() to work. it needs a token for that particular user, which means that the user should either own the process or be logged in (password required). maybe i didn\u0027t quite understand the WINAPI part.\n\nafter trying a set of different options i ended up with the reg-key solution.",
      "parentUuid": "3d78017a_d063b099",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7a0ec7e_85d4b9a7",
        "filename": "src/os/user/lookup_windows.go",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 26534
      },
      "writtenOn": "2018-02-14T18:46:12Z",
      "side": 1,
      "message": "\u003e i guess we can test the existence of the Administrator home directory.\n\nthere are a set of potential problems here. on windows the home directory is created only after the user has logged at least once. same applies to the above reg-key. so testing even the Administrator home directory becomes difficult as this user might have never logged. if a user exists (LookupAccountSid()) but the reg key is missing, this would mean that the user has never logged. in such a case the GO function can call GetUserProfileDirectoryW() and assume the user path is `GetUserProfileDirectoryW() + \"\\\\\" + accountName` as a fallback.",
      "parentUuid": "ee41337b_2c9fb20d",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25e122b2_4ec875f4",
        "filename": "src/os/user/lookup_windows.go",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 26534
      },
      "writtenOn": "2018-02-14T18:49:36Z",
      "side": 1,
      "message": "BTW, i\u0027m not using `GetUserProfileDirectoryW() + \"\\\\\" + accountName` as the primary solution as apparently the user can decide to move his folder outside of the `GetUserProfileDirectoryW()` (e.g. c:\\users) and modify the reg-key to \"propagate\" the change.",
      "parentUuid": "e7a0ec7e_85d4b9a7",
      "revId": "de2a52129947df6ed20ed83ed94fb7a5bb8966e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}