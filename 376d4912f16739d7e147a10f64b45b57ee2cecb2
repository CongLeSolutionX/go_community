{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9f5076c0_2c08c117",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-02-13T14:25:40Z",
      "side": 1,
      "message": "These are kind of odd blips. Are they cache related?",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 6
      },
      "revId": "376d4912f16739d7e147a10f64b45b57ee2cecb2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e600bd5_e6dc70f6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 53859
      },
      "writtenOn": "2023-02-13T14:55:27Z",
      "side": 1,
      "message": "It appears like that, all I could see from the profiles was that it was occurring around DCBZs",
      "parentUuid": "9f5076c0_2c08c117",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 6
      },
      "revId": "376d4912f16739d7e147a10f64b45b57ee2cecb2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "038544dd_649a8f09",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-02-13T20:46:39Z",
      "side": 1,
      "message": "This change only affects sizes that are not a multiple of 16. The tests getting odd times shouldn\u0027t even be affected by your change so I wouldn\u0027t even include them in the commit message. We\u0027ve seen odd results like this before and often there is a lot of time spent in the Go function that calls the assembler function, but we\u0027ve never figured out why. Probably cache related like Paul suggests.",
      "parentUuid": "4e600bd5_e6dc70f6",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 6
      },
      "revId": "376d4912f16739d7e147a10f64b45b57ee2cecb2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8455ce18_bae172e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-02-13T14:25:40Z",
      "side": 1,
      "message": "TRY\u003dppc64le,ppc64lep10",
      "revId": "376d4912f16739d7e147a10f64b45b57ee2cecb2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65e99829_8fd73234",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-13T14:28:56Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d376d4912\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "376d4912f16739d7e147a10f64b45b57ee2cecb2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65d0c586_4081f0eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-13T14:50:59Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-ppc64le-buildlet\n* linux-ppc64le-power10osu\n",
      "parentUuid": "65e99829_8fd73234",
      "tag": "autogenerated:trybots~happy",
      "revId": "376d4912f16739d7e147a10f64b45b57ee2cecb2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6f3ada3_e02db753",
        "filename": "src/runtime/memclr_ppc64x.s",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-02-13T14:25:40Z",
      "side": 1,
      "message": "Trivial nit, this should be a tab (same for line 115).",
      "range": {
        "startLine": 95,
        "startChar": 9,
        "endLine": 95,
        "endChar": 10
      },
      "revId": "376d4912f16739d7e147a10f64b45b57ee2cecb2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e65a108a_ab9e42d5",
        "filename": "src/runtime/memclr_ppc64x.s",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-02-13T20:46:39Z",
      "side": 1,
      "message": "I believe at this point VS32 (a.k.a. V0) is already filled with 0s.",
      "revId": "376d4912f16739d7e147a10f64b45b57ee2cecb2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61efc3eb_f7eedebb",
        "filename": "src/runtime/memclr_ppc64x.s",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 53859
      },
      "writtenOn": "2023-02-14T09:10:15Z",
      "side": 1,
      "message": "Yes, but there is a path from the beginning of the program to nozerolarge which also executes power10 code, we need to see how that can be accommodated",
      "parentUuid": "e65a108a_ab9e42d5",
      "revId": "376d4912f16739d7e147a10f64b45b57ee2cecb2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30fe0546_59ef86f2",
        "filename": "src/runtime/memclr_ppc64x.s",
        "patchSetId": 7
      },
      "lineNbr": 115,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-02-13T20:46:39Z",
      "side": 1,
      "message": "I believe XXLXOR is the preferred way to clear vector registers. In addition, it is better to use the same V register throughout so the minimum number of V regs are used by this function.\n\nThe code for power10 should come before the zerotail label to avoid setting CTR since that is not needed for the power10 code and is costly.",
      "revId": "376d4912f16739d7e147a10f64b45b57ee2cecb2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}