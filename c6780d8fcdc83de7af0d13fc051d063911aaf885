{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ce83b0aa_bbb31849",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 11715
      },
      "writtenOn": "2020-12-21T18:09:50Z",
      "side": 1,
      "message": "Hi, sorry, but this came up before and it\u0027s not the direction we want to go in.\n\nhttps://github.com/golang/go/issues/26776#issuecomment-497671740\nhttps://github.com/golang/go/issues/34648",
      "revId": "c6780d8fcdc83de7af0d13fc051d063911aaf885",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f4ce431_103e40eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 49338
      },
      "writtenOn": "2020-12-22T00:10:53Z",
      "side": 1,
      "message": "i see, thx for providing more background and context.\n\nwould the committee consider accepting an implementation based on limb method [9]uint32 similar to that in the p224.go and p256.go? or golang.org/x/crypto would be more proper place?\n\nthe pain point is that one has to import like /btcsuite or /go-ethereum, which is very heavy package with lots of dependency. i think Go deserves a native implementation of secp256k1 as quite a popular curve.\n\nor secp256k1 would not be considered in current roadmap? \n\nlet me know your advice\nthanks!",
      "parentUuid": "ce83b0aa_bbb31849",
      "revId": "c6780d8fcdc83de7af0d13fc051d063911aaf885",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c59c05c_702aceae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 11715
      },
      "writtenOn": "2020-12-22T15:07:14Z",
      "side": 1,
      "message": "I think a secp256k1 implementation belongs in a third-party module, it doesn\u0027t need to be in the standard library or in x/crypto. It might be a good idea to split it out of larger modules, I agree, but keep in mind that especially from Go 1.16, module dependencies that are not imported do not actually influence the build.",
      "parentUuid": "6f4ce431_103e40eb",
      "revId": "c6780d8fcdc83de7af0d13fc051d063911aaf885",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}