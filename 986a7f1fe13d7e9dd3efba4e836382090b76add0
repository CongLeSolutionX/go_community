{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "df9048d4_0b0b7df1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7530
      },
      "writtenOn": "2023-06-21T03:04:17Z",
      "side": 1,
      "message": "TRY\u003dlinux-riscv64",
      "revId": "986a7f1fe13d7e9dd3efba4e836382090b76add0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d17e196_89c063d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-06-21T03:04:32Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d986a7f1f\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "986a7f1fe13d7e9dd3efba4e836382090b76add0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75cf3db7_188a3650",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-06-21T04:25:19Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-riscv64-unmatched\n",
      "parentUuid": "7d17e196_89c063d8",
      "tag": "autogenerated:trybots~happy",
      "revId": "986a7f1fe13d7e9dd3efba4e836382090b76add0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ace7b7e_03c9f4a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5056
      },
      "writtenOn": "2023-06-21T11:47:47Z",
      "side": 1,
      "message": "Looks good but hold for Go 1.22. Thanks!",
      "revId": "986a7f1fe13d7e9dd3efba4e836382090b76add0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72f76b5e_9362da81",
        "filename": "src/math/floor_asm.go",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-07-12T15:34:05Z",
      "side": 1,
      "message": "Please reorder to keep sorted.",
      "range": {
        "startLine": 5,
        "startChar": 73,
        "endLine": 5,
        "endChar": 80
      },
      "revId": "986a7f1fe13d7e9dd3efba4e836382090b76add0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5754ac16_a4aae25e",
        "filename": "src/math/floor_asm.go",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 7530
      },
      "writtenOn": "2023-07-14T03:48:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72f76b5e_9362da81",
      "range": {
        "startLine": 5,
        "startChar": 73,
        "endLine": 5,
        "endChar": 80
      },
      "revId": "986a7f1fe13d7e9dd3efba4e836382090b76add0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b2e9e4d_77a67477",
        "filename": "src/math/floor_noasm.go",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-07-12T15:34:05Z",
      "side": 1,
      "message": "Same here.",
      "range": {
        "startLine": 5,
        "startChar": 81,
        "endLine": 5,
        "endChar": 88
      },
      "revId": "986a7f1fe13d7e9dd3efba4e836382090b76add0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b54b49d_309377b0",
        "filename": "src/math/floor_noasm.go",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 7530
      },
      "writtenOn": "2023-07-14T03:48:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b2e9e4d_77a67477",
      "range": {
        "startLine": 5,
        "startChar": 81,
        "endLine": 5,
        "endChar": 88
      },
      "revId": "986a7f1fe13d7e9dd3efba4e836382090b76add0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a88637a8_26266725",
        "filename": "src/math/floor_riscv64.s",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-07-12T15:34:05Z",
      "side": 1,
      "message": "Please use X* register names instead.",
      "range": {
        "startLine": 12,
        "startChar": 9,
        "endLine": 12,
        "endChar": 11
      },
      "revId": "986a7f1fe13d7e9dd3efba4e836382090b76add0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd639f86_222c7e25",
        "filename": "src/math/floor_riscv64.s",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 7530
      },
      "writtenOn": "2023-07-14T03:48:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a88637a8_26266725",
      "range": {
        "startLine": 12,
        "startChar": 9,
        "endLine": 12,
        "endChar": 11
      },
      "revId": "986a7f1fe13d7e9dd3efba4e836382090b76add0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f9ee22d_18cd8c80",
        "filename": "src/math/floor_riscv64.s",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-07-12T15:34:05Z",
      "side": 1,
      "message": "Why do we want to read and restore these flags?",
      "range": {
        "startLine": 17,
        "startChar": 1,
        "endLine": 17,
        "endChar": 11
      },
      "revId": "986a7f1fe13d7e9dd3efba4e836382090b76add0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a357d1e1_90c3486d",
        "filename": "src/math/floor_riscv64.s",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 7530
      },
      "writtenOn": "2023-07-14T03:48:06Z",
      "side": 1,
      "message": "ISA stated \"The accrued exception flags indicate the exception conditions that have arisen on any floating-point arithmetic instruction since the field was last reset by software\"\n\nsince Go ABI should not change FCSR\nhttps://go.dev/s/regabi\n\"All bits in CSR are system flags and are not modified by Go.\"\n\nI think we need to restore it.",
      "parentUuid": "4f9ee22d_18cd8c80",
      "range": {
        "startLine": 17,
        "startChar": 1,
        "endLine": 17,
        "endChar": 11
      },
      "revId": "986a7f1fe13d7e9dd3efba4e836382090b76add0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ad461fe_d5e2bee3",
        "filename": "src/math/floor_riscv64.s",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-07-24T15:31:12Z",
      "side": 1,
      "message": "This seems to be the opposite since we are explicitly modifying it - every floating point instruction run has the potential to reflect changes in the accrued exception  flags and my interpretation of that text is that we do not specifically reset or modify it.\n\nThe bigger issue here is that we do not currently save or restore FCSR, which means that if this code is preempted then we could end up restoring an incorrect value. The solution here would be to either start unconditionally saving and restoring FCSR, or providing synthesised floating point instructions that do the save/operation/restore dance and mark that as non-preemptible.\n\nIf we do not actually need to save/restore in order for this code to work, it seems  better to keep the status quo and not write to the FCSR.",
      "parentUuid": "a357d1e1_90c3486d",
      "range": {
        "startLine": 17,
        "startChar": 1,
        "endLine": 17,
        "endChar": 11
      },
      "revId": "986a7f1fe13d7e9dd3efba4e836382090b76add0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}