{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "99c2177f_8429310b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-01-06T20:07:06Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "7d1b7038_a543eb50",
      "tag": "autogenerated:trybots~beginning",
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d254b67d_dee417a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-01-06T20:07:06Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d12737e4a",
      "tag": "autogenerated:trybots~beginning",
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc854ede_c5795d60",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-01-06T20:20:02Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "d254b67d_dee417a0",
      "tag": "autogenerated:trybots~happy",
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66e6d488_b3e48347",
        "filename": "src/archive/tar/fuzz_test.go",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 28759
      },
      "writtenOn": "2022-01-11T19:54:26Z",
      "side": 1,
      "message": "I don\u0027t have a strong preference between using return or t.Skip() in cases like this, but we should probably decide on a convention.\nSliiight preference towards t.Skip() as the convention, since that would look more like existing unit tests today, and it very clear about what it will do.\nWdyt?",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 64,
        "endChar": 10
      },
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bf939b5_9d952cde",
        "filename": "src/archive/tar/fuzz_test.go",
        "patchSetId": 5
      },
      "lineNbr": 85,
      "author": {
        "id": 28759
      },
      "writtenOn": "2022-01-11T19:54:26Z",
      "side": 1,
      "message": "This should probably be in a defer, otherwise it won\u0027t get closed if there is a fatal error earlier. (Here and for other tests) e.g.\n\n  w :\u003d NewWriter(out)\n  defer func() {\n    if err :\u003d w.Close(); err !\u003d nil {\n      t.Errorf(\"Close error: %v\", err)\n    }\n  }()\n  for _, f :\u003d range files {\n    ....\n\nI realize this isn\u0027t what the example in archive/tar does, but maybe that\u0027s a bug in the example? Wdyt?",
      "range": {
        "startLine": 82,
        "startChar": 3,
        "endLine": 85,
        "endChar": 3
      },
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5cc5f93_3bb706cf",
        "filename": "src/archive/zip/fuzz_test.go",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 28759
      },
      "writtenOn": "2022-01-11T19:54:26Z",
      "side": 1,
      "message": "I have a feeling we\u0027re going to see code like this a lot.. May be another compelling reason to add a new API for f.AddDir.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 29,
        "endChar": 2
      },
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0383c4a9_4e1b6e59",
        "filename": "src/archive/zip/fuzz_test.go",
        "patchSetId": 5
      },
      "lineNbr": 46,
      "author": {
        "id": 28759
      },
      "writtenOn": "2022-01-11T19:54:26Z",
      "side": 1,
      "message": "In the previous test we return/t.Skip() if there\u0027s an error reading a file. In this test we continue to the next file.\n\nI would opt for continue here, then just t.Skip() after this loop if len(files) \u003d\u003d 0 (i.e. none of the files were successfully read)",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 46,
        "endChar": 12
      },
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04be3bc9_a9725734",
        "filename": "src/archive/zip/fuzz_test.go",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 28759
      },
      "writtenOn": "2022-01-11T19:54:26Z",
      "side": 1,
      "message": "Is this needed if we aren\u0027t using the content here?",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 55,
        "endChar": 4
      },
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "890cb31f_81f9b880",
        "filename": "src/compress/gzip/fuzz_test.go",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 28759
      },
      "writtenOn": "2022-01-11T19:54:26Z",
      "side": 1,
      "message": "Maybe a comment here for why this is special cased",
      "range": {
        "startLine": 45,
        "startChar": 2,
        "endLine": 45,
        "endChar": 46
      },
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bba7c85_8b338ba7",
        "filename": "src/compress/gzip/fuzz_test.go",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 28759
      },
      "writtenOn": "2022-01-11T19:54:26Z",
      "side": 1,
      "message": "This seems like an error we should report.",
      "range": {
        "startLine": 70,
        "startChar": 4,
        "endLine": 70,
        "endChar": 12
      },
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fd62499_acedc488",
        "filename": "src/compress/gzip/fuzz_test.go",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 28759
      },
      "writtenOn": "2022-01-11T19:54:26Z",
      "side": 1,
      "message": "nit: probably fine to just say \"Write: %v\" and \"Flush: %v\" for each, but up to you.",
      "range": {
        "startLine": 80,
        "startChar": 15,
        "endLine": 80,
        "endChar": 30
      },
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3bd7d54_3c5be4d4",
        "filename": "src/image/gif/fuzz_test.go",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 28759
      },
      "writtenOn": "2022-01-11T19:54:26Z",
      "side": 1,
      "message": "extra newline",
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43a9a1fe_46320d25",
        "filename": "src/image/gif/fuzz_test.go",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 28759
      },
      "writtenOn": "2022-01-11T19:54:26Z",
      "side": 1,
      "message": "Use %v here perhaps?",
      "range": {
        "startLine": 58,
        "startChar": 54,
        "endLine": 58,
        "endChar": 71
      },
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ae94d64_934bb167",
        "filename": "src/image/jpeg/fuzz_test.go",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 28759
      },
      "writtenOn": "2022-01-11T19:54:26Z",
      "side": 1,
      "message": "extra newline",
      "revId": "12737e4acc88e91ec6d02c8187f0c25640023bcd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}