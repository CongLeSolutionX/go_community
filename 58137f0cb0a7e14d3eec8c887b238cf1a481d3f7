{
  "comments": [
    {
      "key": {
        "uuid": "1e2c521c_b997fd20",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-04-11T18:28:48Z",
      "side": 1,
      "message": "Please include a before-and-after comparison of both the new benchmarks and any more realistic benchmarks you can find, including multiple values of GOMAXPROCS (generally from 1 up to twice the number of cores on the biggest CPU you have access to).\n\nhttps://godoc.org/golang.org/x/perf/cmd/benchstat is a good tool for such comparisons.",
      "revId": "58137f0cb0a7e14d3eec8c887b238cf1a481d3f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb18b63d_195959b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 31803
      },
      "writtenOn": "2019-04-14T17:55:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e2c521c_b997fd20",
      "revId": "58137f0cb0a7e14d3eec8c887b238cf1a481d3f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f36ffc8e_6c3311f1",
        "filename": "src/expvar/expvar.go",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-04-11T18:28:48Z",
      "side": 1,
      "message": "Please add some comments describing the reasoning behind these optimizations.",
      "revId": "58137f0cb0a7e14d3eec8c887b238cf1a481d3f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ab881ed_cabf07fe",
        "filename": "src/expvar/expvar.go",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-04-11T19:01:32Z",
      "side": 1,
      "message": "Honestly this seems pretty straightforward. If anything, I\u0027d just add a short comment like:\n\n  // Using insertion sort to place key into the already-sorted v.keys.",
      "parentUuid": "f36ffc8e_6c3311f1",
      "revId": "58137f0cb0a7e14d3eec8c887b238cf1a481d3f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5749c98_900bc7fe",
        "filename": "src/expvar/expvar.go",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 31803
      },
      "writtenOn": "2019-04-14T17:55:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ab881ed_cabf07fe",
      "revId": "58137f0cb0a7e14d3eec8c887b238cf1a481d3f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f2e0fb0_989ca788",
        "filename": "src/expvar/expvar_test.go",
        "patchSetId": 4
      },
      "lineNbr": 354,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-04-11T18:28:48Z",
      "side": 1,
      "message": "We try to make Go benchmarks representative of real-world usage, so that we\u0027re optimizing the properties that people actually care about and not just synthetic benchmarks.\n\nIf the randomness in this benchmark accurately represents a real-world scenario, the benchmark should have a comment describing that scenario.",
      "revId": "58137f0cb0a7e14d3eec8c887b238cf1a481d3f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35649e28_d98fd2f8",
        "filename": "src/expvar/expvar_test.go",
        "patchSetId": 4
      },
      "lineNbr": 354,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-04-11T19:01:32Z",
      "side": 1,
      "message": "I hadn\u0027t looked at this closely before.\n\nBut I see little reason to use b.RunParallel here or look at GOMAXPROCS.\n\nWe can just make this benchmark about the speed of inserting 100 map keys.",
      "parentUuid": "2f2e0fb0_989ca788",
      "revId": "58137f0cb0a7e14d3eec8c887b238cf1a481d3f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80361360_7ab004a9",
        "filename": "src/expvar/expvar_test.go",
        "patchSetId": 4
      },
      "lineNbr": 354,
      "author": {
        "id": 31803
      },
      "writtenOn": "2019-04-14T17:55:17Z",
      "side": 1,
      "message": "reply to Bryan C. Mills:\nSome necessary comments has been added.\n\nreply to Brad Fitzpatrick:\nI guess the map should be moved outside and be accessed in multiple goroutines for benchmarking for concurrent performances.",
      "parentUuid": "35649e28_d98fd2f8",
      "revId": "58137f0cb0a7e14d3eec8c887b238cf1a481d3f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c4997b1_a19839e9",
        "filename": "src/expvar/expvar_test.go",
        "patchSetId": 4
      },
      "lineNbr": 354,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-04-15T17:03:29Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s important. This CL wasn\u0027t about improving concurrency, even if that improves as a side effect.\n\nI\u0027d just write a simple benchmark and remove the b.RunParallel.",
      "parentUuid": "80361360_7ab004a9",
      "revId": "58137f0cb0a7e14d3eec8c887b238cf1a481d3f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4234851_9cca3dc1",
        "filename": "src/expvar/expvar_test.go",
        "patchSetId": 4
      },
      "lineNbr": 359,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-04-11T19:01:32Z",
      "side": 1,
      "message": "How about instead:\n\n  keys[j] \u003d fmt.Sprintf(\"%x\", sha1.Sum([]byte(fmt.Sprint(i))))\n\nThen it\u0027s more deterministic too, without needing to seed the math/rand package.",
      "range": {
        "startLine": 359,
        "startChar": 13,
        "endLine": 359,
        "endChar": 38
      },
      "revId": "58137f0cb0a7e14d3eec8c887b238cf1a481d3f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "792773e4_79354a76",
        "filename": "src/expvar/expvar_test.go",
        "patchSetId": 4
      },
      "lineNbr": 359,
      "author": {
        "id": 31803
      },
      "writtenOn": "2019-04-14T17:55:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4234851_9cca3dc1",
      "range": {
        "startLine": 359,
        "startChar": 13,
        "endLine": 359,
        "endChar": 38
      },
      "revId": "58137f0cb0a7e14d3eec8c887b238cf1a481d3f7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}