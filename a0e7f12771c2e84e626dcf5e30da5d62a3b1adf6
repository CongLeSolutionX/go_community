{
  "comments": [
    {
      "key": {
        "uuid": "153e6b57_1f41bb14",
        "filename": "misc/wasm/wasm_exec.html",
        "patchSetId": 15
      },
      "lineNbr": 19,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-09-29T15:15:54Z",
      "side": 1,
      "message": "Sorry, this isn\u0027t acceptable.\n\nWe can\u0027t be doing unconditional third-party network requests for all users.\n\nWhen I saw some of the discussion flying by I assumed this was going to be a fallback for old browsers, not for all.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 93
      },
      "revId": "a0e7f12771c2e84e626dcf5e30da5d62a3b1adf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fac75971_829c8c05",
        "filename": "misc/wasm/wasm_exec.html",
        "patchSetId": 15
      },
      "lineNbr": 19,
      "author": {
        "id": 13620
      },
      "writtenOn": "2018-09-29T16:01:07Z",
      "side": 1,
      "message": "What exactly is the issue? Is it about third-party code that could change? If yes, then we could include a hash with the \"integrity\" attribute.",
      "parentUuid": "153e6b57_1f41bb14",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 93
      },
      "revId": "a0e7f12771c2e84e626dcf5e30da5d62a3b1adf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c79601f9_6e3d56e8",
        "filename": "misc/wasm/wasm_exec.html",
        "patchSetId": 15
      },
      "lineNbr": 19,
      "author": {
        "id": 28917
      },
      "writtenOn": "2018-09-30T04:09:30Z",
      "side": 1,
      "message": "FYI, incase simply adding an integrity attribute isn\u0027t enough, we can do the more verbose \"only load polyfills if needed\". I\u0027ve kept the code I put together here:\nhttps://github.com/silbinarywolf/go/blob/fix-wasm-exec-for-microsoft-edge-optional-polyfill/misc/wasm/wasm_exec.html",
      "parentUuid": "fac75971_829c8c05",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 93
      },
      "revId": "a0e7f12771c2e84e626dcf5e30da5d62a3b1adf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcc9625e_758b41b7",
        "filename": "misc/wasm/wasm_exec.html",
        "patchSetId": 15
      },
      "lineNbr": 19,
      "author": {
        "id": 13620
      },
      "writtenOn": "2018-09-30T17:10:24Z",
      "side": 1,
      "message": "In that case we could make it simpler by putting the polyfill detection in a separate \u003cscript\u003e tag and have it append the polyfill script tag conditionally. Browsers execute all \u003cscript\u003e tags in order. However, I\u0027d like to only do this if it solves the concrete issue. I\u0027m not yet fully clear on what the issue is.",
      "parentUuid": "c79601f9_6e3d56e8",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 93
      },
      "revId": "a0e7f12771c2e84e626dcf5e30da5d62a3b1adf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29685ef8_83c6072c",
        "filename": "misc/wasm/wasm_exec.html",
        "patchSetId": 15
      },
      "lineNbr": 19,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-10-01T22:58:04Z",
      "side": 1,
      "message": "Two main reasons it\u0027s not acceptable:\n\n1) it adds a new dependency on a third-party service (jsdelivr.net)\n2) it makes all users pay the additional bandwidth+latency cost, even when it\u0027s not necessary\n\nI care about (2) much more than (1).\n\nIf (2) was solved, then (1) would go away over time: eventually browsers will support whatever you\u0027re polyfilling and we\u0027d never need to hit that service.",
      "parentUuid": "dcc9625e_758b41b7",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 93
      },
      "revId": "a0e7f12771c2e84e626dcf5e30da5d62a3b1adf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d641b1a_df02776d",
        "filename": "misc/wasm/wasm_exec.html",
        "patchSetId": 15
      },
      "lineNbr": 19,
      "author": {
        "id": 13620
      },
      "writtenOn": "2018-10-01T23:57:07Z",
      "side": 1,
      "message": "To me, wasm_exec.html is an example on how to embed Go in a web page. It is not a library that people include. For an example, I prefer simplicity.\n\nThe overhead of 5.6 KB is very tiny compared to the size of the wasm binary that the Go compiler currently produces (premature optimization?). It also doesn\u0027t affect latency, since script tags get fetched concurrently. Eventually I would simply remove the polyfill from the example when it is not necessary any more. If you have a site and you want to support older browsers, you have to test and polyfill anyways. This wouldn\u0027t be the only polyfill that you need.\n\nI\u0027m not yet convinced that this needs a change, but I\u0027m also not strongly opposed to a change.",
      "parentUuid": "29685ef8_83c6072c",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 93
      },
      "revId": "a0e7f12771c2e84e626dcf5e30da5d62a3b1adf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3accd77_a237ffbc",
        "filename": "misc/wasm/wasm_exec.html",
        "patchSetId": 15
      },
      "lineNbr": 19,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-10-02T00:21:37Z",
      "side": 1,
      "message": "If it\u0027s just an example and you don\u0027t think most users will copy/paste this file without really reading it (as I assume), then move the script tag into the comment too. Then only users who read the comment can choose to support old browsers with the added latency hit.\n\nI don\u0027t see why this script tag won\u0027t block execution: how does the browser know that this script tag won\u0027t write to the document body? There\u0027s no \"defer\" attribute or whatever here.",
      "parentUuid": "0d641b1a_df02776d",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 93
      },
      "revId": "a0e7f12771c2e84e626dcf5e30da5d62a3b1adf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}