{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c609e374_7e75b336",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 12120
      },
      "writtenOn": "2024-09-13T16:16:26Z",
      "side": 1,
      "message": "https://go.dev/doc/contribute#commit_messages",
      "revId": "edfe2315c4367de686e3fdce22c6405a07756247",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1edba523_66d9b00f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 3566522
      },
      "writtenOn": "2024-09-14T01:02:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c609e374_7e75b336",
      "revId": "edfe2315c4367de686e3fdce22c6405a07756247",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07d4332f_4fdb36dc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 12120
      },
      "writtenOn": "2024-09-13T16:16:26Z",
      "side": 1,
      "message": "For #61515.",
      "revId": "edfe2315c4367de686e3fdce22c6405a07756247",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d531aa8_c9352337",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 3566522
      },
      "writtenOn": "2024-09-14T01:02:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07d4332f_4fdb36dc",
      "revId": "edfe2315c4367de686e3fdce22c6405a07756247",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca23c18e_15bd1cc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 12120
      },
      "writtenOn": "2024-09-13T16:16:26Z",
      "side": 1,
      "message": "This covers \"The benchmarking framework can record time and other metrics around only the benchmarked operation, so benchmarks no longer need to use ResetTimer or be careful about their setup.\" [1]\n\nBut this isn\u0027t really related to scaling, is it? The testing package will still have to call the benchmark function multiple times.\n\n[1] Unless there is teardown after the loop. Maybe the last call to Loop (the one that returns false) should call StopTimer?",
      "revId": "edfe2315c4367de686e3fdce22c6405a07756247",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b002eaa_fea54759",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-09-16T16:12:03Z",
      "side": 1,
      "message": "Agree. We probably want to reword the CL description. It is not about scaling.",
      "parentUuid": "ca23c18e_15bd1cc8",
      "revId": "edfe2315c4367de686e3fdce22c6405a07756247",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30e86c86_46ffd7f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 3566522
      },
      "writtenOn": "2024-09-16T17:45:16Z",
      "side": 1,
      "message": "Updated the CL description. I think we don\u0027t need to call `StopTimer` after the last `loop()`, because `StopTimer` will be called everytime after a `benchFunc` run already. :D",
      "parentUuid": "1b002eaa_fea54759",
      "revId": "edfe2315c4367de686e3fdce22c6405a07756247",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f62f19db_d39913f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 12120
      },
      "writtenOn": "2024-09-17T17:55:14Z",
      "side": 1,
      "message": "I\u0027m thinking of a case like:\n\n```\nfunc BenchmarkFoo(b *testing.B) {\n  ExpensiveSetUp()\n  defer ExpensiveTearDown()\n  \n  for b.Loop() {\n    ...\n  }\n}\n```\n\nIf we stop the timer on the last loop iteration then we won\u0027t count the time in `ExpensiveTearDown`. I think this is less common than expensive set up, but may still be worth excluding if it is easy.\n\ne.g., in https://go-review.googlesource.com/c/go/+/596295/8/src/runtime/map_benchmark_test.go in `benchmarkMapAssignGrowLatency` (Line 828), I sort a slice of length b.N after the loop. That is quite expensive and important to not count.",
      "parentUuid": "30e86c86_46ffd7f6",
      "revId": "edfe2315c4367de686e3fdce22c6405a07756247",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e428861_af955f44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-09-17T21:30:46Z",
      "side": 1,
      "message": "It seems reasonable to me to call StopTimer at the end of the loop. If we do autoscaling we\u0027ll also need to do that.",
      "parentUuid": "f62f19db_d39913f5",
      "revId": "edfe2315c4367de686e3fdce22c6405a07756247",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2f7a6fe_ebbd881e",
        "filename": "src/testing/benchmark.go",
        "patchSetId": 2
      },
      "lineNbr": 367,
      "author": {
        "id": 12120
      },
      "writtenOn": "2024-09-13T16:16:26Z",
      "side": 1,
      "message": "Could we just check b.loopN \u003d\u003d b.N? (before decrementing)",
      "revId": "edfe2315c4367de686e3fdce22c6405a07756247",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d832f26c_f55180cf",
        "filename": "src/testing/benchmark.go",
        "patchSetId": 2
      },
      "lineNbr": 367,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-09-16T16:12:03Z",
      "side": 1,
      "message": "(mark as unresolved.)",
      "parentUuid": "b2f7a6fe_ebbd881e",
      "revId": "edfe2315c4367de686e3fdce22c6405a07756247",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cde9bdcc_94e6adf6",
        "filename": "src/testing/benchmark.go",
        "patchSetId": 2
      },
      "lineNbr": 367,
      "author": {
        "id": 3566522
      },
      "writtenOn": "2024-09-16T17:45:16Z",
      "side": 1,
      "message": "Makes sense! Done + thanks~",
      "parentUuid": "d832f26c_f55180cf",
      "revId": "edfe2315c4367de686e3fdce22c6405a07756247",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}