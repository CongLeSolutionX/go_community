{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ce797770_998de5d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-12-15T04:59:40Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d08ebf3f1\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "08ebf3f15cb7b5d8411dc906fc47ca5f3889fa10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "464a5d73_024da324",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-12-15T05:11:43Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "ce797770_998de5d1",
      "tag": "autogenerated:trybots~happy",
      "revId": "08ebf3f15cb7b5d8411dc906fc47ca5f3889fa10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ce8f390_2944364a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 51461
      },
      "writtenOn": "2024-01-30T03:50:38Z",
      "side": 1,
      "message": "Any help reviewing the code?",
      "revId": "08ebf3f15cb7b5d8411dc906fc47ca5f3889fa10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92d6acb0_56a8690c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 66749
      },
      "writtenOn": "2024-01-30T05:13:01Z",
      "side": 1,
      "message": "Related #44635, CL 333990",
      "revId": "08ebf3f15cb7b5d8411dc906fc47ca5f3889fa10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad9561c9_8756d91b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-02-19T20:56:01Z",
      "side": 1,
      "message": "Thanks for the change.  I\u0027m struggling with where this should be documented.  People should be able to rely on using errors.Is to pick up errors returned by a Value method, and that means that we should write that down somewhere.  But where?  Any ideas?",
      "revId": "08ebf3f15cb7b5d8411dc906fc47ca5f3889fa10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f55a8a2_c3908c98",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 51461
      },
      "writtenOn": "2024-02-20T01:41:51Z",
      "side": 1,
      "message": "I suggest adding comments directly in the GoDoc comments for both the Query and Exec methods within the database/sql package. This approach keeps the information accessible right where developers will make use of it.\n\n```\n...\n// If any argument implements the driver.Valuer interface and \n// returns an error from its Value method, Query wraps these errors \n// using fmt.Errorf and %w verb. This allows callers to use errors.Is \n// to check for specific error values.\nfunc (db *DB) Query(query string, args ...any) (*Rows, error) {\n\treturn db.QueryContext(context.Background(), query, args...)\n}\n```\n\n```\n...\n// If any argument implements the driver.Valuer interface and \n// returns an error from its Value method, Exec wraps these errors \n// using fmt.Errorf and %w verb. This allows callers to use errors.Is \n// to check for specific error values.\nfunc (db *DB) Exec(query string, args ...any) (Result, error) {\n\treturn db.ExecContext(context.Background(), query, args...)\n}\n```\n\nWhat do you think?",
      "parentUuid": "ad9561c9_8756d91b",
      "revId": "08ebf3f15cb7b5d8411dc906fc47ca5f3889fa10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "961b02d0_3127edfc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-02-20T06:03:03Z",
      "side": 1,
      "message": "Sounds reasonable.  Thanks.",
      "parentUuid": "0f55a8a2_c3908c98",
      "revId": "08ebf3f15cb7b5d8411dc906fc47ca5f3889fa10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c35a6e4c_8e2cbff9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 51461
      },
      "writtenOn": "2024-02-20T06:43:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "961b02d0_3127edfc",
      "revId": "08ebf3f15cb7b5d8411dc906fc47ca5f3889fa10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a812740_e23ceb59",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 51461
      },
      "writtenOn": "2024-02-20T06:43:45Z",
      "side": 1,
      "message": "Relevant comments have been added",
      "revId": "08ebf3f15cb7b5d8411dc906fc47ca5f3889fa10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f578b36_a632706a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-02-20T19:20:32Z",
      "side": 1,
      "message": "Thanks.  I didn\u0027t realize how many comments this would require.  I think this is too repetitive.\n\nHow about instead we document this in database/sql/driver Valuer.",
      "parentUuid": "c35a6e4c_8e2cbff9",
      "revId": "08ebf3f15cb7b5d8411dc906fc47ca5f3889fa10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}