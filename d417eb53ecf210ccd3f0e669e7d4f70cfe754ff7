{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8790feef_f1732119",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-05T05:38:08Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dd417eb53",
      "tag": "autogenerated:trybots~beginning",
      "revId": "d417eb53ecf210ccd3f0e669e7d4f70cfe754ff7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a7474dc_3ccbbc45",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-05T05:38:08Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "1d833893_91d827ca",
      "tag": "autogenerated:trybots~beginning",
      "revId": "d417eb53ecf210ccd3f0e669e7d4f70cfe754ff7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bea59ef4_c17d550e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-05T06:09:35Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "8790feef_f1732119",
      "tag": "autogenerated:trybots~happy",
      "revId": "d417eb53ecf210ccd3f0e669e7d4f70cfe754ff7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc71a45a_02aadb38",
        "filename": "src/cmd/compile/internal/types2/predicates.go",
        "patchSetId": 20
      },
      "lineNbr": 247,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-08-05T17:45:21Z",
      "side": 1,
      "message": "Similar to my comments below when computing interface and union type sets: if we supported operations on type sets (intersection, union, equal), then I think this code is simplified.",
      "range": {
        "startLine": 246,
        "startChar": 0,
        "endLine": 247,
        "endChar": 20
      },
      "revId": "d417eb53ecf210ccd3f0e669e7d4f70cfe754ff7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77769d01_a4d07eeb",
        "filename": "src/cmd/compile/internal/types2/subst.go",
        "patchSetId": 20
      },
      "lineNbr": 148,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-08-05T17:45:21Z",
      "side": 1,
      "message": "optional nit: This should be termlist.",
      "range": {
        "startLine": 148,
        "startChar": 25,
        "endLine": 148,
        "endChar": 33
      },
      "revId": "d417eb53ecf210ccd3f0e669e7d4f70cfe754ff7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd31eb14_49ffe037",
        "filename": "src/cmd/compile/internal/types2/subst.go",
        "patchSetId": 20
      },
      "lineNbr": 150,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-08-05T17:45:21Z",
      "side": 1,
      "message": "typo:unlikely",
      "range": {
        "startLine": 150,
        "startChar": 60,
        "endLine": 150,
        "endChar": 66
      },
      "revId": "d417eb53ecf210ccd3f0e669e7d4f70cfe754ff7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b71207d3_5bc09c30",
        "filename": "src/cmd/compile/internal/types2/testdata/examples/constraints.go2",
        "patchSetId": 20
      },
      "lineNbr": 35,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-08-05T17:45:21Z",
      "side": 1,
      "message": "Ad a test for overlapping when one of the terms is an interface?",
      "range": {
        "startLine": 35,
        "startChar": 1,
        "endLine": 35,
        "endChar": 72
      },
      "revId": "d417eb53ecf210ccd3f0e669e7d4f70cfe754ff7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c35e825e_926cb97d",
        "filename": "src/cmd/compile/internal/types2/typeset.go",
        "patchSetId": 20
      },
      "lineNbr": 278,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-08-05T17:45:21Z",
      "side": 1,
      "message": "It may be premature, but why not just compute the tset for an embedded here, then union methods and intersect terms below.\n\nWe don\u0027t support methods coming from unions, but this code need not depend on that fact.\n\nIn other words, have methods to compute the intersection and union of _type sets_. I think that would actually simplify the logic here, and in computeUnionTypeSet.\n\nNot necessary for this CL.",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 278,
        "endChar": 21
      },
      "revId": "d417eb53ecf210ccd3f0e669e7d4f70cfe754ff7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e46908e_eb621023",
        "filename": "src/cmd/compile/internal/types2/typexpr.go",
        "patchSetId": 20
      },
      "lineNbr": 161,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-08-05T17:45:21Z",
      "side": 1,
      "message": "It seems cleaner to check explicitly whether the comparable bit is set.",
      "range": {
        "startLine": 159,
        "startChar": 6,
        "endLine": 161,
        "endChar": 5
      },
      "revId": "d417eb53ecf210ccd3f0e669e7d4f70cfe754ff7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d31bcf64_440b8a36",
        "filename": "src/cmd/compile/internal/types2/union.go",
        "patchSetId": 20
      },
      "lineNbr": 126,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-08-05T17:45:21Z",
      "side": 1,
      "message": "That seems like a limitation we should eliminate, since these are valid terms.",
      "range": {
        "startLine": 126,
        "startChar": 2,
        "endLine": 126,
        "endChar": 49
      },
      "revId": "d417eb53ecf210ccd3f0e669e7d4f70cfe754ff7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}