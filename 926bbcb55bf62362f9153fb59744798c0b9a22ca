{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e80205ee_7bda5293",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-09T01:32:55Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "0c557ab7_21529a7d",
      "tag": "autogenerated:trybots~beginning",
      "revId": "926bbcb55bf62362f9153fb59744798c0b9a22ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3068d6a0_f920ee2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-09T01:32:55Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d926bbcb5",
      "tag": "autogenerated:trybots~beginning",
      "revId": "926bbcb55bf62362f9153fb59744798c0b9a22ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a87a1c7_71836770",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-09T01:46:28Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "3068d6a0_f920ee2f",
      "tag": "autogenerated:trybots~happy",
      "revId": "926bbcb55bf62362f9153fb59744798c0b9a22ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e40a442_834a356d",
        "filename": "src/cmd/compile/internal/types2/decl.go",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-11-09T02:03:05Z",
      "side": 1,
      "message": "Hmm, what about this?\n\n  type N[P M[P]]\n\n  type M[Q any] struct { F *M[Q] }\n\nIf we check M via check.ident while checking the bound of N.P, we\u0027ll encounter a valid cycle involving a generic type, while in a tplist?\n\nDo we need to set tplist to the length of check.objPath, so that we can quickly determine if the tplist is contained within the cycle?\n\nAm I missing something?",
      "range": {
        "startLine": 240,
        "startChar": 32,
        "endLine": 240,
        "endChar": 50
      },
      "revId": "926bbcb55bf62362f9153fb59744798c0b9a22ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18eda55c_9bc4b3b2",
        "filename": "src/cmd/compile/internal/types2/decl.go",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-11-09T04:48:04Z",
      "side": 1,
      "message": "Your example works fine (and I added it to the issue test).\nBut I am actually not 100% sure why. Investigating.",
      "parentUuid": "1e40a442_834a356d",
      "range": {
        "startLine": 240,
        "startChar": 32,
        "endLine": 240,
        "endChar": 50
      },
      "revId": "926bbcb55bf62362f9153fb59744798c0b9a22ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "260e5eca_000e8e20",
        "filename": "src/cmd/compile/internal/types2/decl.go",
        "patchSetId": 2
      },
      "lineNbr": 272,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-11-09T02:03:05Z",
      "side": 1,
      "message": "Can we rename this variable to isInvalidCycle, or equivalent?",
      "range": {
        "startLine": 272,
        "startChar": 6,
        "endLine": 272,
        "endChar": 13
      },
      "revId": "926bbcb55bf62362f9153fb59744798c0b9a22ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b55bce8_ae02fc48",
        "filename": "src/cmd/compile/internal/types2/decl.go",
        "patchSetId": 2
      },
      "lineNbr": 272,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-11-09T04:48:04Z",
      "side": 1,
      "message": "done via a separate preceding CL",
      "parentUuid": "260e5eca_000e8e20",
      "range": {
        "startLine": 272,
        "startChar": 6,
        "endLine": 272,
        "endChar": 13
      },
      "revId": "926bbcb55bf62362f9153fb59744798c0b9a22ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ef0cef9_2d4c4c47",
        "filename": "src/cmd/compile/internal/types2/decl.go",
        "patchSetId": 2
      },
      "lineNbr": 298,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-11-09T02:03:05Z",
      "side": 1,
      "message": "I wonder if we should output a specific error message in the case of this new category of invalid cycle.",
      "range": {
        "startLine": 298,
        "startChar": 7,
        "endLine": 298,
        "endChar": 17
      },
      "revId": "926bbcb55bf62362f9153fb59744798c0b9a22ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f2df9dd_c7cad9bd",
        "filename": "src/cmd/compile/internal/types2/decl.go",
        "patchSetId": 2
      },
      "lineNbr": 298,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-11-09T04:48:04Z",
      "side": 1,
      "message": "I don\u0027t think this is a new kind of cycle. We already recognize the cycle but ignore it as valid. The only thing we change is that we decide that these are not valid cycles. So I think this error is fine; and the printed path is fine, too.",
      "parentUuid": "3ef0cef9_2d4c4c47",
      "range": {
        "startLine": 298,
        "startChar": 7,
        "endLine": 298,
        "endChar": 17
      },
      "revId": "926bbcb55bf62362f9153fb59744798c0b9a22ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}