{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bdf66e3a_f98c9cdd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-06-25T21:57:11Z",
      "side": 1,
      "message": "Keith, do you want to review this and see if it makes sense to check in?  I added in the alignment fields, since they were fairly easy to add.  I am undecided if we should have separate gcshapeType() and gcshapeName() (what I had in the first patchset, but duplicates bunch of code) vs. have a single gcshapeType() that returns type and name (what I have now).  Either way is fine with me.\n\nAlso, minor point, but since operations (like multiply) on complex128 are different from operations on two float64s, maybe we should have c8 and c16 gcshapes distinct from f4f4 and f8f8?  Essentially, almost all builtin types have different gcshapes (except int/int64 and uintptr/uint/uint64)\n",
      "revId": "2b987bf826ead5d35239084340c316503dd8cb86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97f32a15_7ddf5daa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-25T21:57:28Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d2b987bf8",
      "tag": "autogenerated:trybots~beginning",
      "revId": "2b987bf826ead5d35239084340c316503dd8cb86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43f1806b_c26a68d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-25T22:25:33Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "97f32a15_7ddf5daa",
      "tag": "autogenerated:trybots~happy",
      "revId": "2b987bf826ead5d35239084340c316503dd8cb86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75ef5b9c_f60450fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5200
      },
      "writtenOn": "2021-06-29T22:22:32Z",
      "side": 1,
      "message": "Looks pretty good.",
      "revId": "2b987bf826ead5d35239084340c316503dd8cb86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1b8b5e5_944fb43b",
        "filename": "src/cmd/compile/internal/noder/stencil.go",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 5200
      },
      "writtenOn": "2021-06-29T22:22:32Z",
      "side": 1,
      "message": "Will we need to handle fields of name _ differently? We do in some other situations (like \u003d\u003d generation).",
      "revId": "2b987bf826ead5d35239084340c316503dd8cb86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2f0b628_e8e77d84",
        "filename": "src/cmd/compile/internal/noder/stencil.go",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-06-30T00:30:28Z",
      "side": 1,
      "message": "OK, I passed the sym of the associated field (if any) down to accumGcshape, so we could use that to name blanks fields differently in the gcshape.  (I\u0027m guessing we want to give them the same blank name - anything else?)",
      "parentUuid": "d1b8b5e5_944fb43b",
      "revId": "2b987bf826ead5d35239084340c316503dd8cb86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "321b4824_9ceb77c4",
        "filename": "src/cmd/compile/internal/noder/stencil.go",
        "patchSetId": 3
      },
      "lineNbr": 643,
      "author": {
        "id": 5200
      },
      "writtenOn": "2021-06-29T22:22:32Z",
      "side": 1,
      "message": "Needs a WriteString(\"pp\")",
      "revId": "2b987bf826ead5d35239084340c316503dd8cb86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2847233e_02c935e9",
        "filename": "src/cmd/compile/internal/noder/stencil.go",
        "patchSetId": 3
      },
      "lineNbr": 643,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-06-30T00:30:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "321b4824_9ceb77c4",
      "revId": "2b987bf826ead5d35239084340c316503dd8cb86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bc3fb97_dc44ad29",
        "filename": "src/cmd/compile/internal/noder/stencil.go",
        "patchSetId": 3
      },
      "lineNbr": 673,
      "author": {
        "id": 5200
      },
      "writtenOn": "2021-06-29T22:22:32Z",
      "side": 1,
      "message": "I was envisioning shape types living in a global package, because two types in different packages can have the same shape. Not sure it really matters, though, as shape types are kinda hidden.",
      "range": {
        "startLine": 673,
        "startChar": 28,
        "endLine": 673,
        "endChar": 42
      },
      "revId": "2b987bf826ead5d35239084340c316503dd8cb86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ab9736f_f5614190",
        "filename": "src/cmd/compile/internal/noder/stencil.go",
        "patchSetId": 3
      },
      "lineNbr": 673,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-06-30T00:30:28Z",
      "side": 1,
      "message": "Added a TODO to decide.  They should probably at least be in the source package of the function being instantiated, but we can adjust as we use them.",
      "parentUuid": "1bc3fb97_dc44ad29",
      "range": {
        "startLine": 673,
        "startChar": 28,
        "endLine": 673,
        "endChar": 42
      },
      "revId": "2b987bf826ead5d35239084340c316503dd8cb86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}