{
  "comments": [
    {
      "key": {
        "uuid": "a5c8aa99_7606eed2",
        "filename": "src/cmd/asm/internal/asm/testdata/ppc64.s",
        "patchSetId": 5
      },
      "lineNbr": 802,
      "author": {
        "id": 6320
      },
      "writtenOn": "2016-08-29T16:18:42Z",
      "side": 1,
      "message": "These instructions are converting $31 to -1 in the disassembly.  Is that what you intend?",
      "revId": "49855a49a1ce41f663e9e45597baa676aa9be31e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "453b6e5a_4096aee5",
        "filename": "src/cmd/asm/internal/asm/testdata/ppc64.s",
        "patchSetId": 5
      },
      "lineNbr": 802,
      "author": {
        "id": 13015
      },
      "writtenOn": "2016-08-29T17:07:55Z",
      "side": 1,
      "message": "Yes, correct. Constants in golang asm are the binary representation of the decimal. Since the immediate field is a signed 5-bit value, 0x1F will be seen as -1 in binutils. I could change that to avoid confusion.",
      "parentUuid": "a5c8aa99_7606eed2",
      "revId": "49855a49a1ce41f663e9e45597baa676aa9be31e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5c8aa99_767dce44",
        "filename": "src/cmd/asm/internal/asm/testdata/ppc64.s",
        "patchSetId": 5
      },
      "lineNbr": 811,
      "author": {
        "id": 6320
      },
      "writtenOn": "2016-08-29T16:18:42Z",
      "side": 1,
      "message": "When I assemble this program, vsbox is not assembling correctly.  The disassembly gives me a different instruction.",
      "revId": "49855a49a1ce41f663e9e45597baa676aa9be31e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "453b6e5a_606892f0",
        "filename": "src/cmd/asm/internal/asm/testdata/ppc64.s",
        "patchSetId": 5
      },
      "lineNbr": 811,
      "author": {
        "id": 13015
      },
      "writtenOn": "2016-08-29T17:07:55Z",
      "side": 1,
      "message": "I am assuming you are using something binutils-based for the disassembly.\n\nIf you are getting \u0027evmwlumianw\u0027, then that is a SPE instruction that shares the same opcode. In that case, you should filter out any instruction flagged as PPCSPE, otherwise more opcode clashes across namespaces may occur. The correct namespace (flag) for vsbox is PPCVEC2.",
      "parentUuid": "a5c8aa99_767dce44",
      "revId": "49855a49a1ce41f663e9e45597baa676aa9be31e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5c8aa99_5603f2c0",
        "filename": "src/cmd/asm/internal/asm/testdata/ppc64.s",
        "patchSetId": 5
      },
      "lineNbr": 814,
      "author": {
        "id": 6320
      },
      "writtenOn": "2016-08-29T16:18:42Z",
      "side": 1,
      "message": "Can you use V2 instead of V1 so it can be verified that the operands are being assembled correctly?  That is, if the assembler was swapping operands for V1 and $1 you wouldn\u0027t be able to tell.",
      "revId": "49855a49a1ce41f663e9e45597baa676aa9be31e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "453b6e5a_80659619",
        "filename": "src/cmd/asm/internal/asm/testdata/ppc64.s",
        "patchSetId": 5
      },
      "lineNbr": 814,
      "author": {
        "id": 13015
      },
      "writtenOn": "2016-08-29T17:07:55Z",
      "side": 1,
      "message": "Okay.",
      "parentUuid": "a5c8aa99_5603f2c0",
      "revId": "49855a49a1ce41f663e9e45597baa676aa9be31e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45d9ae0c_f6ba98ac",
        "filename": "src/cmd/internal/obj/ppc64/asm9.go",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 6320
      },
      "writtenOn": "2016-08-29T16:18:42Z",
      "side": 1,
      "message": "You added some comments here but I don\u0027t think the assignments are always consistent, i.e., From3 is sometimes a[3] and other times a[1], Reg can be a[1] or a[2].  Maybe just refer to the function where the operands are set or just say their assignment depends on the opcode.",
      "revId": "49855a49a1ce41f663e9e45597baa676aa9be31e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "453b6e5a_0042e670",
        "filename": "src/cmd/internal/obj/ppc64/asm9.go",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 13015
      },
      "writtenOn": "2016-08-29T17:17:36Z",
      "side": 1,
      "message": "OK, fixed.",
      "parentUuid": "45d9ae0c_f6ba98ac",
      "revId": "49855a49a1ce41f663e9e45597baa676aa9be31e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45d9ae0c_f6e378ca",
        "filename": "src/cmd/internal/obj/ppc64/asm9.go",
        "patchSetId": 5
      },
      "lineNbr": 345,
      "author": {
        "id": 6320
      },
      "writtenOn": "2016-08-29T16:18:42Z",
      "side": 1,
      "message": "in power8?",
      "revId": "49855a49a1ce41f663e9e45597baa676aa9be31e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "453b6e5a_c03b9eea",
        "filename": "src/cmd/internal/obj/ppc64/asm9.go",
        "patchSetId": 5
      },
      "lineNbr": 345,
      "author": {
        "id": 13015
      },
      "writtenOn": "2016-08-29T17:17:36Z",
      "side": 1,
      "message": "No. The VMX (Altivec) unit is present in all processors since POWER6 (and in PPC970 before that, but I\u0027m not sure we support that).\n\nThe instructions added will range from ISA 2.03 (PPC970) to 2.07 (POWER8).",
      "parentUuid": "45d9ae0c_f6e378ca",
      "revId": "49855a49a1ce41f663e9e45597baa676aa9be31e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}