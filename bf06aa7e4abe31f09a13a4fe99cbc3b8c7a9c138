{
  "comments": [
    {
      "key": {
        "uuid": "00d46d34_0fdb06d9",
        "filename": "src/go/ast/import.go",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 5210
      },
      "writtenOn": "2019-03-06T20:57:22Z",
      "side": 1,
      "message": "factor out firstLine as well (declare before lastLine) and use on line 118\n\nbut see comment below first",
      "range": {
        "startLine": 113,
        "startChar": 1,
        "endLine": 113,
        "endChar": 9
      },
      "revId": "bf06aa7e4abe31f09a13a4fe99cbc3b8c7a9c138",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6911363a_cce49829",
        "filename": "src/go/ast/import.go",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 24096
      },
      "writtenOn": "2019-03-07T04:51:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00d46d34_0fdb06d9",
      "range": {
        "startLine": 113,
        "startChar": 1,
        "endLine": 113,
        "endChar": 9
      },
      "revId": "bf06aa7e4abe31f09a13a4fe99cbc3b8c7a9c138",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bb45567_6b3ffdba",
        "filename": "src/go/ast/import.go",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 5210
      },
      "writtenOn": "2019-03-06T20:57:22Z",
      "side": 1,
      "message": "s/at/on/",
      "range": {
        "startLine": 117,
        "startChar": 41,
        "endLine": 117,
        "endChar": 43
      },
      "revId": "bf06aa7e4abe31f09a13a4fe99cbc3b8c7a9c138",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1817c08_6a63e99d",
        "filename": "src/go/ast/import.go",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 24096
      },
      "writtenOn": "2019-03-07T04:51:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5bb45567_6b3ffdba",
      "range": {
        "startLine": 117,
        "startChar": 41,
        "endLine": 117,
        "endChar": 43
      },
      "revId": "bf06aa7e4abe31f09a13a4fe99cbc3b8c7a9c138",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "217d5926_4da18e04",
        "filename": "src/go/ast/import.go",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 5210
      },
      "writtenOn": "2019-03-06T20:57:22Z",
      "side": 1,
      "message": "why is the g.Pos() \u003c f.Package needed?\n\nAlso, now that I read this again more carefully, I fail to see why we need to compare lines here. Why is it not sufficient to compare positions?",
      "range": {
        "startLine": 118,
        "startChar": 17,
        "endLine": 118,
        "endChar": 24
      },
      "revId": "bf06aa7e4abe31f09a13a4fe99cbc3b8c7a9c138",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9e374ef_3bc73c81",
        "filename": "src/go/ast/import.go",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 24096
      },
      "writtenOn": "2019-03-07T04:51:41Z",
      "side": 1,
      "message": "Right, so this is the most important part of the CL. Let me explain.\n\n\u003e Why is it not sufficient to compare positions?\n\nThis loop computes the start and end indices of the comments to take and compare with import specs. The issue arises when a block comment appears on the left of the first spec on the same line. If we just compare positions, then while sorting, the block comment is not considered and remains on the same line which is incorrect. For eg- \n\nimport (\n  /* comment */ io1 \"io\"\n  \"fmt\" // for Printf\n)\n\nwould have become\n\nimport (\n  /* comment */ \"fmt\" // for Printf\n  io1 \"io\"\n)\n\nwith this logic. To fix this, we need to include \"/* comment */\" in our comment slice.\n\nAnd then it becomes\n\nimport (\n  \"fmt\" // for Printf\n  /* comment */ io1 \"io\"\n)\n\nYou can look at the tests to see this in action.\n\n\u003e why is the g.Pos() \u003c f.Package needed?\n\nYeah, this one stumped me too. Initially, I was just comparing line nos. and that was it. But then TestAll failed. Apparently, the line numbering starts only from the package statement. And for comments, it gets reset if there are comments before the package statement ! This was an eye-opener to me :)\n\nFor eg. (The line nos. are for the comment tokens)\n\n// one -- L1\n// two -- L2\npackage main\n\nimport (\n  \"fmt\" // for Printf -- L4 The counter got reset after the package statement !\n)\n\nSo when I was considering all comments, the line no. calculation was getting messed up, and some files in TestAll were failing the idempotency test. Hence we ignore comments before the package statement.\n\nI tried to explain it in a comment but perhaps it was too concise ?",
      "parentUuid": "217d5926_4da18e04",
      "range": {
        "startLine": 118,
        "startChar": 17,
        "endLine": 118,
        "endChar": 24
      },
      "revId": "bf06aa7e4abe31f09a13a4fe99cbc3b8c7a9c138",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91959c9a_eb6efedc",
        "filename": "src/go/ast/import.go",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 5210
      },
      "writtenOn": "2019-03-06T20:57:22Z",
      "side": 1,
      "message": "Here would should be able to only compare positions as well, but it\u0027s a bit more tricky (computing the line is not cheap). Ok for now.",
      "range": {
        "startLine": 124,
        "startChar": 24,
        "endLine": 124,
        "endChar": 25
      },
      "revId": "bf06aa7e4abe31f09a13a4fe99cbc3b8c7a9c138",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8520fe72_550f81c2",
        "filename": "src/go/ast/import.go",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 24096
      },
      "writtenOn": "2019-03-07T04:51:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "91959c9a_eb6efedc",
      "range": {
        "startLine": 124,
        "startChar": 24,
        "endLine": 124,
        "endChar": 25
      },
      "revId": "bf06aa7e4abe31f09a13a4fe99cbc3b8c7a9c138",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb22aabe_69d62b9d",
        "filename": "src/go/ast/import.go",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 5210
      },
      "writtenOn": "2019-03-06T20:57:22Z",
      "side": 1,
      "message": "s/at/on/\n\n(on the left)",
      "revId": "bf06aa7e4abe31f09a13a4fe99cbc3b8c7a9c138",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8aafda0d_74fd8b24",
        "filename": "src/go/ast/import.go",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 5210
      },
      "writtenOn": "2019-03-06T20:57:22Z",
      "side": 1,
      "message": "s/also//\n\n(it can only appear in one place)",
      "range": {
        "startLine": 142,
        "startChar": 53,
        "endLine": 142,
        "endChar": 57
      },
      "revId": "bf06aa7e4abe31f09a13a4fe99cbc3b8c7a9c138",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fa074e9_aebf152d",
        "filename": "src/go/ast/import.go",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 24096
      },
      "writtenOn": "2019-03-07T04:51:41Z",
      "side": 1,
      "message": "This was in continuation from the first comment of the if statement - \"A block comment can appear before the first import spec\". So then it naturally sounds that it can \"also\" appear on the left of an import spec. Anyways, removed it.",
      "parentUuid": "8aafda0d_74fd8b24",
      "range": {
        "startLine": 142,
        "startChar": 53,
        "endLine": 142,
        "endChar": 57
      },
      "revId": "bf06aa7e4abe31f09a13a4fe99cbc3b8c7a9c138",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "438cfaab_aae26514",
        "filename": "src/go/ast/import.go",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 24096
      },
      "writtenOn": "2019-03-07T04:51:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb22aabe_69d62b9d",
      "revId": "bf06aa7e4abe31f09a13a4fe99cbc3b8c7a9c138",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}