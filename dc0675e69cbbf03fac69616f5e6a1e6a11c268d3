{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "85af65df_92d68833",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-02T16:21:29Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003ddc0675e6\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "dc0675e69cbbf03fac69616f5e6a1e6a11c268d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d839781_bddf8616",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-02T16:33:46Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "85af65df_92d68833",
      "tag": "autogenerated:trybots~happy",
      "revId": "dc0675e69cbbf03fac69616f5e6a1e6a11c268d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfea4aee_dae6780f",
        "filename": "src/cmd/compile/internal/gc/util.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-11-07T23:11:44Z",
      "side": 1,
      "message": "This will create recursive directories for package paths with / in them, right? So there will be an \"encoding\" directory with \"binary.mprof\" in it if the package we\u0027re profiling is encoding/binary.\n\nDoes that all work for Windows with their weird separators?",
      "range": {
        "startLine": 35,
        "startChar": 26,
        "endLine": 35,
        "endChar": 43
      },
      "revId": "dc0675e69cbbf03fac69616f5e6a1e6a11c268d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d93d6031_f4daf5b5",
        "filename": "src/cmd/compile/internal/gc/util.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 7061
      },
      "writtenOn": "2023-11-08T18:52:40Z",
      "side": 1,
      "message": "I think it might work just fine for windows (I recall all the system calls not caring), but it\u0027s not necessarily what I intend.  How do you feel about url.PathEscape(pkg).mprof instead?  That\u0027s what I do for logopt, it creates a flat directory so you can enumerate all the profiles with a simple \"*.mprof\" instead of a find command.",
      "parentUuid": "dfea4aee_dae6780f",
      "range": {
        "startLine": 35,
        "startChar": 26,
        "endLine": 35,
        "endChar": 43
      },
      "revId": "dc0675e69cbbf03fac69616f5e6a1e6a11c268d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da66e22b_2ce8e7fc",
        "filename": "src/cmd/compile/internal/gc/util.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-11-13T16:57:14Z",
      "side": 1,
      "message": "That sounds ok, although I wish it wasn\u0027t url.Escape but filepath.Escape or something like that.\nMaybe just strings.ReplaceAll(pkg, \"/\", \"_\")?",
      "parentUuid": "d93d6031_f4daf5b5",
      "range": {
        "startLine": 35,
        "startChar": 26,
        "endLine": 35,
        "endChar": 43
      },
      "revId": "dc0675e69cbbf03fac69616f5e6a1e6a11c268d3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}