{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "89bafa39_55b9bf18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-09T10:39:42Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d6afbf42d",
      "tag": "autogenerated:trybots~beginning",
      "revId": "6afbf42dae3824b114da0882a5814102f120a2ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1b88c9e_eb0b3294",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-09T10:52:03Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "89bafa39_55b9bf18",
      "tag": "autogenerated:trybots~happy",
      "revId": "6afbf42dae3824b114da0882a5814102f120a2ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efa4b030_55b63ce5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-05-09T18:50:11Z",
      "side": 1,
      "message": "Thanks, looking better.",
      "revId": "6afbf42dae3824b114da0882a5814102f120a2ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdb1d35e_e5627af6",
        "filename": "src/cmd/compile/internal/typecheck/typecheck.go",
        "patchSetId": 8
      },
      "lineNbr": 875,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-05-09T18:50:11Z",
      "side": 1,
      "message": "nit: This check is fine, but redundant. I think it\u0027s okay to remove for simplicity.",
      "range": {
        "startLine": 873,
        "startChar": 0,
        "endLine": 875,
        "endChar": 2
      },
      "revId": "6afbf42dae3824b114da0882a5814102f120a2ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee299660_10fec569",
        "filename": "src/cmd/compile/internal/typecheck/typecheck.go",
        "patchSetId": 8
      },
      "lineNbr": 884,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-05-09T18:50:11Z",
      "side": 1,
      "message": "This switch only checks that the top-level callee expression has no ordered side effects, but we care if any subexpression have ordered side effects too. E.g., `f()[0](g())` needs to be rewritten into `tmp0 :\u003d f()[0]; tmp1, tmp2 :\u003d g(); tmp0(tmp1, tmp2)` even though `x[0]` has no side-effects by itself, because the `f()` call needs to still happen before `g()`. (I recommend adding a test case like this too.)\n\nThis is why I suggested `if !anyCallOrChan(*np)` previously. I still suggest that.",
      "revId": "6afbf42dae3824b114da0882a5814102f120a2ca",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}