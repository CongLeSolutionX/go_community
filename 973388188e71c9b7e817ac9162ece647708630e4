{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d65362dc_2ab278f6",
        "filename": "src/runtime/debug/garbage.go",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 11500
      },
      "writtenOn": "2022-03-31T01:26:56Z",
      "side": 1,
      "message": "This comment needs to be updated to mention that SetMemoryLimit can override this.",
      "revId": "973388188e71c9b7e817ac9162ece647708630e4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d43b6a9f_4ffa5da4",
        "filename": "src/runtime/debug/garbage.go",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 11500
      },
      "writtenOn": "2022-03-31T01:26:56Z",
      "side": 1,
      "message": "By default, the limit is math.MaxInt64. \nPassing math.MaxInt64 to SetMemoryLimit disables any existing\nmemory limit.",
      "revId": "973388188e71c9b7e817ac9162ece647708630e4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f48fe2ee_4aa1d32d",
        "filename": "src/runtime/debug/garbage.go",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-04-02T01:25:24Z",
      "side": 1,
      "message": "I didn\u0027t think it was worth mentioning because there\u0027s no clear distinction between it being \"enabled\" or \"disabled.\" it\u0027s always there, the only question is whether it makes an impact. the runtime checks for maxInt64 in a few places explicitly but primarily just as a common-case performance measure (and admittedly, a measure that is likely unnecessary).",
      "parentUuid": "d43b6a9f_4ffa5da4",
      "revId": "973388188e71c9b7e817ac9162ece647708630e4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "677c573b_cc893feb",
        "filename": "src/runtime/debug/garbage.go",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 11500
      },
      "writtenOn": "2022-04-13T09:17:53Z",
      "side": 1,
      "message": "\u003e there\u0027s no clear distinction between it being \"enabled\" or \"disabled.\n\nI agree, but that\u0027s because I somewhat know how this is implemented. I don\u0027t think we should expect users to be intimately familiar with how the runtime works, hence my suggestion of documenting how users can \"undo\" setting a memory limit.",
      "parentUuid": "f48fe2ee_4aa1d32d",
      "revId": "973388188e71c9b7e817ac9162ece647708630e4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d28e83ac_6253bca6",
        "filename": "src/runtime/debug/garbage.go",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-04-18T20:22:45Z",
      "side": 1,
      "message": "The scavenger does have an explicit difference in goal when the memory limit \u003d\u003d MaxInt64 vs not. That seems worth mentioning.",
      "parentUuid": "677c573b_cc893feb",
      "revId": "973388188e71c9b7e817ac9162ece647708630e4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}