{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9932a8ea_2f56f813",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-16T17:13:39Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d8317f467",
      "tag": "autogenerated:trybots~beginning",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f11cb54a_9d87e097",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 31
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-16T17:27:09Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "9932a8ea_2f56f813",
      "tag": "autogenerated:trybots~happy",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69fa2c1c_31c988cf",
        "filename": "src/cmd/go/internal/modindex/index_format.txt",
        "patchSetId": 31
      },
      "lineNbr": 13,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T04:17:58Z",
      "side": 1,
      "message": "Sorted lexicographically by path element, or by raw string?\n\n(It matters if the path elements contain any bytes less than `\u0027/\u0027`, which is plausible: https://go.dev/play/p/usDi8VzfVff.)\n\nPersonally, I find \"lexically by path element\" more intuitive (and `WalkDir` produces that order naturally), but it may be that \"by raw string\" is a bit faster to search..?",
      "range": {
        "startLine": 13,
        "startChar": 65,
        "endLine": 13,
        "endChar": 77
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3fe0154_6dca9f51",
        "filename": "src/cmd/go/internal/modindex/index_format.txt",
        "patchSetId": 31
      },
      "lineNbr": 13,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "Currently sorted by raw string just because it\u0027s easier.",
      "parentUuid": "69fa2c1c_31c988cf",
      "range": {
        "startLine": 13,
        "startChar": 65,
        "endLine": 13,
        "endChar": 77
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fadccfd_3f99d83a",
        "filename": "src/cmd/go/internal/modindex/index_format.txt",
        "patchSetId": 31
      },
      "lineNbr": 13,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e3fe0154_6dca9f51",
      "range": {
        "startLine": 13,
        "startChar": 65,
        "endLine": 13,
        "endChar": 77
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f761437_5e817c82",
        "filename": "src/cmd/go/internal/modindex/index_format.txt",
        "patchSetId": 31
      },
      "lineNbr": 15,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-16T21:42:54Z",
      "side": 1,
      "message": "There is enough nesting in this format that I think we should consider stamping offsets into the files.\n\nIf we end up adding more fields to any level of nesting in a subsequent version of the `go` command, then without offset-stamps we would need to define a separate `go index` version (and probably a separate filename) for each change, which probably means one per Go version.\n\nOTOH, if we stamp the offsets, then newer versions of the `go` command may have to regenerate the files (which is probably fine?), but then older versions can use the expanded files directly (by ignoring the additional fields).",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6de928b0_d8986343",
        "filename": "src/cmd/go/internal/modindex/index_format.txt",
        "patchSetId": 31
      },
      "lineNbr": 15,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-18T18:46:29Z",
      "side": 1,
      "message": "Current plan is to move the index to the build cache and include the file-format version in the cache key, which makes hard-coded offsets OK.",
      "parentUuid": "9f761437_5e817c82",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "342646fc_12b0bd22",
        "filename": "src/cmd/go/internal/modindex/index_format.txt",
        "patchSetId": 31
      },
      "lineNbr": 17,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "Which path is this? (The import path? Filesystem path? Something else?)",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99a84a6a_ffaaf8b3",
        "filename": "src/cmd/go/internal/modindex/index_format.txt",
        "patchSetId": 31
      },
      "lineNbr": 17,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "removed",
      "parentUuid": "342646fc_12b0bd22",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68f86648_46d1f065",
        "filename": "src/cmd/go/internal/modindex/index_format.txt",
        "patchSetId": 31
      },
      "lineNbr": 28,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T18:07:11Z",
      "side": 1,
      "message": "Is this redundant with the `name` field?\n(Are there “should otherwise be ignored” cases that aren\u0027t due to the build constraints that we save and apply separately?)",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bfc85b9_950df8fe",
        "filename": "src/cmd/go/internal/modindex/index_format.txt",
        "patchSetId": 31
      },
      "lineNbr": 28,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "Dropped the _ and . files from the index completely.\nThe only other cases I see are if there were errors reading or writing the files, or parsing the constraint lines.",
      "parentUuid": "68f86648_46d1f065",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8075ff3_ef95f669",
        "filename": "src/cmd/go/internal/modindex/index_format.txt",
        "patchSetId": 31
      },
      "lineNbr": 28,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "\u003e Dropped the _ and . files from the index completely.\n\nThat probably makes sense, but note that it\u0027s actually possible to import those packages explicitly — we should be sure to add a test that the slow path still works for them, at least.",
      "parentUuid": "7bfc85b9_950df8fe",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "348a7714_478087fb",
        "filename": "src/cmd/go/internal/modindex/index_format.txt",
        "patchSetId": 31
      },
      "lineNbr": 28,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-06-01T19:45:58Z",
      "side": 1,
      "message": "ok so i think we should keep them. ignore file is still redundant and is gone.",
      "parentUuid": "e8075ff3_ef95f669",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73982e65_4660d004",
        "filename": "src/cmd/go/internal/modindex/index_format.txt",
        "patchSetId": 31
      },
      "lineNbr": 31,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "Do we need to index the import comments at all? I don\u0027t think we currently use them in module mode.",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 31,
        "endChar": 33
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5aed76cd_5112b79d",
        "filename": "src/cmd/go/internal/modindex/index_format.txt",
        "patchSetId": 31
      },
      "lineNbr": 31,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "We don\u0027t need them. Removed.",
      "parentUuid": "73982e65_4660d004",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 31,
        "endChar": 33
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41940fac_14463e50",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 33,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "If `path` might be within the build cache, we need to avoid `WriteFile` because it always truncates to 0 before writing, which can cause write/write races for unsynchronized files (see CL 188157).\n\n(Note that writes through the `cmd/go/internal/cache` package already write more robustly.)",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83d23d18_16e04502",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 33,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "We now do our writes through the build cache.",
      "parentUuid": "41940fac_14463e50",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d41d5ac0_7b2a831f",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 41,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-16T21:42:54Z",
      "side": 1,
      "message": "Since this kind of accessor-method interface is unusual in Go, more detail in this comment would be helpful.\n\nFrom the implementation of this interface in CL 403975, I gather that its purpose is to avoid faulting in mmap\u0027d pages for files that aren\u0027t used, or perhaps to allow them to be faulted in parallel (resulting in parallel disk reads)? But I\u0027m not sure how many faults this actually saves — the `string` fields are just headers giving the memory offsets and lengths. I guess the `imports` and `embeds` methods may be more significant?",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3271070_628d29ef",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 41,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "Removed the interface. It\u0027s not used anymore.",
      "parentUuid": "d41d5ac0_7b2a831f",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5e14b5e_3a756c3b",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 51,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "I\u0027m a little surprised that we need this metadata at all — don\u0027t we ignore \"//import\" comments in module mode?",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 30
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a8aa38a_7fe72302",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 51,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "Is `quotedImportCommentLine` always the same line as the `package` directive? (Maybe call it `packageLine` instead, or do we only even compute it if there is an import comment?)",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e99a2b4_933a9606",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 51,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "Removed these.",
      "parentUuid": "2a8aa38a_7fe72302",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ad8eccc_21a3f7c4",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 51,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "We do. Removed.",
      "parentUuid": "c5e14b5e_3a756c3b",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 30
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "248791b4_82b47afe",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 66,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "(nit) I think these comments would be more helpful on the interface methods — I suspect they would be more likely to result in useful IDE hover-text and CodeSearch xrefs at the point of use.",
      "range": {
        "startLine": 66,
        "startChar": 32,
        "endLine": 66,
        "endChar": 103
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61554ab5_9366411b",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 66,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "I removed the interface.",
      "parentUuid": "248791b4_82b47afe",
      "range": {
        "startLine": 66,
        "startChar": 32,
        "endLine": 66,
        "endChar": 103
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "667711f7_6e520b43",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 94,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "Is this the comment after the individual import line, like\n```\nimport (\n\tpathpkg \"path\" // renamed because \"path\" is a common variable name\n)\n```\n?",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e81e37f_94ba3705",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 94,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "Or the comment before: \n\n  // #include \u003cstdio.h\u003e\n  import \"C\"\n  \nWe only use this for cgo. Updated to only save it for cgo.",
      "parentUuid": "667711f7_6e520b43",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "927e3cca_82c4a61c",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 94,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e81e37f_94ba3705",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2db948a5_750d842b",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 108,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "A comment for this field would be helpful. (Is this the import path, or something else?)\n\nI guess it can\u0027t be the import path because at this point we haven\u0027t read the `module` directive from the `go.mod` file (if any), and a module without a `go.mod` file could be used as a replacement for an arbitrary other import path. 🤔",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a167aa6f_52666b59",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 108,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "we only save dir now, and I added a comment.",
      "parentUuid": "2db948a5_750d842b",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b827080_28ae3caf",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 108,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a167aa6f_52666b59",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a59b2b67_d4dcecd9",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 109,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "If `srcDir` is still around for this CL, a comment explaining the difference between `srcDir` and `dir` would be helpful.",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3785794_34a273dd",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 109,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "it\u0027s gone!",
      "parentUuid": "a59b2b67_d4dcecd9",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e44f3cf_125d438d",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 119,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "caching its work to disk, or in RAM, or both?",
      "range": {
        "startLine": 119,
        "startChar": 60,
        "endLine": 119,
        "endChar": 77
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "492be8e5_ce1e4b94",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 119,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "I removed this function. the individual package logic is gone.",
      "parentUuid": "6e44f3cf_125d438d",
      "range": {
        "startLine": 119,
        "startChar": 60,
        "endLine": 119,
        "endChar": 77
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb69000c_6aa8551d",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 119,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "492be8e5_ce1e4b94",
      "range": {
        "startLine": 119,
        "startChar": 60,
        "endLine": 119,
        "endChar": 77
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d199ae0c_53210bc4",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 153,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "`path` is the constant string `\".\"` at this point, I think?\n\nIf so, a lot of the start of this function could be constant-propagated and removed.",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 153,
        "endChar": 2
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5f57f3e_7658b589",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 153,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d199ae0c_53210bc4",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 153,
        "endChar": 2
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3003c634_d196c790",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 159,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "I\u0027m very confused by this line. We\u0027re importing the package in `srcDir`, right?\n\nShould the argument to `ImportRaw` just be `dir` itself?\n\n(Within `go/build`, the `srcDir` argument usually refers to the directory from which the package is imported, not the directory containing the imported package, although sometimes IIRC we conflate the two by passing a directory for `srcDir` and `\".\"` for `dir`.)",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92920824_ffcf4e62",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 159,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "The arguments are now the separate components modroot and dir relative to module.",
      "parentUuid": "3003c634_d196c790",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84786e06_762904a4",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 159,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92920824_ffcf4e62",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fe50e47_0fa9590a",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 174,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "(nit) The name `dirs` to me connotes directories, but here it contains a slice of `fs.DirEntry`. Maybe rename to `dirEnts` or `entries` or similar?",
      "range": {
        "startLine": 174,
        "startChar": 1,
        "endLine": 174,
        "endChar": 5
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8cf1cdb_397d3607",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 174,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T03:31:44Z",
      "side": 1,
      "message": "Should we use `fsys` in this function so that `ImportRaw` works with overlays?\n\n(Or, if not, should `ImportRaw` verify that `srcDir` doesn\u0027t have any overlaid files?",
      "range": {
        "startLine": 174,
        "startChar": 14,
        "endLine": 174,
        "endChar": 16
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6dd300e_a358826e",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 174,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2fe50e47_0fa9590a",
      "range": {
        "startLine": 174,
        "startChar": 1,
        "endLine": 174,
        "endChar": 5
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee6e32cb_2680ea2e",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 31
      },
      "lineNbr": 174,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8cf1cdb_397d3607",
      "range": {
        "startLine": 174,
        "startChar": 14,
        "endLine": 174,
        "endChar": 16
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7c672c8_f447ecd4",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 10,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T04:17:58Z",
      "side": 1,
      "message": "This comment should mention that the slice may be modified, or else `EncodeModule` should copy the slice before sorting it (and avoid modifying the `RawPackage`s it contains).",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08fc6b31_db2b1bd2",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 10,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7c672c8_f447ecd4",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6912c286_3f676495",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 18,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T04:17:58Z",
      "side": 1,
      "message": "Ah, I think I finally grok what\u0027s going on with `srcDir` and `dir` here.\n\nConceptually, we can think of `go/build`\u0027s `srcDir` arguments as being basically analogous to `moddir`, and then `dir` is always relative to that.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 18,
        "endChar": 23
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79b60107_d4857d2f",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 18,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "I\u0027ve simplified the code to only save dir, and we make it relative before.",
      "parentUuid": "6912c286_3f676495",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 18,
        "endChar": 23
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d64fbc51_bd863f7d",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 18,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "79b60107_d4857d2f",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 18,
        "endChar": 23
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec1a43d2_0f8b39b3",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 32,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T04:17:58Z",
      "side": 1,
      "message": "Just to check my understanding: `packagesOffsetPos[i]` is always `packagesOffsetPos[0] + 4*i`?",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89ada158_6d2dd393",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 32,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "Yes. It\u0027s easier for me to follow this way.\n\nDo you think we should just calculate it using the above instead of saving them?",
      "parentUuid": "ec1a43d2_0f8b39b3",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42834e04_1a32968d",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 32,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "I think it\u0027s about equally complicated either way, and calculating it as `4*i` does avoid some allocation overhead, so I do have a mild preference for that approach.\n\n(Then `packagesOffsetPos` can become a single `int` instead of a slice.)",
      "parentUuid": "89ada158_6d2dd393",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bb618c0_5b7b0e7c",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 32,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-06-01T19:45:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42834e04_1a32968d",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3466fe57_b2c001ba",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 55,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T04:17:58Z",
      "side": 1,
      "message": "Same here — `sourceFileOffsetPos[i] \u003d\u003d sourceFileOffsetPos[0] + 4*i`?",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 55,
        "endChar": 2
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "456f0255_711fa7c2",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 55,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "3466fe57_b2c001ba",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 55,
        "endChar": 2
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a7a160d_765b15c0",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 55,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-06-01T19:45:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "456f0255_711fa7c2",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 55,
        "endChar": 2
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4d78149_9e4af84b",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 75,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T04:17:58Z",
      "side": 1,
      "message": "Throughout, only call the slice-returning functions once each, in case they\u0027re allocating the slices under the hood?\n\n(Or else comment in the interface that those methods should return the same slice for each call?)",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 75,
        "endChar": 45
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c26d010c_243ce394",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 75,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "interface is gone",
      "parentUuid": "a4d78149_9e4af84b",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 75,
        "endChar": 45
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e80ba639_9727f449",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 75,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c26d010c_243ce394",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 75,
        "endChar": 45
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "816509f5_0bb63d84",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 85,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T04:17:58Z",
      "side": 1,
      "message": "Which slice?",
      "range": {
        "startLine": 85,
        "startChar": 26,
        "endLine": 85,
        "endChar": 35
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fd02a1a_3b025c1e",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 85,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "I think this was a stray comment from since deleted code.",
      "parentUuid": "816509f5_0bb63d84",
      "range": {
        "startLine": 85,
        "startChar": 26,
        "endLine": 85,
        "endChar": 35
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11bf237f_9cfffebe",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 85,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2fd02a1a_3b025c1e",
      "range": {
        "startLine": 85,
        "startChar": 26,
        "endLine": 85,
        "endChar": 35
      },
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91d1a1ef_0333e2a9",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 91,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-05-19T04:17:58Z",
      "side": 1,
      "message": "(nit) extra newline",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "babb8b93_8afbbe51",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 31
      },
      "lineNbr": 91,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-05-28T00:44:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91d1a1ef_0333e2a9",
      "revId": "8317f467fb670a80a9dae10f1db1a79ed62ca359",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}