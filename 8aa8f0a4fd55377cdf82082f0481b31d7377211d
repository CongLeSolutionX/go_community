{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0d8942d7_7d8bc9ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 57733
      },
      "writtenOn": "2024-02-06T14:37:45Z",
      "side": 1,
      "message": "Context: this doesn\u0027t affect anything in the runtime today (the execution tracer doesn\u0027t do frame pointer unwinding from the system stack.) I ran into this when trying to bring frame pointer unwinding to the heap profiler in CL 540476 (see this failure in the next CL in the chain: https://cr-buildbucket.appspot.com/build/8761968269895651361)\n\nI think it would be nice to have a regression test, but I could use some advice on how to approach it. The circumstance where I saw an issue was roughly 1) be running on a system stack (doing `mallocgc` in the case I saw) in a non-leaf function with a frame, 2) the function `racecall`s into the race detector and the race detector library code clobbers the saved frame pointer, 3) return to the Go function and then do frame pointer unwinding, and crash. Would it be reasonable to have a test that imitates that scenario?",
      "revId": "8aa8f0a4fd55377cdf82082f0481b31d7377211d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1387689_b19f0c2b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 57733
      },
      "writtenOn": "2024-02-06T15:02:36Z",
      "side": 1,
      "message": "Also how do I resolve this build failure? https://cr-buildbucket.appspot.com/build/8756832812474605937\n\n\u003e both tag (\"refs/heads/master\") and branch (\"master\") set for https://go.googlesource.com/tools/+/ddb71b0128567e88912a85dee00e76dd394d05fb",
      "revId": "8aa8f0a4fd55377cdf82082f0481b31d7377211d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e3e5eb0_1302448a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 57733
      },
      "writtenOn": "2024-02-06T17:19:28Z",
      "side": 1,
      "message": "Looks like this was go.dev/issue/65551, which is fixed :)",
      "parentUuid": "d1387689_b19f0c2b",
      "revId": "8aa8f0a4fd55377cdf82082f0481b31d7377211d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "674f4f6d_a06b5441",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 57733
      },
      "writtenOn": "2024-02-27T16:38:17Z",
      "side": 1,
      "message": "Ping on this -- is it worth cooking up a regression test for this issue? The main downside I see is that it\u0027s awkward to reproduce the circumstances for this issue as a unit test.",
      "parentUuid": "0d8942d7_7d8bc9ae",
      "revId": "8aa8f0a4fd55377cdf82082f0481b31d7377211d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1639033b_d13d652c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6875
      },
      "writtenOn": "2024-02-27T18:04:58Z",
      "side": 1,
      "message": "Regression test is hard for cases like this, don\u0027t worry about it.",
      "parentUuid": "674f4f6d_a06b5441",
      "revId": "8aa8f0a4fd55377cdf82082f0481b31d7377211d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50bacbc2_fcc8382a",
        "filename": "src/runtime/race_arm64.s",
        "patchSetId": 1
      },
      "lineNbr": 423,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-02-06T18:15:28Z",
      "side": 1,
      "message": "s/frame/pointer/",
      "range": {
        "startLine": 423,
        "startChar": 34,
        "endLine": 423,
        "endChar": 39
      },
      "revId": "8aa8f0a4fd55377cdf82082f0481b31d7377211d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9343f5a_3c2c850e",
        "filename": "src/runtime/race_arm64.s",
        "patchSetId": 1
      },
      "lineNbr": 423,
      "author": {
        "id": 57733
      },
      "writtenOn": "2024-02-06T18:18:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50bacbc2_fcc8382a",
      "range": {
        "startLine": 423,
        "startChar": 34,
        "endLine": 423,
        "endChar": 39
      },
      "revId": "8aa8f0a4fd55377cdf82082f0481b31d7377211d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}