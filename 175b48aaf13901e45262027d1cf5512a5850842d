{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a3a556ef_c6d54407",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-05-22T16:46:30Z",
      "side": 1,
      "message": "Seems fine to me, but I\u0027ll defer to Michael for the details.",
      "revId": "175b48aaf13901e45262027d1cf5512a5850842d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a22ab52c_076d5237",
        "filename": "src/cmd/go/internal/modload/init.go",
        "patchSetId": 26
      },
      "lineNbr": 1771,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-05-22T16:46:30Z",
      "side": 1,
      "message": "return err\n\nIf you can\u0027t format the file, the diff is garbage, not empty.",
      "range": {
        "startLine": 1771,
        "startChar": 24,
        "endLine": 1771,
        "endChar": 35
      },
      "revId": "175b48aaf13901e45262027d1cf5512a5850842d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9ebdd49_7ccb565a",
        "filename": "src/cmd/go/internal/modload/init.go",
        "patchSetId": 26
      },
      "lineNbr": 1771,
      "author": {
        "id": 3267006
      },
      "writtenOn": "2024-05-22T18:38:04Z",
      "side": 1,
      "message": "We don\u0027t want to return err here.\nWe still want to return errNoChange here so that commitRequirements will return nil and not an error.",
      "parentUuid": "a22ab52c_076d5237",
      "range": {
        "startLine": 1771,
        "startChar": 24,
        "endLine": 1771,
        "endChar": 35
      },
      "revId": "175b48aaf13901e45262027d1cf5512a5850842d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13858e87_6b5f9a2d",
        "filename": "src/cmd/go/internal/modload/init.go",
        "patchSetId": 26
      },
      "lineNbr": 1771,
      "author": {
        "id": 10033
      },
      "writtenOn": "2024-05-22T19:11:06Z",
      "side": 1,
      "message": "In practice Format always returns nil so this should never happen (see https://cs.opensource.google/go/x/mod/+/master:modfile/rule.go;l\u003d964;drc\u003dc0bdc7bd01c96a3472df419bc2b082e06b09a219 ), but I think if there was an error formatting the file (maybe because x/mod changed to return an error in some cases) I think it would be better to not drop the error.\n\nIf we can\u0027t format the file, it probably means that the file is broken somehow, and it would make sense for commitRequirements to return an error.",
      "parentUuid": "e9ebdd49_7ccb565a",
      "range": {
        "startLine": 1771,
        "startChar": 24,
        "endLine": 1771,
        "endChar": 35
      },
      "revId": "175b48aaf13901e45262027d1cf5512a5850842d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b50a545f_b597530e",
        "filename": "src/cmd/go/internal/modload/init.go",
        "patchSetId": 26
      },
      "lineNbr": 1771,
      "author": {
        "id": 3267006
      },
      "writtenOn": "2024-05-22T19:38:29Z",
      "side": 1,
      "message": "Okay sounds good! Done",
      "parentUuid": "13858e87_6b5f9a2d",
      "range": {
        "startLine": 1771,
        "startChar": 24,
        "endLine": 1771,
        "endChar": 35
      },
      "revId": "175b48aaf13901e45262027d1cf5512a5850842d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fa34086_3a5b628a",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 26
      },
      "lineNbr": 471,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-05-22T16:46:30Z",
      "side": 1,
      "message": "SetExitStatus(0) is a no-op because it is initially zero, and the Set operation only increases it monotonically (for safety).\n\nSo you can simplify again:\n\n\tif len(goModDiff) \u003e 0 {\n\t\tfmt.Println(string(goModDiff))\t\n\t\tbase.SetExitStatus(1)\n\t}\n\t...ditto for sum...\n\t\n\t\nYou should check whether the resulting patch is valid when it covers both files (by piping go mod tidy | patch), as it\u0027s possible that Println adds an unwanted extra newline that causes the patch to no longer be valid. If so, then use os.Stdout.Write(goModDiff).",
      "range": {
        "startLine": 469,
        "startChar": 3,
        "endLine": 471,
        "endChar": 4
      },
      "revId": "175b48aaf13901e45262027d1cf5512a5850842d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b008781b_951cb1a9",
        "filename": "src/cmd/go/internal/modload/load.go",
        "patchSetId": 26
      },
      "lineNbr": 471,
      "author": {
        "id": 3267006
      },
      "writtenOn": "2024-05-22T18:38:04Z",
      "side": 1,
      "message": "Done. As we discussed IRL, we will add a patch test in the future.",
      "parentUuid": "5fa34086_3a5b628a",
      "range": {
        "startLine": 469,
        "startChar": 3,
        "endLine": 471,
        "endChar": 4
      },
      "revId": "175b48aaf13901e45262027d1cf5512a5850842d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}