{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "13a13a38_615b5b63",
        "filename": "src/math/all_test.go",
        "patchSetId": 4
      },
      "lineNbr": 3400,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-02-14T18:24:43Z",
      "side": 1,
      "message": "These benchmarks are not doing anything meaningful with the Compare or Compare32 functions. The functions are getting inlined and since the arguments are constant, the result is just replaced with the constant result.",
      "revId": "22d2100364a82f741562d9619707b26b79da8317",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08341a25_b0dfa5ea",
        "filename": "src/math/all_test.go",
        "patchSetId": 4
      },
      "lineNbr": 3400,
      "author": {
        "id": 17921
      },
      "writtenOn": "2023-02-15T03:37:35Z",
      "side": 1,
      "message": "Isn\u0027t this the case for the other math functions that are benchmarked as well?\nThey all pass in constants. I guess the proper way would be to make this benchmark data-dependent.\n\nHowever, all we really have to work with are the bool result and loop index.",
      "parentUuid": "13a13a38_615b5b63",
      "revId": "22d2100364a82f741562d9619707b26b79da8317",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfdda124_279e0785",
        "filename": "src/math/all_test.go",
        "patchSetId": 4
      },
      "lineNbr": 3400,
      "author": {
        "id": 17921
      },
      "writtenOn": "2023-02-15T03:42:22Z",
      "side": 1,
      "message": "that should be an *int result",
      "parentUuid": "08341a25_b0dfa5ea",
      "revId": "22d2100364a82f741562d9619707b26b79da8317",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bf9f6c9_a3e3418a",
        "filename": "src/math/all_test.go",
        "patchSetId": 4
      },
      "lineNbr": 3400,
      "author": {
        "id": 17921
      },
      "writtenOn": "2023-02-15T03:52:41Z",
      "side": 1,
      "message": "Maybe a `x +\u003d Compare(...)` call will be better than a simple assignment.\nI can also do //go:noinline on the Benchmark function.",
      "parentUuid": "bfdda124_279e0785",
      "revId": "22d2100364a82f741562d9619707b26b79da8317",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d08aa900_aab0616f",
        "filename": "src/math/all_test.go",
        "patchSetId": 4
      },
      "lineNbr": 3400,
      "author": {
        "id": 17921
      },
      "writtenOn": "2023-02-15T05:29:17Z",
      "side": 1,
      "message": "@laboger@linux.vnet.ibm.com I updated the benchmark. It should now be executing the comparison logic on each loop iteration. However, I don\u0027t think we should prevent inlining, since that\u0027s a common scenario for users of this function.",
      "parentUuid": "7bf9f6c9_a3e3418a",
      "revId": "22d2100364a82f741562d9619707b26b79da8317",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}