{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a9b0ab61_cc8fd2bf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-04T14:25:56Z",
      "side": 1,
      "message": "I think we should leave #59419 open as a tracking issue for diagnosing whatever regression introduced this failure mode in the first place.",
      "revId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7e72d58_a883e321",
        "filename": "misc/cgo/testsanitizers/cc_test.go",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-04T12:27:40Z",
      "side": 1,
      "message": "Do we understand why that occurs?\n\n(Is it a GCC or ASAN bug already fixed upstream that we\u0027re working around, or is it an unfixed upstream bug that we should escalate, or is it a Go bug that we\u0027re temporarily patching around that will eventually need a compiler and/or runtime fix?)",
      "range": {
        "startLine": 459,
        "startChar": 0,
        "endLine": 460,
        "endChar": 55
      },
      "revId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c753e1b8_7a131e53",
        "filename": "misc/cgo/testsanitizers/cc_test.go",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-04T13:47:53Z",
      "side": 1,
      "message": "Given the pattern of failures on the build dashboard, I suspect this is a recent regression in the Go runtime — perhaps from CL 481061?\n\nI\u0027m seeing deadlocks and crashes on the build dashboard in other tests as well (such as `runtime` in https://build.golang.org/log/ee0607dc11b8e24585af3e61d96cac6505efb86c, `misc/cgo/testsanitizers.TestMSAN` in https://build.golang.org/log/50c9f7f200edecaca84f4a0a2b20dcef988836b2).",
      "parentUuid": "e7e72d58_a883e321",
      "range": {
        "startLine": 459,
        "startChar": 0,
        "endLine": 460,
        "endChar": 55
      },
      "revId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87d56feb_a093d850",
        "filename": "misc/cgo/testsanitizers/cc_test.go",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-04T14:09:13Z",
      "side": 1,
      "message": "I do not understand why it occurs.  But I do know that it is entirely independent of Go.  I can recreate it using only gcc on a gomote, with no Go code involved at all.",
      "parentUuid": "c753e1b8_7a131e53",
      "range": {
        "startLine": 459,
        "startChar": 0,
        "endLine": 460,
        "endChar": 55
      },
      "revId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bf0a432_3a8f10c7",
        "filename": "misc/cgo/testsanitizers/cc_test.go",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 14665
      },
      "writtenOn": "2023-04-04T14:17:03Z",
      "side": 1,
      "message": "IIRC, there’s an open issue on LLVM about this same error, but only happens when missing -lresolv in program that call getaddrinfo, so very likely that not related to Go.",
      "parentUuid": "87d56feb_a093d850",
      "range": {
        "startLine": 459,
        "startChar": 0,
        "endLine": 460,
        "endChar": 55
      },
      "revId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}