{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a9b0ab61_cc8fd2bf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-04T14:25:56Z",
      "side": 1,
      "message": "I think we should leave #59419 open as a tracking issue for diagnosing whatever regression introduced this failure mode in the first place.",
      "revId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7049bb0a_d96845f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-04T20:26:09Z",
      "side": 1,
      "message": "This appears to be a bad interaction between ASAN and a kernel update for Google Cloud Container-Optimized OS.  The new kernel can allocate memory at addresses that ASAN believes will never be used by the kernel.  The workaround in this CL is incomplete, as even if this test passes other tests could fail.  CL 482195 pins us to an earlier kernel version until this is addressed.  So we don\u0027t need this change.",
      "revId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7e72d58_a883e321",
        "filename": "misc/cgo/testsanitizers/cc_test.go",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-04T12:27:40Z",
      "side": 1,
      "message": "Do we understand why that occurs?\n\n(Is it a GCC or ASAN bug already fixed upstream that we\u0027re working around, or is it an unfixed upstream bug that we should escalate, or is it a Go bug that we\u0027re temporarily patching around that will eventually need a compiler and/or runtime fix?)",
      "range": {
        "startLine": 459,
        "startChar": 0,
        "endLine": 460,
        "endChar": 55
      },
      "revId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c753e1b8_7a131e53",
        "filename": "misc/cgo/testsanitizers/cc_test.go",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-04T13:47:53Z",
      "side": 1,
      "message": "Given the pattern of failures on the build dashboard, I suspect this is a recent regression in the Go runtime — perhaps from CL 481061?\n\nI\u0027m seeing deadlocks and crashes on the build dashboard in other tests as well (such as `runtime` in https://build.golang.org/log/ee0607dc11b8e24585af3e61d96cac6505efb86c, `misc/cgo/testsanitizers.TestMSAN` in https://build.golang.org/log/50c9f7f200edecaca84f4a0a2b20dcef988836b2).",
      "parentUuid": "e7e72d58_a883e321",
      "range": {
        "startLine": 459,
        "startChar": 0,
        "endLine": 460,
        "endChar": 55
      },
      "revId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87d56feb_a093d850",
        "filename": "misc/cgo/testsanitizers/cc_test.go",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-04T14:09:13Z",
      "side": 1,
      "message": "I do not understand why it occurs.  But I do know that it is entirely independent of Go.  I can recreate it using only gcc on a gomote, with no Go code involved at all.",
      "parentUuid": "c753e1b8_7a131e53",
      "range": {
        "startLine": 459,
        "startChar": 0,
        "endLine": 460,
        "endChar": 55
      },
      "revId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bf0a432_3a8f10c7",
        "filename": "misc/cgo/testsanitizers/cc_test.go",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 14665
      },
      "writtenOn": "2023-04-04T14:17:03Z",
      "side": 1,
      "message": "IIRC, there’s an open issue on LLVM about this same error, but only happens when missing -lresolv in program that call getaddrinfo, so very likely that not related to Go.",
      "parentUuid": "87d56feb_a093d850",
      "range": {
        "startLine": 459,
        "startChar": 0,
        "endLine": 460,
        "endChar": 55
      },
      "revId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b184ee40_854587eb",
        "filename": "misc/cgo/testsanitizers/cc_test.go",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-04T14:46:12Z",
      "side": 1,
      "message": "Looks like the `runtime` hang is possibly a different open issue (#55160).",
      "parentUuid": "7bf0a432_3a8f10c7",
      "range": {
        "startLine": 459,
        "startChar": 0,
        "endLine": 460,
        "endChar": 55
      },
      "revId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one Code-Review+2 is required. Self review is not allowed."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Holds",
        "description": {
          "value": "Changes with a Hold+1 vote are not submittable."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "NOT label:Hold\u003d1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"NOT label:Hold=1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Hold=1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable, unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:allow-unresolved-comments"]}
      },
      "patchSetCommitId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Wait-Release",
        "description": {
          "value": "Changes with the hashtag wait-release cannot be submitted."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "hashtag:wait-release"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:wait-release"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:wait-release"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "TryBots-Pass",
        "description": {
          "value": "Changes must pass TryBots unless TryBot-Bypass+1 is set."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config -label:TryBot-Result\u003dMAX"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:TryBot-Bypass\u003dMAX"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config -label:TryBot-Result=MAX"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:TryBot-Result=MAX"],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:TryBot-Bypass=MAX"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "87797395c2501d7c4b6d52ac3d1ee7259cb5affc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}