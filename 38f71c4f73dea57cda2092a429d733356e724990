{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "eb6e4130_e1d748e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-11T01:04:18Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d38f71c4f\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "38f71c4f73dea57cda2092a429d733356e724990",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21b602f4_3bca7b52",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-11T01:08:16Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d38f71c4f\nFailed on windows-amd64-2016: https://storage.googleapis.com/go-build-log/38f71c4f/windows-amd64-2016_44a2f56f.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "eb6e4130_e1d748e7",
      "tag": "autogenerated:trybots~progress",
      "revId": "38f71c4f73dea57cda2092a429d733356e724990",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c376551a_d2850ee0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-11T01:17:49Z",
      "side": 1,
      "message": "2 of 30 TryBots failed.\nFailed on windows-amd64-2016: https://storage.googleapis.com/go-build-log/38f71c4f/windows-amd64-2016_44a2f56f.log\nFailed on js-wasm: https://storage.googleapis.com/go-build-log/38f71c4f/js-wasm_953066b7.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "eb6e4130_e1d748e7",
      "tag": "autogenerated:trybots~failed",
      "revId": "38f71c4f73dea57cda2092a429d733356e724990",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "063c674d_c7fc342e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9210
      },
      "writtenOn": "2022-11-11T02:31:06Z",
      "side": 1,
      "message": "The windows-amd64-2016 failure is \"pointer 0xc0015d4000 to unused region of span\". I think that\u0027s because the new runtime.p.lastGosched field of type guintptr can end up pointing to memory that used to be a runtime.g (because it doesn\u0027t keep it alive). I had converted that back to a *g, which I think is not allowed. I\u0027ll keep all uses of that in guintptr form.\n\nThe js-wasm failure is a timeout in runtime_test.TestPseudoRandomSend including \"goroutine 2449 [runnable]: / runtime.Gosched()\". I\u0027d thought that it would be safe for the \"global runq\" part of findRunnable to not return what it finds in the global run queue, thinking that there\u0027s enough of an extra check of the global run queue before dropping the P to keep everything working. But something about that was wrong, and I\u0027m not yet sure what.",
      "parentUuid": "c376551a_d2850ee0",
      "revId": "38f71c4f73dea57cda2092a429d733356e724990",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9deabd90_14849356",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9210
      },
      "writtenOn": "2022-11-11T06:29:36Z",
      "side": 1,
      "message": "GOARCH\u003dwasm means there\u0027s a single M, so there\u0027s no chance of finding work in another P\u0027s local run queue. It probably also means there\u0027s no concept of a spinning M. So, skip the useless (and harmful) yielding behavior if gomaxprocs\u003c2.",
      "parentUuid": "063c674d_c7fc342e",
      "revId": "38f71c4f73dea57cda2092a429d733356e724990",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57798841_95eba96c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-11-11T14:45:56Z",
      "side": 1,
      "message": "\u003e The windows-amd64-2016 failure is \"pointer 0xc0015d4000 to unused region of span\". I think that\u0027s because the new runtime.p.lastGosched field of type guintptr can end up pointing to memory that used to be a runtime.g (because it doesn\u0027t keep it alive). I had converted that back to a *g, which I think is not allowed. I\u0027ll keep all uses of that in guintptr form.\n\nI\u0027m not sure I understand; I thought we keep all runtime.g alive via allg?",
      "parentUuid": "9deabd90_14849356",
      "revId": "38f71c4f73dea57cda2092a429d733356e724990",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b065f125_3a4486c8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9210
      },
      "writtenOn": "2022-11-11T18:24:10Z",
      "side": 1,
      "message": "Right, allgs should keep it alive. I found another explanation: #55167 points to several other failures (on a variety of x86 platforms) in the compress/flate package with the same message. So the windows-amd64-2016 failure was an unrelated flake, and it was in fact safe to convert guintptr to *g.",
      "parentUuid": "57798841_95eba96c",
      "revId": "38f71c4f73dea57cda2092a429d733356e724990",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}