{
  "comments": [
    {
      "key": {
        "uuid": "f86a1765_aadbcfb1",
        "filename": "src/archive/tar/reader.go",
        "patchSetId": 3
      },
      "lineNbr": 366,
      "author": {
        "id": 5065
      },
      "writtenOn": "2015-09-29T17:53:44Z",
      "side": 1,
      "message": "I think return \"\", \"\", ErrHeader is more clearly a zero value for those.",
      "revId": "7ee8445caecfb4d6bea6e0aa9e80760a816b0fbd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f86a1765_cacc03fd",
        "filename": "src/archive/tar/reader.go",
        "patchSetId": 3
      },
      "lineNbr": 401,
      "author": {
        "id": 5065
      },
      "writtenOn": "2015-09-29T17:51:38Z",
      "side": 1,
      "message": "this whole *error and *string thing feels weird.",
      "revId": "7ee8445caecfb4d6bea6e0aa9e80760a816b0fbd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f86a1765_cab3a367",
        "filename": "src/archive/tar/reader.go",
        "patchSetId": 3
      },
      "lineNbr": 488,
      "author": {
        "id": 5065
      },
      "writtenOn": "2015-09-29T17:53:44Z",
      "side": 1,
      "message": "I\u0027d rather see a small type that gathers the error inside it.\n\n   type blahParser struct {\n       err error // first error seen\n   }\n   func (p *blahParse) parseX(..) X { }\n   func (p *blahParse) parseY(..) Y { }\n   \n   var p blahParser\n   ....\n   if p.err !\u003d nil {\n     boom\n   }",
      "revId": "7ee8445caecfb4d6bea6e0aa9e80760a816b0fbd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}