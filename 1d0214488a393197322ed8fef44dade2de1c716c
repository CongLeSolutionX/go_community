{
  "comments": [
    {
      "key": {
        "uuid": "00795658_e638533e",
        "filename": "src/cmd/go/internal/work/exec.go",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-05-10T13:55:01Z",
      "side": 1,
      "message": "If -trimpath does not perform is documented function with gccgo, we should probably reject it explicitly during flag validation rather than ignoring the flag based on the toolchain name.\n\nIs there an issue filed for this somewhere?",
      "revId": "1d0214488a393197322ed8fef44dade2de1c716c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2184f072_8d418962",
        "filename": "src/cmd/go/internal/work/exec.go",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 5615
      },
      "writtenOn": "2019-05-10T22:37:38Z",
      "side": 1,
      "message": "I observed that:\n\n- The existing build_trimpath.txt test checks that with -trimpath the paths are not present in the binary, even with gccgo. I assume that some builders somewhere are running that test *with* gccgo and it passes. (Is that true?)\n- Unlike gc, there is clearly no logic in the gccgo code path which does anything differently based on -trimpath.\n\nTherefore, I inferred that gccgo in its default configuration produces binaries which do not contain the paths that -trimpath is supposed to trim. Perhaps I made a bad assumption somewhere and that\u0027s not true, but *if* that is correct, then it seems not that bad that -trimpath does nothing with gccgo (though rejecting -trimpath with gccgo also seems justified).\n\nIn any case, I\u0027ve never used gccgo before and I\u0027m not sure how to get up and running with it using my locally built go command. I poked around various READMEs in this repo, in the golang.org documentation, and over in https://github.com/golang/gofrontend, but I wasn\u0027t able to figure it out. Any pointers?\n\n\u003e Is there an issue filed for this somewhere?\n\nNot that I was able to find.\n\nOnce I can try it out locally, I will confirm exactly what the current behavior of gccgo + -trimpath is and file an issue about it.\n\nAs far as this CL goes, I propose to remove all the gccgo special-casing. Then, separately, we can address the gccgo/-trimpath issue (possibly by implementing support or by rejecting -trimpath with gccgo).\n\nWDYT?",
      "parentUuid": "00795658_e638533e",
      "revId": "1d0214488a393197322ed8fef44dade2de1c716c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c93cf019_d0d02df8",
        "filename": "src/cmd/go/internal/work/exec.go",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-05-14T21:12:40Z",
      "side": 1,
      "message": "Sounds good.",
      "parentUuid": "2184f072_8d418962",
      "revId": "1d0214488a393197322ed8fef44dade2de1c716c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dfafcc2_d5f5295c",
        "filename": "src/cmd/go/internal/work/exec.go",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-05-10T13:55:01Z",
      "side": 1,
      "message": "Given that trimpath affects whether we include the `dir` line, do we need an explicit `trimpath` line at all?\n\nIt seems like merely adding or removing the `dir` line should result in hashes that vary appropriately.",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 202,
        "endChar": 2
      },
      "revId": "1d0214488a393197322ed8fef44dade2de1c716c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6a8ed4b_a57e5a49",
        "filename": "src/cmd/go/internal/work/exec.go",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 5615
      },
      "writtenOn": "2019-05-10T22:37:38Z",
      "side": 1,
      "message": "Yes, I suppose that\u0027s true.",
      "parentUuid": "6dfafcc2_d5f5295c",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 202,
        "endChar": 2
      },
      "revId": "1d0214488a393197322ed8fef44dade2de1c716c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b514082d_3eb0535b",
        "filename": "src/cmd/go/internal/work/exec.go",
        "patchSetId": 2
      },
      "lineNbr": 1089,
      "author": {
        "id": 5615
      },
      "writtenOn": "2019-05-09T20:39:21Z",
      "side": 1,
      "message": "I\u0027m not sure if this is required. -trimpath does have a direct effect on the linker (it causes it to set GOROOT_FINAL), but since trimpath is part of the build ID already it doesn\u0027t seem possible to observe the effect of including it in the link cache key here. (So I was unable to write a test specifically for this behavior.)\n\nIs there a way to observe this? Should I remove it?",
      "range": {
        "startLine": 1087,
        "startChar": 0,
        "endLine": 1089,
        "endChar": 2
      },
      "revId": "1d0214488a393197322ed8fef44dade2de1c716c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}