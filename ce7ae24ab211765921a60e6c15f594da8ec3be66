{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a78588b2_b3d50093",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-12-11T02:43:44Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dce7ae24a",
      "tag": "autogenerated:trybots~beginning",
      "revId": "ce7ae24ab211765921a60e6c15f594da8ec3be66",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3b56217_44cb4bec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5167
      },
      "writtenOn": "2021-12-11T02:45:01Z",
      "side": 1,
      "message": "(I haven\u0027t gotten to your other comments yet.)",
      "revId": "ce7ae24ab211765921a60e6c15f594da8ec3be66",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b44cc70_50c1b142",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-12-11T02:57:57Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "a78588b2_b3d50093",
      "tag": "autogenerated:trybots~happy",
      "revId": "ce7ae24ab211765921a60e6c15f594da8ec3be66",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3e5f9b9_fcd1ac5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-05-07T00:21:38Z",
      "side": 1,
      "message": "Do we want this for 1.19?  Thanks.",
      "revId": "ce7ae24ab211765921a60e6c15f594da8ec3be66",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b9fd411_fd4d4b0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-11-08T21:33:26Z",
      "side": 1,
      "message": "@austin@google.com I think we can abandon this CL now.",
      "revId": "ce7ae24ab211765921a60e6c15f594da8ec3be66",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6462b85d_897a38b2",
        "filename": "src/internal/testenv/testenv.go",
        "patchSetId": 3
      },
      "lineNbr": 316,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-05-20T13:18:47Z",
      "side": 1,
      "message": "\"and return a nil error\"\n\n(I think it would help to add this for clarity)",
      "range": {
        "startLine": 316,
        "startChar": 35,
        "endLine": 316,
        "endChar": 36
      },
      "revId": "ce7ae24ab211765921a60e6c15f594da8ec3be66",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77d2e98a_fb380002",
        "filename": "src/internal/testenv/testenv.go",
        "patchSetId": 3
      },
      "lineNbr": 317,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-01-05T15:30:34Z",
      "side": 1,
      "message": "On further consideration: I think a cleaner API for this would look like a replacement for `exec.CommandContext`:\n\n// Command returns a *exec.Cmd with additional behaviors:\n//\n//    - once started, the command will be terminated with SIGQUIT (and have any I/O pipes closed) before t reaches its deadline\n//    - the test will verify during cleanup that the command is not still running (it either failed to start or ran to completion)\nfunc Command(t *testing.T, name string, arg ...string) *exec.Cmd\n\nThat API may require the os/exec API enhancements proposed in #50436, although in the meantime it could be implemented by returning a wrapper struct (such as the one implemented in CL 373005) instead of an *exec.Cmd.",
      "revId": "ce7ae24ab211765921a60e6c15f594da8ec3be66",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28ab23f4_ec107c95",
        "filename": "src/internal/testenv/testenv.go",
        "patchSetId": 3
      },
      "lineNbr": 317,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-01-12T03:57:16Z",
      "side": 1,
      "message": "CL 377835 contains a prototype of the suggested API (in `x/tools/testenv`), with example usage in the next CL on that stack.",
      "parentUuid": "77d2e98a_fb380002",
      "revId": "ce7ae24ab211765921a60e6c15f594da8ec3be66",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d03aca7_4594fe2a",
        "filename": "src/internal/testenv/testenv.go",
        "patchSetId": 3
      },
      "lineNbr": 317,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-26T16:11:48Z",
      "side": 1,
      "message": "Now that #50436 is implemented, CL 445596 contains a proper `interna/testenv` implementation of this approach. ðŸ˜ƒ",
      "parentUuid": "28ab23f4_ec107c95",
      "revId": "ce7ae24ab211765921a60e6c15f594da8ec3be66",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4a3f18c_450622c5",
        "filename": "src/internal/testenv/testenv.go",
        "patchSetId": 3
      },
      "lineNbr": 426,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-12-16T22:43:38Z",
      "side": 1,
      "message": "Have you tested this behavior? I tried something similar in a helper library for x/tools, but closing the Reader didn\u0027t actually unblock the copyBuffer goroutine because it was parked on reading stdout from the process (rather than writing to the pipe).\n\nI wonder if I\u0027m missing something...",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 426,
        "endChar": 11
      },
      "revId": "ce7ae24ab211765921a60e6c15f594da8ec3be66",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e1aa424_a03c7843",
        "filename": "src/internal/testenv/testenv.go",
        "patchSetId": 3
      },
      "lineNbr": 426,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-01-05T15:30:34Z",
      "side": 1,
      "message": "I was indeed missing something (a bug in my test).",
      "parentUuid": "f4a3f18c_450622c5",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 426,
        "endChar": 11
      },
      "revId": "ce7ae24ab211765921a60e6c15f594da8ec3be66",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}