{
  "comments": [
    {
      "key": {
        "uuid": "5e455dab_b50aed16",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-04-24T21:41:57Z",
      "side": 1,
      "message": "The relnote tool doesn\u0027t respect this here. (Maybe it should?)\n\nCurrently it\u0027s only supported as a comment in Gerrit.",
      "revId": "15a64f5894bea8cbc2bc553b3e907155382b8a1c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4e9f207_d9d7adee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 5615
      },
      "writtenOn": "2019-04-24T22:20:08Z",
      "side": 1,
      "message": "Hah, I spent longer than I wanted to trying to remember how RELNOTE works (eventually I found https://github.com/golang/go/wiki/CodeReview but that doesn\u0027t make it clear what\u0027s supported). Eventually I incorrectly decided that RELNOTE in the commit message must work because I saw lots of other commits that were doing it.\n\nI opened #31665.",
      "parentUuid": "5e455dab_b50aed16",
      "revId": "15a64f5894bea8cbc2bc553b3e907155382b8a1c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa4fb12f_2aed91ce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-04-24T21:41:57Z",
      "side": 1,
      "message": "no trailing period (minor, and normally I\u0027d let it slide, but since I already commented on this commit message...)",
      "revId": "15a64f5894bea8cbc2bc553b3e907155382b8a1c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46420585_780a5f96",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 5615
      },
      "writtenOn": "2019-04-24T22:20:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa4fb12f_2aed91ce",
      "revId": "15a64f5894bea8cbc2bc553b3e907155382b8a1c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "630d3962_01cc6b8c",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-04-24T21:41:57Z",
      "side": 1,
      "message": "move the period outside of the quote?",
      "revId": "15a64f5894bea8cbc2bc553b3e907155382b8a1c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "579c3733_e03fb858",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 5615
      },
      "writtenOn": "2019-04-24T22:20:08Z",
      "side": 1,
      "message": "It\u0027s my understanding that American style is to always put the period inside the quotation marks, though I agree that it looks kind of strange.\n\nA few existing examples:\n\nhttps://github.com/golang/go/blob/57076b8e6edb6ee19b86ab349b8f7a85819e0085/doc/progs/error.go#L5\nhttps://github.com/golang/go/blob/57076b8e6edb6ee19b86ab349b8f7a85819e0085/test/fixedbugs/issue16130.go#L9\nhttps://github.com/golang/go/blob/57076b8e6edb6ee19b86ab349b8f7a85819e0085/src/cmd/compile/internal/gc/escape.go#L44\nhttps://github.com/golang/go/blob/57076b8e6edb6ee19b86ab349b8f7a85819e0085/src/runtime/proc.go#L1327\n\nPerhaps I should try rewording it to sidestep the issue?",
      "parentUuid": "630d3962_01cc6b8c",
      "revId": "15a64f5894bea8cbc2bc553b3e907155382b8a1c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa5c29a1_1d64d88b",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-04-25T15:17:33Z",
      "side": 1,
      "message": "\u003e It\u0027s my understanding that American style is to always put the period inside the quotation marks, though I agree that it looks kind of strange.\n\nIt is, but when quoting commands to run in technical docs I personally ignore that rule. I don\u0027t know if others care about prescriptive punctuation rules enough to decree to keep it your way. I don\u0027t care strongly either way.\n\nIt\u0027s fine to keep it as-is.",
      "parentUuid": "579c3733_e03fb858",
      "revId": "15a64f5894bea8cbc2bc553b3e907155382b8a1c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b5e4d1f_b7edfed4",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 5615
      },
      "writtenOn": "2019-04-29T19:55:34Z",
      "side": 1,
      "message": "I actually like your way better, so I changed it, and we can see if any prescriptivists care to update it back. There\u0027s already plenty of precedent for putting the period outside the quotes in the codebase already, such as this one from the go tool docs:\n\nhttps://github.com/golang/go/blob/2b8cbc384d092dc63e9dc18ec318d0682185611c/src/cmd/go/alldocs.go#L2186",
      "parentUuid": "aa5c29a1_1d64d88b",
      "revId": "15a64f5894bea8cbc2bc553b3e907155382b8a1c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c3cb1dd_374bdd58",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-04-24T21:41:57Z",
      "side": 1,
      "message": "where do you validate that count isn\u0027t negative now?",
      "range": {
        "startLine": 282,
        "startChar": 14,
        "endLine": 282,
        "endChar": 15
      },
      "revId": "15a64f5894bea8cbc2bc553b3e907155382b8a1c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02953b57_d91ae5c7",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 5615
      },
      "writtenOn": "2019-04-24T22:20:08Z",
      "side": 1,
      "message": "I just made this change because Russ did it in CL 49251, but to be honest it seems better to leave it as a uint so that flag.Parse does the error checking for us.",
      "parentUuid": "1c3cb1dd_374bdd58",
      "range": {
        "startLine": 282,
        "startChar": 14,
        "endLine": 282,
        "endChar": 15
      },
      "revId": "15a64f5894bea8cbc2bc553b3e907155382b8a1c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fa4c232_8b666fcc",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 5065
      },
      "writtenOn": "2019-04-25T15:17:33Z",
      "side": 1,
      "message": "It\u0027s unrelated to this CL at least, so I\u0027d revert it for now.",
      "parentUuid": "02953b57_d91ae5c7",
      "range": {
        "startLine": 282,
        "startChar": 14,
        "endLine": 282,
        "endChar": 15
      },
      "revId": "15a64f5894bea8cbc2bc553b3e907155382b8a1c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8049749_75b4f343",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 5615
      },
      "writtenOn": "2019-04-29T19:55:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fa4c232_8b666fcc",
      "range": {
        "startLine": 282,
        "startChar": 14,
        "endLine": 282,
        "endChar": 15
      },
      "revId": "15a64f5894bea8cbc2bc553b3e907155382b8a1c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28f4c6f2_75e45979",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 5615
      },
      "writtenOn": "2019-04-24T21:27:41Z",
      "side": 1,
      "message": "Here and in Verbose, it\u0027s weird to have two different ways of bailing out on misuse:\n\n- Both Init and flag.Parse need to be called before using these; we have to check for both.\n- A panic seemed fine for detecting when Init hasn\u0027t been called (and that\u0027s what Russ used in CL 49251).\n- But I don\u0027t understand the comment \"this really shouldn\u0027t be a panic\" regarding the case that flag.Parse wasn\u0027t called. Ian?\n\nAs far as I\u0027m concerned, we could consolidate these into a single panic.",
      "range": {
        "startLine": 369,
        "startChar": 2,
        "endLine": 369,
        "endChar": 7
      },
      "revId": "15a64f5894bea8cbc2bc553b3e907155382b8a1c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}