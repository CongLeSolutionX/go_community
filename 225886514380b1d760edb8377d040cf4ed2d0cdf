{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9c5c772e_785c7396",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-19T20:53:47Z",
      "side": 1,
      "message": "LGTM, thank you Mauri! Kindly cc-ing David or Cherry or Ian for some submission bits please.",
      "revId": "225886514380b1d760edb8377d040cf4ed2d0cdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d27bba89_b4f4b24e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-19T20:54:01Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d22588651\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "225886514380b1d760edb8377d040cf4ed2d0cdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2821f0fb_3cdfedd2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-19T21:05:55Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "d27bba89_b4f4b24e",
      "tag": "autogenerated:trybots~happy",
      "revId": "225886514380b1d760edb8377d040cf4ed2d0cdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dc0fbaa_0fa33b6f",
        "filename": "src/net/http/fs.go",
        "patchSetId": 9
      },
      "lineNbr": 83,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-11-20T21:03:31Z",
      "side": 1,
      "message": "Hmm. This seems correct but needlessly inefficient: if `name` is not `.`, then `os.Open` will already fail if `dir` is not a directory.\n\nIdeally we ought to cache this so that we don\u0027t call `Stat` for every request, but `Dir` as a named string type doesn\u0027t allow for that. ðŸ¤”\n\nSo maybe something like:\n```\nf, err :\u003d os.Open(fullName)\nif err !\u003d nil {\n\treturn nil, mapOpenError(err, fullName, filepath.Separator, os.Stat)\n}\nif path \u003d\u003d \".\" {\n\tfi, err :\u003d f.Stat()\n\tif err \u003d\u003d nil \u0026\u0026 f.IsDir() {\n\t\tf.Close()\n\t\treturn nil, errors.New(\"http: Dir root is not a directory\")\n\t}\n}\nreturn f, nil\n```\n\nBut then I wonder: `os.File.Open` actually does succeed for a directory, so maybe this isn\u0027t the right place for the fix after all. Perhaps we should leave `Dir` as-is, but fix `serveFile` to error out (instead of serving the file) if a `FileServer` is passed an invalid `Dir` as a root.",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 83,
        "endChar": 2
      },
      "revId": "225886514380b1d760edb8377d040cf4ed2d0cdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}