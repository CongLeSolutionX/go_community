{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4d233aa6_e23e53c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 56198
      },
      "writtenOn": "2023-11-15T16:03:43Z",
      "side": 1,
      "message": "@dmitshur@golang.org the failing 386 and WASM builds are now truly fixed and have been tested on 386 (I missed bytealg.Cutoved was not implemented). Would you be able to kick off the test run again? And thank you for your patience.",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c61ed1cc_974851ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 56198
      },
      "writtenOn": "2024-01-23T15:44:51Z",
      "side": 1,
      "message": "@dmitshur@golang.org Any chance I could get this reviewed now that go1.23 is open for general development (and let me know if you\u0027re the wrong person to ping about this)?",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bafa91ac_edff08da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6005
      },
      "writtenOn": "2024-01-23T17:26:28Z",
      "side": 1,
      "message": "Thanks for the ping, but I\u0027m not the right reviewer for these packages. This CL already has the [right reviewers](https://dev.golang.org/owners), it\u0027s a matter for them to find time to review it.",
      "parentUuid": "c61ed1cc_974851ed",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfe1d5ee_d4d8b3c9",
        "filename": "src/bytes/bytes.go",
        "patchSetId": 5
      },
      "lineNbr": 1337,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-02-24T19:17:46Z",
      "side": 1,
      "message": "This means that Index calls IndexRune and IndexRune calls Index, which means that we need subtle conditions to avoid an infinite recursion.  I don\u0027t see any reason to this that this is a common case, and I would rather avoid the subtlety.  Let\u0027s leave Index unchanged, and let IndexRune call Index unconditionally in the fallback case.",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a0fa5d4_968db17b",
        "filename": "src/bytes/bytes.go",
        "patchSetId": 5
      },
      "lineNbr": 1337,
      "author": {
        "id": 56198
      },
      "writtenOn": "2024-03-30T04:42:06Z",
      "side": 1,
      "message": "Changed IndexRune to not fallback to Index and instead perform a brute-force-search on platforms that do not have bytealg.IndexString.\n\nThe rationale for the using a brute-force-search on platforms that do not have bytealg.IndexString is that Index will have to first use IndexByte to search for the first byte (and IndexByte is not optimized on all these platforms) and if that fails fallback to Rabin-Karp which is slower than a BFS for 2-4 bytes. Basically, it\u0027s a bet that the first byte is better that makes complexity/runtime-perf harder to predict.",
      "parentUuid": "dfe1d5ee_d4d8b3c9",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40808062_534d33cd",
        "filename": "src/bytes/bytes.go",
        "patchSetId": 5
      },
      "lineNbr": 1337,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-04-01T18:05:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "3a0fa5d4_968db17b",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14c8637f_49aa658b",
        "filename": "src/bytes/bytes_test.go",
        "patchSetId": 5
      },
      "lineNbr": 663,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-02-24T19:17:46Z",
      "side": 1,
      "message": "Don\u0027t use a line break here.  It\u0027s OK to have a long line.",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4897a39_ae670594",
        "filename": "src/bytes/bytes_test.go",
        "patchSetId": 5
      },
      "lineNbr": 663,
      "author": {
        "id": 56198
      },
      "writtenOn": "2024-03-30T04:42:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "14c8637f_49aa658b",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ded1396_1322534c",
        "filename": "src/bytes/bytes_test.go",
        "patchSetId": 5
      },
      "lineNbr": 700,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-02-24T19:17:46Z",
      "side": 1,
      "message": "I don\u0027t understand this.  Why are we decoding the rune at the start of buf in order to decide how many bytes to clear at the end of buf?  What does the one have to do with the other?",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50c49766_e41d9636",
        "filename": "src/bytes/bytes_test.go",
        "patchSetId": 5
      },
      "lineNbr": 700,
      "author": {
        "id": 56198
      },
      "writtenOn": "2024-03-30T04:42:06Z",
      "side": 1,
      "message": "Good catch and I meant to call utf8.DecodeLastRune here (fixed)",
      "parentUuid": "4ded1396_1322534c",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5e557c9_c503e56e",
        "filename": "src/bytes/bytes_test.go",
        "patchSetId": 5
      },
      "lineNbr": 700,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-04-01T18:05:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "50c49766_e41d9636",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4180bd10_6c2fb25d",
        "filename": "src/bytes/bytes_test.go",
        "patchSetId": 5
      },
      "lineNbr": 2342,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-02-24T19:17:46Z",
      "side": 1,
      "message": "Why this change?",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a92aed8_e8bb122c",
        "filename": "src/bytes/bytes_test.go",
        "patchSetId": 5
      },
      "lineNbr": 2342,
      "author": {
        "id": 56198
      },
      "writtenOn": "2024-03-30T04:42:06Z",
      "side": 1,
      "message": "Oops that was made by `go fmt -s` and was accidently added.",
      "parentUuid": "4180bd10_6c2fb25d",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87c4d146_18fe226f",
        "filename": "src/bytes/bytes_test.go",
        "patchSetId": 5
      },
      "lineNbr": 2342,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-04-01T18:05:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "0a92aed8_e8bb122c",
      "revId": "faff1fb8efaffedd0cf86a7d90755644c9c73702",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}