{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "39f992bb_5b338f4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-04-06T04:44:26Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d90a8aca9",
      "tag": "autogenerated:trybots~beginning",
      "revId": "90a8aca9960495a71b17d968e58710b21935b68f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35779954_05eb20e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5210
      },
      "writtenOn": "2022-04-06T04:45:53Z",
      "side": 1,
      "message": "PTAL",
      "revId": "90a8aca9960495a71b17d968e58710b21935b68f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74588f6f_efb31fb2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-04-06T04:55:50Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d90a8aca9\nFailed on linux-arm-aws: https://storage.googleapis.com/go-build-log/90a8aca9/linux-arm-aws_e9209135.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "39f992bb_5b338f4d",
      "tag": "autogenerated:trybots~progress",
      "revId": "90a8aca9960495a71b17d968e58710b21935b68f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce66908d_ee02d4fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-04-06T04:55:56Z",
      "side": 1,
      "message": "1 of 30 TryBots failed.\nFailed on linux-arm-aws: https://storage.googleapis.com/go-build-log/90a8aca9/linux-arm-aws_e9209135.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "39f992bb_5b338f4d",
      "tag": "autogenerated:trybots~failed",
      "revId": "90a8aca9960495a71b17d968e58710b21935b68f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4280ad99_1944385d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 31647
      },
      "writtenOn": "2022-04-06T15:06:06Z",
      "side": 1,
      "message": "Hmm, this looks like a real failure.",
      "parentUuid": "ce66908d_ee02d4fe",
      "revId": "90a8aca9960495a71b17d968e58710b21935b68f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a59f82a_e7003219",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-04-06T15:40:19Z",
      "side": 1,
      "message": "noder/expr.go looks good, thanks.",
      "revId": "90a8aca9960495a71b17d968e58710b21935b68f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c139c739_9d3a62f3",
        "filename": "src/cmd/compile/internal/noder/expr.go",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-04-06T15:40:19Z",
      "side": 1,
      "message": "Just `assert(tv.Value !\u003d nil)` seems fine?",
      "range": {
        "startLine": 69,
        "startChar": 3,
        "endLine": 69,
        "endChar": 23
      },
      "revId": "90a8aca9960495a71b17d968e58710b21935b68f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91a06feb_ea23090f",
        "filename": "src/cmd/compile/internal/noder/expr.go",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 5210
      },
      "writtenOn": "2022-04-06T21:00:52Z",
      "side": 1,
      "message": "Perhaps. But we don\u0027t really have a guarantee that we can\u0027t reach here on a different path than a shift. At least this provides some confidence that the values are correct.\n\nI have some ideas that allow us to get rid of this code altogether. Another CL.",
      "parentUuid": "c139c739_9d3a62f3",
      "range": {
        "startLine": 69,
        "startChar": 3,
        "endLine": 69,
        "endChar": 23
      },
      "revId": "90a8aca9960495a71b17d968e58710b21935b68f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "256a6e30_79bb1b2f",
        "filename": "src/cmd/compile/internal/noder/expr.go",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-04-07T19:25:01Z",
      "side": 1,
      "message": "SGTM. FWIW, I think untyped bools (and untyped nils, technically) are the only time we have untyped, non-const expressions.",
      "parentUuid": "91a06feb_ea23090f",
      "range": {
        "startLine": 69,
        "startChar": 3,
        "endLine": 69,
        "endChar": 23
      },
      "revId": "90a8aca9960495a71b17d968e58710b21935b68f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9650b1f_9c6057dc",
        "filename": "src/cmd/compile/internal/noder/expr.go",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 5210
      },
      "writtenOn": "2022-04-07T19:34:33Z",
      "side": 1,
      "message": "Actually, I misread your earlier comment. We can have situations where tv.Value is nil in this case: For shifts of the form x \u003c\u003c (1 \u003c\u003c s) the RHS is untyped because there\u0027s no need to give it a type, yet it\u0027s not a constant. This actually failed in an earlier patchset, which is why I changed this code in the first place.\n\nI think maybe we can use a flag with types2, indicating that the output is used by the compiler, and then ensure that all expressions are not untyped. In some future CL.",
      "parentUuid": "256a6e30_79bb1b2f",
      "range": {
        "startLine": 69,
        "startChar": 3,
        "endLine": 69,
        "endChar": 23
      },
      "revId": "90a8aca9960495a71b17d968e58710b21935b68f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce9849b8_cff65f72",
        "filename": "src/cmd/compile/internal/noder/expr.go",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-04-07T22:23:07Z",
      "side": 1,
      "message": "Ah, right.\n\nType checker mode for forcing concretely typed expressions SGTM.",
      "parentUuid": "f9650b1f_9c6057dc",
      "range": {
        "startLine": 69,
        "startChar": 3,
        "endLine": 69,
        "endChar": 23
      },
      "revId": "90a8aca9960495a71b17d968e58710b21935b68f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}