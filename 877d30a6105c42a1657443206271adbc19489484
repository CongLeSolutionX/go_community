{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "17b23f02_da41a242",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-24T19:15:46Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d877d30a6",
      "tag": "autogenerated:trybots~beginning",
      "revId": "877d30a6105c42a1657443206271adbc19489484",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f237e38b_cfb43dd1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-24T19:27:48Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "17b23f02_da41a242",
      "tag": "autogenerated:trybots~happy",
      "revId": "877d30a6105c42a1657443206271adbc19489484",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "535bdf37_27337326",
        "filename": "src/archive/zip/reader_test.go",
        "patchSetId": 7
      },
      "lineNbr": 1330,
      "author": {
        "id": 9735
      },
      "writtenOn": "2021-05-24T19:17:55Z",
      "side": 1,
      "message": "Ideally the test would specify a number that is just one above what actually exists to exercise the tightness of our bounds, but this is acceptable as well.",
      "range": {
        "startLine": 1330,
        "startChar": 34,
        "endLine": 1330,
        "endChar": 45
      },
      "revId": "877d30a6105c42a1657443206271adbc19489484",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e00ff96_94faeb41",
        "filename": "src/archive/zip/reader_test.go",
        "patchSetId": 7
      },
      "lineNbr": 1330,
      "author": {
        "id": 28759
      },
      "writtenOn": "2021-05-24T19:20:32Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "535bdf37_27337326",
      "range": {
        "startLine": 1330,
        "startChar": 34,
        "endLine": 1330,
        "endChar": 45
      },
      "revId": "877d30a6105c42a1657443206271adbc19489484",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea3e8070_aace2b92",
        "filename": "src/archive/zip/reader_test.go",
        "patchSetId": 7
      },
      "lineNbr": 1330,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-05-24T19:31:15Z",
      "side": 1,
      "message": "I\u0027m not sure I see what this would test? An archive that contains a single file, but indicates it has two, would fail in the same way it previously did since the check doesn\u0027t impose a new error condition, it simply gates an optimization. This tests that we aren\u0027t trying to allocate a slice with an impossible number of elements, which previously caused a panic.",
      "parentUuid": "2e00ff96_94faeb41",
      "range": {
        "startLine": 1330,
        "startChar": 34,
        "endLine": 1330,
        "endChar": 45
      },
      "revId": "877d30a6105c42a1657443206271adbc19489484",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6dde219_4d54dbba",
        "filename": "src/archive/zip/reader_test.go",
        "patchSetId": 7
      },
      "lineNbr": 1366,
      "author": {
        "id": 28759
      },
      "writtenOn": "2021-05-24T19:20:32Z",
      "side": 1,
      "message": "an",
      "range": {
        "startLine": 1366,
        "startChar": 20,
        "endLine": 1366,
        "endChar": 21
      },
      "revId": "877d30a6105c42a1657443206271adbc19489484",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}