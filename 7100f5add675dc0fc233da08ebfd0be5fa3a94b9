{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "24b29d02_05119938",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-12-15T18:01:23Z",
      "side": 1,
      "message": "idential -\u003e identical",
      "revId": "7100f5add675dc0fc233da08ebfd0be5fa3a94b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41d7a015_12b7cdc1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-12-15T20:12:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24b29d02_05119938",
      "revId": "7100f5add675dc0fc233da08ebfd0be5fa3a94b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00f57247_eebf4420",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-12-15T17:37:24Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d7100f5ad",
      "tag": "autogenerated:trybots~beginning",
      "revId": "7100f5add675dc0fc233da08ebfd0be5fa3a94b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "452325c1_d7e8fbfb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-12-15T17:50:25Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "00f57247_eebf4420",
      "tag": "autogenerated:trybots~happy",
      "revId": "7100f5add675dc0fc233da08ebfd0be5fa3a94b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93cceeff_8a8796d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-12-15T18:01:23Z",
      "side": 1,
      "message": "Nice fix!  There were many \u0027any\u0027-related changes in the last week, and we didn\u0027t catch this distinction related to named vs unnamed empty-interface types.  I suspect there may still be a few more any-related bugs lurking...\n\n",
      "revId": "7100f5add675dc0fc233da08ebfd0be5fa3a94b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b69205a1_30621d0b",
        "filename": "src/cmd/compile/internal/types/identity.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-12-15T18:01:23Z",
      "side": 1,
      "message": "Update comment to:\n\n// Make sure named any type matches any unnamed empty interface",
      "revId": "7100f5add675dc0fc233da08ebfd0be5fa3a94b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4626ed2_d5764811",
        "filename": "src/cmd/compile/internal/types/identity.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-12-15T20:12:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b69205a1_30621d0b",
      "revId": "7100f5add675dc0fc233da08ebfd0be5fa3a94b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8a117a6_3ac777e5",
        "filename": "src/cmd/compile/internal/types/identity.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-12-15T18:01:23Z",
      "side": 1,
      "message": "Probably change t.sym -\u003e t.Sym()?  We mostly use t.Sym() even inside the types package.",
      "revId": "7100f5add675dc0fc233da08ebfd0be5fa3a94b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a9228c0_c5419efc",
        "filename": "src/cmd/compile/internal/types/identity.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-12-15T20:12:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8a117a6_3ac777e5",
      "revId": "7100f5add675dc0fc233da08ebfd0be5fa3a94b9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}