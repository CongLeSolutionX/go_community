{
  "comments": [
    {
      "key": {
        "uuid": "2fc07f9b_d89a9ea1",
        "filename": "src/net/http/serve_test.go",
        "patchSetId": 1
      },
      "lineNbr": 2452,
      "author": {
        "id": 10820
      },
      "writtenOn": "2017-10-02T17:13:30Z",
      "side": 1,
      "message": "This makes some assumptions about how the test is run. See a trybot failure here:\nhttps://storage.googleapis.com/go-build-log/603cb8d3/nacl-386_78d71c3d.log\n\nI think it would be straightforward to integrate this into testHandlerPanic, perhaps by adding a wrapHandlerFunc parameter:\nhttps://github.com/golang/go/blob/master/src/net/http/serve_test.go#L2569",
      "revId": "603cb8d3170d4752925e1fd745db5cb2fa337a94",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d999159_8d19148b",
        "filename": "src/net/http/serve_test.go",
        "patchSetId": 1
      },
      "lineNbr": 2452,
      "author": {
        "id": 9870
      },
      "writtenOn": "2017-10-02T18:12:24Z",
      "side": 1,
      "message": "Just tried this approach and it mostly works, with the exception that output of a plain `go test` run *before* the fix became a mess like this:\n\n\nhttp (issue22084) Â¶ go test\npanic: intentional death for testing\n\ngoroutine 5402 [running]:\nnet/http_test.testHandlerPanic.func1(0x152d220, 0xc4200b6c80, 0xc420452200)\n\t/Users/artyom/Repositories/go/src/net/http/serve_test.go:2608 +0x153\nnet/http.HandlerFunc.ServeHTTP(0xc420808030, 0x152d220, 0xc4200b6c80, 0xc420452200)\n\t/Users/artyom/Repositories/go/src/net/http/server.go:1921 +0x44\nnet/http.(*timeoutHandler).ServeHTTP.func1(0xc4205a6040, 0xc4200b6c80, 0xc420452200, 0xc4200825a0)\n\t/Users/artyom/Repositories/go/src/net/http/server.go:3091 +0x53\ncreated by net/http.(*timeoutHandler).ServeHTTP\n\t/Users/artyom/Repositories/go/src/net/http/server.go:3085 +0x187\nexit status 2\nFAIL\tnet/http\t8.016s\n\n\nIs there a way around this without resorting to a separate child process?\n\nWould it be ok to leave subprocess-starting test as it is, but skip it on builders that don\u0027t support this with testenv.MustHaveExec(t)?",
      "parentUuid": "2fc07f9b_d89a9ea1",
      "revId": "603cb8d3170d4752925e1fd745db5cb2fa337a94",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de7edd0a_09d1c7ba",
        "filename": "src/net/http/serve_test.go",
        "patchSetId": 1
      },
      "lineNbr": 2452,
      "author": {
        "id": 10820
      },
      "writtenOn": "2017-10-02T18:33:54Z",
      "side": 1,
      "message": "That doesn\u0027t look like too much of a mess to me. We\u0027re already living with that possibility for the other panic tests. I see no need to make this panic test a special snowflake. If there\u0027s some way to clean up the error messages in all panic tests and all build environments, that would be great, but it doesn\u0027t seem important enough to skip the tests on some environments.",
      "parentUuid": "0d999159_8d19148b",
      "revId": "603cb8d3170d4752925e1fd745db5cb2fa337a94",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2680d122_84c1e9fe",
        "filename": "src/net/http/serve_test.go",
        "patchSetId": 1
      },
      "lineNbr": 2452,
      "author": {
        "id": 9870
      },
      "writtenOn": "2017-10-02T19:03:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de7edd0a_09d1c7ba",
      "revId": "603cb8d3170d4752925e1fd745db5cb2fa337a94",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}