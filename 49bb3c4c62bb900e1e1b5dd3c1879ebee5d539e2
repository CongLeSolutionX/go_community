{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a572fc96_c7768752",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-08-17T18:49:06Z",
      "side": 1,
      "message": "I recognize this isn\u0027t ideal, but it\u0027s at least a stop-gap.\n\nI\u0027m not sure how to write this in a completely non-flaky way other than to stub out nanotime. we could limit this to just linux/amd64, but my past experience with similar tests is that we\u0027ll eventually get a flake there too.",
      "revId": "49bb3c4c62bb900e1e1b5dd3c1879ebee5d539e2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bf14d69_811e0af9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-08-17T18:50:01Z",
      "side": 1,
      "message": "TRY\u003dlinux-s390x-ibm,linux-amd64-longtest-race,freebsd-amd64-race,linux-arm64-race",
      "revId": "49bb3c4c62bb900e1e1b5dd3c1879ebee5d539e2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b86f201f_a715760c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-08-17T18:50:29Z",
      "side": 1,
      "message": "just kidding, there is a flake on linux-amd64-longtest-race",
      "parentUuid": "a572fc96_c7768752",
      "revId": "49bb3c4c62bb900e1e1b5dd3c1879ebee5d539e2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce503ae4_5bb496e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-17T18:51:57Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d49bb3c4c\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "49bb3c4c62bb900e1e1b5dd3c1879ebee5d539e2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "151e378e_d3b5bcdc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-17T19:34:06Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* freebsd-amd64-race\n* linux-amd64-longtest-race\n* linux-arm64-race\n* linux-s390x-ibm\n",
      "parentUuid": "ce503ae4_5bb496e0",
      "tag": "autogenerated:trybots~happy",
      "revId": "49bb3c4c62bb900e1e1b5dd3c1879ebee5d539e2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6739dfd9_5d689349",
        "filename": "src/runtime/pprof/pprof_test.go",
        "patchSetId": 1
      },
      "lineNbr": 1317,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-08-17T19:29:10Z",
      "side": 1,
      "message": "`blockMutexN` runs N goroutines that each block on the Mutex. It seems like we should be able to use the actual wall time of the test as an upper bound:\n```go\n\tstart :\u003d time.Now()\n\tblockMutexN(t, N, D)\n\tend :\u003d time.Now()\n\tâ€¦\n\tupperBound :\u003d time.Duration(N)*end.Sub(start)\n```\n\nIf there is some scheduling delay that causes the `time.Sleep` to overshoot, or causes the goroutines to be delayed in aquiring the mutex once it is unlocked, that scheduling delay should be reflected in the wall-time calculation.",
      "range": {
        "startLine": 1313,
        "startChar": 0,
        "endLine": 1317,
        "endChar": 24
      },
      "revId": "49bb3c4c62bb900e1e1b5dd3c1879ebee5d539e2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8e11b66_b34e4902",
        "filename": "src/runtime/pprof/pprof_test.go",
        "patchSetId": 1
      },
      "lineNbr": 1317,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-08-17T22:03:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6739dfd9_5d689349",
      "range": {
        "startLine": 1313,
        "startChar": 0,
        "endLine": 1317,
        "endChar": 24
      },
      "revId": "49bb3c4c62bb900e1e1b5dd3c1879ebee5d539e2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}