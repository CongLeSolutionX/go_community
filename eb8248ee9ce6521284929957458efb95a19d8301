{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1af6b87c_25a31500",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-03-13T15:08:22Z",
      "side": 1,
      "message": "TRY\u003dppc64le,ppc64lep9,ppc64lep10",
      "revId": "eb8248ee9ce6521284929957458efb95a19d8301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d09ff18_a33ea2d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-13T15:08:43Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003deb8248ee\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "eb8248ee9ce6521284929957458efb95a19d8301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6094940a_595b066c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-03-13T15:09:36Z",
      "side": 1,
      "message": "This may not be the final version, and some comments need cleaned up, but I want to verify this on our builders too.\n\nIt seems to behave with my local testing.",
      "revId": "eb8248ee9ce6521284929957458efb95a19d8301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2edc8030_be320633",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-13T15:39:56Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-ppc64le-buildlet\n* linux-ppc64le-power10osu\n* linux-ppc64le-power9osu\n",
      "parentUuid": "1d09ff18_a33ea2d7",
      "tag": "autogenerated:trybots~happy",
      "revId": "eb8248ee9ce6521284929957458efb95a19d8301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9eaac2f_536f64d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-03-13T18:02:35Z",
      "side": 1,
      "message": "I agree with Cherry\u0027s comment about doing a macro and as we discussed Paul plans to do that in a separate CL.",
      "revId": "eb8248ee9ce6521284929957458efb95a19d8301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f28e0bb_a0024086",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-03-13T20:03:55Z",
      "side": 1,
      "message": "I wanted to update a couple of inline comments, so I created an abi_ppc64x.h. We can move the other uses over in a separate commit.",
      "parentUuid": "f9eaac2f_536f64d7",
      "revId": "eb8248ee9ce6521284929957458efb95a19d8301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3762e956_e8fef560",
        "filename": "src/runtime/sys_linux_ppc64x.s",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-03-13T18:02:35Z",
      "side": 1,
      "message": "It might be a bit clearer to combine the comments about load_g. Something like load_g clobbers r30, r31 which are nonvolatile for C/C++ callers. (followed by the line about Save them...)",
      "revId": "eb8248ee9ce6521284929957458efb95a19d8301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c042146c_cd8f287b",
        "filename": "src/runtime/sys_linux_ppc64x.s",
        "patchSetId": 2
      },
      "lineNbr": 642,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-03-13T20:03:55Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "3762e956_e8fef560",
      "revId": "eb8248ee9ce6521284929957458efb95a19d8301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eff74f10_2c74133d",
        "filename": "src/runtime/sys_linux_ppc64x.s",
        "patchSetId": 2
      },
      "lineNbr": 751,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-03-13T15:21:03Z",
      "side": 1,
      "message": "On some archtectures we define macros for saving/restore C callee save registers, e.g. https://cs.opensource.google/go/go/+/master:src/runtime/cgo/abi_amd64.h Maybe do the same (and reuse in other places like runtime/cgo/asm_ppc64x.s)?",
      "revId": "eb8248ee9ce6521284929957458efb95a19d8301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0e838fb_c8fff8b7",
        "filename": "src/runtime/sys_linux_ppc64x.s",
        "patchSetId": 2
      },
      "lineNbr": 751,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-03-13T20:03:55Z",
      "side": 1,
      "message": "Yes, that would be desirable. Though, in the interest of getting the CI unclogged, merging the other users can wait for a separate patch.",
      "parentUuid": "eff74f10_2c74133d",
      "revId": "eb8248ee9ce6521284929957458efb95a19d8301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}