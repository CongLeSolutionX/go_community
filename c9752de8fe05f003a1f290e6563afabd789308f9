{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8f153b30_a36282a9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-19T23:17:25Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dc9752de8",
      "tag": "autogenerated:trybots~beginning",
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "849213e5_c73a7c63",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-19T23:33:33Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "8f153b30_a36282a9",
      "tag": "autogenerated:trybots~happy",
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb789c26_dde7efe7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "LGTM with some suggestions",
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "957ddb61_e43947eb",
        "filename": "src/cmd/compile/internal/gc/export.go",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "because...\n\n(explain we we don\u0027t deal with those types here)",
      "range": {
        "startLine": 102,
        "startChar": 16,
        "endLine": 102,
        "endChar": 20
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c9bd23a_1c34231c",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 281,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "remove this doc string? we don\u0027t do this for paramList, either.",
      "range": {
        "startLine": 281,
        "startChar": 14,
        "endLine": 281,
        "endChar": 19
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "074cc7ec_e72b10ac",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 283,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "Move this function down, below line 670 (just before paramList).",
      "range": {
        "startLine": 283,
        "startChar": 22,
        "endLine": 283,
        "endChar": 23
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdde5b9f_3bcda176",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "make this:\n\nn :\u003d r.uint64()\nif n \u003d\u003d 0 {\n   return nil\n}\n\nxs :\u003d make(..., n)\n\nthis avoids allocating a 0-length slice which otherwise will happen most of the time",
      "range": {
        "startLine": 284,
        "startChar": 34,
        "endLine": 284,
        "endChar": 40
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a6d35f5_2b0c7c75",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 312,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "with the change suggested for tparamList, you don\u0027t need this test - you can just set the TParams",
      "range": {
        "startLine": 312,
        "startChar": 9,
        "endLine": 312,
        "endChar": 16
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60b227a2_11e454a6",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "ditto - no need for this check",
      "range": {
        "startLine": 325,
        "startChar": 9,
        "endLine": 325,
        "endChar": 16
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f008725_b4c547bb",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 340,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "make this a helper function:\n\nfunc baseType(typ Type) *types2.Named {\n   // pointer receivers are never types2.Named types\n   if p, _ :\u003d typ.(*types2.Pointer); p !\u003d nil {\n      typ \u003d p.Elem()\n   }\n   // receiver base types are always (possibly generic) types2.Named types\n   n, _ :\u003d typ.(*types2.Named)\n   return n\n}",
      "range": {
        "startLine": 340,
        "startChar": 14,
        "endLine": 340,
        "endChar": 23
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4a4d4b5_2c0853de",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 346,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "replace this with\n\ntargs :\u003d baseType(msig.Recv().Type()).TArgs()",
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52fb001c_7f6cd235",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 619,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "You don\u0027t need to do this: The subscript corresponds to the TypeParam.id. Just provide an accessor in types2 and use that value. I.e., when exporting, write the type name, stopping when the subscript starts, and then write the TypeParam.Id() as a number. Do the opposite when importing.\n\nIf you need to create a unique name for symbols, you can still do that and recreate the subscript if need be.",
      "range": {
        "startLine": 619,
        "startChar": 5,
        "endLine": 619,
        "endChar": 12
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a68d953d_5b166db6",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 638,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "As an aside, I will try to get rid of the need for providing a nil Checker here. (Some future change.)",
      "range": {
        "startLine": 638,
        "startChar": 16,
        "endLine": 638,
        "endChar": 23
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a68879a2_9280b9e7",
        "filename": "src/cmd/compile/internal/noder/decl.go",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "If n, _ :\u003d otyp.(*types2.Named); n !\u003d nil {\n   if tparams :\u003d n.TParams(); tparams !\u003d nil {\n      ...",
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e55bdb4_1eac80ef",
        "filename": "src/cmd/compile/internal/noder/decl.go",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "s/len(types2.AsNamed(otyp).TParams())/len(tparams)/",
      "range": {
        "startLine": 153,
        "startChar": 33,
        "endLine": 153,
        "endChar": 68
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "828d2d08_1bbb6171",
        "filename": "src/cmd/compile/internal/noder/decl.go",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "s/len(types2.AsNamed(otyp).TParams())/tparams/",
      "range": {
        "startLine": 155,
        "startChar": 22,
        "endLine": 155,
        "endChar": 52
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ff28761_dddc45fe",
        "filename": "src/cmd/compile/internal/noder/expr.go",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "we know this must be a *Named:\n\ns/types2.AsNamed(recvType2)/recvType2.(*types2.Named)/",
      "range": {
        "startLine": 267,
        "startChar": 47,
        "endLine": 267,
        "endChar": 72
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99de02e8_5810123a",
        "filename": "src/cmd/compile/internal/noder/object.go",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "if sig :\u003d obj.Type().(*types2.Signature); sig !\u003d nil \u0026\u0026 sig.Recv() !\u003d nil {\n   ...",
      "range": {
        "startLine": 52,
        "startChar": 16,
        "endLine": 52,
        "endChar": 27
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d2ef716_6e33b19c",
        "filename": "src/cmd/compile/internal/noder/types.go",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "s/p/pkg/\n\nis the more common variable name for packages",
      "range": {
        "startLine": 74,
        "startChar": 8,
        "endLine": 74,
        "endChar": 9
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deda192e_40e8ebf6",
        "filename": "src/cmd/compile/internal/noder/types.go",
        "patchSetId": 3
      },
      "lineNbr": 276,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "s/types2.AsNamed(recvType)/recvType.(*types2.Named)/",
      "range": {
        "startLine": 276,
        "startChar": 17,
        "endLine": 276,
        "endChar": 41
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5c3e26d_47bd05e6",
        "filename": "src/cmd/compile/internal/reflectdata/reflect.go",
        "patchSetId": 3
      },
      "lineNbr": 956,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "s/even/even if/ (?)\n\nsomething\u0027s not quite right with the grammar here",
      "range": {
        "startLine": 956,
        "startChar": 32,
        "endLine": 956,
        "endChar": 36
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e6a9295_fcd1b8d1",
        "filename": "src/cmd/compile/internal/typecheck/iexport.go",
        "patchSetId": 3
      },
      "lineNbr": 444,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "maybe remove this comment - we don\u0027t have one for paramList and it\u0027s kind of clear what this does",
      "range": {
        "startLine": 444,
        "startChar": 43,
        "endLine": 444,
        "endChar": 44
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f658a298_0bc392ef",
        "filename": "src/cmd/compile/internal/typecheck/iexport.go",
        "patchSetId": 3
      },
      "lineNbr": 445,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "move down to before line 984 - just before paramList",
      "range": {
        "startLine": 445,
        "startChar": 9,
        "endLine": 445,
        "endChar": 21
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "516273ef_eb1387d1",
        "filename": "src/cmd/compile/internal/typecheck/iexport.go",
        "patchSetId": 3
      },
      "lineNbr": 458,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "move this down as well - I\u0027d put it before tparamList\n\nsame with the doc string: probably not needed",
      "range": {
        "startLine": 458,
        "startChar": 9,
        "endLine": 458,
        "endChar": 21
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57fc56b6_24c2c25d",
        "filename": "src/cmd/compile/internal/typecheck/iexport.go",
        "patchSetId": 3
      },
      "lineNbr": 487,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "s/essentially //",
      "range": {
        "startLine": 487,
        "startChar": 46,
        "endLine": 487,
        "endChar": 57
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04b3a2fe_107c8d7d",
        "filename": "src/cmd/compile/internal/typecheck/iexport.go",
        "patchSetId": 3
      },
      "lineNbr": 848,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "don\u0027t we usually write the pos first?",
      "range": {
        "startLine": 848,
        "startChar": 8,
        "endLine": 848,
        "endChar": 9
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49f4868e_01bc3288",
        "filename": "src/cmd/compile/internal/typecheck/iexport.go",
        "patchSetId": 3
      },
      "lineNbr": 850,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "As suggested before - I\u0027d write the type name without subscript, followed by the type param id as a number.\n\nI assume the invariant here is that all type parameters for _a given_ package have unique ids - but type parameters from different packages may have the same id.",
      "range": {
        "startLine": 850,
        "startChar": 42,
        "endLine": 850,
        "endChar": 51
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b8526f1_9b18f181",
        "filename": "src/cmd/compile/internal/typecheck/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 299,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "move down to before paramList (and remove doc string)",
      "range": {
        "startLine": 299,
        "startChar": 23,
        "endLine": 299,
        "endChar": 33
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d125da94_b56bd4d0",
        "filename": "src/cmd/compile/internal/typecheck/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 300,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "n :\u003d r.uint64()\nif n \u003d\u003d 0 {\n   return nil\n}\n....\n\n\ndon\u0027t allocate if there\u0027s nothing",
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "380c5f9c_e0a61850",
        "filename": "src/cmd/compile/internal/typecheck/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 335,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "make this a helper function as well, like we have for tparamList",
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96072ede_ba215a64",
        "filename": "src/cmd/compile/internal/typecheck/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 356,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "you can always set this unless SetRParams does something special",
      "range": {
        "startLine": 356,
        "startChar": 14,
        "endLine": 356,
        "endChar": 15
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9286451e_a77fc03d",
        "filename": "src/cmd/compile/internal/typecheck/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 1607,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "missing . at end",
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e7e76aa_5a81bb20",
        "filename": "src/cmd/compile/internal/types/type.go",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "add a TODO here that we need a better name\n\n(in types2, rparams are the receiver type params - so this is mildly confusing to me)",
      "range": {
        "startLine": 191,
        "startChar": 1,
        "endLine": 191,
        "endChar": 8
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a182dac2_0e2c9586",
        "filename": "src/cmd/compile/internal/types2/typestring.go",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "Add a TODO that this is only here for import/export and that we need to find a better solution",
      "range": {
        "startLine": 284,
        "startChar": 6,
        "endLine": 284,
        "endChar": 16
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47566bb6_4320aaa9",
        "filename": "src/go/internal/gcimporter/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 567,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "insert an empty line before the case",
      "range": {
        "startLine": 567,
        "startChar": 1,
        "endLine": 567,
        "endChar": 5
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fcd4716_d670e3df",
        "filename": "test/typeparam/minimp.dir/a.go",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "add string to the list",
      "range": {
        "startLine": 8,
        "startChar": 25,
        "endLine": 8,
        "endChar": 32
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f18040c_055e3f9d",
        "filename": "test/typeparam/minimp.dir/main.go",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "add a test that operates on strings",
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "220c5262_61fb66c8",
        "filename": "test/typeparam/pairimp.dir/a.go",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "missing copyright notice",
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "270ab750_d1b85ec3",
        "filename": "test/typeparam/pairimp.dir/main.go",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "missing copyright notice",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 7
      },
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d268b6bb_c700ad4d",
        "filename": "test/typeparam/pairimp.dir/main.go",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-05-20T18:15:43Z",
      "side": 1,
      "message": "add a newline before line 17",
      "revId": "c9752de8fe05f003a1f290e6563afabd789308f9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}