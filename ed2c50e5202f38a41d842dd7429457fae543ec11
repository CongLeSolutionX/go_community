{
  "comments": [
    {
      "key": {
        "uuid": "85f3a46f_668159a4",
        "filename": "src/cmd/go/go_test.go",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 6010
      },
      "writtenOn": "2018-10-11T16:35:49Z",
      "side": 1,
      "message": "ha, i have code that\u0027s doing this kind of thing too. not great really. :-\\",
      "revId": "ed2c50e5202f38a41d842dd7429457fae543ec11",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "815823b2_a4806eb9",
        "filename": "src/cmd/go/go_test.go",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 6365
      },
      "writtenOn": "2018-10-11T18:05:58Z",
      "side": 1,
      "message": "It\u0027s mostly fine as long as you remember to mark the test as failed.\n\nStill, a standard-library solution would be cleaner. ðŸ™‚",
      "parentUuid": "85f3a46f_668159a4",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "ed2c50e5202f38a41d842dd7429457fae543ec11",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d45691d8_43d9a59c",
        "filename": "src/cmd/go/script_test.go",
        "patchSetId": 3
      },
      "lineNbr": 843,
      "author": {
        "id": 6010
      },
      "writtenOn": "2018-10-11T16:35:49Z",
      "side": 1,
      "message": "Should we try harder if the process doesn\u0027t exit a while after sending it an interrupt signal?",
      "revId": "ed2c50e5202f38a41d842dd7429457fae543ec11",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb32475e_3878930b",
        "filename": "src/cmd/go/script_test.go",
        "patchSetId": 3
      },
      "lineNbr": 843,
      "author": {
        "id": 6365
      },
      "writtenOn": "2018-10-11T18:05:58Z",
      "side": 1,
      "message": "I don\u0027t think so: we\u0027d have to compute some additional grace period to give it based on the timeout, and that adds a lot more complexity for relatively little benefit.\n\n(Hangs that don\u0027t respond to os.Interrupt should be vanishingly rare to begin with!)",
      "parentUuid": "d45691d8_43d9a59c",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "ed2c50e5202f38a41d842dd7429457fae543ec11",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3465b652_b3bcc172",
        "filename": "src/cmd/go/script_test.go",
        "patchSetId": 3
      },
      "lineNbr": 853,
      "author": {
        "id": 6010
      },
      "writtenOn": "2018-10-11T16:35:49Z",
      "side": 1,
      "message": "again, maybe we should give it some time to respond before using Kill. ISTM that the initial signal could very well succeed but the process might not terminate on SIGINT, so we\u0027ll never call Kill, so we\u0027ll time out after minutes rather than seconds.",
      "revId": "ed2c50e5202f38a41d842dd7429457fae543ec11",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36e6d84b_48e52087",
        "filename": "src/cmd/go/script_test.go",
        "patchSetId": 3
      },
      "lineNbr": 853,
      "author": {
        "id": 6365
      },
      "writtenOn": "2018-10-11T18:05:58Z",
      "side": 1,
      "message": "The point of the p.Kill here is to terminate the process on Windows, not to compensate for badly-behaved programs.\n\n(SIGTERM would arguably be a bit better on POSIX systems, but there is no os.Terminate in the standard library.)\n\nRefactored function boundaries to make it a bit more explicit.",
      "parentUuid": "3465b652_b3bcc172",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "ed2c50e5202f38a41d842dd7429457fae543ec11",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5581724_36e157c0",
        "filename": "src/cmd/go/testdata/script/README",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 6010
      },
      "writtenOn": "2018-10-11T16:35:49Z",
      "side": 1,
      "message": "I\u0027m not entirely sure whether it\u0027s a good idea to concatenate all the output here. That will make it harder to inspect individual command output. Another possibility might be to name the command that we\u0027re waiting for (maybe as a regexp); we wait for anything that\u0027s named. By default `wait` would be equivalent to `wait .*`.",
      "revId": "ed2c50e5202f38a41d842dd7429457fae543ec11",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba797e9c_4ecd84d1",
        "filename": "src/cmd/go/testdata/script/README",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 6365
      },
      "writtenOn": "2018-10-11T18:05:58Z",
      "side": 1,
      "message": "We can always add arguments to \u0027wait\u0027 later if the need arises. (I prefer to keep it simple for now.)",
      "parentUuid": "a5581724_36e157c0",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "ed2c50e5202f38a41d842dd7429457fae543ec11",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}