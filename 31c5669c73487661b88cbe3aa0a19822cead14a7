{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5e65ca43_aef20382",
        "filename": "src/runtime/sys_windows_arm64.s",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-18T15:14:50Z",
      "side": 1,
      "message": "Use tab here.",
      "range": {
        "startLine": 21,
        "startChar": 6,
        "endLine": 21,
        "endChar": 8
      },
      "revId": "31c5669c73487661b88cbe3aa0a19822cead14a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15cd0c47_30c3101a",
        "filename": "src/runtime/sys_windows_arm64.s",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-18T15:14:50Z",
      "side": 1,
      "message": "Does this function need to follow C calling convention? Why we need to preserve these two registers?",
      "revId": "31c5669c73487661b88cbe3aa0a19822cead14a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88cbb178_58d0d588",
        "filename": "src/runtime/sys_windows_arm64.s",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-18T15:14:50Z",
      "side": 1,
      "message": "The saving/restoring g register seems a bit confusing to me. Here the g is the g register value when the exception happens. The next line does a load_g, which loads it from TLS. Shouldn\u0027t they be equal? If they can be not equal, is the g register value meaningful?\n\nIf they can be not equal, when entering sigtramp_g0, we are using the original register value (restored from R17). It does a save_g to oldg, so now the TLS is updated to oldg. Is this what we want?",
      "revId": "31c5669c73487661b88cbe3aa0a19822cead14a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "627b60fa_e862797c",
        "filename": "src/runtime/sys_windows_arm64.s",
        "patchSetId": 7
      },
      "lineNbr": 193,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-18T15:14:50Z",
      "side": 1,
      "message": "Allocated 6 words but only 3 used?",
      "revId": "31c5669c73487661b88cbe3aa0a19822cead14a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc6a1c76_4c48d6c0",
        "filename": "src/runtime/sys_windows_arm64.s",
        "patchSetId": 7
      },
      "lineNbr": 242,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-18T15:14:50Z",
      "side": 1,
      "message": "ARM64 ?",
      "range": {
        "startLine": 242,
        "startChar": 15,
        "endLine": 242,
        "endChar": 18
      },
      "revId": "31c5669c73487661b88cbe3aa0a19822cead14a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46d34b50_f6a916dc",
        "filename": "src/runtime/sys_windows_arm64.s",
        "patchSetId": 7
      },
      "lineNbr": 245,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-18T15:14:50Z",
      "side": 1,
      "message": "I think I finally follow the logic here. I feel it might be clearer if returntramp is named resumetramp, because it is about resuming execution (presumably jump to sigpanic), not returning to something. The stack pointer in \"stack pointer must lie within system stack limit\", it might be clearer to mention it is the stack pointer in the context (not the SP register).",
      "range": {
        "startLine": 241,
        "startChar": 0,
        "endLine": 245,
        "endChar": 46
      },
      "revId": "31c5669c73487661b88cbe3aa0a19822cead14a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16d0d373_bac95be0",
        "filename": "src/runtime/sys_windows_arm64.s",
        "patchSetId": 7
      },
      "lineNbr": 284,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-18T15:14:50Z",
      "side": 1,
      "message": "What is this for?",
      "revId": "31c5669c73487661b88cbe3aa0a19822cead14a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e443f3c9_146b569e",
        "filename": "src/runtime/sys_windows_arm64.s",
        "patchSetId": 7
      },
      "lineNbr": 373,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-18T15:14:50Z",
      "side": 1,
      "message": "arm64",
      "range": {
        "startLine": 373,
        "startChar": 50,
        "endLine": 373,
        "endChar": 53
      },
      "revId": "31c5669c73487661b88cbe3aa0a19822cead14a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "829e2345_59836b65",
        "filename": "src/runtime/sys_windows_arm64.s",
        "patchSetId": 7
      },
      "lineNbr": 474,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-02-18T15:14:50Z",
      "side": 1,
      "message": "Are these addresses correct on ARM64 as well?",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 474,
        "endChar": 31
      },
      "revId": "31c5669c73487661b88cbe3aa0a19822cead14a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}