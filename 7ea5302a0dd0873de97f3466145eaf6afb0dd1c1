{
  "comments": [
    {
      "key": {
        "uuid": "15073ee6_ac7bcaa5",
        "filename": "src/syscall/syscall_freebsd.go",
        "patchSetId": 1
      },
      "lineNbr": 409,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-03-09T18:39:41Z",
      "side": 1,
      "message": "This doesn\u0027t match the signature of the other implementations of PtraceDetach.  They don\u0027t have a signal argument.",
      "revId": "7ea5302a0dd0873de97f3466145eaf6afb0dd1c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18d0b5d0_c1ce7a41",
        "filename": "src/syscall/syscall_freebsd.go",
        "patchSetId": 1
      },
      "lineNbr": 409,
      "author": {
        "id": 31397
      },
      "writtenOn": "2019-03-13T02:43:50Z",
      "side": 1,
      "message": "Not sure about other implementations, but FreeBSD definitely supports custom signal delivery on PT_DETACH (see e.g. here: https://github.com/freebsd/freebsd/blob/b5e1761489164363eb46c0685098ecf39a38166d/sys/kern/sys_process.c#L1057, or here: https://github.com/freebsd/freebsd/blob/1d6e4247415d264485ee94b59fdbc12e0c566fd0/usr.bin/gcore/elfcore.c#L186).",
      "parentUuid": "15073ee6_ac7bcaa5",
      "revId": "7ea5302a0dd0873de97f3466145eaf6afb0dd1c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c82fff27_3d3e636c",
        "filename": "src/syscall/syscall_freebsd.go",
        "patchSetId": 1
      },
      "lineNbr": 437,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-03-09T18:39:41Z",
      "side": 1,
      "message": "What about PtracePeekText, PtracePeekData, PtracePokeText, PtracePokeData?",
      "revId": "7ea5302a0dd0873de97f3466145eaf6afb0dd1c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cbfe62f_0f27ad70",
        "filename": "src/syscall/syscall_freebsd.go",
        "patchSetId": 1
      },
      "lineNbr": 437,
      "author": {
        "id": 31397
      },
      "writtenOn": "2019-03-13T02:43:50Z",
      "side": 1,
      "message": "Sure, the preferred way to implement these 4 is through the single flexible PT_IO call. Do you think these 4 names should be exported anyway? Thanks.",
      "parentUuid": "c82fff27_3d3e636c",
      "revId": "7ea5302a0dd0873de97f3466145eaf6afb0dd1c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3f503c8_5cc408ed",
        "filename": "src/syscall/types_freebsd.go",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-03-09T18:39:41Z",
      "side": 1,
      "message": "You need to regenerate the three ztypes_freebsd_CPU.go files.",
      "revId": "7ea5302a0dd0873de97f3466145eaf6afb0dd1c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ed813c0_48556876",
        "filename": "src/syscall/types_freebsd.go",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 31397
      },
      "writtenOn": "2019-03-13T02:43:50Z",
      "side": 1,
      "message": "If I use latest FreeBSD 12, wouldn\u0027t it break compatibility for users on older releases?",
      "parentUuid": "d3f503c8_5cc408ed",
      "revId": "7ea5302a0dd0873de97f3466145eaf6afb0dd1c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}