{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f78a7d06_763bfdb6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-22T20:55:01Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d170c171b",
      "tag": "autogenerated:trybots~beginning",
      "revId": "170c171b2d86792392be24a047086c1ac7361424",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc9fc491_d44b749b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-22T21:03:25Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d170c171b\nFailed on linux-arm-aws: https://storage.googleapis.com/go-build-log/170c171b/linux-arm-aws_32fce65d.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "f78a7d06_763bfdb6",
      "tag": "autogenerated:trybots~progress",
      "revId": "170c171b2d86792392be24a047086c1ac7361424",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8042021c_64333a4a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-22T21:06:56Z",
      "side": 1,
      "message": "5 of 28 TryBots failed.\nFailed on linux-arm-aws: https://storage.googleapis.com/go-build-log/170c171b/linux-arm-aws_32fce65d.log\nFailed on linux-386: https://storage.googleapis.com/go-build-log/170c171b/linux-386_65bf3685.log\nFailed on windows-386-2012: https://storage.googleapis.com/go-build-log/170c171b/windows-386-2012_a3664334.log\nFailed on windows-386-2008: https://storage.googleapis.com/go-build-log/170c171b/windows-386-2008_8659c58a.log\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/170c171b/linux-amd64-race_b570271a.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "f78a7d06_763bfdb6",
      "tag": "autogenerated:trybots~failed",
      "revId": "170c171b2d86792392be24a047086c1ac7361424",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7579aff3_a1c7ff49",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 1
      },
      "lineNbr": 859,
      "author": {
        "id": 9210
      },
      "writtenOn": "2022-02-22T21:34:08Z",
      "side": 1,
      "message": "The race annotations have been giving me trouble. I think part of the problem is using the address of the labels field of runtime.g, which is recycled for new goroutines without (as far as I can tell) going through racemalloc/racefree. But that hasn\u0027t been enough to make it work, and I\u0027d rather not guess.",
      "revId": "170c171b2d86792392be24a047086c1ac7361424",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e62afc9a_c1609d3b",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 1
      },
      "lineNbr": 920,
      "author": {
        "id": 9210
      },
      "writtenOn": "2022-02-22T21:34:08Z",
      "side": 1,
      "message": "Using systemstack here seems to work, though the reason the existing code had to use it is no longer directly relevant.",
      "range": {
        "startLine": 915,
        "startChar": 0,
        "endLine": 920,
        "endChar": 97
      },
      "revId": "170c171b2d86792392be24a047086c1ac7361424",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6207a844_a1daab4a",
        "filename": "src/runtime/proc.go",
        "patchSetId": 1
      },
      "lineNbr": 2520,
      "author": {
        "id": 9210
      },
      "writtenOn": "2022-02-22T21:34:08Z",
      "side": 1,
      "message": "Is the overhead of another bool check in runtime.execute acceptable? Or should the checks for this and trace.enabled be guarded by an overall \"no slow paths are enabled\" check?",
      "revId": "170c171b2d86792392be24a047086c1ac7361424",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}