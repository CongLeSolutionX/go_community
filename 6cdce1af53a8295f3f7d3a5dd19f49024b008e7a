{
  "comments": [
    {
      "key": {
        "uuid": "cd158a84_2838e38b",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 867,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-07-24T05:17:54Z",
      "side": 1,
      "message": "Best error message of the day.",
      "revId": "6cdce1af53a8295f3f7d3a5dd19f49024b008e7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd158a84_6832dbab",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 873,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-07-24T05:17:54Z",
      "side": 1,
      "message": "Can we use SExt or SignExt so that this doesn\u0027t read \"sext\"?",
      "revId": "6cdce1af53a8295f3f7d3a5dd19f49024b008e7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd158a84_e8252b5d",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 885,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-07-24T05:17:54Z",
      "side": 1,
      "message": "Here and elsewhere, is %T what you want? I think you want %s or %v.",
      "revId": "6cdce1af53a8295f3f7d3a5dd19f49024b008e7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd158a84_2867439c",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 891,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-07-24T05:17:54Z",
      "side": 1,
      "message": "Match whatever we do with Sext.",
      "revId": "6cdce1af53a8295f3f7d3a5dd19f49024b008e7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd882a39_6d76954f",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 1944,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-07-24T05:17:54Z",
      "side": 1,
      "message": "return nil\n\n(Unimplemented does not stop execution)",
      "revId": "6cdce1af53a8295f3f7d3a5dd19f49024b008e7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd882a39_4de3994c",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64.rules",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-07-24T05:17:54Z",
      "side": 1,
      "message": "What will the rule for shift-by-uint8 look like? Go ahead and add 1, 2, and 4?",
      "revId": "6cdce1af53a8295f3f7d3a5dd19f49024b008e7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2db8e63c_b07cb8e1",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64.rules",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-07-28T17:20:25Z",
      "side": 1,
      "message": "It will look similar except it will use a CMPBconst instead of a CMPQconst.  The former doesn\u0027t exist yet, and as this change is big enough as-is I\u0027d like to postpone that to a separate CL.",
      "parentUuid": "cd882a39_4de3994c",
      "revId": "6cdce1af53a8295f3f7d3a5dd19f49024b008e7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd882a39_2d056d85",
        "filename": "src/cmd/compile/internal/ssa/gen/genericOps.go",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-07-24T05:17:54Z",
      "side": 1,
      "message": "What is the motivation for this? I worry that having to remember to mask every time I use AuxInt will be a source of annoyance and/or bugs. If we are going to keep this, can we add a method to fetch the AuxInt that inspects the type\u0027s size and does the appropriate masking for us?",
      "revId": "6cdce1af53a8295f3f7d3a5dd19f49024b008e7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2db8e63c_13c4ae83",
        "filename": "src/cmd/compile/internal/ssa/gen/genericOps.go",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-07-28T17:20:25Z",
      "side": 1,
      "message": "Mostly just to match the runtime invariant.  If we keep only the low N bits, we would need to decide whether we keep them signed or unsigned in the AuxInt field, so there is ambiguity either way.\n\nOr maybe we should have Const8, Const8U, ... opcodes?",
      "parentUuid": "cd882a39_2d056d85",
      "revId": "6cdce1af53a8295f3f7d3a5dd19f49024b008e7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd882a39_6dff75db",
        "filename": "src/cmd/compile/internal/ssa/gen/genericOps.go",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-07-24T05:17:54Z",
      "side": 1,
      "message": "Conversions: signed extensions, zero (unsigned) extensions, truncation, no-op\n\nOr some such",
      "revId": "6cdce1af53a8295f3f7d3a5dd19f49024b008e7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}