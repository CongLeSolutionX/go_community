{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8f297b7a_5326a889",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-06-13T17:06:14Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d1d0a474c\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1d0a474c0e9e02e1ba2676e2afd9b204efde447a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0799002_5178c9af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-06-13T17:18:38Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "8f297b7a_5326a889",
      "tag": "autogenerated:trybots~happy",
      "revId": "1d0a474c0e9e02e1ba2676e2afd9b204efde447a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4f1deb2_c7a74eab",
        "filename": "src/cmd/compile/internal/noder/codes.go",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 14665
      },
      "writtenOn": "2022-06-13T17:18:55Z",
      "side": 1,
      "message": "expression?",
      "range": {
        "startLine": 33,
        "startChar": 34,
        "endLine": 33,
        "endChar": 43
      },
      "revId": "1d0a474c0e9e02e1ba2676e2afd9b204efde447a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0708d23_63b0b3d4",
        "filename": "src/cmd/compile/internal/noder/codes.go",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-06-13T17:38:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4f1deb2_c7a74eab",
      "range": {
        "startLine": 33,
        "startChar": 34,
        "endLine": 33,
        "endChar": 43
      },
      "revId": "1d0a474c0e9e02e1ba2676e2afd9b204efde447a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5e8739c_8b0021c2",
        "filename": "src/cmd/compile/internal/noder/reader.go",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 14665
      },
      "writtenOn": "2022-06-13T17:18:55Z",
      "side": 1,
      "message": "Heh, this is what actually I found when trying to fix inline.go in #53058. This function is unused since we remove quirks mode.",
      "range": {
        "startLine": 263,
        "startChar": 17,
        "endLine": 263,
        "endChar": 24
      },
      "revId": "1d0a474c0e9e02e1ba2676e2afd9b204efde447a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4acd1d12_70ed3174",
        "filename": "src/cmd/compile/internal/noder/reader.go",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-06-13T17:38:17Z",
      "side": 1,
      "message": "Done, removed.",
      "parentUuid": "c5e8739c_8b0021c2",
      "range": {
        "startLine": 263,
        "startChar": 17,
        "endLine": 263,
        "endChar": 24
      },
      "revId": "1d0a474c0e9e02e1ba2676e2afd9b204efde447a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7df48407_98b85e35",
        "filename": "src/cmd/compile/internal/noder/reader.go",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 14665
      },
      "writtenOn": "2022-06-13T17:42:48Z",
      "side": 1,
      "message": "Hmm, sorry to hijack you here, but should we update inline.go to reflect new diagnostic message line number?\n\nIf we\u0027re going to keep 2 modes: unified and non-unified IR, when we merge dev.unified to master, then keeping the tests happy in 2 modes can be tricky.",
      "parentUuid": "4acd1d12_70ed3174",
      "range": {
        "startLine": 263,
        "startChar": 17,
        "endLine": 263,
        "endChar": 24
      },
      "revId": "1d0a474c0e9e02e1ba2676e2afd9b204efde447a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6f09e70_d36e799f",
        "filename": "src/cmd/compile/internal/noder/reader.go",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-06-13T18:04:59Z",
      "side": 1,
      "message": "We want to keep nounified working on dev.unified too, and up through Go 1.20. There\u0027s the linux-amd64-nounified builder to make sure this works, even if/when we switch unified to on by default.\n\nI haven\u0027t looked into the test/inline.go failure, but I think it\u0027s just a line number change in the -m diagnostics? I\u0027m not too worried about that, as long as the line numbers are reasonable in all cases.\n\nIf we want to just codify the existing behavior, what might be easiest is to just split the failing test case out into separate test/inline_unified.go and test/inline_nounified.go tests (and use `-goexperiment unified` and `-goexperiment nounified`) so we can put the `// ERROR` expectations on different lines.",
      "parentUuid": "7df48407_98b85e35",
      "range": {
        "startLine": 263,
        "startChar": 17,
        "endLine": 263,
        "endChar": 24
      },
      "revId": "1d0a474c0e9e02e1ba2676e2afd9b204efde447a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}