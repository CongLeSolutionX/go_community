{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "76f48ee5_ffeb8f6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5781
      },
      "writtenOn": "2022-07-30T17:48:06Z",
      "side": 1,
      "message": "TRY\u003dfreebsd-386,freebsd-amd64,freebsd-arm,freebad-arm64",
      "revId": "9eb1e03d14397a451214b9cea658f59e6183aeda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2b60cf0_653ffe10",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-07-30T17:48:25Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d9eb1e03d\nNote that builder freebsd-arm-paulzhol has known issues:\n\thttps://go.dev/issue/52679\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "9eb1e03d14397a451214b9cea658f59e6183aeda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e2f12af_69609fef",
        "filename": "src/os/file_unix.go",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-07-30T18:32:01Z",
      "side": 1,
      "message": "With the current code I don\u0027t think this will work well in general.  The first call to Init will have set the runtimeCtx field, and it won\u0027t be cleared, so the code in internal/poll will consider the descriptor to be pollable.",
      "revId": "9eb1e03d14397a451214b9cea658f59e6183aeda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d16de929_604a9846",
        "filename": "src/os/file_unix.go",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 5781
      },
      "writtenOn": "2022-07-30T18:41:48Z",
      "side": 1,
      "message": "`FD.Init()` has this comment\n\u003e Init initializes the FD. ...\n\u003e This can be called multiple times on a single FD.\nSo I figured it was safe, but looking at `netpollclose` in `runtime/netpoll_kqueue.go`, it does nothing. Expecting the file descriptor to be closed instead.\n\nCalling `f.pfd.Init(\"file\", false)` still has the benefit of not blocking on `FD.Close()`:\n```\nif fd.isBlocking \u003d\u003d 0 {\n    runtime_Semacquire(\u0026fd.csema)\n}\n```\nShould I drop it+update the FD.Init comment?",
      "parentUuid": "7e2f12af_69609fef",
      "revId": "9eb1e03d14397a451214b9cea658f59e6183aeda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b19ea1ed_354b0c9a",
        "filename": "src/os/file_unix.go",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-07-30T20:09:31Z",
      "side": 1,
      "message": "I think the comment meant to imply that it was fine to call Init multiple times with the same arguments.  When we call it with pollable \u003d\u003d false, if pd.pollable() already returns true, we should call pd.close.  Even when using kqueue that will at least release the pollDesc.",
      "parentUuid": "d16de929_604a9846",
      "revId": "9eb1e03d14397a451214b9cea658f59e6183aeda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}