{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c51473b4_e0762c4c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13640
      },
      "writtenOn": "2022-08-09T08:18:02Z",
      "side": 1,
      "message": "TRY\u003dfreebsd-arm64,openbsd-arm64",
      "revId": "237294ac8d04ed2505380b0c548580d0947b0d86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5690729_983e0c36",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-09T08:18:18Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d237294ac\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "237294ac8d04ed2505380b0c548580d0947b0d86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "248ffb57_2c8f740c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-09T10:58:07Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* freebsd-arm64-dmgk\n* openbsd-arm64-jsing\n",
      "parentUuid": "e5690729_983e0c36",
      "tag": "autogenerated:trybots~happy",
      "revId": "237294ac8d04ed2505380b0c548580d0947b0d86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e1b32c4_9911f585",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5781
      },
      "writtenOn": "2022-08-09T12:48:16Z",
      "side": 1,
      "message": "This change looks fine, but I\u0027d rather we avoid the duplication of cpu_arm64_freebsd.go and cpu_arm64_openbsd.go. They are identical other then the the retrieval of the ID_AA64ISAR0_EL1 register.\nMaybe we can move `TEXT Â·getisar0(SB)` behind a build tags for Linux+FreeBSD which are the ones which seem to trap and emulate this privileged instruction (or even completely avoid it on FreeBSD, and use AT_HWCAP2 like we do on ARMv7).",
      "revId": "237294ac8d04ed2505380b0c548580d0947b0d86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}