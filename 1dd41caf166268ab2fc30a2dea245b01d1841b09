{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cca45fa9_6ef23131",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-06-08T03:13:18Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "11e43f68_510b6df2",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1dd41caf166268ab2fc30a2dea245b01d1841b09",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2b392f7_c7c29e2b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-06-08T03:13:18Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d1dd41caf\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1dd41caf166268ab2fc30a2dea245b01d1841b09",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6bdb175_b2d91216",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-06-08T03:23:36Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "d2b392f7_c7c29e2b",
      "tag": "autogenerated:trybots~happy",
      "revId": "1dd41caf166268ab2fc30a2dea245b01d1841b09",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b707234_4feda821",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-06-08T19:59:25Z",
      "side": 1,
      "message": "Thanks for preparing this CL, Cuong.\n\nI don\u0027t understand how it addresses the issue though. The new code doesn\u0027t appear functionally any different than the old code, except that it would panic instead of Fatalf.\n\nDid you verify that all.bash passes when this is backported to release-branch.go1.20?",
      "revId": "1dd41caf166268ab2fc30a2dea245b01d1841b09",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76023f39_1bcf485c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2023-06-09T00:13:49Z",
      "side": 1,
      "message": "\u003e I don\u0027t understand how it addresses the issue though. The new code doesn\u0027t appear functionally any different than the old code, except that it would panic instead of Fatalf.\n\nThe old code only handles int64(v) conversion if t is unsigned. The test case trigger the \"else\" branch, where t is signed (int64) but constant.Int64Val(v) returns not ok, because v is an uint64 instead.\n\nThis CL makes the code handle the signed case first. And if constant.Int64Val(v) is invalid for v, then fallback to the conversion int64(v).\n\n\u003e Did you verify that all.bash passes when this is backported to release-branch.go1.20?\n\nYes.",
      "parentUuid": "2b707234_4feda821",
      "revId": "1dd41caf166268ab2fc30a2dea245b01d1841b09",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7ce5d60_43d618b6",
        "filename": "test/fixedbugs/issue60601.go",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-06-08T20:07:05Z",
      "side": 1,
      "message": "I suggest this test instead, to be somewhat simpler but also more comprehensive:\n\n```\nfunc f[T any]() int64 {\n\treturn 1 \u003c\u003c unsafe.Sizeof(*new(T))\n}\n\nfunc g() {\n\tf[[62]byte]()\n\tf[[63]byte]()\n\tf[[64]byte]()\n\tf[[100]byte]()\n\tf[[1e6]byte]()\n}\n```",
      "revId": "1dd41caf166268ab2fc30a2dea245b01d1841b09",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}