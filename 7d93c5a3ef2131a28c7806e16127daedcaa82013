{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8f614b2d_7f53f812",
        "filename": "src/unsafe/unsafe.go",
        "patchSetId": 15
      },
      "lineNbr": 243,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-08-30T20:48:41Z",
      "side": 1,
      "message": "\"s\" should be \"slice\", the name of the parameter. Or make the parameter\u0027s name be \"s\".",
      "range": {
        "startLine": 243,
        "startChar": 58,
        "endLine": 243,
        "endChar": 59
      },
      "revId": "7d93c5a3ef2131a28c7806e16127daedcaa82013",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6472e07c_c7592d82",
        "filename": "src/unsafe/unsafe.go",
        "patchSetId": 15
      },
      "lineNbr": 245,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-08-30T20:48:41Z",
      "side": 1,
      "message": "The second of these lines subsumes the first, so maybe we don\u0027t need the first one?",
      "range": {
        "startLine": 244,
        "startChar": 0,
        "endLine": 245,
        "endChar": 56
      },
      "revId": "7d93c5a3ef2131a28c7806e16127daedcaa82013",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e278ac6_12679a58",
        "filename": "src/unsafe/unsafe.go",
        "patchSetId": 15
      },
      "lineNbr": 248,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-08-30T20:48:41Z",
      "side": 1,
      "message": "I\u0027m not sure what this means. I suspect it just means \u0026s[:1][0], pretending that the capacity is at least 1.\n\nMaybe if (s !\u003d nil \u0026\u0026 cap(s)\u003d\u003d0) we just say the return value is unspecified, and leave it at that.\n\nMaybe we should guarantee that SliceData(Slice(ptr, 0)) \u003d\u003d ptr, though.",
      "range": {
        "startLine": 248,
        "startChar": 3,
        "endLine": 248,
        "endChar": 49
      },
      "revId": "7d93c5a3ef2131a28c7806e16127daedcaa82013",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea66fe52_2bef6d90",
        "filename": "src/unsafe/unsafe.go",
        "patchSetId": 15
      },
      "lineNbr": 266,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-08-30T20:48:41Z",
      "side": 1,
      "message": "Add: The caller must not write to any of the underlying bytes, otherwise the program may behave unpredictably.",
      "revId": "7d93c5a3ef2131a28c7806e16127daedcaa82013",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}