{
  "comments": [
    {
      "key": {
        "uuid": "39be6891_095aa97b",
        "filename": "src/math/big/ftoa.go",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 5210
      },
      "writtenOn": "2015-06-02T06:51:59Z",
      "side": 0,
      "message": "This is correct and intentional. Please leave as is. The bug is below.",
      "revId": "0f27b915228ff661aeaf823fa90db023765cbe5d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39be6891_295f6d6c",
        "filename": "src/math/big/ftoa.go",
        "patchSetId": 1
      },
      "lineNbr": 292,
      "author": {
        "id": 5210
      },
      "writtenOn": "2015-06-02T06:51:59Z",
      "side": 0,
      "message": "s/x.mant/m/\n\nThat\u0027s the correct fix.\n\n(Trimming on the word level above is much faster than converting those 0 words to hex first and then cut them off again.)",
      "range": {
        "startLine": 292,
        "startChar": 37,
        "endLine": 292,
        "endChar": 43
      },
      "revId": "0f27b915228ff661aeaf823fa90db023765cbe5d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9de90f5_325fce6c",
        "filename": "src/math/big/ftoa.go",
        "patchSetId": 1
      },
      "lineNbr": 292,
      "author": {
        "id": 5150
      },
      "writtenOn": "2015-06-03T02:05:48Z",
      "side": 0,
      "message": "Thanks for your comment Robert. I\u0027m uncomfortable with this as I don\u0027t think I understand this code well enough. \n\nThe loop looks like it is trimming leading zeros, as it is proceeding from the left, whereas line 292 trims trailing zeros. \n\nIs the strings.TrimRight still necessary if line 286 has done its job?",
      "parentUuid": "39be6891_295f6d6c",
      "range": {
        "startLine": 292,
        "startChar": 37,
        "endLine": 292,
        "endChar": 43
      },
      "revId": "0f27b915228ff661aeaf823fa90db023765cbe5d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_a7ca993b",
        "filename": "src/math/big/ftoa.go",
        "patchSetId": 1
      },
      "lineNbr": 292,
      "author": {
        "id": 5210
      },
      "writtenOn": "2015-06-03T18:51:25Z",
      "side": 0,
      "message": "The code on lines 282ff is an optimization, and not strictly needed, but it\u0027s cheap enough to do it. The mantissa is represented in \"little-endian\" format, with the least significant \"digits\" (each of which is 64bit or 32 bit wide) at lower indices. If those \"digits\" are zero they contribute nothing to the number and can always safely be discarded. Discarding them early means those digits don\u0027t have to be converted to decimal first. They are trailing zeros.\n\nThe hexString() method converts the mantissa into a hexadecimal representation which is stored \"big-endian\" format (most significant digit at index 0). Hence trimming is \"from the right\" in this case.\n\nMy suggestion as how to fix it is correct.\n\nI\u0027ve added the optimization w/o changing s/x.mant/m/ - and since it\u0027s an optimization, the code worked either way.\n\nPlease fix as suggested (or abandon and I will take this in with another CL).",
      "parentUuid": "f9de90f5_325fce6c",
      "range": {
        "startLine": 292,
        "startChar": 37,
        "endLine": 292,
        "endChar": 43
      },
      "revId": "0f27b915228ff661aeaf823fa90db023765cbe5d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}