{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2626cee6_266fcb87",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-27T13:22:35Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d7fcc0584",
      "tag": "autogenerated:trybots~beginning",
      "revId": "7fcc0584436224c8ddb34be4700cb379f72f5aa0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5571a7e3_3103c29c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-08-27T13:35:36Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "2626cee6_266fcb87",
      "tag": "autogenerated:trybots~happy",
      "revId": "7fcc0584436224c8ddb34be4700cb379f72f5aa0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c4ecc57_ce863f9e",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 2
      },
      "lineNbr": 714,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-08-27T22:14:52Z",
      "side": 1,
      "message": "Since you\u0027ve been looking at this function, do you mind adding some comments explaining what\u0027s going on? In particular, I can\u0027t remember what the rationale was for \"elem.Alignment() \u003d\u003d 1 \u0026\u0026 (size \u003d\u003d 0 || size \u003d\u003d 1 || count \u003d\u003d nil)\".\n\nBut if you\u0027re as unsure as I am, don\u0027t worry about it.",
      "revId": "7fcc0584436224c8ddb34be4700cb379f72f5aa0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba7e61d6_5012d669",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 2
      },
      "lineNbr": 732,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-08-27T22:14:52Z",
      "side": 1,
      "message": "I don\u0027t think we want to call \u0027s.expr(n.X)\u0027 in here: that could result in it being evaluated twice. I think we want the caller to pass in the *ssa.Value for the pointer instead.\n\nI also think we want to insert conversions to ensure this is an unsafe.Pointer argument and that count is uintptr, or whatever the appropriate types are.",
      "revId": "7fcc0584436224c8ddb34be4700cb379f72f5aa0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97c89853_3d741a5d",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 2
      },
      "lineNbr": 2354,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-08-28T00:42:10Z",
      "side": 1,
      "message": "Is there a chance that subexpressions of \u0027n\u0027 require instrumentation, but this will suppress them? E.g., for something like `(*T)(unsafe.Pointer((*U)(unsafe.Pointer(p)))` do we still correctly emit both checkptr calls?",
      "revId": "7fcc0584436224c8ddb34be4700cb379f72f5aa0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "660f81a7_df024e1f",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 2
      },
      "lineNbr": 2354,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-08-28T00:55:36Z",
      "side": 1,
      "message": "This is only called for slice expression, but sounds like you\u0027re right, this will suppress them for `(*[N]T)(unsafe.Pointer((*U)(unsafe.Pointer(p)))[:n:n]`",
      "parentUuid": "97c89853_3d741a5d",
      "revId": "7fcc0584436224c8ddb34be4700cb379f72f5aa0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1db0ab13_a1a069cc",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 2
      },
      "lineNbr": 2509,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-08-27T22:14:52Z",
      "side": 1,
      "message": "I\u0027d probably push the s.checkPtrAlignment call in here, since it shouldn\u0027t apply to any of the other conversions anyway.",
      "revId": "7fcc0584436224c8ddb34be4700cb379f72f5aa0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6628b576_ce447363",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 2
      },
      "lineNbr": 3127,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-08-27T22:14:52Z",
      "side": 1,
      "message": "Add a comment about doing this after the s.slice operation, so that we avoid the false positive checkptr failure.",
      "revId": "7fcc0584436224c8ddb34be4700cb379f72f5aa0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}