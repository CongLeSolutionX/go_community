{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "66baf0d7_e3fbd6c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-21T18:13:11Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d775730dc",
      "tag": "autogenerated:trybots~beginning",
      "revId": "775730dcf7ac4eb498516c83134950ed2252bace",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46f08352_c800b17e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-21T19:12:29Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "66baf0d7_e3fbd6c5",
      "tag": "autogenerated:trybots~happy",
      "revId": "775730dcf7ac4eb498516c83134950ed2252bace",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f330e70_58cfc349",
        "filename": "src/net/http/httputil/reverseproxy.go",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 28759
      },
      "writtenOn": "2021-05-24T17:22:22Z",
      "side": 1,
      "message": "Is it necessary that we access outreq.Header by index, instead of by calling outreq.Header.Get(h) for this security fix, or is it just a refactor cleanup? If the latter, I\u0027d vote to revert back to the old behavior and keep this as close to the original as possible. i.e.\n\n  if hv :\u003d outreq.Header.Get(h); h \u003d\u003d \"Te\" \u0026\u0026 hv \u003d\u003d \"trailers\" {\n    // ...\n    continue\n  }",
      "range": {
        "startLine": 256,
        "startChar": 17,
        "endLine": 256,
        "endChar": 27
      },
      "revId": "775730dcf7ac4eb498516c83134950ed2252bace",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54a3d753_9555e5ee",
        "filename": "src/net/http/httputil/reverseproxy_test.go",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 28759
      },
      "writtenOn": "2021-05-24T17:22:22Z",
      "side": 1,
      "message": "nit: maybe use a string var here and throughout, instead, ie. \n\n    shouldBeDeleted :\u003d \"should be deleted\"",
      "range": {
        "startLine": 256,
        "startChar": 33,
        "endLine": 256,
        "endChar": 52
      },
      "revId": "775730dcf7ac4eb498516c83134950ed2252bace",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f2dff6f_699fc8a8",
        "filename": "src/net/http/httputil/reverseproxy_test.go",
        "patchSetId": 1
      },
      "lineNbr": 273,
      "author": {
        "id": 28759
      },
      "writtenOn": "2021-05-24T17:22:22Z",
      "side": 1,
      "message": "check the error?",
      "range": {
        "startLine": 273,
        "startChar": 9,
        "endLine": 273,
        "endChar": 10
      },
      "revId": "775730dcf7ac4eb498516c83134950ed2252bace",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}