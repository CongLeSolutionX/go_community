{
  "comments": [
    {
      "key": {
        "uuid": "6c4d0574_71bc43d3",
        "filename": "src/runtime/os_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 282,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-01T21:12:11Z",
      "side": 1,
      "message": "This isn\u0027t safe, since this could race with a change to gp.m.\n\nBut why are we looping over the Gs instead of the Ms? Looping over allm would seem more natural for this, and would eliminate the race on gp.m.",
      "revId": "465e7147ccd633d44b21eb5415e5a2f8bd3f9514",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be902d0c_a22e378d",
        "filename": "src/runtime/os_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 663,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-01T21:12:11Z",
      "side": 1,
      "message": "If an M isn\u0027t semasleeping when the system goes into low-power mode, is the first semasleep after the system wakes up going to immediately loop around because the resumesema will be left in a signaled state? I don\u0027t think that\u0027s really a problem, given how relatively rare suspending is. Just making sure I understand.",
      "revId": "465e7147ccd633d44b21eb5415e5a2f8bd3f9514",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}