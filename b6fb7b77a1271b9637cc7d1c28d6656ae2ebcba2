{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ad52bd56_d15a56d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-05-15T09:15:13Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003db6fb7b77\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "b6fb7b77a1271b9637cc7d1c28d6656ae2ebcba2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da78afdc_7a830cb0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-05-15T09:28:47Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "ad52bd56_d15a56d0",
      "tag": "autogenerated:trybots~happy",
      "revId": "b6fb7b77a1271b9637cc7d1c28d6656ae2ebcba2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7a3256f_9c36b081",
        "filename": "src/cmd/compile/internal/arm64/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 834,
      "author": {
        "id": 5167
      },
      "writtenOn": "2024-05-17T18:29:46Z",
      "side": 1,
      "message": "It\u0027s a little odd that this case \"defaults\" to 32 bits and checks for 8 and 64, but the case above defaults to 64 bits and checks for 8 and 32.",
      "revId": "b6fb7b77a1271b9637cc7d1c28d6656ae2ebcba2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d45c5a9_c5be8b50",
        "filename": "src/cmd/compile/internal/ssa/_gen/genericOps.go",
        "patchSetId": 5
      },
      "lineNbr": 620,
      "author": {
        "id": 5167
      },
      "writtenOn": "2024-05-17T18:29:46Z",
      "side": 1,
      "message": "Can we update this comment to explain what these variants actually do, even if it\u0027s ARM64-only? If I understand correctly, it\u0027s something like\n\n// Atomic operation variants\n// These variants have the same semantics as above atomic operations.\n// On ARM64, these are used when the LSE hardware feature is available (either known at compile time or detected at runtime). If LSE is not available, then we use the basic atomic operations instead.\n// These are not currently used on any other platform.",
      "revId": "b6fb7b77a1271b9637cc7d1c28d6656ae2ebcba2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf0770aa_c5b6c87b",
        "filename": "src/cmd/compile/internal/ssagen/ssa.go",
        "patchSetId": 5
      },
      "lineNbr": 5036,
      "author": {
        "id": 5167
      },
      "writtenOn": "2024-05-17T18:29:46Z",
      "side": 1,
      "message": "Maybe this should be a separate CL, but shouldn\u0027t we alias all of the And/Or operations into sync/atomic here?",
      "revId": "b6fb7b77a1271b9637cc7d1c28d6656ae2ebcba2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}