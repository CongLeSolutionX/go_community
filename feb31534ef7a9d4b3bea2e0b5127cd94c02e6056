{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "02c37c26_b40e8d93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-17T00:22:40Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dfeb31534\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "feb31534ef7a9d4b3bea2e0b5127cd94c02e6056",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a2cc89e_b1c7d2b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-17T00:36:02Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "02c37c26_b40e8d93",
      "tag": "autogenerated:trybots~happy",
      "revId": "feb31534ef7a9d4b3bea2e0b5127cd94c02e6056",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cdc3a1b9_682c4647",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2022-11-17T01:40:41Z",
      "side": 1,
      "message": "FWIW, I\u0027m not yet convinced this is a real issue meriting a backwards-incompatible language change. I think it should be discussed further on the issue first.",
      "revId": "feb31534ef7a9d4b3bea2e0b5127cd94c02e6056",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe4fede3_fc17e167",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-11-17T04:11:27Z",
      "side": 1,
      "message": "Understood. Hence the flag to disable the code quickly.\n\nOne of the invariants I believe we should not break is that it should be possible to write any code that works with type inference also without type inference. That ensures that type inference is simply a convenience, and not a fundamentally new capability. As is, this is clearly not the case.\n\nI believe this is a bug that we need to fix.",
      "parentUuid": "cdc3a1b9_682c4647",
      "revId": "feb31534ef7a9d4b3bea2e0b5127cd94c02e6056",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "493b1f6b_a7904eb9",
        "filename": "src/cmd/compile/internal/types2/infer.go",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 31647
      },
      "writtenOn": "2022-11-17T00:42:19Z",
      "side": 1,
      "message": "Why are we formatting the position here?",
      "range": {
        "startLine": 73,
        "startChar": 84,
        "endLine": 73,
        "endChar": 89
      },
      "revId": "feb31534ef7a9d4b3bea2e0b5127cd94c02e6056",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5086993b_b8b19188",
        "filename": "src/cmd/compile/internal/types2/infer.go",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-11-17T04:11:27Z",
      "side": 1,
      "message": "Because we want to identify the type parameter in question (they frequently have similar names). See line 345 for another example.",
      "parentUuid": "493b1f6b_a7904eb9",
      "range": {
        "startLine": 73,
        "startChar": 84,
        "endLine": 73,
        "endChar": 89
      },
      "revId": "feb31534ef7a9d4b3bea2e0b5127cd94c02e6056",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}