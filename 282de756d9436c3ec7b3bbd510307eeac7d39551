{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6ab66a05_4dc93fc1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 28783
      },
      "writtenOn": "2020-10-30T00:20:49Z",
      "side": 1,
      "message": "Hi Keith/Matt:  let me know if any/all of this seems worth checking in.  Feel free to tell me to drop any specific change, if not useful or too verbose.  I found the fmt.go changes useful for debugging export/import/inlining/closures/functions, etc.",
      "revId": "282de756d9436c3ec7b3bbd510307eeac7d39551",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4073066_a8a112ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-30T05:43:36Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "282de756d9436c3ec7b3bbd510307eeac7d39551",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c2ab876_98b3267b",
        "filename": "src/cmd/compile/internal/gc/fmt.go",
        "patchSetId": 1
      },
      "lineNbr": 1730,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-30T05:43:36Z",
      "side": 1,
      "message": "I\u0027d use just \"%v\" with the n.Func.Closure.Func.Nname directly.",
      "range": {
        "startLine": 1730,
        "startChar": 27,
        "endLine": 1730,
        "endChar": 109
      },
      "revId": "282de756d9436c3ec7b3bbd510307eeac7d39551",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae2985dd_2eb63c5e",
        "filename": "src/cmd/compile/internal/gc/fmt.go",
        "patchSetId": 1
      },
      "lineNbr": 1752,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-30T05:43:36Z",
      "side": 1,
      "message": "nit: This is redundant with \"len(n.Func.Dcl) !\u003d 0\"",
      "range": {
        "startLine": 1752,
        "startChar": 22,
        "endLine": 1752,
        "endChar": 42
      },
      "revId": "282de756d9436c3ec7b3bbd510307eeac7d39551",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6761140_d664a52c",
        "filename": "src/cmd/compile/internal/gc/syntax.go",
        "patchSetId": 1
      },
      "lineNbr": 776,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-30T05:43:36Z",
      "side": 1,
      "message": "I\u0027d probably leave this as \"Type\". Most compiler code should be using Type instead of Func.Ntype.",
      "range": {
        "startLine": 776,
        "startChar": 20,
        "endLine": 776,
        "endChar": 30
      },
      "revId": "282de756d9436c3ec7b3bbd510307eeac7d39551",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dc4b8b3_25c6dd95",
        "filename": "src/cmd/compile/internal/gc/syntax.go",
        "patchSetId": 1
      },
      "lineNbr": 869,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-30T05:43:36Z",
      "side": 1,
      "message": "I don\u0027t think this is true? IIRC, for type switches, List will consist of OLITERAL (for \"nil\") or OTYPE (for type expressions) nodes.",
      "range": {
        "startLine": 869,
        "startChar": 19,
        "endLine": 869,
        "endChar": 50
      },
      "revId": "282de756d9436c3ec7b3bbd510307eeac7d39551",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3a39b41_cb7ed498",
        "filename": "src/cmd/compile/internal/gc/syntax.go",
        "patchSetId": 1
      },
      "lineNbr": 896,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-30T05:43:36Z",
      "side": 1,
      "message": "nit: This is pre-existing, but this should actually be \":\u003d\", not \"\u003d\".",
      "range": {
        "startLine": 896,
        "startChar": 19,
        "endLine": 896,
        "endChar": 20
      },
      "revId": "282de756d9436c3ec7b3bbd510307eeac7d39551",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4459d83_75b8cb7a",
        "filename": "src/cmd/compile/internal/gc/syntax.go",
        "patchSetId": 1
      },
      "lineNbr": 905,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-30T05:43:36Z",
      "side": 1,
      "message": "nit: Saying \"type\" and \"types\" here makes me think these would be type expressions, but actually Left/List/Rlist will consist of ODCLFIELD nodes.\n\nI\u0027d probably say: \"Left is receiver field; List is param fields; Rlist is result fields.\"",
      "range": {
        "startLine": 905,
        "startChar": 38,
        "endLine": 905,
        "endChar": 42
      },
      "revId": "282de756d9436c3ec7b3bbd510307eeac7d39551",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}