{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "246e824c_3bd9c391",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-19T13:33:14Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d212dd65c\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "212dd65cf1bced8c622ccbf9439a9dc50b9be147",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e087038_336626c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-19T13:43:50Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "246e824c_3bd9c391",
      "tag": "autogenerated:trybots~happy",
      "revId": "212dd65cf1bced8c622ccbf9439a9dc50b9be147",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "719f3f21_191dc2ec",
        "filename": "src/slices/slices.go",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 25206
      },
      "writtenOn": "2023-04-19T14:16:08Z",
      "side": 1,
      "message": "eq(s1[i], s2[i])",
      "revId": "212dd65cf1bced8c622ccbf9439a9dc50b9be147",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "630c0a99_b27c229b",
        "filename": "src/slices/slices.go",
        "patchSetId": 2
      },
      "lineNbr": 187,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-19T13:29:05Z",
      "side": 1,
      "message": "Hmm â€” could you further improve `Compact` for large elements by checking against `s[i-1]` instead of storing `last` as a separate variable?\n\nSeems like that could potentially give a ~2x speedup when the slice is mostly values with differences in early fields.",
      "revId": "212dd65cf1bced8c622ccbf9439a9dc50b9be147",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}