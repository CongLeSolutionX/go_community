{
  "comments": [
    {
      "key": {
        "uuid": "6e79f509_99f4d73c",
        "filename": "src/cmd/go/internal/modget/get.go",
        "patchSetId": 5
      },
      "lineNbr": 360,
      "author": {
        "id": 17092
      },
      "writtenOn": "2019-04-19T23:31:07Z",
      "side": 1,
      "message": "Nit: s/olang/golang/\n\nThis is a really good case to point out.",
      "revId": "c37ebfc606a007ccb4ed48cf2b9d439409ae85e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87f29731_5f558a27",
        "filename": "src/cmd/go/internal/modget/get.go",
        "patchSetId": 5
      },
      "lineNbr": 360,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-04-30T19:12:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e79f509_99f4d73c",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "c37ebfc606a007ccb4ed48cf2b9d439409ae85e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdeaf6ec_9b880753",
        "filename": "src/cmd/go/internal/modload/query.go",
        "patchSetId": 5
      },
      "lineNbr": 226,
      "author": {
        "id": 17092
      },
      "writtenOn": "2019-04-19T23:31:07Z",
      "side": 1,
      "message": "Import and and getQuery would be better places for these checks; ideally it would be a precondition that these kinds of imports aren\u0027t allowed. I\u0027m not sure we\u0027re strict enough to make this a panic though.",
      "revId": "c37ebfc606a007ccb4ed48cf2b9d439409ae85e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7387ac9f_d63017c8",
        "filename": "src/cmd/go/internal/modload/query.go",
        "patchSetId": 5
      },
      "lineNbr": 226,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-04-30T19:12:24Z",
      "side": 1,
      "message": "Maybe, but duplicating the checks in those places would introduce more risk of error-message skew than simply letting the paths fall through unvalidated until they reach a point where it matters.",
      "parentUuid": "bdeaf6ec_9b880753",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "c37ebfc606a007ccb4ed48cf2b9d439409ae85e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12bc8dac_6e005a85",
        "filename": "src/cmd/go/internal/modload/query.go",
        "patchSetId": 5
      },
      "lineNbr": 344,
      "author": {
        "id": 17092
      },
      "writtenOn": "2019-04-19T23:31:07Z",
      "side": 1,
      "message": "Just to confirm: there\u0027s not really any point in rate limiting queries, right? I guess if there were, we would do so in Query itself.\n\nCallers to this are limited to 10 workers, but I guess that\u0027s just to avoid excessive contention when loading the build list.",
      "revId": "c37ebfc606a007ccb4ed48cf2b9d439409ae85e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7fdae53_6ce68cea",
        "filename": "src/cmd/go/internal/modload/query.go",
        "patchSetId": 5
      },
      "lineNbr": 344,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-04-30T19:12:24Z",
      "side": 1,
      "message": "\u003e Just to confirm: there\u0027s not really any point in rate limiting queries, right? I guess if there were, we would do so in Query itself.\n\nIt may be desirable to rate-limit queries, but that arguably belongs at a much lower level.\n\n(For example, if we\u0027re fetching from a proxy, then there is no point in sending it more requests than it can handle at once â€” but that limiting belongs in the modfetch package, or maybe in the HTTP client itself, and may already be provided by some combination of the HTTP2 protocol and the proxy itself.)\n\n\u003e Callers to this are limited to 10 workers, but I guess that\u0027s just to avoid excessive contention when loading the build list.\n\nI had hoped to remove that limit before the code freeze, but then my week got complicated. Want to send a CL? ðŸ™‚",
      "parentUuid": "12bc8dac_6e005a85",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "c37ebfc606a007ccb4ed48cf2b9d439409ae85e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "957768f1_8374a170",
        "filename": "src/cmd/go/internal/modload/query.go",
        "patchSetId": 5
      },
      "lineNbr": 357,
      "author": {
        "id": 17092
      },
      "writtenOn": "2019-04-19T23:31:07Z",
      "side": 1,
      "message": "I think this is redundant with the first case below.",
      "range": {
        "startLine": 357,
        "startChar": 0,
        "endLine": 357,
        "endChar": 28
      },
      "revId": "c37ebfc606a007ccb4ed48cf2b9d439409ae85e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1483190_c0d2dae6",
        "filename": "src/cmd/go/internal/modload/query.go",
        "patchSetId": 5
      },
      "lineNbr": 357,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-04-30T19:12:24Z",
      "side": 1,
      "message": "Oops!",
      "parentUuid": "957768f1_8374a170",
      "range": {
        "startLine": 357,
        "startChar": 0,
        "endLine": 357,
        "endChar": 28
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "c37ebfc606a007ccb4ed48cf2b9d439409ae85e6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}