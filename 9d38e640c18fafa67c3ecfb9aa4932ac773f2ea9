{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7ce6d515_85aea8de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-31T02:37:05Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d9d38e640\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "9d38e640c18fafa67c3ecfb9aa4932ac773f2ea9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6295598_b944dc48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-31T02:49:37Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "7ce6d515_85aea8de",
      "tag": "autogenerated:trybots~happy",
      "revId": "9d38e640c18fafa67c3ecfb9aa4932ac773f2ea9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecea9a06_2f57d48e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-01T17:33:57Z",
      "side": 1,
      "message": "Overall organization looks good, thanks.\n",
      "revId": "9d38e640c18fafa67c3ecfb9aa4932ac773f2ea9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b8070ce_75db79bc",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64.rules",
        "patchSetId": 2
      },
      "lineNbr": 724,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-01T17:33:57Z",
      "side": 1,
      "message": "Is there a reason these changes need to be in this CL?\nIt seems like a separate optimization to me.",
      "revId": "9d38e640c18fafa67c3ecfb9aa4932ac773f2ea9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "851e40fc_82744334",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64.rules",
        "patchSetId": 2
      },
      "lineNbr": 1257,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-01T17:33:57Z",
      "side": 1,
      "message": "Just c\u003c0?\nc\u003d\u003d0 should be handled by the (ADDconst [0]  x) \u003d\u003e x rule.",
      "range": {
        "startLine": 1257,
        "startChar": 20,
        "endLine": 1257,
        "endChar": 26
      },
      "revId": "9d38e640c18fafa67c3ecfb9aa4932ac773f2ea9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34b3e5b2_af814b98",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM64latelower.rules",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-01T17:33:57Z",
      "side": 1,
      "message": "InvertFlags ops should never reach here, I think. They should all be absorbed during the regular rules.",
      "revId": "9d38e640c18fafa67c3ecfb9aa4932ac773f2ea9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da6783e6_b5d477ae",
        "filename": "src/cmd/compile/internal/ssa/later_lower.go",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-01T17:33:57Z",
      "side": 1,
      "message": "rules",
      "range": {
        "startLine": 7,
        "startChar": 77,
        "endLine": 7,
        "endChar": 81
      },
      "revId": "9d38e640c18fafa67c3ecfb9aa4932ac773f2ea9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "590d3613_dac91698",
        "filename": "src/cmd/compile/internal/ssa/rewrite.go",
        "patchSetId": 2
      },
      "lineNbr": 1999,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-01T17:33:57Z",
      "side": 1,
      "message": "I think only the first line of this comment is needed. If you want to keep the rest, put it inside the function - it\u0027s an implementation detail, not really an API description.",
      "revId": "9d38e640c18fafa67c3ecfb9aa4932ac773f2ea9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdbb2101_5110a0f0",
        "filename": "src/cmd/compile/internal/ssa/rewrite.go",
        "patchSetId": 2
      },
      "lineNbr": 2002,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-01T17:33:57Z",
      "side": 1,
      "message": "These two lines are not needed here.",
      "revId": "9d38e640c18fafa67c3ecfb9aa4932ac773f2ea9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8ecaeae_59d442c3",
        "filename": "src/cmd/compile/internal/ssa/rewrite.go",
        "patchSetId": 2
      },
      "lineNbr": 2045,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-01T17:33:57Z",
      "side": 1,
      "message": "Please add a doc saying what this function does.\n\"isaddcon reports whether x can be encoded as the immediate value in an ADD or SUB instruction.\" or something like that.",
      "revId": "9d38e640c18fafa67c3ecfb9aa4932ac773f2ea9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26d131dd_4a9ee969",
        "filename": "test/codegen/arithmetic.go",
        "patchSetId": 2
      },
      "lineNbr": 338,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-01T17:33:57Z",
      "side": 1,
      "message": "MOVD with the constant value here?",
      "revId": "9d38e640c18fafa67c3ecfb9aa4932ac773f2ea9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f8e5fe0_68824073",
        "filename": "test/codegen/bits.go",
        "patchSetId": 2
      },
      "lineNbr": 373,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-01T17:33:57Z",
      "side": 1,
      "message": "remove \"b\".",
      "range": {
        "startLine": 373,
        "startChar": 28,
        "endLine": 373,
        "endChar": 29
      },
      "revId": "9d38e640c18fafa67c3ecfb9aa4932ac773f2ea9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef0e489f_a727e2a0",
        "filename": "test/codegen/comparisons.go",
        "patchSetId": 2
      },
      "lineNbr": 285,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-01T17:33:57Z",
      "side": 1,
      "message": "Part of a separate CL?",
      "revId": "9d38e640c18fafa67c3ecfb9aa4932ac773f2ea9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}