{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b2923e16_ea3a27c1",
        "filename": "src/cmd/go/testdata/script/build_issue68658.txt",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3267006
      },
      "writtenOn": "2024-08-29T18:44:05Z",
      "side": 1,
      "message": "Can we set TESTGO_VERSION\u003dgo1.21 and then check that the go version is set to go1.21 and not go1.10?",
      "revId": "8ac0dc92841c5b4b7187b28f69fa2ebc3f464621",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a97532d8_2ec7d571",
        "filename": "src/cmd/go/testdata/script/build_issue68658.txt",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 10033
      },
      "writtenOn": "2024-08-29T19:03:21Z",
      "side": 1,
      "message": "I added a test that checks the boundary more closely: it has a 1.21 feature but specifies //go:build go1.20 and checks we don\u0027t downgrade to 1.20.",
      "parentUuid": "b2923e16_ea3a27c1",
      "revId": "8ac0dc92841c5b4b7187b28f69fa2ebc3f464621",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}