{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "00080304_1af72060",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-08-31T22:10:27Z",
      "side": 1,
      "message": "The boringcrypto failures suggest that somehow the structs generated by cgo have types such that t.Pointers() reports true.",
      "revId": "06e777689882bf1be4479a83599133486ca36e25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0abe154b_21c726ea",
        "filename": "src/cmd/cgo/gcc.go",
        "patchSetId": 1
      },
      "lineNbr": 3071,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-08-31T22:10:27Z",
      "side": 1,
      "message": "I think this will be clearer as\n\n    fld \u003d append(fld, \u0026ast.Field{...})\n    sizes \u003d append(sizes, 0)",
      "revId": "06e777689882bf1be4479a83599133486ca36e25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "590c24a9_c7cb3657",
        "filename": "src/cmd/cgo/gcc.go",
        "patchSetId": 1
      },
      "lineNbr": 3071,
      "author": {
        "id": 7061
      },
      "writtenOn": "2024-09-10T15:43:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0abe154b_21c726ea",
      "revId": "06e777689882bf1be4479a83599133486ca36e25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a573e42_55017166",
        "filename": "src/cmd/cgo/godefs.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-08-31T22:10:27Z",
      "side": 1,
      "message": "lastImport :\u003d -1",
      "fixSuggestions": [
        {
          "fixId": "414df359_ce3f895e",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/cgo/godefs.go",
              "range": {
                "startLine": 58,
                "startChar": 0,
                "endLine": 59,
                "endChar": 0
              },
              "replacement": "\tlastImport :\u003d -1\n"
            }
          ]
        }
      ],
      "revId": "06e777689882bf1be4479a83599133486ca36e25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b93ca22_8c63214b",
        "filename": "src/cmd/cgo/godefs.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 7061
      },
      "writtenOn": "2024-09-10T15:43:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a573e42_55017166",
      "revId": "06e777689882bf1be4479a83599133486ca36e25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31b546a9_217b3d48",
        "filename": "src/cmd/cgo/godefs.go",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-08-31T22:10:27Z",
      "side": 1,
      "message": "I\u0027m not sure this is enough.  Will it handle a case like\n\n    var x \u003d \u0026C.struct_foo{}\n\n?  That is, we can have a reference to a C struct that isn\u0027t itself a C struct.\n\nAlso, what about references to C structs within functions?",
      "fixSuggestions": [
        {
          "fixId": "69b39c8c_fa27b78d",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/cgo/godefs.go",
              "range": {
                "startLine": 63,
                "startChar": 0,
                "endLine": 64,
                "endChar": 0
              },
              "replacement": "\trefName :\u003d make(map[*ast.Expr]string)\n"
            },
            {
              "path": "src/cmd/cgo/godefs.go",
              "range": {
                "startLine": 65,
                "startChar": 0,
                "endLine": 66,
                "endChar": 0
              },
              "replacement": "\t\trefName[r.Expr] \u003d r.Name.Go\n"
            },
            {
              "path": "src/cmd/cgo/godefs.go",
              "range": {
                "startLine": 80,
                "startChar": 0,
                "endLine": 83,
                "endChar": 0
              },
              "replacement": "\t\t\tif n :\u003d refName[\u0026s.Type]; n !\u003d \"\" {\n\t\t\t\toverride[n] \u003d s.Name.Name\n"
            }
          ]
        }
      ],
      "revId": "06e777689882bf1be4479a83599133486ca36e25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98611a50_4b326330",
        "filename": "src/cmd/cgo/godefs.go",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 7061
      },
      "writtenOn": "2024-09-10T15:43:40Z",
      "side": 1,
      "message": "I am also not sure, but the \"structs\" import has to appear where C.struct_foo is declared as a type, because that is where structs.HostLayout will be mentioned.",
      "parentUuid": "31b546a9_217b3d48",
      "revId": "06e777689882bf1be4479a83599133486ca36e25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f0d8fc9_04598690",
        "filename": "src/cmd/cgo/godefs.go",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-08-31T22:10:27Z",
      "side": 1,
      "message": "Use a raw string literal, here and below.",
      "fixSuggestions": [
        {
          "fixId": "fa8208e2_639bc9a6",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/cgo/godefs.go",
              "range": {
                "startLine": 95,
                "startChar": 0,
                "endLine": 96,
                "endChar": 0
              },
              "replacement": "\t\t\tif i.Path.Value \u003d\u003d `\"structs\"` {\n"
            },
            {
              "path": "src/cmd/cgo/godefs.go",
              "range": {
                "startLine": 101,
                "startChar": 0,
                "endLine": 102,
                "endChar": 0
              },
              "replacement": "\t\t\tis :\u003d \u0026ast.ImportSpec{Path: \u0026ast.BasicLit{Kind: token.STRING, Value: `\"structs\"`}}\n"
            }
          ]
        }
      ],
      "revId": "06e777689882bf1be4479a83599133486ca36e25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96d2a292_46338368",
        "filename": "src/cmd/cgo/godefs.go",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 7061
      },
      "writtenOn": "2024-09-10T15:43:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f0d8fc9_04598690",
      "revId": "06e777689882bf1be4479a83599133486ca36e25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61f55a05_7aa77721",
        "filename": "src/cmd/cgo/godefs.go",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-08-31T22:10:27Z",
      "side": 1,
      "message": "I wouldn\u0027t worry about efficiency for something we are doing only once.\n\n    impDecl :\u003d \u0026ast.GenDecl{...}\n    f.AST.Decls \u003d append([]ast.Decl{impDecl}, f.AST.Decls...)",
      "fixSuggestions": [
        {
          "fixId": "6a86f885_58a76dd1",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/cgo/godefs.go",
              "range": {
                "startLine": 106,
                "startChar": 0,
                "endLine": 110,
                "endChar": 0
              },
              "replacement": "\t\t\t\timpDecl :\u003d \u0026ast.GenDecl{Tok: token.IMPORT, Specs: []ast.Spec{is}}\n\t\t\t\tf.AST.Decls \u003d append([]ast.Decl{impDecl}, f.AST.Decls...)\n"
            }
          ]
        }
      ],
      "revId": "06e777689882bf1be4479a83599133486ca36e25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0f2d529_c09527f5",
        "filename": "src/cmd/cgo/godefs.go",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 7061
      },
      "writtenOn": "2024-09-10T15:43:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "61f55a05_7aa77721",
      "revId": "06e777689882bf1be4479a83599133486ca36e25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69a35269_e35d1138",
        "filename": "src/cmd/cgo/internal/test/test.go",
        "patchSetId": 1
      },
      "lineNbr": 2212,
      "author": {
        "id": 34895
      },
      "writtenOn": "2024-08-31T22:10:27Z",
      "side": 1,
      "message": "As discussed, I don\u0027t think we\u0027re going to get away with requiring tagged literals like this.",
      "fixSuggestions": [
        {
          "fixId": "ebe9fbae_f3332bfc",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/cgo/internal/test/test.go",
              "range": {
                "startLine": 2211,
                "startChar": 0,
                "endLine": 2214,
                "endChar": 0
              },
              "replacement": "var Vissue29748 \u003d C.f29748(\u0026C.S29748{nil})\n"
            },
            {
              "path": "src/cmd/cgo/internal/test/test.go",
              "range": {
                "startLine": 2216,
                "startChar": 0,
                "endLine": 2219,
                "endChar": 0
              },
              "replacement": "\tC.f29748(\u0026C.S29748{nil})\n"
            }
          ]
        }
      ],
      "revId": "06e777689882bf1be4479a83599133486ca36e25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5b6a206_2ffdc661",
        "filename": "src/cmd/cgo/internal/test/test.go",
        "patchSetId": 1
      },
      "lineNbr": 2212,
      "author": {
        "id": 7061
      },
      "writtenOn": "2024-09-17T19:22:01Z",
      "side": 1,
      "message": "See https://go.dev/cl/613082, I could roll it into this one but for purposes of \"is it good?\" I think it might be worth its own review.",
      "parentUuid": "69a35269_e35d1138",
      "revId": "06e777689882bf1be4479a83599133486ca36e25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}