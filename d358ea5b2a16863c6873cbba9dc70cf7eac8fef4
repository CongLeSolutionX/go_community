{
  "comments": [
    {
      "key": {
        "uuid": "764f75a9_84e143f8",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 21
      },
      "lineNbr": 63,
      "author": {
        "id": 5200
      },
      "writtenOn": "2019-10-28T17:25:50Z",
      "side": 1,
      "message": "This is a little bit confusing. L0 has an outdegree of 1\u003c\u003csummaryL0Bits, and the other levels have an outdegree of 1\u003c\u003csummaryLevelBits?",
      "revId": "d358ea5b2a16863c6873cbba9dc70cf7eac8fef4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8abd8705_9e0d2007",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 21
      },
      "lineNbr": 63,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-28T17:31:03Z",
      "side": 1,
      "message": "That\u0027s correct. This is a consequence of mallocSum being packed into a 64-bit value in a future CL.\n\nSpoke with Austin about this and he suggested just landing what\u0027s here and we can think about making mallocSum something like\n\ntype mallocSum struct {\n  start, max, end uint32\n}\n\nwhich would let us have all the levels have the same outdegree (and also add more levels than exist now).\n\nit\u0027s not a big change, mostly changes to constants.",
      "parentUuid": "764f75a9_84e143f8",
      "revId": "d358ea5b2a16863c6873cbba9dc70cf7eac8fef4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85e4605f_67f103b3",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 21
      },
      "lineNbr": 63,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-10-29T02:43:34Z",
      "side": 1,
      "message": "Adding more levels isn\u0027t necessarily the right thing to do. It makes the search asymptotically faster for tremendously larger heaps, but makes a longer search path for more commonly sized heaps.\n\n(Crazy thought: the s390x MMU supports many different numbers of page table levels, all the way up to something crazy like 6 levels to cover the full 64-bit address space. The Linux kernel will actually change the number of levels on the fly as a process uses more address space. We could also add more levels on the fly to the bitmap summary!)",
      "parentUuid": "8abd8705_9e0d2007",
      "revId": "d358ea5b2a16863c6873cbba9dc70cf7eac8fef4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}