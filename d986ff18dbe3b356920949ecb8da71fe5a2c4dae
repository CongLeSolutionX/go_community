{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2dfa2e9e_1bbef471",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6480
      },
      "writtenOn": "2022-09-13T12:21:21Z",
      "side": 1,
      "message": "PTAL",
      "revId": "d986ff18dbe3b356920949ecb8da71fe5a2c4dae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84de7e38_b98ff019",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-13T12:21:39Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dd986ff18\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "d986ff18dbe3b356920949ecb8da71fe5a2c4dae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3aa2ec35_1fedce18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-13T12:34:10Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "84de7e38_b98ff019",
      "tag": "autogenerated:trybots~happy",
      "revId": "d986ff18dbe3b356920949ecb8da71fe5a2c4dae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2a5c86f_64e05cce",
        "filename": "src/debug/pe/file.go",
        "patchSetId": 2
      },
      "lineNbr": 356,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-09-13T14:22:47Z",
      "side": 1,
      "message": "(nit) The other common way to avoid overflow is to use subtraction instead of addition:\n\n```\nif s.VirtualAddress \u003c\u003d idd.VirtualAddress \u0026\u0026 idd.VirtualAddress - s.VirtualAddress \u003c s.VirtualSize {\n```\n\nProvided that `s.VirtualAddress` is known to be nonnegative, that form is guaranteed not to overflow regardless of the specific type of the fields. (In particular, it wouldn\u0027t overflow even if they were already unsigned.)",
      "range": {
        "startLine": 356,
        "startChar": 47,
        "endLine": 356,
        "endChar": 122
      },
      "revId": "d986ff18dbe3b356920949ecb8da71fe5a2c4dae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df9c0327_c3feacbc",
        "filename": "src/debug/pe/file.go",
        "patchSetId": 2
      },
      "lineNbr": 356,
      "author": {
        "id": 6480
      },
      "writtenOn": "2022-09-14T04:36:50Z",
      "side": 1,
      "message": "Nice. Thanks for the suggestion.",
      "parentUuid": "b2a5c86f_64e05cce",
      "range": {
        "startLine": 356,
        "startChar": 47,
        "endLine": 356,
        "endChar": 122
      },
      "revId": "d986ff18dbe3b356920949ecb8da71fe5a2c4dae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}