{
  "comments": [
    {
      "key": {
        "uuid": "b2256d3c_4d2f1bed",
        "filename": "src/runtime/pprof/proto.go",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 5200
      },
      "writtenOn": "2019-11-05T21:33:50Z",
      "side": 1,
      "message": "I\u0027m confused by how this is working.\n\nThis code already uses runtime.Callers, which puts one PC per virtual frame in the stack (e.stk). Here you\u0027re using CallersFrames on each entry, one at a time. That\u0027s not really how it is supposed to be used. You\u0027re supposed to pass the whole e.stk to CallersFrames.\n\nThey way it is used here, I don\u0027t think Next will ever return more than one frame (except cgo, maybe?). So allFrames returning a slice seems like overkill.\n\nWhat prevents us from using runtime.Callers(e.stk), calling Next many times, and processing the result of that? Another way of looking at it, is caching required?",
      "revId": "117e43f08afeb89e05d9dfdf7f3be04a9399dc57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5250b37_2c3014fb",
        "filename": "src/runtime/pprof/proto.go",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 5190
      },
      "writtenOn": "2019-11-06T06:53:48Z",
      "side": 1,
      "message": "PTAL.\n\nIt was an attempt to preserve previous code structure (this is how locForPc used the runtime api) and the effort to minimize memory allocation - but it looks like that doesn\u0027t make any sense any more. For performance concerns, if any, I am happy to visit it again in the next dev cycle.",
      "parentUuid": "b2256d3c_4d2f1bed",
      "revId": "117e43f08afeb89e05d9dfdf7f3be04a9399dc57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b1070f9_7c06eb58",
        "filename": "src/runtime/pprof/proto.go",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 5190
      },
      "writtenOn": "2019-11-06T16:29:01Z",
      "side": 1,
      "message": "I reverted it back. The trybot failures were real. (e.g. https://storage.googleapis.com/go-build-log/425f26d2/linux-amd64_5cf451c1.log)  \n\nI can\u0027t access the platforms where the failed tests run easily so I can\u0027t inspect it easily. My guess is that runtime.CallersFrames+Next does not handle the pcs from C in the test program where cgo traceback is set but symbolizer is not set (https://github.com/golang/go/blob/b50fcc88e93eb41a64ff80d74aae36c531c5fe60/src/runtime/testdata/testprogcgo/pprof.go#L75-L103). In patchset 2(patchset 4), we add a makeup PC (line 229-232) if we failed to resolve the frame. In patchset 3, I didn\u0027t include the adjustment because I am not sure if I can assume 1-to-1 mapping between the pcs in the stack and the frames returned from Next() calls. That may be a reason of the failure.\n\nNote the runtime/crash_cgo_test.go tries pprof without and with the executable - pprof will handle the symbol lookup if the symbolization info is missing.",
      "parentUuid": "d5250b37_2c3014fb",
      "revId": "117e43f08afeb89e05d9dfdf7f3be04a9399dc57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e10689cd_0b5fee18",
        "filename": "src/runtime/pprof/proto.go",
        "patchSetId": 2
      },
      "lineNbr": 459,
      "author": {
        "id": 5200
      },
      "writtenOn": "2019-11-05T21:33:50Z",
      "side": 1,
      "message": "Can\u0027t we just cache the result of allFrames(addr)? The key is just a uintptr, which is much simpler.\nIt would require repeating the work done in re-aggregating the inlined frames (in deck.add), but maybe that\u0027s not very expensive.",
      "revId": "117e43f08afeb89e05d9dfdf7f3be04a9399dc57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ccff5da_23b70e62",
        "filename": "src/runtime/pprof/proto.go",
        "patchSetId": 2
      },
      "lineNbr": 459,
      "author": {
        "id": 5190
      },
      "writtenOn": "2019-11-06T06:53:48Z",
      "side": 1,
      "message": "done.",
      "parentUuid": "e10689cd_0b5fee18",
      "revId": "117e43f08afeb89e05d9dfdf7f3be04a9399dc57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5971fec0_64748997",
        "filename": "src/runtime/pprof/proto.go",
        "patchSetId": 2
      },
      "lineNbr": 459,
      "author": {
        "id": 5190
      },
      "writtenOn": "2019-11-06T16:29:01Z",
      "side": 1,
      "message": "FYI I am using the first pc of the pc sequence that maps to a location in patchset 4.",
      "parentUuid": "2ccff5da_23b70e62",
      "revId": "117e43f08afeb89e05d9dfdf7f3be04a9399dc57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}