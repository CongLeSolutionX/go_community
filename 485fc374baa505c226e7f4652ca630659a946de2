{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "340d288d_6ce30796",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2024-04-17T16:41:03Z",
      "side": 1,
      "message": "TRY\u003ddarwin,windows,wasm,linux,openbsd",
      "revId": "485fc374baa505c226e7f4652ca630659a946de2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2afdab2_663228a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-04-17T16:41:19Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d485fc374\nNote that the following SlowBot terms didn\u0027t match any existing builder name or slowbot alias: wasm.\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "485fc374baa505c226e7f4652ca630659a946de2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ceec05c5_33c4841a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-04-17T17:30:17Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* darwin-amd64-13\n* linux-amd64\n* openbsd-amd64-72\n* windows-amd64-2016\n",
      "parentUuid": "a2afdab2_663228a6",
      "tag": "autogenerated:trybots~happy",
      "revId": "485fc374baa505c226e7f4652ca630659a946de2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bf74501_01145400",
        "filename": "src/crypto/rand/rand.go",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 55874
      },
      "writtenOn": "2024-05-01T18:43:03Z",
      "side": 1,
      "message": "Actually this might be considered a breaking change when someone changes the default Reader:\n\n```\nimport \"crypto/rand\"\n\nfunc init() {\n    rand.Reader \u003d myRandReader{}\n}\n```",
      "revId": "485fc374baa505c226e7f4652ca630659a946de2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54637399_bd412394",
        "filename": "src/crypto/rand/rand.go",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 11715
      },
      "writtenOn": "2024-05-22T12:49:23Z",
      "side": 1,
      "message": "Indeed, this came up for https://go-review.googlesource.com/c/go/+/511375/comment/c2b3138b_f2d7b5c9/ too. I\u0027m afraid #66779 might be unfixable.",
      "parentUuid": "3bf74501_01145400",
      "revId": "485fc374baa505c226e7f4652ca630659a946de2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b3681f1_47afa338",
        "filename": "src/crypto/rand/rand.go",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 55874
      },
      "writtenOn": "2024-05-22T12:59:45Z",
      "side": 1,
      "message": "We can also add special case when `Reader !\u003d randReader`, that will pass a temporary buffer to the `Reader.Read` and then copy the contents of the tmp buffer to the input buffer, i will give it a try.",
      "parentUuid": "54637399_bd412394",
      "revId": "485fc374baa505c226e7f4652ca630659a946de2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aef6f9b3_8b7b64b0",
        "filename": "src/crypto/rand/rand.go",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 55874
      },
      "writtenOn": "2024-05-22T13:31:26Z",
      "side": 1,
      "message": "This might also be fixed with the help of the compiler, the only thing that prevents us from using Reader in the Read function is the io.Reader interface, compiler could see that the global is never reassigned and thus it can devirtualize it.",
      "parentUuid": "3b3681f1_47afa338",
      "revId": "485fc374baa505c226e7f4652ca630659a946de2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}