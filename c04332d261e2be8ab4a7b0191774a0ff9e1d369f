{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5296fbc8_07b1c487",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-05T16:41:10Z",
      "side": 1,
      "message": "When you say \"built with -mcpu\u003dpower10\" do you mean a compiler option or linker option? Initially I think of gcc but doesn\u0027t LLVM also have p10 support -- I don\u0027t know if their option is the same.",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "306b38ae_1fa4adf8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-05T16:41:10Z",
      "side": 1,
      "message": "insertion",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "944b2368_1dd27c7e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-05T16:41:10Z",
      "side": 1,
      "message": "I think you should stick with consistent terms. In your headline you say ELFv2 objects but here you say C objects. ELFv2 is more general (since you should also include C++).\n\nWhy would these targets contain non-zero values that are not needed?",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01834620_d33aa6a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-05-04T16:57:45Z",
      "side": 1,
      "message": "TRY\u003dppc64le,ppc64lep10",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecb11af3_075c6ab3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-04T16:59:13Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003dc04332d2\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4044d809_0e73f0b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-04T17:30:25Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-ppc64le-buildlet\n* linux-ppc64le-power10osu\n",
      "parentUuid": "ecb11af3_075c6ab3",
      "tag": "autogenerated:trybots~happy",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "316946c5_120f78a1",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-05T16:41:10Z",
      "side": 1,
      "message": "To be consistent, you could define const values for all the cases where there is a hex string representing an instruction. Or at least for your new code if you didn\u0027t want to change all of them in this file.\n\nIs there some reason for using SetUint32 with some offset instead of just doing AddUint32?",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ba91947_c25c8885",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-05T16:41:10Z",
      "side": 1,
      "message": "There is a define for a PLA version above, could this one be done in the same way?",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cb87005_a5549b6b",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-05T16:41:10Z",
      "side": 1,
      "message": "There is no comment about the NOTOC relocation case. The comment above only mentions the code after the else blocks.",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0522517_b9a335a3",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 221,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-05T16:41:10Z",
      "side": 1,
      "message": "OP_NOP?",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a3f1b7d_b4800fe2",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-05T16:41:10Z",
      "side": 1,
      "message": "I don\u0027t see what this comment is referring to and where/how R2 is being saved and restored. It is not clear which is the NOTOC case.",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0be008a6_8681ffb1",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-05T16:41:10Z",
      "side": 1,
      "message": "These comments need better clarification.\n\nWhen you say TOC to TOC call, are you including Go? Because in the next part of the statement you say \"or a call into a Go symbol\" which seems like \"TOC to TOC\" does not include Go. But Go could be TOC or no TOC or PCrel (maybe that\u0027s really no TOC but maybe that needs to be different).\n\nThe second statement describes something different, and doesn\u0027t say how R2 gets preserved. I don\u0027t see why both these comments are under this case because they are inconsistent -- one says no fixups, the other says R2 is preserved.",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8110fbb7_2bdae098",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 272,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-05T16:41:10Z",
      "side": 1,
      "message": "Is this NOTOC calling TOC?",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bab035e_26ce0a49",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 282,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-05T16:41:10Z",
      "side": 1,
      "message": "Are you using trampoline to mean call stub?\n\nThis says a trampoline is inserted but under the \"if\" it says no fixups are needed.",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9eeca8e4_fca6ad24",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 501,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-05T16:41:10Z",
      "side": 1,
      "message": "There is a const defined for this.",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6a126c1_441445c1",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 1078,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-05-05T16:41:10Z",
      "side": 1,
      "message": "It would be helpful to have a comment here that you are clearing out relocation bits in the code below. (Why are they set?)",
      "revId": "c04332d261e2be8ab4a7b0191774a0ff9e1d369f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}