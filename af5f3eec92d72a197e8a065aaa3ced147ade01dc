{
  "comments": [
    {
      "key": {
        "uuid": "e3739ea9_41f18fce",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-11-30T20:05:11Z",
      "side": 1,
      "message": "Either here or in the \"Compiler Toolchain\" section we should add support for soft floating point on MIPS32 (CL 37958).",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cdb6111_d455822d",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 133,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "concept of",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ddab8a3_af59f551",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 178,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "I\u0027m not sure if \"run a test\" should be singular in this context? \n\nMay be able to simplify this sentence.",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87440f4e_35933bbb",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 198,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "CONT is clear? Not sure.",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eba6d41a_ff2bf5c6",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 296,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "It would be nice to briefly mention the changes (new web UI) for pprof.",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52da32bf_9a82cf4c",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 302,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "this should link to /cmd/vet/",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4028035a_95ca8b22",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 328,
      "author": {
        "id": 9735
      },
      "writtenOn": "2017-12-01T01:15:45Z",
      "side": 1,
      "message": "This change was reverted. So this can be removed.",
      "range": {
        "startLine": 328,
        "startChar": 0,
        "endLine": 328,
        "endChar": 68
      },
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d368a76_3948b064",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 352,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "yah, too much info, in my opinion",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5bedc7f_6c99e377",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 365,
      "author": {
        "id": 17090
      },
      "writtenOn": "2017-11-16T21:39:39Z",
      "side": 1,
      "message": "None of the location list stuff is on by default.\n\n- Global constants are probably worth noting.\n- David Chase\u0027s improvements to line number information should dramatically improve stepping through a program. (https://golang.org/issue/21098)\n- https://golang.org/issue/22068 was long-standing but may not have affected enough people to be worth documenting.\n- https://golang.org/cl/69973 was a significant structural change; it should have no user impact, but neither did the move to DWARF4, and we documented that in 1.9.",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78d2ab37_12e8ec26",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 470,
      "author": {
        "id": 11210
      },
      "writtenOn": "2017-11-16T21:46:28Z",
      "side": 1,
      "message": "For AMD64 port the assembler is now fully supporting all instruction extensions including AVX2 - SSE2/SSE3/SSSE3/SSE4.1/SSE4.2/BMI/BMI2/AVX/F16C/FMA3/AVX2.",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f61cd5d3_6a2cad5c",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 471,
      "author": {
        "id": 8585
      },
      "writtenOn": "2017-11-16T21:30:58Z",
      "side": 1,
      "message": "s/AVX-256/AVX2/\nAlso I\u0027d like to mention specific extensions: SSE2/SSE3/SSSE3/SSE4.1/SSE4.2/BMI/BMI2/AVX/AVX2\nThis is especially important for extensions independent from AVX e.g. one can have AVX2, but no BMI",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ef25390_1ace5586",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 473,
      "author": {
        "id": 8585
      },
      "writtenOn": "2017-11-16T21:30:58Z",
      "side": 1,
      "message": "I must have missed this. Are we okay with possible code breakage?\nI can imagine somewhat realistic case which will no longer work\nloop_header:\nMOVQ $0,AX // This was actually a xor, so flags were unset\nloop:\nADC   AX,BX // Something that uses flags",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09b0ec0e_fd08f781",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 486,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-11-28T01:11:59Z",
      "side": 1,
      "message": "Suggested text:\n\n\u003cp\u003e\u003c!-- CL 45752 --\u003e\nThe behavior of nested \u003ca href\u003d\"/pkg/runtime/#LockOSThread\"\u003e\u003ccode\u003eLockOSThread\u003c/code\u003e\u003c/a\u003e/\u003ca href\u003d\"/pkg/runtime/#UnlockOSThread\"\u003e\u003ccode\u003eUnlockOSThread\u003c/code\u003e\u003c/a\u003e calls has changed. Previously, any number of LockOSThread calls were cancelled by a single UnlockOSThread call. As a result, many uses of these functions in real code were \u003ca href\u003d\"/issue/20458\"\u003eincorrect\u003c/a\u003e. Now, each LockOSThread must be paired with an UnlockOSThread in order to unlock the thread.\n\u003c/p\u003e\n\n\u003cp\u003e\u003c!-- CL 46038, CL 46033 --\u003e\nExiting a goroutine that has called LockOSThread without a corresponding UnlockOSThread now exits the OS thread instead of reusing it. Likewise, the runtime no longer starts new threads from a locked OS thread. Together, these changes make it safe to modify some OS-level thread state that was previously unsafe to modify, such as Linux namespaces.\n\u003c/p\u003e\n\n(I linked to the issue in the first one because it gives a lot of good context and examples for what is technically a backwards-incompatible change. I didn\u0027t see any other issue links, so I don\u0027t know if we want to include this link or not.)",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e14f16f_fdc6fc3f",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 491,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-11-28T01:11:59Z",
      "side": 1,
      "message": "Consider adding \"As a result, skip counts passed to functions like \u003ca href\u003d\"/pkg/runtime/#Caller\"\u003eCaller\u003c/a\u003e should now always match the structure of the code as written, rather than depending on implementation details of code generation.\"",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b98c6905_fb9930ea",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 511,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-11-28T01:11:59Z",
      "side": 1,
      "message": "Suggested text:\n\n\u003cp\u003e\u003c!-- CL 59970 --\u003e\nMany applications should experience significantly lower allocation latency and overall performance overhead when the garbage collector is active.\n\u003c/p\u003e",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99ad5507_d59d1669",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 547,
      "author": {
        "id": 9735
      },
      "writtenOn": "2017-11-16T22:05:12Z",
      "side": 1,
      "message": "Delete.",
      "range": {
        "startLine": 543,
        "startChar": 0,
        "endLine": 547,
        "endChar": 4
      },
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af99200f_19463a0e",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 553,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "\"that can encode\"",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2a510ef_eab2aa67",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 557,
      "author": {
        "id": 9735
      },
      "writtenOn": "2017-11-16T22:05:12Z",
      "side": 1,
      "message": "arbitrary",
      "range": {
        "startLine": 557,
        "startChar": 59,
        "endLine": 557,
        "endChar": 60
      },
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12a7e5e5_f0cacbad",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 559,
      "author": {
        "id": 9735
      },
      "writtenOn": "2017-11-16T22:05:12Z",
      "side": 1,
      "message": "Since\n\u003ca href\u003d\"/pkg/archive/tar/#Header.Xattrs\"\u003e\u003ccode\u003eHeader.Xattrs\u003c/code\u003e\u003c/a\u003e\nis a sub-set of \u003ccode\u003ePAXRecords\u003c/code\u003e,\n\u003ccode\u003eXattrs\u003c/code\u003e is being marked as deprecated\nin favor of the new \u003ccode\u003ePAXRecords\u003c/code\u003e field.",
      "range": {
        "startLine": 559,
        "startChar": 0,
        "endLine": 559,
        "endChar": 4
      },
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ad7e6e4_ac4211b5",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 572,
      "author": {
        "id": 9735
      },
      "writtenOn": "2017-11-16T22:05:12Z",
      "side": 1,
      "message": "Delete. I removed the deprecation notice.",
      "range": {
        "startLine": 569,
        "startChar": 0,
        "endLine": 572,
        "endChar": 4
      },
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecbecee1_660e5739",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 592,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "\"a ZIP archive\"?\n\n\"also stores\"?",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f8ae583_cfe7c34d",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 610,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "\"now supports\"",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59c29355_990062fd",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 739,
      "author": {
        "id": 5385
      },
      "writtenOn": "2017-11-16T19:23:29Z",
      "side": 1,
      "message": "missing space between \u0027new\u0027 and the \u0027\u003c\u0027.",
      "range": {
        "startLine": 739,
        "startChar": 8,
        "endLine": 739,
        "endChar": 13
      },
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c1749f1_a3259faa",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 811,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "superfluous each?: they each now",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "356b1db6_c7245f54",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 822,
      "author": {
        "id": 9735
      },
      "writtenOn": "2017-11-16T22:05:12Z",
      "side": 1,
      "message": "#Decoder.DisallowUnknownFields",
      "range": {
        "startLine": 822,
        "startChar": 29,
        "endLine": 822,
        "endChar": 50
      },
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "851cf7f3_6d473694",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 827,
      "author": {
        "id": 9735
      },
      "writtenOn": "2017-11-16T22:05:12Z",
      "side": 1,
      "message": "Structs with embedded pointers to unexported struct types are no longer marshaled and unmarshaled, instead they are entirely ignored in the same way unexported fields are normally ignored.\n\nUpgrading: Any package that uses this pattern can apply a localized fix by either embedding the non-pointer form of the struct or by defining an exported struct scoped within some function.",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9be0c531_118e7904",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 946,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "This is missing \"\u003ccode\u003eShuffle\u003c/code\u003e\u003c/a\u003e\"",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef0d4b20_966b7aac",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 951,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "missing \"\u003ccode\u003ePerm\u003c/code\u003e\u003c/a\u003e\"",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc1a7485_229b5bb2",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 966,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "Considering these functions both return a float64, would it be better to describe the return value as a \"whole number\" instead of an \"integer\" both here and in the linked documentation? \n\nOr maybe just tweak the wording?\n\n\"Round returns the nearest integer\" (ah, as a float64)",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f997e7ff_5adb4e5f",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 968,
      "author": {
        "id": 5385
      },
      "writtenOn": "2017-11-16T19:23:29Z",
      "side": 1,
      "message": "Missing \u0027to\u0027 between \u0027integer\u0027 and \u0027its\u0027.",
      "range": {
        "startLine": 968,
        "startChar": 45,
        "endLine": 968,
        "endChar": 56
      },
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96acc388_d156519c",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 1051,
      "author": {
        "id": 17921
      },
      "writtenOn": "2017-11-28T16:19:08Z",
      "side": 1,
      "message": "Suggested Text (referenced in CL 79315):\n\u003cdl id\u003d\"net/http/httputil\"\u003e\u003cdt\u003e\u003ca href\u003d\"/pkg/net/http/httputil/\"\u003enet/http/httputil\u003c/a\u003e\u003c/dt\u003e\n\u003cdd\u003e\n\u003cp\u003e \u003c!-- CL 54030 --\u003e\n\u003ca href\u003d\"/pkg/net/http/httputil/#ReverseProxy\"\u003e\u003ccode\u003eReverseProxy\u003c/code\u003e\u003c/a\u003e now calls \u003ccode\u003eModifyResponse\u003c/code\u003e regardless of the response from the target.\n\u003c/p\u003e\n\u003c/p\u003e\n\u003c/dl\u003e",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1271d172_206d4e53",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 1056,
      "author": {
        "id": 5235
      },
      "writtenOn": "2017-11-17T01:32:44Z",
      "side": 1,
      "message": "extraneous \"and\"",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99257205_31b1deb2",
        "filename": "doc/go1.10.html",
        "patchSetId": 5
      },
      "lineNbr": 1158,
      "author": {
        "id": 9735
      },
      "writtenOn": "2017-11-16T22:05:12Z",
      "side": 1,
      "message": "The Method.PkgPath and StructField.PkgPath are now guaranteed to be set if and only if the method or field is exported. Prior versions of Go failed to set this field for embedded pointers to unexported types. As a consequence of this bug fix, Value.Set now correctly panics when trying to assign to such fields.",
      "revId": "af5f3eec92d72a197e8a065aaa3ced147ade01dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}