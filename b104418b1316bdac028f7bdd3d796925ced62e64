{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "68f2fbc2_56a610d3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 5305
      },
      "writtenOn": "2023-05-17T22:55:00Z",
      "side": 1,
      "message": "typo: iscard",
      "revId": "b104418b1316bdac028f7bdd3d796925ced62e64",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05942f10_93196ff9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-05-20T21:41:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68f2fbc2_56a610d3",
      "revId": "b104418b1316bdac028f7bdd3d796925ced62e64",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f52490fd_ad4fab8d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-17T22:24:26Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003db104418b\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "b104418b1316bdac028f7bdd3d796925ced62e64",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "248e0a87_2c1e16be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-17T22:37:37Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "f52490fd_ad4fab8d",
      "tag": "autogenerated:trybots~happy",
      "revId": "b104418b1316bdac028f7bdd3d796925ced62e64",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bba0f1d_c3a567f8",
        "filename": "src/net/dial_test.go",
        "patchSetId": 1
      },
      "lineNbr": 782,
      "author": {
        "id": 6005
      },
      "writtenOn": "2023-05-17T22:59:01Z",
      "side": 1,
      "message": "Is this comment justifying strings.Contains still useful now that there are multiple ignorable substrings?",
      "range": {
        "startLine": 781,
        "startChar": 0,
        "endLine": 782,
        "endChar": 37
      },
      "revId": "b104418b1316bdac028f7bdd3d796925ced62e64",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "587f86ab_8dee7590",
        "filename": "src/net/dial_test.go",
        "patchSetId": 1
      },
      "lineNbr": 782,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-18T13:53:27Z",
      "side": 1,
      "message": "Probably yes: the implied alternative would be something like `errors.Is`, which would be a lot more complex here because the `syscall.Errno` values we would be checking for are not used on Windows and not even defined on Plan 9.",
      "parentUuid": "4bba0f1d_c3a567f8",
      "range": {
        "startLine": 781,
        "startChar": 0,
        "endLine": 782,
        "endChar": 37
      },
      "revId": "b104418b1316bdac028f7bdd3d796925ced62e64",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}