{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "09223c6b_488c210b",
        "filename": "src/cmd/go/internal/base/tool.go",
        "patchSetId": 7
      },
      "lineNbr": 52,
      "author": {
        "id": 3267006
      },
      "writtenOn": "2024-07-29T17:24:16Z",
      "side": 1,
      "message": "can we use unicode.IsLower and unicode.IsDigit instead?\n\nWe can also invert the logic to avoid having to use the default case.\n\nSomething like this:\n\n```\nfor _, c :\u003d range toolName {\n        if !unicode.IsLower(c) \u0026\u0026 !unicode.IsDigit(c) \u0026\u0026 c !\u003d \u0027_\u0027 {\n            return false\n        }\n    }\nreturn true\n\n```",
      "range": {
        "startLine": 45,
        "startChar": 1,
        "endLine": 52,
        "endChar": 12
      },
      "revId": "0d6bb68f488ae32b67132d97cc385553a4ea94f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd10c711_3c4f320d",
        "filename": "src/cmd/go/internal/base/tool.go",
        "patchSetId": 7
      },
      "lineNbr": 52,
      "author": {
        "id": 10033
      },
      "writtenOn": "2024-07-29T20:46:26Z",
      "side": 1,
      "message": "What the requirements are for a valid tool name? This seems to be more restrictive than, for example, what module.CheckImportPath does. (I might have missed the discussion on the issue thread).",
      "parentUuid": "09223c6b_488c210b",
      "range": {
        "startLine": 45,
        "startChar": 1,
        "endLine": 52,
        "endChar": 12
      },
      "revId": "0d6bb68f488ae32b67132d97cc385553a4ea94f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97dfa4d1_f0b69d9b",
        "filename": "src/cmd/go/internal/base/tool.go",
        "patchSetId": 7
      },
      "lineNbr": 52,
      "author": {
        "id": 10033
      },
      "writtenOn": "2024-07-29T21:08:25Z",
      "side": 1,
      "message": "Oh I see, this was moved from runTool. Could we rename these functions BuiltinTool, BuiltinToolPath and validBuiltinToolName?\n\nI\u0027d be okay leaving the code inside the for loop the same. The switch is weird but I think it makes reading the conditions a bit easier.",
      "parentUuid": "cd10c711_3c4f320d",
      "range": {
        "startLine": 45,
        "startChar": 1,
        "endLine": 52,
        "endChar": 12
      },
      "revId": "0d6bb68f488ae32b67132d97cc385553a4ea94f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d17bf5ea_a09ed55d",
        "filename": "src/cmd/go/internal/tool/tool.go",
        "patchSetId": 7
      },
      "lineNbr": 96,
      "author": {
        "id": 10033
      },
      "writtenOn": "2024-08-01T21:10:33Z",
      "side": 1,
      "message": "I think the flow would look a little nicer if we had a function to lookup a tool. Something like:\n\n    toolpkgpath, err :\u003d lookupModTool(ctx, toolName)\n    if err !\u003d nil {\n         // fatal error\n    }\n    // run tool at toolpkgpath",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 96,
        "endChar": 30
      },
      "revId": "0d6bb68f488ae32b67132d97cc385553a4ea94f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d466c61_873c4948",
        "filename": "src/cmd/go/internal/tool/tool.go",
        "patchSetId": 7
      },
      "lineNbr": 114,
      "author": {
        "id": 3267006
      },
      "writtenOn": "2024-07-29T17:24:16Z",
      "side": 1,
      "message": "nit: unnecessary new line",
      "fixSuggestions": [
        {
          "fixId": "1f1343a4_7950dd49",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/go/internal/tool/tool.go",
              "range": {
                "startLine": 114,
                "startChar": 0,
                "endLine": 115,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "0d6bb68f488ae32b67132d97cc385553a4ea94f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f46eea20_64e49006",
        "filename": "src/cmd/go/internal/tool/tool.go",
        "patchSetId": 7
      },
      "lineNbr": 202,
      "author": {
        "id": 3267006
      },
      "writtenOn": "2024-07-29T17:24:16Z",
      "side": 1,
      "message": "nit: keep consistent with above.\n```\n\nif len(modTools) \u003e 0 {\n\tfmt.Println(\"# go.mod tools\")\n}\n\n```",
      "range": {
        "startLine": 200,
        "startChar": 1,
        "endLine": 202,
        "endChar": 2
      },
      "revId": "0d6bb68f488ae32b67132d97cc385553a4ea94f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17755540_32a80c2d",
        "filename": "src/cmd/go/internal/tool/tool.go",
        "patchSetId": 7
      },
      "lineNbr": 207,
      "author": {
        "id": 10033
      },
      "writtenOn": "2024-08-01T21:10:33Z",
      "side": 1,
      "message": "I wonder if we should always print the full package path of the module defined tools? One benefit of doing that is that it would be clear which tools are built in and which are module defined tools without needing to add the comment lines. I think we probably also want to encourage people to use full package paths when running go tool because they\u0027re more robust.",
      "range": {
        "startLine": 207,
        "startChar": 2,
        "endLine": 207,
        "endChar": 26
      },
      "revId": "0d6bb68f488ae32b67132d97cc385553a4ea94f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e7dfd8d_ff5eb712",
        "filename": "src/cmd/go/internal/tool/tool.go",
        "patchSetId": 7
      },
      "lineNbr": 284,
      "author": {
        "id": 10033
      },
      "writtenOn": "2024-08-01T21:10:33Z",
      "side": 1,
      "message": "I think calling modload.Init() should be sufficient since I think we\u0027re only using MainModules.Tools() here and we don\u0027t need to actually load the module graph.",
      "range": {
        "startLine": 284,
        "startChar": 0,
        "endLine": 284,
        "endChar": 30
      },
      "revId": "0d6bb68f488ae32b67132d97cc385553a4ea94f3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}