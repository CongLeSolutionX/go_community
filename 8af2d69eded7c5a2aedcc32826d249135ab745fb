{
  "comments": [
    {
      "key": {
        "uuid": "4cc870eb_a91bcd28",
        "filename": "src/go/build/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 13550
      },
      "writtenOn": "2018-09-19T07:36:33Z",
      "side": 1,
      "message": "I would argue that people should not be using runtime.Version for that. That is, use runtime.Version as a replacement for these missing build tags can be confusing for the user, and also prone to subtle bugs.\n\nWhat about saying \"if there is a need to know the specific Go version being used.\"?",
      "revId": "8af2d69eded7c5a2aedcc32826d249135ab745fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfc34871_0c3b8b51",
        "filename": "src/go/build/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 24096
      },
      "writtenOn": "2018-09-19T07:46:06Z",
      "side": 1,
      "message": "I would like the sentence to clarify that runtime.Version() includes the minor version too, hence I used \"at that granularity\". \"specific Go version\" is not super clear on that.\n\nIf it is confusing, maybe we should remove the second sentence altogether. But I just put it there since Ian suggested it in the issue.\n\nIan, what do you think ?",
      "parentUuid": "4cc870eb_a91bcd28",
      "revId": "8af2d69eded7c5a2aedcc32826d249135ab745fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e806753a_5df65a08",
        "filename": "src/go/build/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 13550
      },
      "writtenOn": "2018-09-19T07:48:14Z",
      "side": 1,
      "message": "I have an issue with \"differentiate builds\", not \"granularity\". I don\u0027t think people should do string/regexp checks on runtime.Version to do one thing or another. However, it\u0027s fine to query the full Go version to do something with it, such as give it to the user, or use it in a checksum.",
      "parentUuid": "bfc34871_0c3b8b51",
      "revId": "8af2d69eded7c5a2aedcc32826d249135ab745fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74976060_e17c1c5c",
        "filename": "src/go/build/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 24096
      },
      "writtenOn": "2018-09-19T07:57:39Z",
      "side": 1,
      "message": "Ah ok. How about - \"One can use runtime.Version() to get the version at a more granular level.\" ? Clarifies that you can use it to query and also implies that it contains minor version info too.",
      "parentUuid": "e806753a_5df65a08",
      "revId": "8af2d69eded7c5a2aedcc32826d249135ab745fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60da4050_7138d5ab",
        "filename": "src/go/build/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 13550
      },
      "writtenOn": "2018-09-19T07:59:26Z",
      "side": 1,
      "message": "SGTM!",
      "parentUuid": "74976060_e17c1c5c",
      "revId": "8af2d69eded7c5a2aedcc32826d249135ab745fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9b6d5ab_af36af80",
        "filename": "src/go/build/doc.go",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 24096
      },
      "writtenOn": "2018-09-19T08:27:45Z",
      "side": 1,
      "message": "Cool :)",
      "parentUuid": "60da4050_7138d5ab",
      "revId": "8af2d69eded7c5a2aedcc32826d249135ab745fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}