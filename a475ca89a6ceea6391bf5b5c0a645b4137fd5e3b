{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "28072453_24c6ec6f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-11T15:27:13Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "511d0d5c_c3d00835",
      "tag": "autogenerated:trybots~beginning",
      "revId": "a475ca89a6ceea6391bf5b5c0a645b4137fd5e3b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20f8fb98_dd766b97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-11T15:27:13Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003da475ca89\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "a475ca89a6ceea6391bf5b5c0a645b4137fd5e3b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7d4761c_bde57d93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-11T15:34:22Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003da475ca89\nFailed on windows-386-2016: https://storage.googleapis.com/go-build-log/a475ca89/windows-386-2016_01536c13.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "20f8fb98_dd766b97",
      "tag": "autogenerated:trybots~progress",
      "revId": "a475ca89a6ceea6391bf5b5c0a645b4137fd5e3b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59536efd_50533666",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-11T15:37:58Z",
      "side": 1,
      "message": "1 of 45 TryBots failed.\nFailed on windows-386-2016: https://storage.googleapis.com/go-build-log/a475ca89/windows-386-2016_01536c13.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "20f8fb98_dd766b97",
      "tag": "autogenerated:trybots~failed",
      "revId": "a475ca89a6ceea6391bf5b5c0a645b4137fd5e3b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45bbd4a7_c1882407",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-11T16:26:46Z",
      "side": 1,
      "message": "(not sure) Do we also need to update `internal/syscall/windows.UTF16PtrToString`?\n\nLooks like it gets called on `syscall.GetCommandLine()` in `os/exec_windows.go`, as well as a few places in the `net` package. I\u0027m not so worried about `net` (because network messages should be in a valid transfer encoding to begin with), but the `os` use seems suspect.",
      "revId": "a475ca89a6ceea6391bf5b5c0a645b4137fd5e3b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21116112_12585a0f",
        "filename": "src/syscall/syscall_windows.go",
        "patchSetId": 11
      },
      "lineNbr": 80,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-11T16:26:46Z",
      "side": 1,
      "message": "(nit) This should go before the `switch`, I think: since the trailing NUL is removed, it shouldn\u0027t count toward `maxLen`.",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 80,
        "endChar": 3
      },
      "revId": "a475ca89a6ceea6391bf5b5c0a645b4137fd5e3b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9770a858_e0b3464b",
        "filename": "src/syscall/syscall_windows.go",
        "patchSetId": 11
      },
      "lineNbr": 89,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-11T16:26:46Z",
      "side": 1,
      "message": "Oh! This could avoid an extra allocation for the `string` using the same trick as `strings.Builder`: since we know the `[]byte` isn\u0027t aliased by any other slice, we can construct it directly from the slice:\n\n```\nbuf :\u003d decodeWTF16(s, make([]byte, 0, maxLen))\nreturn unsafe.String(unsafe.SliceData(buf), len(buf))\n```\n\nThen we don\u0027t have to care about stack-allocating `buf`, because the `string` is presumably going to heap-allocate anyway. (The returned `string` certainly can\u0027t refer to a slice allocated in the `UTF16ToString` stack frame either way. ðŸ˜…)",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 89,
        "endChar": 35
      },
      "revId": "a475ca89a6ceea6391bf5b5c0a645b4137fd5e3b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}