{
  "comments": [
    {
      "key": {
        "uuid": "f645ffe5_bd20ff0c",
        "filename": "src/cmd/asm/internal/arch/ppc64.go",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-09-07T19:51:27Z",
      "side": 1,
      "message": "that\u0027s a long way to write:\n\n   return op \u003d\u003d ppc64.AISEL\n\nI guess you expect more ops?",
      "revId": "5deefdc4e76b56c7af24ac3dc5a87eb2c1720da3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6ddff2c_c0220012",
        "filename": "src/cmd/asm/internal/arch/ppc64.go",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 6320
      },
      "writtenOn": "2016-09-07T21:17:28Z",
      "side": 1,
      "message": "No there shouldn\u0027t be any other ops.  Just wrote it the same way as the other functions.  I can change it.",
      "parentUuid": "f645ffe5_bd20ff0c",
      "revId": "5deefdc4e76b56c7af24ac3dc5a87eb2c1720da3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56cecbf0_a8757b2a",
        "filename": "src/cmd/asm/internal/arch/ppc64.go",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-09-07T23:03:37Z",
      "side": 1,
      "message": "No strong opinion. I\u0027ll let your reviewer decide.\n\nJust a passing question.",
      "parentUuid": "f6ddff2c_c0220012",
      "revId": "5deefdc4e76b56c7af24ac3dc5a87eb2c1720da3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b9e867e_218dce35",
        "filename": "src/cmd/internal/obj/ppc64/asm9.go",
        "patchSetId": 1
      },
      "lineNbr": 2539,
      "author": {
        "id": 7061
      },
      "writtenOn": "2016-09-12T03:16:25Z",
      "side": 1,
      "message": "I\u0027ve been trying to figure out if this matches the order for FSEL, or if FSEL is even correct.\n\n\tcase 34: /* FMADDx fra,frb,frc,frd (d\u003da*b+c); FSELx a\u003c0? (d\u003db): (d\u003dc) */\n\t\to1 \u003d AOP_RRR(oprrr(ctxt, p.As), uint32(p.To.Reg), uint32(p.From.Reg), uint32(p.Reg)) | (uint32(p.From3.Reg)\u002631)\u003c\u003c6\n\n//                      FRC       FRB       FRA\nfunc AOP_RRR(op uint32, d uint32, a uint32, b uint32) uint32 {\n\treturn op | (d\u002631)\u003c\u003c21 | (a\u002631)\u003c\u003c16 | (b\u002631)\u003c\u003c11\n}\nAs I read it, we\u0027ve scrambled these operands.\nWe\u0027re putting From3 @6 which is target, and we\u0027re putting To @21 which is FRC.\nHave I misread this completely ????\nI note that for some reason the operands to FMADD are written T,A,C,B,\nand so also for FSEL, but for ISEL, T,A,B,BC.\n\nI *think* what we want is \n  FSELx a,b,c,d \u003d\u003d a\u003c0 ? (d\u003db): (d\u003dc) meaning a -\u003e FRA@11, d -\u003e FRT@6, b -\u003e FRB@16, c -\u003e FRC@21\n  ISEL  a,b,c,d \u003d\u003d CR[a+32] ? (d\u003db) :(d\u003dc) meaning a -\u003e BC@21, d -\u003e RT@6, b -\u003e RA@11, c-\u003e RB@16\n  FMADD a,b,c,d \u003d\u003d d \u003d a*b+c meaning              a-\u003eFRA@11, c-\u003eFRB@16, b -\u003e FRC@21, d -\u003e FRT@6",
      "range": {
        "startLine": 2539,
        "startChar": 7,
        "endLine": 2539,
        "endChar": 15
      },
      "revId": "5deefdc4e76b56c7af24ac3dc5a87eb2c1720da3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b9e867e_44b900e4",
        "filename": "src/cmd/internal/obj/ppc64/asm9.go",
        "patchSetId": 1
      },
      "lineNbr": 2539,
      "author": {
        "id": 7061
      },
      "writtenOn": "2016-09-12T21:21:26Z",
      "side": 1,
      "message": "I misread the bit numbering, is the problem.\nIgnoring FMADD for the moment, and considering only ISEL, we have a similar (equivalent?) instruction on arm64, CSEL, and the encoding there is:\n\nCB in p.From.Reg (like here)\ntarget in p.To.Reg (like here)\niftrue in p.Reg (ifTrue \u003d FRA)\niffalse in p.From3.Reg (ifFalse \u003d FRB)\n\n(See http://infocenter.arm.com/help/index.jsp?topic\u003d/com.arm.doc.dui0802a/CSEL.html\nand https://github.com/golang/go/blob/master/src/cmd/internal/obj/arm64/asm7.go#L2203 )\n\nSo I think you need to swap A and B here, i.e.\n\n  // rt \u003d To.Reg, ra \u003d p.Reg, rb \u003d p.From3.Reg\n  o1 \u003d AOP_ISEL(OP_ISEL, uint32(p.To.Reg), uint32(p.Reg), uint32(p.From3.Reg), uint32(bc))\n\nI\u0027m going to ignore FSEL for a moment because that comparison is multi-operand, and also wonky in its true/false conventions -- by register order conventions, it looks like \"truth\" is FRA \u003c 0, but by Nan-yields-false conventions it looks like \"truth\" is FRA \u003e\u003d 0.",
      "parentUuid": "6b9e867e_218dce35",
      "revId": "5deefdc4e76b56c7af24ac3dc5a87eb2c1720da3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}