{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "02dc9d40_3af680ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 56073
      },
      "writtenOn": "2022-07-28T18:12:36Z",
      "side": 1,
      "message": "Change set looks about what I was going to propose; this looks good to me (not a gopher)!",
      "revId": "d0012822eb8aed36d924d31a2d338ec3cbbaf1d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c244b4c3_2d4010e6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 11715
      },
      "writtenOn": "2022-08-24T10:41:32Z",
      "side": 1,
      "message": "Mailed CL 425295 with a slightly different fix and the extra tests. Thank you for the PR!",
      "revId": "d0012822eb8aed36d924d31a2d338ec3cbbaf1d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d2c829b_5c0b6a7e",
        "filename": "src/crypto/tls/handshake_server.go",
        "patchSetId": 1
      },
      "lineNbr": 318,
      "author": {
        "id": 56073
      },
      "writtenOn": "2022-07-28T18:12:36Z",
      "side": 1,
      "message": "This was essentially the change I was going to make, just with a different note here to quote the RFC directly:\n\n+       // Per RFC 8422:\n+       //\n+       // \u003e RFC 4492 specified that if this extension is missing, it means that\n+       // \u003e only the uncompressed point format is supported, so interoperability\n+       // \u003e with implementations that support the uncompressed format should work\n+       // with or without the extension.\n+       //\n+       // This is likely not an issue with RFC 8446 / TLSv1.3 because per Section\n+       // 1.2.  Major Differences from TLS 1.2:\n+       //\n+       // \u003e TLS 1.3 removed point format negotiation in favor of a single point\n+       // format for each curve.\n+       //\n+       // Thus, default to true for supportsPointFormat (whether the peer supports\n+       // the uncompressed format) when the extension is elided as well.\n+       //\n+       // During clientHelloMsg.unmarshal(...), we\u0027ve already checked that the\n+       // extension, if present, is non-empty, so this len(...) call is equivalent\n+       // to semantics saying the extension was not provided.",
      "revId": "d0012822eb8aed36d924d31a2d338ec3cbbaf1d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac17ea20_499a0971",
        "filename": "src/crypto/tls/handshake_server_test.go",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 56073
      },
      "writtenOn": "2022-07-28T18:12:36Z",
      "side": 1,
      "message": "It\u0027d be great to add a second one, wherein we use other nonsensical point formats (ANSI) and ensure we don\u0027t accidentally express support for them in our reply.\n\nThis should hold, but implementations like OpenSSL and GnuTLS do show this.\n\nSee also: https://github.com/tlsfuzzer/tlsfuzzer/pull/796",
      "revId": "d0012822eb8aed36d924d31a2d338ec3cbbaf1d6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one Code-Review+2 is required. Self review is not allowed."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "d0012822eb8aed36d924d31a2d338ec3cbbaf1d6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "d0012822eb8aed36d924d31a2d338ec3cbbaf1d6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "d0012822eb8aed36d924d31a2d338ec3cbbaf1d6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Holds",
        "description": {
          "value": "Changes with a Hold+1 vote are not submittable."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "NOT label:Hold\u003d1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"NOT label:Hold=1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Hold=1"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "d0012822eb8aed36d924d31a2d338ec3cbbaf1d6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "d0012822eb8aed36d924d31a2d338ec3cbbaf1d6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}