{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f52d904a_6ae7e2ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-12T15:06:38Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d2bb18f2b",
      "tag": "autogenerated:trybots~beginning",
      "revId": "2bb18f2be2f1b02577de88e01b3cb4095dcfe2b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d6e882f_791c6397",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-12T15:16:42Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d2bb18f2b\nFailed on android-amd64-emu: https://storage.googleapis.com/go-build-log/2bb18f2b/android-amd64-emu_45b916ed.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "f52d904a_6ae7e2ce",
      "tag": "autogenerated:trybots~progress",
      "revId": "2bb18f2be2f1b02577de88e01b3cb4095dcfe2b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "879f18a7_08e16588",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-12T15:20:28Z",
      "side": 1,
      "message": "1 of 25 TryBots failed.\nFailed on android-amd64-emu: https://storage.googleapis.com/go-build-log/2bb18f2b/android-amd64-emu_45b916ed.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "f52d904a_6ae7e2ce",
      "tag": "autogenerated:trybots~failed",
      "revId": "2bb18f2be2f1b02577de88e01b3cb4095dcfe2b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f03cac0_e50bb383",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-12T15:27:14Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d2bb18f2b",
      "tag": "autogenerated:trybots~beginning",
      "revId": "2bb18f2be2f1b02577de88e01b3cb4095dcfe2b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b0fbdac_b8fbf582",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-12T15:27:14Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "f52d904a_6ae7e2ce",
      "tag": "autogenerated:trybots~beginning",
      "revId": "2bb18f2be2f1b02577de88e01b3cb4095dcfe2b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8aa5d179_2224b61e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-05-12T15:27:20Z",
      "side": 1,
      "message": "The code looks good to me. But I don\u0027t really understand why array type is special here. Can we have cyclic array type? Is array the only one that can be cyclic (besides typedefs)?",
      "revId": "2bb18f2be2f1b02577de88e01b3cb4095dcfe2b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13f8dbcf_23ef3a81",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-12T15:40:17Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "3f03cac0_e50bb383",
      "tag": "autogenerated:trybots~happy",
      "revId": "2bb18f2be2f1b02577de88e01b3cb4095dcfe2b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0c1778e_605ebfbd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2021-05-13T12:31:30Z",
      "side": 1,
      "message": "The kernel code that triggers the problem is a struct with a final array field that looks empty, e.g. something like\n\n  struct bar {\n    anotherstruct *field\n    ...\n    struct foo lastfield[];\n  }\n\nwhere \"struct foo\" then contains a reference to \"struct bar\" (perhaps foo has a field of type \"struct bar *\"). It is a common pattern in the kernel, e.g. a struct with a trailing array of objects where the struct and the following array payload are allocated together.\n\nThe specific instance that was triggering this bug is this one here:\n\nhttps://github.com/digitalocean/linux-coresched/blob/master/drivers/gpu/drm/nouveau/include/nvkm/core/engine.h#L41\n\nThe code in debug/dwarf is trying to fix up the array type to make sure it is sane (I assume for cgo), since some compilers (in order to avoid the rule in C that says you can\u0027t have zero-length arrays) will emit a length of 1 for these sorts of constructs.\n\nI spent a little while trying to write a unit test for this, but for some reason I wasn\u0027t able to tickle the C compiler to get something that would trigger the problem (at least not for the small cases I tried).",
      "parentUuid": "8aa5d179_2224b61e",
      "revId": "2bb18f2be2f1b02577de88e01b3cb4095dcfe2b4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}