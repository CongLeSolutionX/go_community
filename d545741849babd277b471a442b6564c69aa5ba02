{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "af5673db_ed52eeea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-02-25T21:54:29Z",
      "side": 1,
      "message": "TRY\u003dlongtest,windows-amd64-longtest",
      "revId": "d545741849babd277b471a442b6564c69aa5ba02",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef4ce93b_371abeb4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-02-25T22:03:47Z",
      "side": 1,
      "message": "\u003e Patch Set 1:\n\u003e \n\u003e Build is still in progress...\n\u003e This change failed on windows-amd64-longtest:\n\u003e See https://storage.googleapis.com/go-build-log/d5457418/windows-amd64-longtest_88868fdf.log\n\nThis failure looks real.\n\nWhen the `go` command is run within `GOROOT/src`, the `std` module is a read module and its vendored dependencies (in `GOROOT/src/vendor`) are the real module dependencies, not special packages internal to `std`.\n\nIs there some other location where we could run the `go` command instead?",
      "revId": "d545741849babd277b471a442b6564c69aa5ba02",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b795858e_430c413d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 28615
      },
      "writtenOn": "2021-02-26T15:47:05Z",
      "side": 1,
      "message": "Well, we could run it from anywhere we like. The requirement seems to be that whatever location we select either doesn\u0027t have a go.mod file \"above\" it, or has a go.mod file under our control. Realizing that, I think the options are:\n\n- designate a location in the source tree in which to check-in a go.mod and from which to run these commands (a special case of this is CL 291289)\n- create a temporary directory, generate a go.mod into it (since we can\u0027t assume a go.mod file isn\u0027t present at the root of the filesystem), and run the tool from there\n\nI think the least surprising option is CL 291289 with some commentary added to the go.mod file there.",
      "parentUuid": "ef4ce93b_371abeb4",
      "revId": "d545741849babd277b471a442b6564c69aa5ba02",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37aada5e_c9da2c94",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-02-26T21:44:12Z",
      "side": 1,
      "message": "I think we should try to avoid checking in a go.mod file in the repo root directory; it implies there\u0027s a module when they\u0027re really isn\u0027t, and that\u0027s likely to confuse people.\n\nCreating a go.mod in a temporary directory seems fine though. We do that with a few other tools.\n\nOut of an abundance of caution (paranoia?) I\u0027d suggest creating the temporary directory somewhere within GOROOT with a predictable name (tmproot? Or pkg/tmproot?). The go.mod file should have a comment explaining what it\u0027s for and that it was generated by cmd/dist.",
      "parentUuid": "b795858e_430c413d",
      "revId": "d545741849babd277b471a442b6564c69aa5ba02",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7dfb7dad_5fb8a51e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 28615
      },
      "writtenOn": "2021-03-02T15:21:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37aada5e_c9da2c94",
      "revId": "d545741849babd277b471a442b6564c69aa5ba02",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}