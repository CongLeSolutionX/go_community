{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dd784329_630014c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-17T23:27:04Z",
      "side": 1,
      "message": "TRY\u003daix,darwin,openbsd,solaris,linux-amd64-longtest",
      "revId": "96579e27ac0afcfde2c83cb17e7901210a6e3c7f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "861f75a9_0409a932",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-17T23:27:22Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d96579e27\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "96579e27ac0afcfde2c83cb17e7901210a6e3c7f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "382affa9_f225b1b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-18T00:08:59Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* aix-ppc64\n* darwin-amd64-13\n* linux-amd64-longtest\n* openbsd-amd64-72\n* solaris-amd64-oraclerel\n",
      "parentUuid": "861f75a9_0409a932",
      "tag": "autogenerated:trybots~happy",
      "revId": "96579e27ac0afcfde2c83cb17e7901210a6e3c7f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0ad5040_7aadda00",
        "filename": "src/runtime/netpoll.go",
        "patchSetId": 3
      },
      "lineNbr": 251,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-18T14:13:07Z",
      "side": 1,
      "message": "(not sure)\n\nDoes this have synchronization implications for the atomic load of `pd.fdseq` in `netpollopen`, or is `netpollopen` always synchronized w.r.t. `poll_runtime_pollOpen` some other way?\n\n(I\u0027m guessing that `poll_runtime_pollOpen` always happens before `netpollopen` for a given use of the `pollDesc`, and the atomicity is only really needed in `netpoll` proper?)",
      "range": {
        "startLine": 248,
        "startChar": 0,
        "endLine": 251,
        "endChar": 2
      },
      "revId": "96579e27ac0afcfde2c83cb17e7901210a6e3c7f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22efcf33_f87ea59d",
        "filename": "src/runtime/netpoll_solaris.go",
        "patchSetId": 3
      },
      "lineNbr": 151,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-18T14:13:07Z",
      "side": 1,
      "message": "Maybe add a `throw` here if `goarch.PtrSize !\u003d 8`?\n\nI don\u0027t expect that we\u0027ll ever add a 32-bit Solaris or Illumos port, but in the unlikely chance that that does ever happen it would be nice not to have a known bug lurking undetected.",
      "revId": "96579e27ac0afcfde2c83cb17e7901210a6e3c7f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}