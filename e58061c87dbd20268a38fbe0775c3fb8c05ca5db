{
  "comments": [
    {
      "key": {
        "uuid": "b031cf08_4df794b6",
        "filename": "src/cmd/trace/annotations.go",
        "patchSetId": 9
      },
      "lineNbr": 405,
      "author": {
        "id": 17090
      },
      "writtenOn": "2018-02-16T21:57:38Z",
      "side": 1,
      "message": "Since this is GC-specific, it should have GC in the name. gcOverlapDuration or something? Also, I guess GoStart[Label] is presumed to be a GC worker? I\u0027m not sure how much sense it makes to include those...couldn\u0027t the user goroutine just have gone to sleep? And how does anything besides GCStart get into gcEvents anyway?",
      "range": {
        "startLine": 405,
        "startChar": 22,
        "endLine": 405,
        "endChar": 41
      },
      "revId": "e58061c87dbd20268a38fbe0775c3fb8c05ca5db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af48d46b_be68b6c9",
        "filename": "src/cmd/trace/annotations.go",
        "patchSetId": 9
      },
      "lineNbr": 405,
      "author": {
        "id": 5190
      },
      "writtenOn": "2018-02-20T23:07:06Z",
      "side": 1,
      "message": "This was not intended to be GC specific. The intention was to return the time period when the durational event (represented as a slice in the trace view) overlaps with the task\u0027s activity. \n\nI used this for two different purposes and maybe that made this more confusing. \n\nNow I separated them. First one is overlappingGCTime - which simply returns the sum of GC time periods that overlaps with task\u0027s life time.\n\nThe second one is to determine whether a slice (emitted while processing the event) is overlapping with any of the task\u0027s span, so we can grey out the spans that are not relevant to the focus tasks.",
      "parentUuid": "b031cf08_4df794b6",
      "range": {
        "startLine": 405,
        "startChar": 22,
        "endLine": 405,
        "endChar": 41
      },
      "revId": "e58061c87dbd20268a38fbe0775c3fb8c05ca5db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "477f8ba9_e0b17a69",
        "filename": "src/cmd/trace/annotations.go",
        "patchSetId": 9
      },
      "lineNbr": 405,
      "author": {
        "id": 17090
      },
      "writtenOn": "2018-02-21T17:18:39Z",
      "side": 1,
      "message": "I see. I think having a function to calculate the overlapping duration is fine, and using it in trace.go is fine. (I missed that call, which is why I was confused before.) But I\u0027m much happier with the type switch separate from the overlap calculation. So I\u0027d change hasOverlappingSpan to overlappingDuration, and then you can use it in overlappingGCTime, right?\n\nnit: shouldn\u0027t it be overlapping GCDuration?",
      "parentUuid": "af48d46b_be68b6c9",
      "range": {
        "startLine": 405,
        "startChar": 22,
        "endLine": 405,
        "endChar": 41
      },
      "revId": "e58061c87dbd20268a38fbe0775c3fb8c05ca5db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55651e16_49625288",
        "filename": "src/cmd/trace/annotations.go",
        "patchSetId": 9
      },
      "lineNbr": 405,
      "author": {
        "id": 5190
      },
      "writtenOn": "2018-02-21T18:56:08Z",
      "side": 1,
      "message": "Thanks. PTAL",
      "parentUuid": "477f8ba9_e0b17a69",
      "range": {
        "startLine": 405,
        "startChar": 22,
        "endLine": 405,
        "endChar": 41
      },
      "revId": "e58061c87dbd20268a38fbe0775c3fb8c05ca5db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "872db1f2_a5a54898",
        "filename": "src/cmd/trace/annotations.go",
        "patchSetId": 9
      },
      "lineNbr": 428,
      "author": {
        "id": 17090
      },
      "writtenOn": "2018-02-16T21:57:38Z",
      "side": 1,
      "message": "Now I\u0027m really confused. This makes sense for Mark/Sweep, but for GoStart, what are these goroutines that are part of a GC that have the same ID as something that ran a user span? Maybe I\u0027m completely misunderstanding what this function is for.",
      "revId": "e58061c87dbd20268a38fbe0775c3fb8c05ca5db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f0e2f5b_6d186d8d",
        "filename": "src/cmd/trace/annotations.go",
        "patchSetId": 9
      },
      "lineNbr": 428,
      "author": {
        "id": 5190
      },
      "writtenOn": "2018-02-20T23:07:06Z",
      "side": 1,
      "message": "See the response to the previous comment. :-)",
      "parentUuid": "872db1f2_a5a54898",
      "revId": "e58061c87dbd20268a38fbe0775c3fb8c05ca5db",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}