{
  "comments": [
    {
      "key": {
        "uuid": "e29439c3_1bd85b37",
        "filename": "src/net/http/request.go",
        "patchSetId": 3
      },
      "lineNbr": 915,
      "author": {
        "id": 10961
      },
      "writtenOn": "2016-03-06T20:19:49Z",
      "side": 1,
      "message": "Is there a reason for using bytes.Buffer and not just a []byte with append() and string()?",
      "range": {
        "startLine": 915,
        "startChar": 0,
        "endLine": 915,
        "endChar": 21
      },
      "revId": "65f1d2ef8109472cc1789a76821a49a9c275e980",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17f7d148_c348ea58",
        "filename": "src/net/http/request.go",
        "patchSetId": 3
      },
      "lineNbr": 918,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-03-06T20:21:52Z",
      "side": 1,
      "message": "Btw you are using a buffer of  just one byte. Couldn\u0027t we use a bigger one of certain fixed size e.g like 512 bytes(I\u0027ve chosen an arbitrary value but it could be more or less) and then perform the proceeding loop for the data in that?",
      "revId": "65f1d2ef8109472cc1789a76821a49a9c275e980",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17f7d148_e33be6cc",
        "filename": "src/net/http/request.go",
        "patchSetId": 3
      },
      "lineNbr": 928,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-03-06T20:21:52Z",
      "side": 1,
      "message": "This looks quite busy, let\u0027s reverse conditional it\n\n`\nshouldUnescapeAndReset :\u003d n \u003d\u003d 0 || b[0] \u003d\u003d \u0027\u0026\u0027 || b[0] \u003d\u003d \u0027\u003d\u0027\nif !shouldUnescapeAndReset {\n      buf.Write(b)\n      continue\n}\n\nv, e \u003d url.QueryUnescape(buf.String())\nand then finish up the rest of the loop\n`",
      "revId": "65f1d2ef8109472cc1789a76821a49a9c275e980",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c26575c5_fa0ba971",
        "filename": "src/net/http/request.go",
        "patchSetId": 3
      },
      "lineNbr": 935,
      "author": {
        "id": 10961
      },
      "writtenOn": "2016-03-06T20:19:49Z",
      "side": 1,
      "message": "key and value aren\u0027t getting set.",
      "range": {
        "startLine": 935,
        "startChar": 0,
        "endLine": 935,
        "endChar": 36
      },
      "revId": "65f1d2ef8109472cc1789a76821a49a9c275e980",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17f7d148_235aee20",
        "filename": "src/net/http/request.go",
        "patchSetId": 3
      },
      "lineNbr": 937,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-03-06T20:21:52Z",
      "side": 1,
      "message": "Please go fmt your code.",
      "revId": "65f1d2ef8109472cc1789a76821a49a9c275e980",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}