{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b6216fee_9069cf3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-02T02:17:02Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d1387d1e7",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1387d1e71eb2f571782a92cceb6e58caeaf1a779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d098f222_a59c313e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-02T02:17:02Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "93cbc02a_b7118207",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1387d1e71eb2f571782a92cceb6e58caeaf1a779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0347e7d7_0e5e688a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-02T02:29:53Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "b6216fee_9069cf3b",
      "tag": "autogenerated:trybots~happy",
      "revId": "1387d1e71eb2f571782a92cceb6e58caeaf1a779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b93ee328_5ae3541a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-09-02T02:35:30Z",
      "side": 1,
      "message": "This is a minor optimization to crawler that I found during porting it to unified IR, but backporting it to -G\u003d3 revealed that something seems to be broken there. See the typeparam/mdempsky/15.go failures with PS1.\n\nPS2 now includes a workaround so the tests pass, but it seems like a proper fix is needed. Evidently IsInstantiatedGeneric is reporting false for \"X[int]\", but it seems like it should report true?",
      "revId": "1387d1e71eb2f571782a92cceb6e58caeaf1a779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60647a49_1edaa64f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-09-02T14:23:42Z",
      "side": 1,
      "message": "IsInstantiatedGeneric() is explicitly only true for a type that is re-instantiated with a new typeparam, e.g. X[T2].  This kind of type occurs when you define a method for generic type.  X[T2]\u0027s methods don\u0027t add anything over X\u0027s methods, hence the check above.  However, X[int] has real methods and their types matter, though whether the methods will actually be created and used depends on whether you are doing pure stenciling or dictionaries.\n\nHopefully you can get this optimization working in all cases, without the workaround for -G\u003d3\n\n(BTW, IsFullyInstantiated() returns true for something like X[int], but false for X or X[T2].)",
      "parentUuid": "b93ee328_5ae3541a",
      "revId": "1387d1e71eb2f571782a92cceb6e58caeaf1a779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}