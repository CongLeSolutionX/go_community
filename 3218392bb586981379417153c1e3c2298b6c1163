{
  "comments": [
    {
      "key": {
        "uuid": "0dab47cc_dce7a8a1",
        "filename": "src/time/zoneinfo_unix.go",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 5206
      },
      "writtenOn": "2018-09-12T17:42:11Z",
      "side": 1,
      "message": "I don\u0027t think \"Local\" is the right name here.  In this package that indicates the system\u0027s local time zone; if TZ is set at all, we shouldn\u0027t assume it\u0027s the local time zone.",
      "revId": "3218392bb586981379417153c1e3c2298b6c1163",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f1bfa47_d7e293e2",
        "filename": "src/time/zoneinfo_unix.go",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 29128
      },
      "writtenOn": "2018-09-13T06:21:23Z",
      "side": 1,
      "message": "There is no reliable way to figure out the exact timezone id when loading timezone from arbitrary file. For example, you can hardly know what\u0027s the ID of file \":/etc/mytz\". Actually I\u0027m planning to send another PR to guess the timezone id on its best effort. But this may change the existing behavior as loading timezone from \"/etc/localtime\" is not necessary \"Local\" if it\u0027s a soft link to timezone file located in /usr/share/zoneinfo/xxx, which is now always set to \"Local\" at L42.\n\nIf the break change looks good, I\u0027m also open to add the changes in this PR directly.",
      "parentUuid": "0dab47cc_dce7a8a1",
      "revId": "3218392bb586981379417153c1e3c2298b6c1163",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5087a81a_1d90135e",
        "filename": "src/time/zoneinfo_unix.go",
        "patchSetId": 6
      },
      "lineNbr": 52,
      "author": {
        "id": 5206
      },
      "writtenOn": "2018-09-13T16:07:16Z",
      "side": 1,
      "message": "I don\u0027t think we should change the current behavior of `time.Local`.  If the user makes no effort to change the timezone, we should return a timezone whose name is `\"Local\"`, as we do today.  Changing that seems sure to break existing programs, so we would need a really good reason.\n\nBut if the user does make an effort to change the timezone, by setting the `TZ` environment, then I think it does not make sense to return a timezone whose name is `\"Local\"`.  There is no particular reason to think that that is the right name in that case.\n\nDoes that make sense?",
      "parentUuid": "6f1bfa47_d7e293e2",
      "revId": "3218392bb586981379417153c1e3c2298b6c1163",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}