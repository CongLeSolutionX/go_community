{
  "comments": [
    {
      "key": {
        "uuid": "316c5e21_54c46788",
        "filename": "src/fmt/print.go",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 10961
      },
      "writtenOn": "2018-09-18T22:09:43Z",
      "side": 1,
      "message": "Given the preceding comment explains, delete the single-use const as the\nsole use is on the next line, and if 1\u003c\u003c16 needs explanation,\nI\u0027d say not, then use 64*1024?",
      "revId": "89ec498e8e28a05d00802fdd33248947b60131ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d044cb42_37631296",
        "filename": "src/fmt/print.go",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 9735
      },
      "writtenOn": "2018-09-19T17:11:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "316c5e21_54c46788",
      "revId": "89ec498e8e28a05d00802fdd33248947b60131ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe9d5adf_fe2f13f3",
        "filename": "src/fmt/print.go",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 6365
      },
      "writtenOn": "2018-09-19T13:19:18Z",
      "side": 1,
      "message": "(nit)\n\n`64 \u003c\u003c 10` would be a somewhat clearer way to express the constant in terms of KiB.",
      "range": {
        "startLine": 148,
        "startChar": 17,
        "endLine": 148,
        "endChar": 33
      },
      "revId": "89ec498e8e28a05d00802fdd33248947b60131ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0cacab9_818f4a2e",
        "filename": "src/fmt/print.go",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 9735
      },
      "writtenOn": "2018-09-19T17:11:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe9d5adf_fe2f13f3",
      "range": {
        "startLine": 148,
        "startChar": 17,
        "endLine": 148,
        "endChar": 33
      },
      "revId": "89ec498e8e28a05d00802fdd33248947b60131ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a6c33c0_4f2e11e5",
        "filename": "src/fmt/print.go",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 16006
      },
      "writtenOn": "2018-09-19T05:02:36Z",
      "side": 1,
      "message": "Could we set p.buf to nil and still store p in the sync.Pool? This would avoid needing to allocate a new printer later and still bound the buffer size.",
      "range": {
        "startLine": 148,
        "startChar": 1,
        "endLine": 151,
        "endChar": 2
      },
      "revId": "89ec498e8e28a05d00802fdd33248947b60131ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "007e0c79_aa7d88b9",
        "filename": "src/fmt/print.go",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 9735
      },
      "writtenOn": "2018-09-19T17:11:00Z",
      "side": 1,
      "message": "A significant part of the previous optimization is the caching of the backing byte slice, not the pp struct.",
      "parentUuid": "6a6c33c0_4f2e11e5",
      "range": {
        "startLine": 148,
        "startChar": 1,
        "endLine": 151,
        "endChar": 2
      },
      "revId": "89ec498e8e28a05d00802fdd33248947b60131ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}