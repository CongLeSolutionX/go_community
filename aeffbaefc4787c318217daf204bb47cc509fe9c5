{
  "comments": [
    {
      "key": {
        "uuid": "d8db30d2_9eebe402",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-10T20:18:40Z",
      "side": 1,
      "message": "if len(s) \u003d\u003d 0, you just produced an past-the-end pointer in _p \u003d \u0026s[0]\n\nBut you did say \"roughly\".",
      "range": {
        "startLine": 39,
        "startChar": 16,
        "endLine": 39,
        "endChar": 29
      },
      "revId": "aeffbaefc4787c318217daf204bb47cc509fe9c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5a82331_10a7c95d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 5167
      },
      "writtenOn": "2018-05-10T20:22:46Z",
      "side": 1,
      "message": "If taken literally, this produces an index out of bounds panic. :) But what it actually translates to is just the base pointer of the slice. That pointer already exists and must not be past-the-end, so _p is not past-the-end (slicing operations are actually compiled such that if you create a zero-length slice, we\u0027re careful that the slice base pointer isn\u0027t a past-the-end pointer).",
      "parentUuid": "d8db30d2_9eebe402",
      "range": {
        "startLine": 39,
        "startChar": 16,
        "endLine": 39,
        "endChar": 29
      },
      "revId": "aeffbaefc4787c318217daf204bb47cc509fe9c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d28b90e_aadaf06d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-10T20:23:55Z",
      "side": 1,
      "message": "Ah, right, zerobase iirc.",
      "parentUuid": "d5a82331_10a7c95d",
      "range": {
        "startLine": 39,
        "startChar": 16,
        "endLine": 39,
        "endChar": 29
      },
      "revId": "aeffbaefc4787c318217daf204bb47cc509fe9c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33192ffb_aa10602f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 5200
      },
      "writtenOn": "2018-05-07T19:58:46Z",
      "side": 1,
      "message": "end and body are backwards here and line 46.",
      "range": {
        "startLine": 40,
        "startChar": 12,
        "endLine": 40,
        "endChar": 41
      },
      "revId": "aeffbaefc4787c318217daf204bb47cc509fe9c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7487c3ba_1969cb86",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 5167
      },
      "writtenOn": "2018-05-10T20:12:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33192ffb_aa10602f",
      "range": {
        "startLine": 40,
        "startChar": 12,
        "endLine": 40,
        "endChar": 41
      },
      "revId": "aeffbaefc4787c318217daf204bb47cc509fe9c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a826d82e_2f7ca081",
        "filename": "src/cmd/compile/internal/gc/syntax.go",
        "patchSetId": 4
      },
      "lineNbr": 703,
      "author": {
        "id": 5200
      },
      "writtenOn": "2018-05-07T19:58:46Z",
      "side": 1,
      "message": "This is impossible to read.  Can we punt to a multiline comment and some English?",
      "revId": "aeffbaefc4787c318217daf204bb47cc509fe9c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4460612a_fc57b466",
        "filename": "src/cmd/compile/internal/gc/syntax.go",
        "patchSetId": 4
      },
      "lineNbr": 703,
      "author": {
        "id": 5167
      },
      "writtenOn": "2018-05-10T20:12:06Z",
      "side": 1,
      "message": "But if it\u0027s not impossible to read, how will people know that it\u0027s hard? :)",
      "parentUuid": "a826d82e_2f7ca081",
      "revId": "aeffbaefc4787c318217daf204bb47cc509fe9c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efef818f_0638aaea",
        "filename": "test/prove.go",
        "patchSetId": 4
      },
      "lineNbr": 671,
      "author": {
        "id": 5200
      },
      "writtenOn": "2018-05-07T19:58:46Z",
      "side": 1,
      "message": "Maybe also have this outside the `if`?\nWe want to make sure the bounds check gets i\u003clen(b) from the loop, not from the `if`.",
      "revId": "aeffbaefc4787c318217daf204bb47cc509fe9c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a0262b8_c6b9dfb9",
        "filename": "test/prove.go",
        "patchSetId": 4
      },
      "lineNbr": 671,
      "author": {
        "id": 5167
      },
      "writtenOn": "2018-05-10T20:12:06Z",
      "side": 1,
      "message": "Done. Also in range2.",
      "parentUuid": "efef818f_0638aaea",
      "revId": "aeffbaefc4787c318217daf204bb47cc509fe9c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}