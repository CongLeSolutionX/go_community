{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ce397a34_67d87d36",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5056
      },
      "writtenOn": "2022-06-22T16:22:26Z",
      "side": 1,
      "message": "Hold for #43936.\n",
      "revId": "884d58a25964867213bbacca917a20c344328687",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28103fed_0b304850",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 35296
      },
      "writtenOn": "2022-08-18T07:22:16Z",
      "side": 1,
      "message": "Perhaps this should also include a `Meta()` method on `testing.M` so that metadata can be associated globally with the package in addition to individual test cases. Calling `Meta()` on `testing.M` would generate a log that uses \"TestMain\" for the test name (`--- META: TestMain: key: value`). Alternatively, it could omit the test name (`--- META: key: value`).",
      "revId": "884d58a25964867213bbacca917a20c344328687",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd6656d5_5ec746e3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7395
      },
      "writtenOn": "2022-08-18T19:25:19Z",
      "side": 1,
      "message": "If there\u0027s interest in landing this I can dust it off; I thought this was held up for a conclusion on #43936?",
      "parentUuid": "28103fed_0b304850",
      "revId": "884d58a25964867213bbacca917a20c344328687",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4e4a290_9806640f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7395
      },
      "writtenOn": "2022-08-18T19:26:35Z",
      "side": 1,
      "message": "(but yes I like the idea of adding this to `testing.M` as well :))",
      "parentUuid": "fd6656d5_5ec746e3",
      "revId": "884d58a25964867213bbacca917a20c344328687",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dad219d_9ff25502",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 960,
      "author": {
        "id": 7395
      },
      "writtenOn": "2021-10-22T03:17:30Z",
      "side": 1,
      "message": "I need to also prevent these both from containing a newline as well.",
      "revId": "884d58a25964867213bbacca917a20c344328687",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65768c1a_3f457bec",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 965,
      "author": {
        "id": 14570
      },
      "writtenOn": "2023-07-27T19:49:55Z",
      "side": 1,
      "message": "key string, value any?",
      "range": {
        "startLine": 965,
        "startChar": 33,
        "endLine": 965,
        "endChar": 39
      },
      "revId": "884d58a25964867213bbacca917a20c344328687",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af04c66f_6c66d0b8",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 965,
      "author": {
        "id": 7395
      },
      "writtenOn": "2023-07-27T21:42:12Z",
      "side": 1,
      "message": "I think my concern was that the intent here is to communicate data from the test to the reader of test2json; I\u0027m worried that `any` here would encourage putting stuff like structs which are going to be very difficult to extract value from on the other side (without an encoding like json... but `testing` can\u0027t depend on json, so the caller can just encode this themselves).",
      "parentUuid": "65768c1a_3f457bec",
      "range": {
        "startLine": 965,
        "startChar": 33,
        "endLine": 965,
        "endChar": 39
      },
      "revId": "884d58a25964867213bbacca917a20c344328687",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cbac661_8cbacb48",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 972,
      "author": {
        "id": 14570
      },
      "writtenOn": "2023-07-27T19:49:55Z",
      "side": 1,
      "message": "Maybe %q here.",
      "range": {
        "startLine": 972,
        "startChar": 47,
        "endLine": 972,
        "endChar": 48
      },
      "revId": "884d58a25964867213bbacca917a20c344328687",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05c38af1_13d769fe",
        "filename": "src/testing/testing.go",
        "patchSetId": 1
      },
      "lineNbr": 972,
      "author": {
        "id": 7395
      },
      "writtenOn": "2023-07-27T21:42:12Z",
      "side": 1,
      "message": "This CL is clearly quite old and needs to be rebased ðŸ˜Š\n\nYeah I think %q is appropriate here",
      "parentUuid": "4cbac661_8cbacb48",
      "range": {
        "startLine": 972,
        "startChar": 47,
        "endLine": 972,
        "endChar": 48
      },
      "revId": "884d58a25964867213bbacca917a20c344328687",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}