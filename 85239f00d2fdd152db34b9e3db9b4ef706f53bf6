{
  "comments": [
    {
      "key": {
        "uuid": "b65c3e65_2daf45c0",
        "filename": "src/runtime/malloc.go",
        "patchSetId": 1
      },
      "lineNbr": 453,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-11-04T17:54:11Z",
      "side": 1,
      "message": "Shouldn\u0027t we also subtract the amount we rounded up from p_size?\n\n  delta :\u003d round(p, _PageSize) - p\n  p +\u003d delta\n  p_size -\u003d delta",
      "revId": "85239f00d2fdd152db34b9e3db9b4ef706f53bf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d659b274_dab645a5",
        "filename": "src/runtime/malloc.go",
        "patchSetId": 1
      },
      "lineNbr": 453,
      "author": {
        "id": 5400
      },
      "writtenOn": "2015-11-04T19:16:15Z",
      "side": 1,
      "message": "Doh!\n\nThere is also sysFree call below that needs original p and p_size.\n\nPTAL",
      "parentUuid": "b65c3e65_2daf45c0",
      "revId": "85239f00d2fdd152db34b9e3db9b4ef706f53bf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6fe126f_f5d35228",
        "filename": "src/runtime/malloc.go",
        "patchSetId": 1
      },
      "lineNbr": 455,
      "author": {
        "id": 5167
      },
      "writtenOn": "2015-11-04T19:29:47Z",
      "side": 1,
      "message": "Can you give an example of how this overflow check fails to catch the issue in the original code? Why doesn\u0027t the extra + _PageSize in p_size give enough slack?\n\nIt seems like we ultimately want p\u0027 + n \u003c arena_start+_MaxArena32. Given that we pass this overflow check:\n\n    p + p_size - arena_start \u003c _MaxArena32\n\u003c\u003d\u003e p + round(n, _PageSize) + _PageSize \u003c arena_start+_MaxArena32\n \u0026\u0026 round(p, _PageSize) + n \u003c p + round(n, _PageSize) + _PageSize\n\u003c\u003d\u003e round(p, _PageSize) + n \u003c arena_start+_MaxArena32\n \u003d\u003e p\u0027 + n \u003c arena_start+_MaxArena32",
      "revId": "85239f00d2fdd152db34b9e3db9b4ef706f53bf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6befe8e_a93b5dc5",
        "filename": "src/runtime/malloc.go",
        "patchSetId": 1
      },
      "lineNbr": 455,
      "author": {
        "id": 5400
      },
      "writtenOn": "2015-11-04T19:56:57Z",
      "side": 1,
      "message": "You are right. I don\u0027t see any issues in this code now. Or maybe it\u0027s just too late.\nDo we have any ideas of how the panic in the issue can happen then?",
      "parentUuid": "d6fe126f_f5d35228",
      "revId": "85239f00d2fdd152db34b9e3db9b4ef706f53bf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6fe126f_954be6a9",
        "filename": "src/runtime/malloc.go",
        "patchSetId": 1
      },
      "lineNbr": 455,
      "author": {
        "id": 5167
      },
      "writtenOn": "2015-11-04T20:02:52Z",
      "side": 1,
      "message": "Unfortunately, I managed to \"prove\" that the bounds check in the issue can\u0027t fail under your modified code before I\u0027d convinced myself that your modified code didn\u0027t change any of the conditions of the proof. So, uh, no. :) But obviously my reasoning was wrong somewhere.",
      "parentUuid": "b6befe8e_a93b5dc5",
      "revId": "85239f00d2fdd152db34b9e3db9b4ef706f53bf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6fe126f_359f9a77",
        "filename": "src/runtime/malloc.go",
        "patchSetId": 1
      },
      "lineNbr": 457,
      "author": {
        "id": 5167
      },
      "writtenOn": "2015-11-04T19:29:47Z",
      "side": 1,
      "message": "This needs to be passed the original p (and p_size) passed to sysAlloc.",
      "revId": "85239f00d2fdd152db34b9e3db9b4ef706f53bf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6fe126f_15f256c7",
        "filename": "src/runtime/malloc.go",
        "patchSetId": 1
      },
      "lineNbr": 457,
      "author": {
        "id": 5167
      },
      "writtenOn": "2015-11-04T19:30:28Z",
      "side": 1,
      "message": "Nevermind, you fixed this in PS2.",
      "parentUuid": "d6fe126f_359f9a77",
      "revId": "85239f00d2fdd152db34b9e3db9b4ef706f53bf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b65c3e65_edb42d0f",
        "filename": "src/runtime/malloc.go",
        "patchSetId": 1
      },
      "lineNbr": 462,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-11-04T17:54:11Z",
      "side": 1,
      "message": "Then use p_end everywhere below instead of p+n",
      "range": {
        "startLine": 462,
        "startChar": 4,
        "endLine": 462,
        "endChar": 16
      },
      "revId": "85239f00d2fdd152db34b9e3db9b4ef706f53bf6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}