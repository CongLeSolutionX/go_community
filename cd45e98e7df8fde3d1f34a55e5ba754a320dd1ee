{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5ad2e994_578c9fb8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-03T22:31:52Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dcd45e98e",
      "tag": "autogenerated:trybots~beginning",
      "revId": "cd45e98e7df8fde3d1f34a55e5ba754a320dd1ee",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d504783_40852d97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-03T22:43:39Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "5ad2e994_578c9fb8",
      "tag": "autogenerated:trybots~happy",
      "revId": "cd45e98e7df8fde3d1f34a55e5ba754a320dd1ee",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34e5a0bf_91e0aeaf",
        "filename": "src/net/netip/netip.go",
        "patchSetId": 1
      },
      "lineNbr": 775,
      "author": {
        "id": 5065
      },
      "writtenOn": "2022-05-04T16:55:56Z",
      "side": 1,
      "message": "Isn\u0027t this still two allocs? One for the string4() and then another for the final result with the \":ffff:\" prefix etc?\n\nMy TODO meant to used a byte buffer and then append \":fffff:\" and then append the string4 and then append the zone and string([]byte) that result, which the compiler could keep on the stack, bringing it down to just 1 alloc.\n\nOr does the compiler inline string4 and do the right thing?",
      "range": {
        "startLine": 771,
        "startChar": 0,
        "endLine": 775,
        "endChar": 0
      },
      "revId": "cd45e98e7df8fde3d1f34a55e5ba754a320dd1ee",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}