{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b6838fca_9acfcd56",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6010
      },
      "writtenOn": "2022-01-27T17:15:14Z",
      "side": 1,
      "message": "Absolutely. Pointer in particular makes life so much easier.\n\nI wonder if it might be worth declaring a generic interface that covers all of those new types:\n\ntype ValueOf[T any] interface {\n\tLoad() T\n\tStore(T)\n\tSwap(T) T\n\tCompareAndSwap(T, T) bool\n}\n\n(I don\u0027t know what the preferred spelling for \"Of\" types is these days).\n\nUnfortunately these types aren\u0027t automatically convertible to that interface (cf https://github.com/golang/go/issues/41176) but I think the type is still useful (and makes it clear that they all conform to the same pattern too).\n",
      "revId": "f62bcf0d7b9ae1f294b225e63317771e14f434e7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4675542b_ac7d38d6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5056
      },
      "writtenOn": "2022-01-27T18:36:56Z",
      "side": 1,
      "message": "Nice idea. Can you please comment on the proposal issue instead? Thanks.",
      "parentUuid": "b6838fca_9acfcd56",
      "revId": "f62bcf0d7b9ae1f294b225e63317771e14f434e7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0db71dd6_191ded0a",
        "filename": "src/sync/atomic/type.go",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-01-27T20:52:30Z",
      "side": 1,
      "message": "The various embedded noCopy types should be named, as in the sync package, so that these types don\u0027t inherit useless Lock and Unlock methods.",
      "revId": "f62bcf0d7b9ae1f294b225e63317771e14f434e7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}