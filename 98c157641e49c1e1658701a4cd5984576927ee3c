{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4fe17350_125d6c3d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-08-05T10:06:37Z",
      "side": 1,
      "message": "I spotted some possible problems.\n\nThese findings are based on simple heuristics. If a finding appears wrong, briefly reply here saying so. Otherwise, please address any problems and update the GitHub PR. When complete, mark this comment as \u0027Done\u0027 and click the [blue \u0027Reply\u0027 button](https://go.dev/wiki/GerritBot#i-left-a-reply-to-a-comment-in-gerrit-but-no-one-but-me-can-see-it) above.\n\nPossible problems detected:\n  1. You usually need to reference a bug number for all but trivial or cosmetic fixes. For this repo, the format is usually \u0027Fixes #12345\u0027 or \u0027Updates #12345\u0027 at the end of the commit message. Should you have a bug reference?\n\nThe commit title and commit message body come from the GitHub PR title and description, and must be edited in the GitHub web interface (not via git). For instructions, see [here](https://go.dev/wiki/GerritBot/#how-does-gerritbot-determine-the-final-commit-message). For guidelines on commit messages for the Go project, see [here](https://go.dev/doc/contribute#commit_messages).\n\n\n(In general for Gerrit code reviews, the change author is expected to [log in to Gerrit](https://go-review.googlesource.com/login/) with a Gmail or other Google account and then close out each piece of feedback by marking it as \u0027Done\u0027 if implemented as suggested or otherwise reply to each review comment. See the [Review](https://go.dev/doc/contribute#review) section of the Contributing Guide for details.)",
      "revId": "98c157641e49c1e1658701a4cd5984576927ee3c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29ab472a_8adc5fbc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 64373
      },
      "writtenOn": "2024-08-05T10:15:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "4fe17350_125d6c3d",
      "revId": "98c157641e49c1e1658701a4cd5984576927ee3c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec5144b9_687e45ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-08-05T16:25:34Z",
      "side": 1,
      "message": "Many of the go/types files are near duplicates of the files with the same names in cmd/compile/internal/types2.  We should change them both at the same time.\n\nAnd note that the files in cmd/compile/internal/types2 can only uses the slices package once https://go.dev/issue/64751 is completed.",
      "revId": "98c157641e49c1e1658701a4cd5984576927ee3c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3a10e9a_1b7037af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-08-05T16:32:30Z",
      "side": 1,
      "message": "What Ian said.\n\nAlso, all the changes should first be made in types2. Then the generator (go generate in go/types) should be run to auto-generate files that can be auto-generated. Then the remaining files in go/types should be adjusted accordingly. We keep types2 and go/types strictly in sync.\n\nAn an aside, there\u0027s no urgency to make these changes at this point.",
      "parentUuid": "ec5144b9_687e45ea",
      "revId": "98c157641e49c1e1658701a4cd5984576927ee3c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e394bdbf_4d0d47d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 44473
      },
      "writtenOn": "2024-08-05T17:41:42Z",
      "side": 1,
      "message": "Also it seems like a bad idea to do this before the x/ repos are past 1.21. https://go.dev/issues/65917",
      "parentUuid": "c3a10e9a_1b7037af",
      "revId": "98c157641e49c1e1658701a4cd5984576927ee3c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82f71594_fdcf8469",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 31647
      },
      "writtenOn": "2024-08-05T17:44:53Z",
      "side": 1,
      "message": "I don\u0027t think that matters here. While, for example, x/tools may target an old Go version, it certainly builds with 1.22, so I don\u0027t think there is any compatibility problem.",
      "parentUuid": "e394bdbf_4d0d47d1",
      "revId": "98c157641e49c1e1658701a4cd5984576927ee3c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}