{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2386351b_b1a83984",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-05-11T18:44:26Z",
      "side": 1,
      "message": "This change maintains the preallocation behavior, but I think we could also reasonably just remove it entirely. Not really strongly opinionated either way.",
      "revId": "343cba495cda10e68d6632a817c1f12362158147",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05010c93_5648b6b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-11T18:44:41Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d343cba49",
      "tag": "autogenerated:trybots~beginning",
      "revId": "343cba495cda10e68d6632a817c1f12362158147",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "266037bc_7f13300f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-11T18:57:20Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "05010c93_5648b6b4",
      "tag": "autogenerated:trybots~happy",
      "revId": "343cba495cda10e68d6632a817c1f12362158147",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd5dd144_aee042ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-05-12T16:31:05Z",
      "side": 1,
      "message": "Dropping the optimization entirely is, unsurprisingly, slower when operating on archives that contain a lot of files:\n\nname               old time/op    new time/op    delta\nNewReader/1-8        1.11µs ±15%    1.15µs ±17%     ~     (p\u003d0.411 n\u003d9+10)\nNewReader/100-8      21.6µs ±30%    23.5µs ±39%     ~     (p\u003d0.075 n\u003d10+10)\nNewReader/1000-8      234µs ± 2%     268µs ±12%  +14.26%  (p\u003d0.000 n\u003d9+10)\nNewReader/10000-8    1.91ms ± 4%    2.77ms ±29%  +44.57%  (p\u003d0.000 n\u003d9+10)",
      "revId": "343cba495cda10e68d6632a817c1f12362158147",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}