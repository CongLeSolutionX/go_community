{
  "comments": [
    {
      "key": {
        "uuid": "6d4609c8_3c6dd3b1",
        "filename": "doc/progs/go1.go",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 5056
      },
      "writtenOn": "2017-02-06T19:52:13Z",
      "side": 1,
      "message": "Why is this changing? From the check below it makes it sound like you (and now the compiler) believe that\n\ni, sa[i] \u003d 1, 42\n\nshould be like\n\ni \u003d 1\nsa[1] \u003d 42\n\nbut that\u0027s wrong. The whole point of the parallel assignment is that they happen in parallel: the i in sa[i] is the i before the assignment. So the second effect should be sa[0] \u003d 42, not sa[1] \u003d 42.",
      "revId": "cfc5781ae30d7704349672feebbaaffea2bbfe42",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9368c353_d6e9446b",
        "filename": "doc/progs/go1.go",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 15558
      },
      "writtenOn": "2017-02-06T20:04:56Z",
      "side": 1,
      "message": "I see. Just to make sure I understand correctly, OAS2 is currently WAI (i.e Righ to left is fine for it), but {OAS2MAPR, OAS2FUNC, OAS2RECV, OAS2DOTTYPE} should have left-to-right. Correct?\n\n(I will upload the revised patch by EOD today)",
      "parentUuid": "6d4609c8_3c6dd3b1",
      "revId": "cfc5781ae30d7704349672feebbaaffea2bbfe42",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f8b9aa4_48022155",
        "filename": "doc/progs/go1.go",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 5056
      },
      "writtenOn": "2017-02-06T20:18:05Z",
      "side": 1,
      "message": "Yes, OAS2 is doing a lot of work to get the right semantics. \n\nOAS2MAPR, OAS2FUNC, OAS2RECV, OAS2DOTTYPE should probably rewrite to\n    t1, t2 :\u003d rhs\n    x, y \u003d t1, t2\n\nand then let OAS2 take care of the rest. Do not rewrite to \u0027x \u003d t1; y \u003d t2\u0027, because then the parallelism will be lost again.",
      "parentUuid": "9368c353_d6e9446b",
      "revId": "cfc5781ae30d7704349672feebbaaffea2bbfe42",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}