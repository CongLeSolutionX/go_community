{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b151d7d1_ee6ed09d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-16T21:14:07Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d784e7ec2",
      "tag": "autogenerated:trybots~beginning",
      "revId": "784e7ec2a52010ec2062eabe53628ca43114f05a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b1872e9_09248c78",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-16T21:26:32Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "b151d7d1_ee6ed09d",
      "tag": "autogenerated:trybots~happy",
      "revId": "784e7ec2a52010ec2062eabe53628ca43114f05a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70b5860b_4f852a57",
        "filename": "src/cmd/compile/internal/types2/validtype.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 31647
      },
      "writtenOn": "2022-03-16T21:34:19Z",
      "side": 1,
      "message": "I\u0027m a little confused, actually, and suspect this isn\u0027t right. Below we are only accessing orig.fromRHS, so we shouldn\u0027t need to evaluate Underlying here. t.orig should always be set.\n\nIs this check meant to catch the case that this type has already been marked, as on line 83 below?",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 70,
        "endChar": 3
      },
      "revId": "784e7ec2a52010ec2062eabe53628ca43114f05a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42766884_f1160205",
        "filename": "src/cmd/compile/internal/types2/validtype.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 5210
      },
      "writtenOn": "2022-03-16T21:38:05Z",
      "side": 1,
      "message": "No, we must ensure that we have a fully resolved type (as it may be an imported type). If it\u0027s not resolved yet, underlying will be nil (that\u0027s fine), but fromRHS will also be nil.\n\nThere\u0027s literally hundreds of types this affects when building the std lib.",
      "parentUuid": "70b5860b_4f852a57",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 70,
        "endChar": 3
      },
      "revId": "784e7ec2a52010ec2062eabe53628ca43114f05a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9978cf2c_4c8280c8",
        "filename": "src/cmd/compile/internal/types2/validtype.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 31647
      },
      "writtenOn": "2022-03-16T22:04:52Z",
      "side": 1,
      "message": "Aha. So this is about the behavior w.r.t unified IR? Why would that affect t.orig.fromRHS below? Is the problem that t.orig is not fully resolved?\n\nLet\u0027s discuss in our meeting, as I want to understand this better.",
      "parentUuid": "42766884_f1160205",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 70,
        "endChar": 3
      },
      "revId": "784e7ec2a52010ec2062eabe53628ca43114f05a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "086272a5_5367ae34",
        "filename": "src/go/types/validtype.go",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 31647
      },
      "writtenOn": "2022-03-16T22:59:29Z",
      "side": 1,
      "message": "I\u0027d say \"ensure that t.orig is fully resolved\", or just call t.orig.resolve() explicitly.\n\nThere may be other places where we assume that orig is resolved. We should do an audit.",
      "range": {
        "startLine": 65,
        "startChar": 2,
        "endLine": 65,
        "endChar": 67
      },
      "revId": "784e7ec2a52010ec2062eabe53628ca43114f05a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}