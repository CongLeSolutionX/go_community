{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "635b7f70_857778ae",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-08T14:39:08Z",
      "side": 1,
      "message": "API additions need to go through the Go [proposal process](https://go.dev/s/proposal).",
      "range": {
        "startLine": 19,
        "startChar": 57,
        "endLine": 21,
        "endChar": 57
      },
      "revId": "51bae8eff796d0d9d0380a83cc67cd20936e4d7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eeb87b4d_dae49e20",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 62723
      },
      "writtenOn": "2023-05-11T00:01:51Z",
      "side": 1,
      "message": "Design doc for reference: https://go.dev/cl/493637",
      "parentUuid": "635b7f70_857778ae",
      "range": {
        "startLine": 19,
        "startChar": 57,
        "endLine": 21,
        "endChar": 57
      },
      "revId": "51bae8eff796d0d9d0380a83cc67cd20936e4d7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f09d503_b3b05845",
        "filename": "src/internal/fuzz/encoding.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-08T14:39:08Z",
      "side": 1,
      "message": "An error return is not appropriate here.\n\nThe caller can (and should) ensure that `len(vals) \u003e 0` and the return values are of appropriate types, and we should have enough test coverage for `internal/fuzz` to be confident that that always holds. Returning an `error` adds extra plumbing and error-checking boilerplate on the caller side that should be literally unreachable.",
      "range": {
        "startLine": 24,
        "startChar": 44,
        "endLine": 24,
        "endChar": 50
      },
      "revId": "51bae8eff796d0d9d0380a83cc67cd20936e4d7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a3b0523_c26a2dae",
        "filename": "src/internal/fuzz/encoding.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 62723
      },
      "writtenOn": "2023-05-09T09:08:23Z",
      "side": 1,
      "message": "The error plumbing is a prerequisite for https://go.dev/cl/493304. I can undo the panic to error conversions and fold the plumbing into https://go.dev/cl/493304. WDYT?",
      "parentUuid": "8f09d503_b3b05845",
      "range": {
        "startLine": 24,
        "startChar": 44,
        "endLine": 24,
        "endChar": 50
      },
      "revId": "51bae8eff796d0d9d0380a83cc67cd20936e4d7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39d50c68_56ed942f",
        "filename": "src/internal/fuzz/encoding.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-09T17:06:46Z",
      "side": 1,
      "message": "I don\u0027t see why `Mutate` should be allowed to return an error at all. That\u0027s the sort of major design decision that needs to be hammered out in proposal review.",
      "parentUuid": "2a3b0523_c26a2dae",
      "range": {
        "startLine": 24,
        "startChar": 44,
        "endLine": 24,
        "endChar": 50
      },
      "revId": "51bae8eff796d0d9d0380a83cc67cd20936e4d7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7abfc5b_f6ec27ce",
        "filename": "src/internal/fuzz/encoding.go",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 62723
      },
      "writtenOn": "2023-05-11T00:01:51Z",
      "side": 1,
      "message": "\u003e That\u0027s the sort of major design decision that needs to be hammered out in proposal review.\n\nGood point. I added some discussion in the design doc.  I\u0027ll leave this unresolved until the dust settles on the design.",
      "parentUuid": "39d50c68_56ed942f",
      "range": {
        "startLine": 24,
        "startChar": 44,
        "endLine": 24,
        "endChar": 50
      },
      "revId": "51bae8eff796d0d9d0380a83cc67cd20936e4d7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "327e88b0_c0fe1b07",
        "filename": "src/internal/fuzz/mutator.go",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-08T14:39:08Z",
      "side": 1,
      "message": "Same here: `mutate` should not be called with a value that cannot be mutated, so returning an error adds overhead for essentially no benefit.",
      "revId": "51bae8eff796d0d9d0380a83cc67cd20936e4d7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}