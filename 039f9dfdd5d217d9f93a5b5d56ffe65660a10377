{
  "comments": [
    {
      "key": {
        "uuid": "2b1bb72a_157db420",
        "filename": "src/os/file_windows.go",
        "patchSetId": 5
      },
      "lineNbr": 247,
      "author": {
        "id": 5070
      },
      "writtenOn": "2016-11-10T03:27:49Z",
      "side": 1,
      "message": "You assume here, that mbytes does not contain half of \"multi byte character\" at the end. How do you know that ReadFile will always provide you only with \"full multi byte characters\"? If  you will get half of character, you next ReadFile will start with second half of that character. Do you think MultiByteToWideChar will be able to handle these?\n\nI do not think we should assume any of that. In fact I will add new test for that (see https://go-review.googlesource.com/33030).",
      "revId": "039f9dfdd5d217d9f93a5b5d56ffe65660a10377",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b2f6f71_47dbeed0",
        "filename": "src/os/file_windows.go",
        "patchSetId": 5
      },
      "lineNbr": 247,
      "author": {
        "id": 5025
      },
      "writtenOn": "2016-11-12T11:58:46Z",
      "side": 1,
      "message": "\u003e ReadFile will always provide you only with \"full multi byte characters\n\nNo. ReadFile break the multi-byte. And it not continue to read trailing bytes. So we need to read whole of buffer. As I wrote in comment of this change, ReadFile have problem to read with small buffer. So I changed this to read with enough buffer.\n\nI\u0027ll try to separate changes, however seems to be difficult.",
      "parentUuid": "2b1bb72a_157db420",
      "revId": "039f9dfdd5d217d9f93a5b5d56ffe65660a10377",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b2f6f71_c798be02",
        "filename": "src/os/file_windows.go",
        "patchSetId": 5
      },
      "lineNbr": 247,
      "author": {
        "id": 5070
      },
      "writtenOn": "2016-11-13T03:53:01Z",
      "side": 1,
      "message": "Perhaps I did not explain myself very well. I think your approach (changing to use large buffer for Windows ReadFile, instead of single byte buffer) will not work. Try and apply https://go-review.googlesource.com/33030 to your \"use large buffer\" change, you will see that test will fail.\n\nI do not believe we have any problems with console reading code, except issue #17427 (os: CtrlZ doesn\u0027t work on Windows). If you think there is something else broken, please, create an issue for it.",
      "parentUuid": "6b2f6f71_47dbeed0",
      "revId": "039f9dfdd5d217d9f93a5b5d56ffe65660a10377",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b2f6f71_a744aa90",
        "filename": "src/os/file_windows.go",
        "patchSetId": 5
      },
      "lineNbr": 247,
      "author": {
        "id": 5025
      },
      "writtenOn": "2016-11-15T00:03:22Z",
      "side": 1,
      "message": "\u003eI do not believe we have any problems with console reading code, except issue #17427\n\nhttps://github.com/golang/go/issues/17427#issuecomment-255346441\n\nPlease see this comment. readConsole doesn\u0027t fill buffer.",
      "parentUuid": "6b2f6f71_c798be02",
      "revId": "039f9dfdd5d217d9f93a5b5d56ffe65660a10377",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}