{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "723ae5e2_18fcf4f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5021
      },
      "writtenOn": "2022-06-16T20:22:27Z",
      "side": 1,
      "message": "What about using https://pkg.go.dev/sync/atomic#Pointer for storing the File?\nThat might also solve any lingering alignment issues.\n\nSince all this happens within the Go stdlib using modern API should be fine",
      "revId": "c3c0fbaeb4ed63d2f376f8b20dd5337e73e5f3b2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "205e4b09_ba06a8e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-06-16T20:30:28Z",
      "side": 1,
      "message": "One day we will. :) We\u0027re denying ourself the use of generics in the x/tools repo since many of our users are using Go versions a year or more older than go1.18.\n\n\u003e That might also solve any lingering alignment issues.\n\nThere\u0027s no alignment issue here: the field is a *File, so the compiler knows it needs to be aligned as a pointer.",
      "parentUuid": "723ae5e2_18fcf4f8",
      "revId": "c3c0fbaeb4ed63d2f376f8b20dd5337e73e5f3b2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78d119c9_09c4a1fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-06-16T20:40:12Z",
      "side": 1,
      "message": "LGTM. One nit.",
      "revId": "c3c0fbaeb4ed63d2f376f8b20dd5337e73e5f3b2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03577a19_68d31b0f",
        "filename": "src/go/token/position.go",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-06-16T20:40:12Z",
      "side": 1,
      "message": "this comment is now redundant",
      "range": {
        "startLine": 474,
        "startChar": 21,
        "endLine": 474,
        "endChar": 25
      },
      "revId": "c3c0fbaeb4ed63d2f376f8b20dd5337e73e5f3b2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0ebb51b_7622e8dd",
        "filename": "src/go/token/position.go",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-06-16T20:54:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03577a19_68d31b0f",
      "range": {
        "startLine": 474,
        "startChar": 21,
        "endLine": 474,
        "endChar": 25
      },
      "revId": "c3c0fbaeb4ed63d2f376f8b20dd5337e73e5f3b2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae071b2b_2838c093",
        "filename": "src/go/token/position.go",
        "patchSetId": 4
      },
      "lineNbr": 481,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-06-16T20:40:12Z",
      "side": 1,
      "message": "and voila: the code is perfectly safe now... :-)",
      "range": {
        "startLine": 481,
        "startChar": 10,
        "endLine": 481,
        "endChar": 16
      },
      "revId": "c3c0fbaeb4ed63d2f376f8b20dd5337e73e5f3b2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}