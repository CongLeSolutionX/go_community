{
  "comments": [
    {
      "key": {
        "uuid": "6d084f84_3145dd3e",
        "filename": "src/runtime/time.go",
        "patchSetId": 21
      },
      "lineNbr": 139,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-09T22:09:30Z",
      "side": 1,
      "message": "since this isn\u0027t guaranteed to be the same as the timerModifiedXX on the left, maybe this could be timerModifiedYY or something, to indicate that it could be different?",
      "range": {
        "startLine": 139,
        "startChar": 55,
        "endLine": 139,
        "endChar": 57
      },
      "revId": "11a4aadcb5cc0ffc602949b9f7be5a294c7a1a28",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4543e61_349e006a",
        "filename": "src/runtime/time.go",
        "patchSetId": 21
      },
      "lineNbr": 139,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-10-10T04:29:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d084f84_3145dd3e",
      "range": {
        "startLine": 139,
        "startChar": 55,
        "endLine": 139,
        "endChar": 57
      },
      "revId": "11a4aadcb5cc0ffc602949b9f7be5a294c7a1a28",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f967375a_085ddb43",
        "filename": "src/runtime/time.go",
        "patchSetId": 21
      },
      "lineNbr": 478,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-09T22:09:30Z",
      "side": 1,
      "message": "I don\u0027t understand why \"when \u003c t.nextwhen\" is used here instead of \"when \u003c t.when\".\n\ntimerModifiedXX describes the relationship between when and nextwhen, AFAICT by the docs above. here, however, earlier is set according to how nextwhen changes. Therefore, you might find yourself having t.when \u003c t.nextwhen but the timerModifiedEarlier status.\n\nFor example:\n\n...\nvar x *timer\n...\nx.when \u003d X\naddtimer(x) // timerNoStatus -\u003e timerWaiting\n...\nmodtimer(X + 10*1e9 /* 10 seconds */) // timerWaiting -\u003e timerModifying -\u003e timerModifiedLater\n...\nmodtimer(X + 5*1e9 /* 5 seconds */) // timerModifiedLater -\u003e timerModifying -\u003e timerModifiedEarlier\n...\n\nactually, there\u0027s a similar point to be made for timerModifiedEarlier. one could set a later nextwhen value, but earlier will be true so the status will still be timerModifiedEarlier instead of timerModifiedLater.\n\nis there something I\u0027m missing here?",
      "range": {
        "startLine": 478,
        "startChar": 14,
        "endLine": 478,
        "endChar": 31
      },
      "revId": "11a4aadcb5cc0ffc602949b9f7be5a294c7a1a28",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0a71557_f34b4309",
        "filename": "src/runtime/time.go",
        "patchSetId": 21
      },
      "lineNbr": 478,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-10-10T04:29:25Z",
      "side": 1,
      "message": "Thanks, you\u0027re quite right.  I was confused.  I think I\u0027ve cleaned it all up now.",
      "parentUuid": "f967375a_085ddb43",
      "range": {
        "startLine": 478,
        "startChar": 14,
        "endLine": 478,
        "endChar": 31
      },
      "revId": "11a4aadcb5cc0ffc602949b9f7be5a294c7a1a28",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7456a4f0_8c672589",
        "filename": "src/runtime/time.go",
        "patchSetId": 21
      },
      "lineNbr": 517,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-09T22:09:30Z",
      "side": 1,
      "message": "it only appears twice but it might nice to deduplicate this logic with addtimer, or make it so that you could just directly call addtimer here.",
      "range": {
        "startLine": 509,
        "startChar": 2,
        "endLine": 517,
        "endChar": 21
      },
      "revId": "11a4aadcb5cc0ffc602949b9f7be5a294c7a1a28",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a334e8a_77ea47d7",
        "filename": "src/runtime/time.go",
        "patchSetId": 21
      },
      "lineNbr": 517,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-10-10T04:29:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7456a4f0_8c672589",
      "range": {
        "startLine": 509,
        "startChar": 2,
        "endLine": 517,
        "endChar": 21
      },
      "revId": "11a4aadcb5cc0ffc602949b9f7be5a294c7a1a28",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0acd23a_c421d971",
        "filename": "src/runtime/time.go",
        "patchSetId": 21
      },
      "lineNbr": 528,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-10-09T22:09:30Z",
      "side": 1,
      "message": "minor nit: given that newEarlier \u003d earlier above, I think it would help a reader understand the cases right if this was inverted.",
      "range": {
        "startLine": 528,
        "startChar": 5,
        "endLine": 528,
        "endChar": 6
      },
      "revId": "11a4aadcb5cc0ffc602949b9f7be5a294c7a1a28",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "125d5acf_57b56a3e",
        "filename": "src/runtime/time.go",
        "patchSetId": 21
      },
      "lineNbr": 528,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-10-10T04:29:25Z",
      "side": 1,
      "message": "This has been rewritten.",
      "parentUuid": "a0acd23a_c421d971",
      "range": {
        "startLine": 528,
        "startChar": 5,
        "endLine": 528,
        "endChar": 6
      },
      "revId": "11a4aadcb5cc0ffc602949b9f7be5a294c7a1a28",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}