{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4858d91d_439cc87b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-14T17:32:40Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d9e77a2c6\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a4170f2_259d32b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-14T17:32:40Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "6bd38769_549f0250",
      "tag": "autogenerated:trybots~beginning",
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2d3ecba_a72bfad5",
        "filename": "src/cmd/compile/internal/importer/gcimporter_test.go",
        "patchSetId": 16
      },
      "lineNbr": 56,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-14T18:44:03Z",
      "side": 1,
      "message": "`basename[:len(basename)-2]+\"o\"` now occurs multiple times, and as far as I can tell the expression `filepath.Base(strings.TrimSuffix(outname, \".o\"))` below also refers to the same string.\n\nI think this would be clearer using `strings.CutSuffix` and another variable:\n\n```\nbasename, ok :\u003d strings.CutSuffix(filepath.Base(filename, \".go\"))\nif !ok {\n\tt.Fatal(…)\n}\nobjname :\u003d basename + \".o\"\n```",
      "range": {
        "startLine": 56,
        "startChar": 53,
        "endLine": 56,
        "endChar": 69
      },
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88afedb9_3ef8c9ce",
        "filename": "src/cmd/compile/internal/importer/gcimporter_test.go",
        "patchSetId": 16
      },
      "lineNbr": 655,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-14T18:44:03Z",
      "side": 1,
      "message": "Is this `lookup` identical to the one further above?\n\n(If so, consider factoring it out in a helper function.)",
      "range": {
        "startLine": 648,
        "startChar": 0,
        "endLine": 655,
        "endChar": 2
      },
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16fa4e2a_fee30160",
        "filename": "src/go/internal/gcimporter/gcimporter_test.go",
        "patchSetId": 16
      },
      "lineNbr": 63,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-14T18:44:03Z",
      "side": 1,
      "message": "I\u0027m seeing a recurring pattern: `CreateStdlibImportCfg()`, possibly add some more entries to it, then `os.WriteFile` to a particular path.\n\nConsider pulling that all into a unified helper:\n\n```\nfunc WriteImportcfg(t testing.TB, dstPath string, additionalPackageFiles map[string]string)\n```\n\nThen this call site would be:\n```\nimportcfgPath :\u003d filepath.Join(…)\nteststdlib.WriteImportcfg(t, importCfgPath, packagefiles)\n```\n\nand the other call sites could just pass `nil` for the third parameter.",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 63,
        "endChar": 53
      },
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea075c65_599acb59",
        "filename": "src/internal/teststdlib/importcfg.go",
        "patchSetId": 16
      },
      "lineNbr": 22,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-14T18:44:03Z",
      "side": 1,
      "message": "“..” → “.”",
      "range": {
        "startLine": 22,
        "startChar": 19,
        "endLine": 22,
        "endChar": 21
      },
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "672ed829_61ced54c",
        "filename": "src/internal/teststdlib/importcfg.go",
        "patchSetId": 16
      },
      "lineNbr": 22,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-18T17:40:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea075c65_599acb59",
      "range": {
        "startLine": 22,
        "startChar": 19,
        "endLine": 22,
        "endChar": 21
      },
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca144681_984ee309",
        "filename": "src/internal/teststdlib/importcfg.go",
        "patchSetId": 16
      },
      "lineNbr": 23,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-14T18:44:03Z",
      "side": 1,
      "message": "(nit) Since `stdlib` is already part of the package name, omit it. Also consider omitting `Create`, since it is somewhat redundant with the function signature and not needed to avoid collisions with a type declaration.\n\n```\nfunc Importcfg() (string, error)\n```",
      "range": {
        "startLine": 23,
        "startChar": 5,
        "endLine": 23,
        "endChar": 26
      },
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6465b0d3_072eea58",
        "filename": "src/internal/teststdlib/importcfg.go",
        "patchSetId": 16
      },
      "lineNbr": 23,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-18T17:40:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca144681_984ee309",
      "range": {
        "startLine": 23,
        "startChar": 5,
        "endLine": 23,
        "endChar": 26
      },
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2a83514_420738ac",
        "filename": "src/internal/teststdlib/importcfg.go",
        "patchSetId": 16
      },
      "lineNbr": 57,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-14T18:44:03Z",
      "side": 1,
      "message": "I can\u0027t find where this function is used.",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 57,
        "endChar": 1
      },
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec348447_73ae4158",
        "filename": "src/internal/teststdlib/importcfg.go",
        "patchSetId": 16
      },
      "lineNbr": 57,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-18T17:40:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2a83514_420738ac",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 57,
        "endChar": 1
      },
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f63c1eb6_d91b8768",
        "filename": "src/internal/teststdlib/importcfg.go",
        "patchSetId": 16
      },
      "lineNbr": 59,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-14T18:44:03Z",
      "side": 1,
      "message": "(nit) drop `Stdlib` — just `PkgfileMap()`.\n\n(Please also add a doc comment.)",
      "range": {
        "startLine": 59,
        "startChar": 5,
        "endLine": 59,
        "endChar": 21
      },
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a24bf1e_fe27eaa5",
        "filename": "src/internal/teststdlib/importcfg.go",
        "patchSetId": 16
      },
      "lineNbr": 59,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-18T17:40:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f63c1eb6_d91b8768",
      "range": {
        "startLine": 59,
        "startChar": 5,
        "endLine": 59,
        "endChar": 21
      },
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c52fdce6_1582d0f8",
        "filename": "src/internal/teststdlib/importcfg.go",
        "patchSetId": 16
      },
      "lineNbr": 97,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-14T18:44:03Z",
      "side": 1,
      "message": "I think `Importer` is the only part of this package with significant dependencies. Consider moving the other exported files to `internal/testenv` to reduce the number of packages one needs to import in compiler tests.\n\nPerhaps more importantly, that would also remove the need to duplicate `StdlibPkgfileMap` in `go/importer/importer_test.go`!",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 97,
        "endChar": 1
      },
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "322f6dae_4528048e",
        "filename": "src/internal/types/errors/codes_test.go",
        "patchSetId": 16
      },
      "lineNbr": 23,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-14T18:44:03Z",
      "side": 1,
      "message": "Add a comment explaining why?\n\nOr, consider changing \u0027teststdlib.Importer()` to accept a (possibly-nil?) `testing.TB` (like `testenv.GoToolPath` or `testenv.GOROOT`) — then it could do the skipping itself.",
      "revId": "9e77a2c68dfa93473bc0a602536fc12d847483ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}