{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c332140e_ad6d4dbf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-03T22:41:04Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003ddf8d0fda",
      "tag": "autogenerated:trybots~beginning",
      "revId": "df8d0fda6ee06c02af2f590799c5b4ad283ca45e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1afae304_29b32be7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-03T22:54:02Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003ddf8d0fda\nFailed on linux-amd64-longtest (Go 1.18.x): https://storage.googleapis.com/go-build-log/df8d0fda/linux-amd64-longtest_7cfac4da.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "c332140e_ad6d4dbf",
      "tag": "autogenerated:trybots~progress",
      "revId": "df8d0fda6ee06c02af2f590799c5b4ad283ca45e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b47025a0_4dfa395b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-03T22:56:28Z",
      "side": 1,
      "message": "3 of 30 TryBots failed.\nFailed on linux-amd64-longtest (Go 1.18.x): https://storage.googleapis.com/go-build-log/df8d0fda/linux-amd64-longtest_7cfac4da.log\nFailed on windows-amd64-longtest (Go 1.18.x): https://storage.googleapis.com/go-build-log/df8d0fda/windows-amd64-longtest_7c0c8ad8.log\nFailed on linux-386-longtest (Go 1.18.x): https://storage.googleapis.com/go-build-log/df8d0fda/linux-386-longtest_8b7cf000.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "c332140e_ad6d4dbf",
      "tag": "autogenerated:trybots~failed",
      "revId": "df8d0fda6ee06c02af2f590799c5b4ad283ca45e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd8bc386_d9392738",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7061
      },
      "writtenOn": "2022-05-04T15:57:00Z",
      "side": 1,
      "message": "Why is run.go compiling that test w/ -G\u003d0?  Isn\u0027t that \"no generics\"?",
      "revId": "df8d0fda6ee06c02af2f590799c5b4ad283ca45e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2caaa5d0_ef4293ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2022-05-04T16:00:01Z",
      "side": 1,
      "message": "The 1.18 branch still have -G\u003d0 mode, the long test builder run the test directory with both -G\u003d0 and -G\u003d3 to make sure thing won\u0027t be broken.\n\nFor this kind of backport, we need to explicitly spell `// run -G\u003d3`. You can check some backports which were already checked in to see an example.",
      "parentUuid": "cd8bc386_d9392738",
      "revId": "df8d0fda6ee06c02af2f590799c5b4ad283ca45e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}