{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a702da90_36e2140e",
        "filename": "src/cmd/compile/internal/test/pgo_inl_test.go",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-10-17T03:23:26Z",
      "side": 1,
      "message": "In my experience, calls in `filepath.EvalSymlinks` are almost always inappropriate — programs should generally preserve paths as supplied by the user supplied (via `$PWD` or `$TMPDIR` or `$GOROOT` or similar) rather than trying to compute a symlink-free equivalent.\n\nI suspect that this is working around a bug in `buildPGOInliningTest` above — namely, `cmd.Env` should have a `PWD` entry matching `cmd.Dir`.\n\n(And perhaps `testenv.CleanCmdEnv` itself should be changed to use `cmd.Environ()` instead of `os.Environ()` so that it reflects `cmd.Dir` if set?)",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 324,
        "endChar": 2
      },
      "revId": "61533e9569d93aa2bd409f5147d8596a88ae00fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c192eb54_66c446d9",
        "filename": "src/cmd/compile/internal/test/pgo_inl_test.go",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-26T20:21:49Z",
      "side": 1,
      "message": "I agree that EvalSymlinks seems weird. My question is why the compiler sees a symlink-eval\u0027d path? Who does that eval?\n\n\u003e I suspect that this is working around a bug in buildPGOInliningTest above — namely, cmd.Env should have a PWD entry matching cmd.Dir.\n\nWho is responsible to set that entry?\n\nSorry I don\u0027t really understand how symlinks are handled in the Go toolchain. Any suggestion would help. Thanks.",
      "parentUuid": "a702da90_36e2140e",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 324,
        "endChar": 2
      },
      "revId": "61533e9569d93aa2bd409f5147d8596a88ae00fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62abcc17_6c9254cc",
        "filename": "src/cmd/compile/internal/test/pgo_inl_test.go",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-10-26T20:58:55Z",
      "side": 1,
      "message": "\u003e I agree that EvalSymlinks seems weird. My question is why the compiler sees a symlink-eval\u0027d path? Who does that eval?\n\nThe symlink-eval\u0027d path comes from `os.Getwd`, via either `syscall.Getwd` or reverse-engineering the path using `os.SameFile`:\nhttps://cs.opensource.google/go/go/+/master:src/os/getwd.go;l\u003d79-105;drc\u003d5755bad42adc23ad4a0c32149ac8cf78ece5d0b0\n\n\u003e \u003e I suspect that this is working around a bug in buildPGOInliningTest above — namely, cmd.Env should have a PWD entry matching cmd.Dir.\n\u003e \n\u003e Who is responsible to set that entry?\n\nIf we set up the `exec.Cmd` carefully, either `cmd.Start` will add it implicitly or `cmd.Environ` will add it to the returned environment explicitly (see #50599).\n\nIn this case, there are two things that need to be fixed:\n1. `buildPGOInliningTest` ought to set `cmd.Dir` _before_ calling `testenv.CleanCmdEnv` (instead of after).\n2. `testenv.CleanCmdEnv` ought to use `cmd.Environ` instead of `os.Environ`.\n\n\n\u003e Sorry I don\u0027t really understand how symlinks are handled in the Go toolchain. Any suggestion would help. Thanks.\n\nIn general, we try to always preserve the paths as provided by the user: we ~never evaluate symlinks explicitly, and always try to preserve what information we have about the canonical form of the path.\n\nThe user provides the canonical forms in several ways: by setting `PWD` (usually implicitly by executing `cd` in their shell), by setting `TMPDIR` and/or `GOTMPDIR`, by setting `GOROOT` and/or `GOPATH` (perhaps implicitly via `HOME` and/or `PATH` and/or `os.Args[0]`), by passing explicit paths in command line arguments, and so on.",
      "parentUuid": "c192eb54_66c446d9",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 324,
        "endChar": 2
      },
      "revId": "61533e9569d93aa2bd409f5147d8596a88ae00fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac600486_0af8c298",
        "filename": "src/cmd/compile/internal/test/pgo_inl_test.go",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-27T16:43:46Z",
      "side": 1,
      "message": "Thank very much for the information!\n\n\u003e buildPGOInliningTest ought to set cmd.Dir before calling testenv.CleanCmdEnv (instead of after).\n\nDone. (This requirement seems fragile. Maybe we could have a vet check or something...)\n\n\u003e testenv.CleanCmdEnv ought to use cmd.Environ instead of os.Environ.\n\nCL 538215.\n\nThanks.",
      "parentUuid": "62abcc17_6c9254cc",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 324,
        "endChar": 2
      },
      "revId": "61533e9569d93aa2bd409f5147d8596a88ae00fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d6ec5ea_f7bf786c",
        "filename": "src/cmd/compile/internal/test/pgo_inl_test.go",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-10-27T17:00:20Z",
      "side": 1,
      "message": "\u003e \u003e buildPGOInliningTest ought to set cmd.Dir before calling testenv.CleanCmdEnv (instead of after).\n\u003e \n\u003e Done. (This requirement seems fragile. Maybe we could have a vet check or something...)\n\nI agree that it\u0027s fragile. A vet check specifically for setting `cmd.Dir` after calling `cmd.Environ` sounds like a good idea!\n\n\u003e \u003e testenv.CleanCmdEnv ought to use cmd.Environ instead of os.Environ.\n\u003e \n\u003e CL 538215.\n\n+2\u0027d. Thank you!",
      "parentUuid": "ac600486_0af8c298",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 324,
        "endChar": 2
      },
      "revId": "61533e9569d93aa2bd409f5147d8596a88ae00fb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}