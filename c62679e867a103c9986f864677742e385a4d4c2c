{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c0a657c3_362ef0c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-07-24T02:49:08Z",
      "side": 1,
      "message": "TRY\u003dlinux-riscv64,freebsd-riscv64",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdc35230_c2c8dde0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-24T02:49:23Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003dc62679e8\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66232ab4_3515d793",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-24T02:49:23Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "c8a3119a_617927e0",
      "tag": "autogenerated:trybots~beginning",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "577c778c_d3ed7221",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-24T05:23:02Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* freebsd-riscv64-unmatched\n* linux-riscv64-unmatched\n",
      "parentUuid": "cdc35230_c2c8dde0",
      "tag": "autogenerated:trybots~happy",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4d4e0c9_b859ca3f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-28T20:43:33Z",
      "side": 1,
      "message": "Thanks for the CL.\n\nWould things be easier if we require C code not to use compressed instructions? (Similar to that we pass -marm on ARM)",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60479d51_2417e2db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-08T15:53:00Z",
      "side": 1,
      "message": "Only minimally - it would remove two functions from cmd/internal/obj/riscv (EncodeCBImmediate, EncodeCJImmediate) and three cases statements (elf.R_RISCV_RVC_BRANCH, elf.R_RISCV_RVC_JUMP) from the linker. Overall, I think we\u0027re better off supporting this since there are benefits to using compressed instructions in the future (outside of cgo linking). In that case we\u0027d need almost all of the same code regardless.",
      "parentUuid": "b4d4e0c9_b859ca3f",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b42941ee_f8d08510",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 8
      },
      "lineNbr": 1332,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-28T20:43:33Z",
      "side": 1,
      "message": "This could use some comments.",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c99f7545_07f5186b",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 8
      },
      "lineNbr": 1332,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-08T15:53:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b42941ee_f8d08510",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ef82719_8f6287af",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 8
      },
      "lineNbr": 1332,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-15T21:02:35Z",
      "side": 1,
      "message": "Seems not done as of PS11.",
      "parentUuid": "c99f7545_07f5186b",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67bd7702_1d392430",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 8
      },
      "lineNbr": 1332,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-16T15:18:05Z",
      "side": 1,
      "message": "Ugh, sorry - I mailed PS10 with the fixes, then mailed the openbsd/riscv64 stack (which had the old version at the base), which resulted in the changes being  reverted in PS11.",
      "parentUuid": "1ef82719_8f6287af",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "886d97ef_2b422300",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 8
      },
      "lineNbr": 293,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-28T20:43:33Z",
      "side": 1,
      "message": "This doesn\u0027t seem to match the linker code or what PCREL usually mean. In fact, is there any difference between this and R_PCREL?",
      "range": {
        "startLine": 292,
        "startChar": 62,
        "endLine": 293,
        "endChar": 10
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3434592d_e915b0de",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 8
      },
      "lineNbr": 293,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-16T15:18:05Z",
      "side": 1,
      "message": "Yes, the comment is incorrect. This seems to match R_PCREL, however I\u0027m not able to find any builder that triggers this relocation (seems like it was probably binutils at some point). I guess our options are to (a) omit it for now, (b) switch to R_PCREL and trust that it works correctly or (c) stick with the original code that was tested previously...",
      "parentUuid": "886d97ef_2b422300",
      "range": {
        "startLine": 292,
        "startChar": 62,
        "endLine": 293,
        "endChar": 10
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e41ca679_94ba70b7",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 8
      },
      "lineNbr": 293,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-21T16:01:12Z",
      "side": 1,
      "message": "I think it is okay to omit it for now. We can always add it later if necessary.",
      "parentUuid": "3434592d_e915b0de",
      "range": {
        "startLine": 292,
        "startChar": 62,
        "endLine": 293,
        "endChar": 10
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "430da72d_6e256f17",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 8
      },
      "lineNbr": 314,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-28T20:43:33Z",
      "side": 1,
      "message": "Is there any difference between a \"jump offset\" and a \"branch offset\"?",
      "range": {
        "startLine": 314,
        "startChar": 52,
        "endLine": 314,
        "endChar": 63
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "067513e0_b71db32e",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 8
      },
      "lineNbr": 314,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-08T15:53:00Z",
      "side": 1,
      "message": "The relocation calculation is the same (S + A - P), however they are different instruction formats that have a different number of address bits encoded.",
      "parentUuid": "430da72d_6e256f17",
      "range": {
        "startLine": 314,
        "startChar": 52,
        "endLine": 314,
        "endChar": 63
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66a2a926_07713e9d",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 8
      },
      "lineNbr": 314,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-15T21:02:35Z",
      "side": 1,
      "message": "Thanks. Maybe say PC-relative offset for both, with words like \"J-type encoding\" to distinguish.",
      "parentUuid": "067513e0_b71db32e",
      "range": {
        "startLine": 314,
        "startChar": 52,
        "endLine": 314,
        "endChar": 63
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3279bca1_31e59dcc",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 8
      },
      "lineNbr": 314,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-16T15:18:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66a2a926_07713e9d",
      "range": {
        "startLine": 314,
        "startChar": 52,
        "endLine": 314,
        "endChar": 63
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad09ed6c_61fb0de7",
        "filename": "src/cmd/link/internal/ld/pcln.go",
        "patchSetId": 8
      },
      "lineNbr": 108,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-28T20:43:33Z",
      "side": 1,
      "message": "This needs some comments. What are those symbols?",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 108,
        "endChar": 2
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f0adbbe_083353f1",
        "filename": "src/cmd/link/internal/ld/pcln.go",
        "patchSetId": 8
      },
      "lineNbr": 108,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-08T15:53:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad09ed6c_61fb0de7",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 108,
        "endChar": 2
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f051f6f3_706481cb",
        "filename": "src/cmd/link/internal/ld/pcln.go",
        "patchSetId": 8
      },
      "lineNbr": 108,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-15T21:02:35Z",
      "side": 1,
      "message": "Seems not done as of PS11.",
      "parentUuid": "9f0adbbe_083353f1",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 108,
        "endChar": 2
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1325066a_0ac60e61",
        "filename": "src/cmd/link/internal/ld/pcln.go",
        "patchSetId": 8
      },
      "lineNbr": 108,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-16T15:18:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f051f6f3_706481cb",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 108,
        "endChar": 2
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "009ae0b6_abb267ac",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-28T20:43:33Z",
      "side": 1,
      "message": "(Why RISCV relocation is so different and complex...)",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a91ba2c_9932ab2e",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-08T15:53:00Z",
      "side": 1,
      "message": "I think the general approach is to make the linker do more work (including things like relaxation), in order to produce more optimal code... but the cost is complexity in the linker code.",
      "parentUuid": "009ae0b6_abb267ac",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee18dfd5_f8fc3f1c",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-28T20:43:33Z",
      "side": 1,
      "message": "I think checking VisibilityHidden here is generally not the right thing to do. I\u0027ve removed similar checks on other architectures in CL 404296. Is there a specific reason to check this on RISCV?",
      "range": {
        "startLine": 62,
        "startChar": 49,
        "endLine": 62,
        "endChar": 80
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6faecb37_5680e18a",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-08T15:53:00Z",
      "side": 1,
      "message": "It was most likely for consistency with other architectures - will remove.",
      "parentUuid": "ee18dfd5_f8fc3f1c",
      "range": {
        "startLine": 62,
        "startChar": 49,
        "endLine": 62,
        "endChar": 80
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88589bf7_dd9b2380",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-15T21:02:35Z",
      "side": 1,
      "message": "(Mark as unresolved until it is done. Thanks.)",
      "parentUuid": "6faecb37_5680e18a",
      "range": {
        "startLine": 62,
        "startChar": 49,
        "endLine": 62,
        "endChar": 80
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "307c280d_90679fce",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-16T15:18:05Z",
      "side": 1,
      "message": "This was removed in PS10 (then reverted in PS11...).",
      "parentUuid": "88589bf7_dd9b2380",
      "range": {
        "startLine": 62,
        "startChar": 49,
        "endLine": 62,
        "endChar": 80
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14bfa5fd_9e13e1d4",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 138,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-28T20:43:33Z",
      "side": 1,
      "message": "I think we should use PLT only for calls (or jumps). Should we look for R_RISCV_CALL instead?",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c35d835d_a07a2bd2",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 138,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-16T15:18:05Z",
      "side": 1,
      "message": "This is a bit complex, however I think we\u0027ll only use PLT for calls since this is the only ITYPE mapping in adddynrel...\n\nOur R_RISCV_CALL points directly at a JAL instruction - if that JAL instruction needs a trampoline we create a trampoline with an AUIPC/JALR sequence, which has a R_RISCV_PCREL_ITYPE that points to the AUIPC instruction (and covers the JALR).\n\nOn the other hand, elf.R_RISCV_CALL (now deprecated) and elf.R_RISCV_CALL_PLT point at an AUIPC instruction in an AUIPC/JALR pair. As such, they map to our R_RISCV_PCREL_ITYPE rather than our R_RISCV_CALL.\n\nI suspect we either need to rename the R_RISCV_CALL reloc or add another, which points at the AUIPC in an AUIPC/JALR. There is elf.R_RISCV_JAL which matches our R_RISCV_CALL - we could consider renaming R_RISCV_CALL to R_RISCV_JAL and adding an R_RISCV_CALL that matches the elf.R_RISCV_CALL usage (and we can stop using R_RISCV_PCREL_ITYPE for calls).\n\nI\u0027d rather do that separately from this change however (can do it as a change prior to this one, if you prefer).",
      "parentUuid": "14bfa5fd_9e13e1d4",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca77cdaf_512f2c03",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 138,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-21T07:47:39Z",
      "side": 1,
      "message": "This would look like - https://go-review.googlesource.com/c/go/+/520095",
      "parentUuid": "c35d835d_a07a2bd2",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "737d4ac0_228cdda7",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 138,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-21T16:01:12Z",
      "side": 1,
      "message": "Does the Go R_RISCV_CALL relocation have to be on the JAL instruction? I believe this relocation is mostly informational? Can we just place it on the AUIPC and provide the same information?",
      "parentUuid": "ca77cdaf_512f2c03",
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a06c3c2_f9091018",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 303,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-28T20:43:33Z",
      "side": 1,
      "message": "This link doesn\u0027t seem to work...",
      "range": {
        "startLine": 303,
        "startChar": 4,
        "endLine": 303,
        "endChar": 95
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "257481d1_533fbf46",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 303,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-08T15:53:00Z",
      "side": 1,
      "message": "*sigh* - they keep getting moved around... hopefully this is a more permanent link.",
      "parentUuid": "6a06c3c2_f9091018",
      "range": {
        "startLine": 303,
        "startChar": 4,
        "endLine": 303,
        "endChar": 95
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14178988_f03ebaec",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 579,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-28T20:43:33Z",
      "side": 1,
      "message": "This is probably from the code below? But this case has only one instruction to modify, so \"second\" is a weird name.",
      "range": {
        "startLine": 579,
        "startChar": 2,
        "endLine": 579,
        "endChar": 8
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2181cb6e_10befcc3",
        "filename": "src/cmd/link/internal/riscv64/asm.go",
        "patchSetId": 8
      },
      "lineNbr": 579,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-08T15:53:00Z",
      "side": 1,
      "message": "Indeed, fixed.",
      "parentUuid": "14178988_f03ebaec",
      "range": {
        "startLine": 579,
        "startChar": 2,
        "endLine": 579,
        "endChar": 8
      },
      "revId": "c62679e867a103c9986f864677742e385a4d4c2c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}