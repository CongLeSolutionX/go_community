{
  "comments": [
    {
      "key": {
        "uuid": "643988cf_165ca933",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 34724
      },
      "writtenOn": "2020-08-13T17:34:13Z",
      "side": 1,
      "message": "I believe I have resolved the comments, with two additional small changes:\n\n1. On the related Github issue someone suggested updating the documentation on error wrapping. So I have added this.\n2. The test error name was `errBadScan` which did not sense now that the type was renamed. Now I\u0027ve called it `errTestScanWrap`.\n\nI apologize if this gives more work in the review.",
      "revId": "8b5048fb3d66008661d791291c79d0959f4a05b3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46ec7938_9ff41811",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2020-08-13T17:41:35Z",
      "side": 1,
      "message": "Thank you for the update, Tim! Almost there, just some minor updates:\na) In the commit message, please replace “An unit test” with “A unit test”\nb) The doc update is a bit confusing and imprecise, I’d remove it altogether or perhaps make it, “If any of the first arguments implementing Scanner returns an error, that error will be wrapped in the returned error.”\nc) In the commit message, it is no longer “the existing”. How about let’s make it entirely:\n\nThe prior implementation used the format verb %v which unfortunately\nimproperly wrapped any underlying scanner errors, and we couldn’t use\nerrors.Is not errors.As. This change fixes that by using the %w verb.\n\nAdded a unit to ensure that both error sub string matching works, but\nalso that errors.Is works as expected.\n\nFixes #38099",
      "revId": "8b5048fb3d66008661d791291c79d0959f4a05b3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bb38ba5_49a07e0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 34724
      },
      "writtenOn": "2020-08-13T20:51:12Z",
      "side": 1,
      "message": "Regarding b): I don\u0027t understand how you get to \"any of the first arguments\". As this applies to all arguments passed, not only the first?",
      "parentUuid": "46ec7938_9ff41811",
      "revId": "8b5048fb3d66008661d791291c79d0959f4a05b3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65a3d327_49ae5ca3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2020-08-14T08:50:48Z",
      "side": 1,
      "message": "If we take a look at that code, the first error encountered when with dest[i] will be returned from convertAssignRows. If the first scannable destination value returns an error, no more scan shall proceed and that first encountered error will be wrapped and sent back.",
      "parentUuid": "1bb38ba5_49a07e0b",
      "revId": "8b5048fb3d66008661d791291c79d0959f4a05b3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}