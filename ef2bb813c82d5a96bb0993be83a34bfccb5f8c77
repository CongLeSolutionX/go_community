{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "10ed0361_d842572e",
        "filename": "src/runtime/pinner.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-05-23T19:54:06Z",
      "side": 0,
      "message": "hm, my mistake, I think this actually does need to happen.",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 50
      },
      "revId": "ef2bb813c82d5a96bb0993be83a34bfccb5f8c77",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9e8b6b3_b14c99bb",
        "filename": "src/runtime/pinner.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-05-23T20:36:24Z",
      "side": 0,
      "message": "Yeah. If p.refs is no longer backed by p.refStore, the nil loop above won\u0027t clear refStore and we\u0027ll needlessly hold pointers alive.\n\nDo you think we still need refStore given the higher level pooling?",
      "parentUuid": "10ed0361_d842572e",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 50
      },
      "revId": "ef2bb813c82d5a96bb0993be83a34bfccb5f8c77",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47b1a705_859abe8f",
        "filename": "src/runtime/pinner.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-05-23T21:21:49Z",
      "side": 0,
      "message": "yeah... I think it might not be necessary anymore, and it complicates this implementation a bit.\n\nassuming that the pooling *is* effective, then the refStore is going to be doing little for us (saving on the first pin only).\n\nsorry @ansiwen@gmail.com for undoing your work (and asking you to do it in the first place ðŸ˜ž); happy to bring it back if there\u0027s something I\u0027m missing.",
      "parentUuid": "a9e8b6b3_b14c99bb",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 50
      },
      "revId": "ef2bb813c82d5a96bb0993be83a34bfccb5f8c77",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "798e8176_3f1511e5",
        "filename": "src/runtime/pinner.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-05-23T21:32:00Z",
      "side": 0,
      "message": "well OK, one case where it might be useful is if the pooling isn\u0027t enough. for instance, to make multiple pinners for objects of different lifetimes for a single cgo call. but maybe the better solution in that case is to make this pinner cache work more like a general sync.Pool.",
      "parentUuid": "47b1a705_859abe8f",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 50
      },
      "revId": "ef2bb813c82d5a96bb0993be83a34bfccb5f8c77",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df4285af_caadba37",
        "filename": "src/runtime/pinner.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 54801
      },
      "writtenOn": "2023-05-23T21:32:45Z",
      "side": 0,
      "message": "As I said in the the other comment, I think you over-optimize now for the cases single serial pinners. The refStore still makes sense for the non-cached case with several pinner in parallel. I wouldn\u0027t really like that all pinner keep their memory forever.",
      "parentUuid": "47b1a705_859abe8f",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 50
      },
      "revId": "ef2bb813c82d5a96bb0993be83a34bfccb5f8c77",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96124aeb_74a1d749",
        "filename": "src/runtime/pinner.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 54801
      },
      "writtenOn": "2023-05-23T21:33:45Z",
      "side": 0,
      "message": "jinx",
      "parentUuid": "df4285af_caadba37",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 50
      },
      "revId": "ef2bb813c82d5a96bb0993be83a34bfccb5f8c77",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1e0cd00_05d21862",
        "filename": "src/runtime/pinner.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-05-23T22:33:08Z",
      "side": 0,
      "message": "\u003e I think you over-optimize now for the cases single serial pinners\n\nthe motivating use-case (iovec, io_uring), AFAICT, could benefit from this optimization, judging by your examples on the issue. I think that\u0027s basically all we have to go on right now.\n\nnonetheless, pooling at least the *pinner will help every case at least a little. even if there are multiple Pinners with multiple lifetimes, you get to save one of those allocations. (and again, we should probably be pooling them more generally, but that\u0027s too complex of a change for right now.)\n\nI do think refStore has to be there for other reasons anyway, so I\u0027ll make sure to leave that be. as per my other comment, I\u0027m not going to try and keep refs around.",
      "parentUuid": "96124aeb_74a1d749",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 50
      },
      "revId": "ef2bb813c82d5a96bb0993be83a34bfccb5f8c77",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f784f8cc_1b98647f",
        "filename": "src/runtime/pinner.go",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-05-23T22:45:32Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "b1e0cd00_05d21862",
      "range": {
        "startLine": 68,
        "startChar": 1,
        "endLine": 68,
        "endChar": 50
      },
      "revId": "ef2bb813c82d5a96bb0993be83a34bfccb5f8c77",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}