{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "86a41999_1566f8c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 5305
      },
      "writtenOn": "2024-11-20T22:00:08Z",
      "side": 1,
      "message": "This looks basically fine to me as well. Thanks!",
      "revId": "5a7919c1ebe878bbe6d20bc5d4cd32d6c6a37a90",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12bf292e_c5035731",
        "filename": "src/cmd/internal/test2json/test2json.go",
        "patchSetId": 28
      },
      "lineNbr": 508,
      "author": {
        "id": 5305
      },
      "writtenOn": "2024-11-20T22:00:08Z",
      "side": 1,
      "message": "Do we need to worry about the case of \\r and \\n being split across two calls?",
      "revId": "5a7919c1ebe878bbe6d20bc5d4cd32d6c6a37a90",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98d2465b_3be45834",
        "filename": "src/cmd/internal/test2json/test2json.go",
        "patchSetId": 28
      },
      "lineNbr": 508,
      "author": {
        "id": 52633
      },
      "writtenOn": "2024-11-20T22:09:35Z",
      "side": 1,
      "message": "That could theoretically happen. My position is that this is a QoL feature: as a tooling developer (vscode-go) I expect `t.Error(\"Error\\n\")` to produce an error even, possibly with an error-continue event, that includes the LF. If CR and LF are split across calls, the result will be an error event with the content of the first call (including CR), and a regular (non-error) event with the LF. Additionally, under normal circumstances this will never happen because the testing package will emit ^N (markErrEnd) between CR and LF. The only way we hit this case is if something gets between the test binary and test2json and replaces LF with CR LF. Given the minor consequences and unlikeliness of hitting this case, I thought the additional complexity wasn\u0027t worth it.",
      "parentUuid": "12bf292e_c5035731",
      "revId": "5a7919c1ebe878bbe6d20bc5d4cd32d6c6a37a90",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}