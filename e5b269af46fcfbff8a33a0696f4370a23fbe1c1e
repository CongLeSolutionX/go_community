{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "76aea110_5c29a1e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-10T06:13:51Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003de5b269af\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "e5b269af46fcfbff8a33a0696f4370a23fbe1c1e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b44de5b_359360fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-10T06:24:48Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "76aea110_5c29a1e7",
      "tag": "autogenerated:trybots~happy",
      "revId": "e5b269af46fcfbff8a33a0696f4370a23fbe1c1e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21411838_e413a237",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-08-10T21:38:02Z",
      "side": 1,
      "message": "thanks for your change!",
      "revId": "e5b269af46fcfbff8a33a0696f4370a23fbe1c1e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1c36ff2_98d0dd17",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 1
      },
      "lineNbr": 567,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-08-10T21:37:42Z",
      "side": 1,
      "message": "I would argue against doing this because this is part of an exported API. it\u0027d be too easy to accidentally change this in a backwards-incompatible way if it\u0027s defined by the constant.\n\nthe same goes for Stack0 in MemProfileRecord. I appreciate the cleanup, but unfortunately I think we probably shouldn\u0027t change these two.\n\nI think the other one (createstack) is good though. it helps keeps us honest about maxStack and the field here lining up (otherwise there\u0027ll be a compiler error).",
      "range": {
        "startLine": 567,
        "startChar": 9,
        "endLine": 567,
        "endChar": 17
      },
      "revId": "e5b269af46fcfbff8a33a0696f4370a23fbe1c1e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}