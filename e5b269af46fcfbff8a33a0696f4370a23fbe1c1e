{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "76aea110_5c29a1e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-10T06:13:51Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003de5b269af\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "e5b269af46fcfbff8a33a0696f4370a23fbe1c1e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b44de5b_359360fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-10T06:24:48Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "76aea110_5c29a1e7",
      "tag": "autogenerated:trybots~happy",
      "revId": "e5b269af46fcfbff8a33a0696f4370a23fbe1c1e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21411838_e413a237",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-08-10T21:38:02Z",
      "side": 1,
      "message": "thanks for your change!",
      "revId": "e5b269af46fcfbff8a33a0696f4370a23fbe1c1e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1c36ff2_98d0dd17",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 1
      },
      "lineNbr": 567,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-08-10T21:37:42Z",
      "side": 1,
      "message": "I would argue against doing this because this is part of an exported API. it\u0027d be too easy to accidentally change this in a backwards-incompatible way if it\u0027s defined by the constant.\n\nthe same goes for Stack0 in MemProfileRecord. I appreciate the cleanup, but unfortunately I think we probably shouldn\u0027t change these two.\n\nI think the other one (createstack) is good though. it helps keeps us honest about maxStack and the field here lining up (otherwise there\u0027ll be a compiler error).",
      "range": {
        "startLine": 567,
        "startChar": 9,
        "endLine": 567,
        "endChar": 17
      },
      "revId": "e5b269af46fcfbff8a33a0696f4370a23fbe1c1e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4dd5d585_13cbe4ab",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 1
      },
      "lineNbr": 567,
      "author": {
        "id": 34725
      },
      "writtenOn": "2023-08-11T01:36:05Z",
      "side": 1,
      "message": "Thanks for the opinion here, but it\u0027s a bit confusing that we chose to guard the compatibility of the exported APIs by using \"32\" among these relevant fields instead of creating a test against it.",
      "parentUuid": "f1c36ff2_98d0dd17",
      "range": {
        "startLine": 567,
        "startChar": 9,
        "endLine": 567,
        "endChar": 17
      },
      "revId": "e5b269af46fcfbff8a33a0696f4370a23fbe1c1e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00c65904_5cea4550",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 1
      },
      "lineNbr": 567,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-08-11T02:45:21Z",
      "side": 1,
      "message": "I mean, +1 to creating a test against it if you\u0027re so inclined. my assumption is this code evolved fairly organically and no one thought to do that at the time.\n\nnow that I think of it though, I\u0027m also fairly sure this would get caught in the API audit before each release, so maybe it\u0027s not that big of a deal to use maxStack here. I think maxStack _might_ show up in documentation (hiding the 32), which might be a reason to still not do it? I don\u0027t actually remember.\n\nre: using maxStack in createstack, I only meant that we incidentally get that kind of coverage, which is a positive, but a test would certainly be better.",
      "parentUuid": "4dd5d585_13cbe4ab",
      "range": {
        "startLine": 567,
        "startChar": 9,
        "endLine": 567,
        "endChar": 17
      },
      "revId": "e5b269af46fcfbff8a33a0696f4370a23fbe1c1e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aab5e877_91707130",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 1
      },
      "lineNbr": 567,
      "author": {
        "id": 34725
      },
      "writtenOn": "2023-08-11T14:28:14Z",
      "side": 1,
      "message": "OK, I got it.\n\nAs for the test, I don\u0027t have any specific ideas at the moment, do you have something in mind? or we just leave the `maxStack` for `createstack` as we\u0027ve already done in the latest commit in this CL?",
      "parentUuid": "00c65904_5cea4550",
      "range": {
        "startLine": 567,
        "startChar": 9,
        "endLine": 567,
        "endChar": 17
      },
      "revId": "e5b269af46fcfbff8a33a0696f4370a23fbe1c1e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a9ad2f4_31f8a0c3",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 1
      },
      "lineNbr": 567,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-08-15T00:27:29Z",
      "side": 1,
      "message": "the test could just check that the length of these public fields matches up with the internal constant, but it occurs to me that maybe there are other reasons they should stay decoupled. for instance, the profile format definitely supports a stack depth greater than 32.\n\nin any case, your change LGTM, thanks.",
      "parentUuid": "aab5e877_91707130",
      "range": {
        "startLine": 567,
        "startChar": 9,
        "endLine": 567,
        "endChar": 17
      },
      "revId": "e5b269af46fcfbff8a33a0696f4370a23fbe1c1e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}