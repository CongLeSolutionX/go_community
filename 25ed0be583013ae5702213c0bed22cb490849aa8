{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "52bdf7e1_2dd4453c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-04-25T14:48:50Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d25ed0be5",
      "tag": "autogenerated:trybots~beginning",
      "revId": "25ed0be583013ae5702213c0bed22cb490849aa8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c91a7ada_7dccb48c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-04-25T15:04:00Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n",
      "parentUuid": "52bdf7e1_2dd4453c",
      "tag": "autogenerated:trybots~happy",
      "revId": "25ed0be583013ae5702213c0bed22cb490849aa8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa772352_3b856a46",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-04-25T21:49:53Z",
      "side": 1,
      "message": "I don\u0027t see any difference between this and the original CL 310149?.  Did something change?",
      "revId": "25ed0be583013ae5702213c0bed22cb490849aa8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6741d80_e601d87d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-04-25T21:50:50Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d25ed0be5",
      "tag": "autogenerated:trybots~beginning",
      "revId": "25ed0be583013ae5702213c0bed22cb490849aa8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "383ecfc8_c39381a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-04-25T22:07:26Z",
      "side": 1,
      "message": "1 of 24 SlowBots failed.\nFailed on linux-amd64-longtest: https://storage.googleapis.com/go-build-log/25ed0be5/linux-amd64-longtest_5b4d5bb0.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n",
      "parentUuid": "f6741d80_e601d87d",
      "tag": "autogenerated:trybots~failed",
      "revId": "25ed0be583013ae5702213c0bed22cb490849aa8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06975f2f_bdae415f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 34725
      },
      "writtenOn": "2021-04-26T02:53:09Z",
      "side": 1,
      "message": "I find this bug more and more interesting, it seems that runqdrain() overstep the boundary of the local P regardless of the head and tail pointers and put those goroutines into global runq, which will be taken by other P\u0027s and execute them, resulting in the chaotic statuses of goroutines in work.assistQueue.q.",
      "revId": "25ed0be583013ae5702213c0bed22cb490849aa8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8d6d3c6_7679f2e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 34725
      },
      "writtenOn": "2021-04-26T05:50:13Z",
      "side": 1,
      "message": "Alternatively, atomic.LoadAcq() and atomic.CasRel() somehow didn\u0027t work well on amd64-longest, letting both runqdrain() and runqsteal()/runqgrab() take some mutual goroutines.",
      "parentUuid": "06975f2f_bdae415f",
      "revId": "25ed0be583013ae5702213c0bed22cb490849aa8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}