{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e94ae6cd_aaff2ad1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-12-09T22:10:57Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d77e5c59b",
      "tag": "autogenerated:trybots~beginning",
      "revId": "77e5c59bbfbb1b62a8054198e31c5a335d78c233",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51912a52_faa5f605",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-12-09T22:24:43Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "e94ae6cd_aaff2ad1",
      "tag": "autogenerated:trybots~happy",
      "revId": "77e5c59bbfbb1b62a8054198e31c5a335d78c233",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cdf78c7b_7dfe1f92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-12-10T17:14:26Z",
      "side": 1,
      "message": "I\u0027m still not a fan of the hard-coded timeouts, but this does seem like a strict improvement as far as the rest of the behaviors go.",
      "revId": "77e5c59bbfbb1b62a8054198e31c5a335d78c233",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6f71b87_13d6d3fb",
        "filename": "src/internal/testenv/testenv.go",
        "patchSetId": 2
      },
      "lineNbr": 333,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-12-10T17:14:26Z",
      "side": 1,
      "message": "Here\u0027s an alternative idea: instead of always returning a combined stderr and stdout as a []byte, what if we shim in pipes underneath whatever the caller had already populated, and maybe only fill in our own buffer (for t.Logf) if stderr and/or stdout is nil?\n\nThen the caller could poke in buffers for whichever of those streams they want to process — either combined or separately — and leave it up to RunWithTimeout to log the remainder.",
      "range": {
        "startLine": 322,
        "startChar": 0,
        "endLine": 333,
        "endChar": 15
      },
      "revId": "77e5c59bbfbb1b62a8054198e31c5a335d78c233",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35c3607d_69ef3855",
        "filename": "src/internal/testenv/testenv.go",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-12-10T17:14:26Z",
      "side": 1,
      "message": "Since you\u0027re returning the error, it is likely that the caller will log that error too.\n\nI would be inclined to always log the args and stderr, and to always return stdout and procErr without logging them.",
      "range": {
        "startLine": 424,
        "startChar": 50,
        "endLine": 424,
        "endChar": 57
      },
      "revId": "77e5c59bbfbb1b62a8054198e31c5a335d78c233",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}