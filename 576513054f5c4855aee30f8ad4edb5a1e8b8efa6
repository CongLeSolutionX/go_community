{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d7f1fd7d_defdbea3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-09-23T23:32:28Z",
      "side": 1,
      "message": "Hello AlexanderYastrebov, I\u0027ve spotted some possible problems.\n\nThese findings are based on simple heuristics. If a finding appears wrong, briefly reply here saying so. Otherwise, please address any problems and update the GitHub PR. When complete, mark this comment as \u0027Done\u0027 and click the [blue \u0027Reply\u0027 button](https://github.com/golang/go/wiki/GerritBot#i-left-a-reply-to-a-comment-in-gerrit-but-no-one-but-me-can-see-it) above.\n\nPossible problems detected:\n  1. You usually need to reference a bug number for all but trivial or cosmetic fixes. For this repo, the format is usually \u0027Fixes #12345\u0027 or \u0027Updates #12345\u0027 at the end of the commit message. Should you have a bug reference?\n\nTo edit the commit message, see instructions [here](https://github.com/golang/go/wiki/GerritBot/#how-does-gerritbot-determine-the-final-commit-message). For guidelines on commit messages for the Go project, see [here](https://go.dev/doc/contribute#commit_messages).\n\n\n(In general for Gerrit code reviews, the CL author is expected to close out each piece of feedback by marking it as \u0027Done\u0027 if implemented as suggested or otherwise reply to each review comment. See the [Review](https://go.dev/doc/contribute#review) section of the Contributing Guide for details.)",
      "revId": "576513054f5c4855aee30f8ad4edb5a1e8b8efa6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf071ee4_98ebc2c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 32637
      },
      "writtenOn": "2023-09-23T23:34:38Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d7f1fd7d_defdbea3",
      "revId": "576513054f5c4855aee30f8ad4edb5a1e8b8efa6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d506eaf8_f4702d6c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-09-24T05:22:51Z",
      "side": 1,
      "message": "Thanks, but we shouldn\u0027t complicate the code because of the current compiler.  We should improve the compiler instead.",
      "revId": "576513054f5c4855aee30f8ad4edb5a1e8b8efa6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ee518e9_101b44a9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 32637
      },
      "writtenOn": "2023-09-24T10:52:57Z",
      "side": 1,
      "message": "Let me put my arguments forward (which I maybe should have added to the commit message).\n\n1. Performance gain is tangible because `val` is called in the hot loop and we can have it today while compiler improvement timeline that would make this change unnecessary is not obvious.\n2. The change is consistent with already existing `fetch` method that is called from huff.go and literals.go directly and there is no problem in converting its boolean result to error there. In fact this improvement is possible because `val` just wraps `fetch` which is inlined; here I just make one more step to inline `fetch` itself.\n3. The change does not complicate code as it is trivial and does not change code structure really",
      "parentUuid": "d506eaf8_f4702d6c",
      "revId": "576513054f5c4855aee30f8ad4edb5a1e8b8efa6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}