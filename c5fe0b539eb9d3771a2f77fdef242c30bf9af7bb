{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "edcb768b_8d6dbd3f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 5167
      },
      "writtenOn": "2024-05-17T16:04:26Z",
      "side": 1,
      "message": "Updates #67401",
      "revId": "c5fe0b539eb9d3771a2f77fdef242c30bf9af7bb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73d7c7b7_c0e448d0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-05-17T16:28:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edcb768b_8d6dbd3f",
      "revId": "c5fe0b539eb9d3771a2f77fdef242c30bf9af7bb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41c933bc_18af5d1e",
        "filename": "src/crypto/tls/badlinkname.go",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 5167
      },
      "writtenOn": "2024-05-17T16:03:24Z",
      "side": 1,
      "message": "I\u0027m confused by these. Is there something in the wild linkname\u0027ing this method? If nothing in this package refers to badlinkname_halfConn_incSeq, what does this actually accomplish?",
      "revId": "c5fe0b539eb9d3771a2f77fdef242c30bf9af7bb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be1904fc_388522b0",
        "filename": "src/crypto/tls/badlinkname.go",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-05-17T16:28:55Z",
      "side": 1,
      "message": "Yeah, there is code in the wild pull-linknameing this method. On the pull side, it is applied on a function declaration, which is allowed, and the compiler doesn\u0027t parse the symbol name to see if it is a method.\n\nThe effect of this line is that it marks `crypto/tls.(*halfConn).incSeq` symbol AttrLinkname. Since this symbol is defined in this package, it is considered a push. Ideally maybe the push linkname must be marked on the definition, but in my current implementation we don\u0027t require that (which may not be easy). (And if we do this, we\u0027ll need another way of pushing methods, which I don\u0027t want to go too deep with, as it is just for unwanted use cases.) Currently, as long as a linkname and a definition appear in the same package, it is a push.\n\n(The whole linkname pulling methods thing depends on that function and method have same calling convention. If we change the calling convention of methods, we\u0027ll need to do something with it. Maybe this kind of linkname signals generating a wrapper?)",
      "parentUuid": "41c933bc_18af5d1e",
      "revId": "c5fe0b539eb9d3771a2f77fdef242c30bf9af7bb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e83d01c0_7e1079b4",
        "filename": "src/runtime/time_nofake.go",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 5167
      },
      "writtenOn": "2024-05-17T16:03:24Z",
      "side": 1,
      "message": "Leave a common explaining why this is linknamed? (Is the AI suggested fix actually right? ðŸ˜„)",
      "fixSuggestions": [
        {
          "fixId": "f5ebdd4b_2a4eef9b",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/runtime/time_nofake.go",
              "range": {
                "startLine": 24,
                "startChar": 0,
                "endLine": 24,
                "endChar": 0
              },
              "replacement": "// This is linkname\u0027d because it is used by the playground.\n//\n"
            }
          ]
        }
      ],
      "revId": "c5fe0b539eb9d3771a2f77fdef242c30bf9af7bb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dae7958d_6fc77bb5",
        "filename": "src/runtime/time_nofake.go",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-05-17T16:28:55Z",
      "side": 1,
      "message": "Done. (No, the AI suggested one is not. It is linknamed in golang.zx2c4.com/wireguard/windows.) Interestingly, the linkname was added for an early stage of #42888, which is now resolved with SetCrashOutput. Maybe we should revisit this.",
      "parentUuid": "e83d01c0_7e1079b4",
      "revId": "c5fe0b539eb9d3771a2f77fdef242c30bf9af7bb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}