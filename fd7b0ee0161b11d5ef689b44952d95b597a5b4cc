{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "34f5cff0_f762012a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 7061
      },
      "writtenOn": "2022-05-12T18:49:08Z",
      "side": 1,
      "message": "LGTM",
      "revId": "fd7b0ee0161b11d5ef689b44952d95b597a5b4cc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "713b6f90_1865f128",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 7061
      },
      "writtenOn": "2022-05-12T18:49:08Z",
      "side": 1,
      "message": "What if gomaxprocs changes?  Do we correct this copy sometime after a change?",
      "range": {
        "startLine": 68,
        "startChar": 17,
        "endLine": 68,
        "endChar": 44
      },
      "revId": "fd7b0ee0161b11d5ef689b44952d95b597a5b4cc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e26ff3e7_1615997d",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-05-12T18:54:47Z",
      "side": 1,
      "message": "resetCapacity handles updating this copy, and is called by procresize (the routine that actually does the change).",
      "parentUuid": "713b6f90_1865f128",
      "range": {
        "startLine": 68,
        "startChar": 17,
        "endLine": 68,
        "endChar": 44
      },
      "revId": "fd7b0ee0161b11d5ef689b44952d95b597a5b4cc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d97d6ce_00b2bbcd",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 5
      },
      "lineNbr": 180,
      "author": {
        "id": 7061
      },
      "writtenOn": "2022-05-12T18:49:08Z",
      "side": 1,
      "message": "is this constant-ish across update attempts (i.e., is it the same factor for a current + deferred update?",
      "range": {
        "startLine": 180,
        "startChar": 51,
        "endLine": 180,
        "endChar": 74
      },
      "revId": "fd7b0ee0161b11d5ef689b44952d95b597a5b4cc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76bfe77d_5d37e406",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 5
      },
      "lineNbr": 180,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-05-12T18:54:47Z",
      "side": 1,
      "message": "it\u0027s constant-ish in general. :) but the main reason why this isn\u0027t updated from the actual time spent in background workers is because they\u0027re non-preemptible, so there isn\u0027t really a good place to update the timing in the mark worker goroutine. we could push the update deeper into the scan loop (e.g. gcDrain instead of the mark worker goroutine), but so far it hasn\u0027t seemed worth it because this is so steady (even in situations where e.g. GOMAXPROCS\u003d1).",
      "parentUuid": "2d97d6ce_00b2bbcd",
      "range": {
        "startLine": 180,
        "startChar": 51,
        "endLine": 180,
        "endChar": 74
      },
      "revId": "fd7b0ee0161b11d5ef689b44952d95b597a5b4cc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f61c7755_23301e0f",
        "filename": "src/runtime/mgclimit.go",
        "patchSetId": 5
      },
      "lineNbr": 180,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-05-13T15:38:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "76bfe77d_5d37e406",
      "range": {
        "startLine": 180,
        "startChar": 51,
        "endLine": 180,
        "endChar": 74
      },
      "revId": "fd7b0ee0161b11d5ef689b44952d95b597a5b4cc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}