{
  "comments": [
    {
      "key": {
        "uuid": "8b49bfb3_5cc8f752",
        "filename": "src/encoding/gob/decode.go",
        "patchSetId": 1
      },
      "lineNbr": 555,
      "author": {
        "id": 5065
      },
      "writtenOn": "2017-04-02T01:18:45Z",
      "side": 1,
      "message": "this could use a comment",
      "revId": "5e24e839efe1ee6941d542cab0031ec0b2937324",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b15b6ed2_258cb800",
        "filename": "src/encoding/gob/decode.go",
        "patchSetId": 1
      },
      "lineNbr": 555,
      "author": {
        "id": 17532
      },
      "writtenOn": "2017-04-03T05:09:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b49bfb3_5cc8f752",
      "revId": "5e24e839efe1ee6941d542cab0031ec0b2937324",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "240cf4d6_13b213b7",
        "filename": "src/encoding/gob/decode.go",
        "patchSetId": 1
      },
      "lineNbr": 556,
      "author": {
        "id": 5065
      },
      "writtenOn": "2017-04-02T13:58:50Z",
      "side": 1,
      "message": "I don\u0027t think Array needs to be included in this list.",
      "revId": "5e24e839efe1ee6941d542cab0031ec0b2937324",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88da26de_1f1ea8a7",
        "filename": "src/encoding/gob/decode.go",
        "patchSetId": 1
      },
      "lineNbr": 556,
      "author": {
        "id": 17532
      },
      "writtenOn": "2017-04-03T05:09:04Z",
      "side": 1,
      "message": "I added a test for that and I don\u0027t think array can be removed, because it can be an array of pointers and it seems the values get clobbered if I reuse a single value instance.",
      "parentUuid": "240cf4d6_13b213b7",
      "revId": "5e24e839efe1ee6941d542cab0031ec0b2937324",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b0ef485_935bc896",
        "filename": "src/encoding/gob/decode.go",
        "patchSetId": 1
      },
      "lineNbr": 584,
      "author": {
        "id": 5065
      },
      "writtenOn": "2017-04-02T13:58:50Z",
      "side": 1,
      "message": "shouldn\u0027t you only make these if !keyNeedsAlloc?\n\nIt seems like you could write this like:\n\n    var key, elem reflect.value\n    for i :\u003d 0; i \u003c n; i++ {\n           if keyNeedsAlloc || !key.IsValid() {\n                 key \u003d allocValue(mtyp.Key())\n           }\n           if elemNeedsAlloc || !elem.IsValid() {\n                 elem \u003d allocValue(mtyp.Key())\n           }\n           key \u003d decodeIntoValue(state, keyOp, keyIsPtr, key, keyInstr)\n\t   elem \u003d decodeIntoValue(state, elemOp, elemIsPtr, elem, elemInstr)\n\t   value.SetMapIndex(key, elem)\n    }\n\n(and not having the \"reusable\" variables at all)",
      "range": {
        "startLine": 583,
        "startChar": 1,
        "endLine": 584,
        "endChar": 40
      },
      "revId": "5e24e839efe1ee6941d542cab0031ec0b2937324",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6ecd321_94d58c34",
        "filename": "src/encoding/gob/decode.go",
        "patchSetId": 1
      },
      "lineNbr": 584,
      "author": {
        "id": 17532
      },
      "writtenOn": "2017-04-03T05:09:04Z",
      "side": 1,
      "message": "Done, thanks, definitely cleaner.",
      "parentUuid": "0b0ef485_935bc896",
      "range": {
        "startLine": 583,
        "startChar": 1,
        "endLine": 584,
        "endChar": 40
      },
      "revId": "5e24e839efe1ee6941d542cab0031ec0b2937324",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}