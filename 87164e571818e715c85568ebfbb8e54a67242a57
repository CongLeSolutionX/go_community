{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f2c9a9e8_3d5baf81",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-04T15:57:43Z",
      "side": 1,
      "message": "Hi, any response for my last comment?",
      "revId": "87164e571818e715c85568ebfbb8e54a67242a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0472f3d9_a5be0e83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2020-11-04T20:57:09Z",
      "side": 1,
      "message": "Again, I don\u0027t think this improves the clarity of the code.\n\n`chan struct{}` usually indicates a close-only channel,¹ whereas `chan token` or `chan bool` is more common (especially in cmd/go)²³ for a channel with empty-but-meaningful payloads.\n\nIf you want to improve the consistency of usage of `chan struct{}`, I recommend that you move the codebase in the opposite direction: replace uses of `chan struct{}` that are *not* close-only channels with `chan bool` or `chan token`.\n\n¹https://github.com/golang/go/search?q\u003d%22chan+struct%7B%7D%22\u0026type\u003dcode\n²https://github.com/golang/go/search?q\u003d%22chan+token%22\u0026type\u003dcode\n³https://github.com/golang/go/search?q\u003d%22chan+bool%22\u0026type\u003dcode",
      "parentUuid": "f2c9a9e8_3d5baf81",
      "revId": "87164e571818e715c85568ebfbb8e54a67242a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db0a2dba_43f22241",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-05T00:34:10Z",
      "side": 1,
      "message": "Got it, thanks for the explanation.",
      "parentUuid": "0472f3d9_a5be0e83",
      "revId": "87164e571818e715c85568ebfbb8e54a67242a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}