{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2d5f9302_3ff5dff1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-04-10T15:19:48Z",
      "side": 1,
      "message": "TRY\u003dppc64le,ppc64lep10",
      "revId": "df2de1bd224ec60016dad81b2111b6d0cb73afe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5031c73_7cd9184d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-10T15:20:02Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003ddf2de1bd\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "df2de1bd224ec60016dad81b2111b6d0cb73afe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8e986b1_ff6a7d5a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-10T15:42:05Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-ppc64le-buildlet\n* linux-ppc64le-power10osu\n",
      "parentUuid": "a5031c73_7cd9184d",
      "tag": "autogenerated:trybots~happy",
      "revId": "df2de1bd224ec60016dad81b2111b6d0cb73afe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "558c2bf3_4d203d32",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-04-12T16:29:57Z",
      "side": 1,
      "message": "This could provide more detail. This is not just creating an entry point, but creating the code for a function that calls addmoduledata. Where does the TOC regeneration happen?",
      "revId": "df2de1bd224ec60016dad81b2111b6d0cb73afe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d07519f_60dbc3e3",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-04-13T16:34:22Z",
      "side": 1,
      "message": "This is it, the addis/addi with reloc.\n\nI\u0027ll add a Go version of this function.",
      "parentUuid": "558c2bf3_4d203d32",
      "revId": "df2de1bd224ec60016dad81b2111b6d0cb73afe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6516f038_eed99fd1",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-04-13T21:41:46Z",
      "side": 1,
      "message": "Ah OK, you meant the TOC address. I was thought you meant generating something in the actual TOC that was my confusion.",
      "parentUuid": "7d07519f_60dbc3e3",
      "revId": "df2de1bd224ec60016dad81b2111b6d0cb73afe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a73dfa64_7c69efb3",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-04-12T16:29:57Z",
      "side": 1,
      "message": "This is saving the LR into slot 0 of the new frame, not the previous.",
      "revId": "df2de1bd224ec60016dad81b2111b6d0cb73afe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78b22b6f_38f007ab",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-04-13T16:34:22Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a73dfa64_7c69efb3",
      "revId": "df2de1bd224ec60016dad81b2111b6d0cb73afe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7dba9b8_27ab6ded",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-04-12T16:29:57Z",
      "side": 1,
      "message": "\"Even word\" is a bit vague as to what you mean. Do you mean this instruction is 4 or 8 bytes from the start of the function, which is at least 16 byte aligned (I think?)",
      "revId": "df2de1bd224ec60016dad81b2111b6d0cb73afe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71d60c3c_4c4d44c3",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-04-13T16:34:22Z",
      "side": 1,
      "message": "Maybe more succinctly, it is placed on a doubleword boundary so it cannot cross a 64B boundary.",
      "parentUuid": "d7dba9b8_27ab6ded",
      "revId": "df2de1bd224ec60016dad81b2111b6d0cb73afe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82e27722_847b0b38",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-04-13T21:41:46Z",
      "side": 1,
      "message": "Doubleword boundary is better.",
      "parentUuid": "71d60c3c_4c4d44c3",
      "revId": "df2de1bd224ec60016dad81b2111b6d0cb73afe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6550812_b2ad4aa2",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 6320
      },
      "writtenOn": "2023-04-12T16:29:57Z",
      "side": 1,
      "message": "This needs a comment as to why you are decrementing by 8. If there is an update to this code at some point the offset could get out of sync and it won\u0027t be obvious this value might need changing. Maybe it would be better to keep it after rel2 gets defined even though it would be in 2 places.",
      "revId": "df2de1bd224ec60016dad81b2111b6d0cb73afe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80a8ff8f_ab51e0cf",
        "filename": "src/cmd/link/internal/ppc64/asm.go",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-04-13T16:34:22Z",
      "side": 1,
      "message": "Yes, it\u0027s kind of ugly. Looking at symbol builder, there is simpler API to consolidate some of the boilerplate. I\u0027ll refactor this.",
      "parentUuid": "f6550812_b2ad4aa2",
      "revId": "df2de1bd224ec60016dad81b2111b6d0cb73afe5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}