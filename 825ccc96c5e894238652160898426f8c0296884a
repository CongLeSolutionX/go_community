{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9f7fb5be_2b589fc7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-09-21T13:34:32Z",
      "side": 1,
      "message": "It seems like the purpose of this change is a latency improvement? If so, please add a benchmark and show the change in benchmark results in the commit message — you can use `golang.org/x/perf/cmd/benchstat` to summarize the differences.",
      "revId": "825ccc96c5e894238652160898426f8c0296884a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60927fa6_d924f543",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 62608
      },
      "writtenOn": "2024-01-09T22:23:02Z",
      "side": 1,
      "message": "@bcmills@google.com, I added the requested benchmark. During the development I found a cache that impacted the results. I had to clear it in modfetch.Reset. Please, check it.",
      "parentUuid": "9f7fb5be_2b589fc7",
      "revId": "825ccc96c5e894238652160898426f8c0296884a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3cf54de_d73d6a15",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 64033
      },
      "writtenOn": "2024-01-10T04:52:53Z",
      "side": 1,
      "message": "See https://go.dev/doc/contribute#sending_a_change_github ,  and the final commit description will be composed by concatenating the pull request\u0027s title and description.",
      "parentUuid": "60927fa6_d924f543",
      "revId": "825ccc96c5e894238652160898426f8c0296884a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fcaaef7_d24afb25",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-09-21T07:57:17Z",
      "side": 1,
      "message": "Hello goto1134, I\u0027ve spotted some possible problems.\n\nThese findings are based on simple heuristics. If a finding appears wrong, briefly reply here saying so. Otherwise, please address any problems and update the GitHub PR. When complete, mark this comment as \u0027Done\u0027 and click the [blue \u0027Reply\u0027 button](https://github.com/golang/go/wiki/GerritBot#i-left-a-reply-to-a-comment-in-gerrit-but-no-one-but-me-can-see-it) above.\n\nPossible problems detected:\n  1. The commit message body is very brief. That can be OK if the change is trivial like correcting spelling or fixing a broken link, but usually the description should provide context for the change and explain what it does in complete sentences.\n\nTo edit the commit message, see instructions [here](https://github.com/golang/go/wiki/GerritBot/#how-does-gerritbot-determine-the-final-commit-message). For guidelines on commit messages for the Go project, see [here](https://go.dev/doc/contribute#commit_messages).\n\n\n(In general for Gerrit code reviews, the CL author is expected to close out each piece of feedback by marking it as \u0027Done\u0027 if implemented as suggested or otherwise reply to each review comment. See the [Review](https://go.dev/doc/contribute#review) section of the Contributing Guide for details.)",
      "revId": "825ccc96c5e894238652160898426f8c0296884a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9008c076_b1219e4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 62608
      },
      "writtenOn": "2023-09-21T12:15:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4fcaaef7_d24afb25",
      "revId": "825ccc96c5e894238652160898426f8c0296884a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "274b9a42_f2bd8dba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 62608
      },
      "writtenOn": "2023-09-21T12:15:42Z",
      "side": 1,
      "message": "I think the title is self-explanatory, and there is no need to change it. If you disagree, please share!",
      "revId": "825ccc96c5e894238652160898426f8c0296884a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14125dc2_16fa2c4e",
        "filename": "src/cmd/go/internal/modload/list.go",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-09-21T13:34:32Z",
      "side": 1,
      "message": "I would prefer not to use a `sync.Mutex` for this — for most simple synchronization I prefer a 1-buffered channel, with the result stored in the channel buffer when not in use.",
      "revId": "825ccc96c5e894238652160898426f8c0296884a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d12789f6_f6b455f6",
        "filename": "src/cmd/go/internal/modload/list.go",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 62608
      },
      "writtenOn": "2023-09-21T14:46:21Z",
      "side": 1,
      "message": "I don\u0027t know how to utilize the channel and also provide predictable order. Will go with writing to an initialized array for now.",
      "parentUuid": "14125dc2_16fa2c4e",
      "revId": "825ccc96c5e894238652160898426f8c0296884a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c872d43c_8ec7a478",
        "filename": "src/cmd/go/internal/modload/list.go",
        "patchSetId": 1
      },
      "lineNbr": 292,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-09-21T13:34:32Z",
      "side": 1,
      "message": "It seems like this will result in the modules being appended in nondeterministic order. To make `go list` more testable — and to make bugs easier to diagnose — it is important that its output be fully deterministic.",
      "revId": "825ccc96c5e894238652160898426f8c0296884a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fddc91c_524f8761",
        "filename": "src/cmd/go/internal/modload/list.go",
        "patchSetId": 1
      },
      "lineNbr": 292,
      "author": {
        "id": 62608
      },
      "writtenOn": "2023-09-21T14:46:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c872d43c_8ec7a478",
      "revId": "825ccc96c5e894238652160898426f8c0296884a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}