{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "52d4b601_588ddebc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-24T19:00:34Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d8cdedc55\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "8cdedc553ece3205f28ddd700bc75a282dbee1ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d82d7ef_d30c1adc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-24T19:08:41Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "52d4b601_588ddebc",
      "tag": "autogenerated:trybots~happy",
      "revId": "8cdedc553ece3205f28ddd700bc75a282dbee1ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca09658c_4270c275",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 13550
      },
      "writtenOn": "2023-02-26T14:53:11Z",
      "side": 1,
      "message": "In the future, we could consider moving internal/bytealg.MakeNoZero to unsafe.MakeNoZero, for the sake of third party packages. It would definitely be dangerous, which is why unsafe comes to mind, but it could really help with low-level packages when used with care.",
      "revId": "8cdedc553ece3205f28ddd700bc75a282dbee1ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b40c4ce_c82991ea",
        "filename": "src/bytes/bytes.go",
        "patchSetId": 8
      },
      "lineNbr": 599,
      "author": {
        "id": 35155
      },
      "writtenOn": "2023-02-27T17:57:39Z",
      "side": 1,
      "message": "Moving the len(b) \u003d\u003d 0 check here changes the behavior in this edge case: previously Repeat(nil, -1) would panic, and now it no longer does. The docs just say \"it panics if count is negative\" without specifying if that applies at all times or only on non-zero-length b.\n\nI\u0027m not sure if it matters that the panic is dropped in the zero bytes case, but probably not since the caller can handle it/arrange for it not to happen as desired. I think it\u0027s fine to ack and let this auto-submit, unless you think it\u0027s better to change this.",
      "revId": "8cdedc553ece3205f28ddd700bc75a282dbee1ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ccab047d_f6bfc84e",
        "filename": "src/bytes/bytes.go",
        "patchSetId": 8
      },
      "lineNbr": 599,
      "author": {
        "id": 8495
      },
      "writtenOn": "2023-02-27T18:23:19Z",
      "side": 1,
      "message": "Good catch. For an optimization change. I\u0027d prefer not to change semantics. I\u0027ll move the check to the original place.",
      "parentUuid": "7b40c4ce_c82991ea",
      "revId": "8cdedc553ece3205f28ddd700bc75a282dbee1ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbfc665a_e66063da",
        "filename": "src/strings/strings.go",
        "patchSetId": 8
      },
      "lineNbr": 540,
      "author": {
        "id": 35155
      },
      "writtenOn": "2023-02-27T17:57:39Z",
      "side": 1,
      "message": "Same here.",
      "revId": "8cdedc553ece3205f28ddd700bc75a282dbee1ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}