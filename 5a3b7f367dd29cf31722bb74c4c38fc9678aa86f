{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0f3b672f_9b340303",
        "filename": "src/testing/benchmark.go",
        "patchSetId": 1
      },
      "lineNbr": 781,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-11-02T14:05:10Z",
      "side": 1,
      "message": "The phrases “For historical reasons” and “the real value” are not appropriate in this comment, because they don\u0027t convey any additional meaning. Whether you want to report CPU time or wall time depends on what you\u0027re trying to measure with the benchmark: if you are trying to fix a concurrency bottleneck, for example, wall time may be more useful than CPU time. (And a proper reckoning of “CPU time” would take parked goroutines into account too: there are at least three different notions of “time per op” that could be meaningful here.)\n\nInstead, document what the actual semantics are. Perhaps:\n\n```\n// RunParallel reports ns/op values as wall time for the benchmark as a whole,\n// not the sum of wall time or CPU time over each parallel goroutine.\n```",
      "range": {
        "startLine": 781,
        "startChar": 9,
        "endLine": 781,
        "endChar": 32
      },
      "revId": "5a3b7f367dd29cf31722bb74c4c38fc9678aa86f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19d7d6fc_92792919",
        "filename": "src/testing/benchmark.go",
        "patchSetId": 1
      },
      "lineNbr": 781,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-11-02T14:05:10Z",
      "side": 1,
      "message": "The prefix “NOTE:” is redundant here: in a doc comment, essentially every sentence after the first one is a note.",
      "range": {
        "startLine": 781,
        "startChar": 2,
        "endLine": 781,
        "endChar": 9
      },
      "revId": "5a3b7f367dd29cf31722bb74c4c38fc9678aa86f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bd278ad_c52a345c",
        "filename": "src/testing/benchmark.go",
        "patchSetId": 1
      },
      "lineNbr": 781,
      "author": {
        "id": 50449
      },
      "writtenOn": "2022-11-02T15:00:17Z",
      "side": 1,
      "message": "Done.\n\nBut I think your phrasing is more difficult to parse.\n\n1. I don\u0027t know why CPU Time should be discussed here at all. It\u0027s mentioned in #31884, but AFAIK Go\u0027s benchmarking framework always reports wall time, and never CPU time. If that needs to be documented it would probably make more sense to discuss it in the benchmark section here: https://pkg.go.dev/testing#hdr-Benchmarks\n2. I\u0027m okay with not using \"real value\", but I still think it\u0027s helpful to advise users on how to convert the currently reported ns/op into the more intuitive number.\n\nMaybe something like this?\n\n```\n// RunParallel reports ns/op values as wall time for the benchmark as a whole.\n// You can multiply the value by the number of goroutines to understand their\n// individual performance.\n```",
      "parentUuid": "0f3b672f_9b340303",
      "range": {
        "startLine": 781,
        "startChar": 9,
        "endLine": 781,
        "endChar": 32
      },
      "revId": "5a3b7f367dd29cf31722bb74c4c38fc9678aa86f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cde9904_06e139ce",
        "filename": "src/testing/benchmark.go",
        "patchSetId": 1
      },
      "lineNbr": 781,
      "author": {
        "id": 50449
      },
      "writtenOn": "2022-11-02T15:00:17Z",
      "side": 1,
      "message": "Done. I just copied this from other public comments in this package that seem to be used to document important pitfalls.",
      "parentUuid": "19d7d6fc_92792919",
      "range": {
        "startLine": 781,
        "startChar": 2,
        "endLine": 781,
        "endChar": 9
      },
      "revId": "5a3b7f367dd29cf31722bb74c4c38fc9678aa86f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}