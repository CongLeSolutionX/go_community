{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6d577537_721931b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 9210
      },
      "writtenOn": "2022-04-05T23:16:47Z",
      "side": 1,
      "message": "Thank you for the review!",
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "094be0db_8155f2e3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-04-05T23:17:37Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dbbdef02a",
      "tag": "autogenerated:trybots~beginning",
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b498be3_69ecc874",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-04-05T23:30:28Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "094be0db_8155f2e3",
      "tag": "autogenerated:trybots~happy",
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbfc0f9f_3441bcf2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-04-19T17:08:49Z",
      "side": 1,
      "message": "looks good overall!",
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2eb152dd_2f0db7a4",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 5
      },
      "lineNbr": 769,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-04-19T17:08:49Z",
      "side": 1,
      "message": "nit: atomic.Int64?",
      "range": {
        "startLine": 769,
        "startChar": 9,
        "endLine": 769,
        "endChar": 14
      },
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84881140_80cc344b",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 5
      },
      "lineNbr": 777,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-04-19T17:08:49Z",
      "side": 1,
      "message": "nit: use iota and omit the latter numbers",
      "range": {
        "startLine": 777,
        "startChar": 30,
        "endLine": 777,
        "endChar": 31
      },
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed882c36_fb4cbac0",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 5
      },
      "lineNbr": 779,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-04-19T17:08:49Z",
      "side": 1,
      "message": "some more documentation on each of these, even just a line, would be nice.\n\neither that, or give this a specific type and document that type.",
      "range": {
        "startLine": 777,
        "startChar": 0,
        "endLine": 779,
        "endChar": 31
      },
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7149afa_5cad6766",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 5
      },
      "lineNbr": 787,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-04-19T17:08:49Z",
      "side": 1,
      "message": "I know this isn\u0027t currently documented for the sync version, but a comment here would help (I don\u0027t see what this is trying to do, is it just defensive?)",
      "range": {
        "startLine": 785,
        "startChar": 1,
        "endLine": 787,
        "endChar": 2
      },
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5eb581f_ff8b2f78",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 5
      },
      "lineNbr": 806,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-04-19T17:08:49Z",
      "side": 1,
      "message": "what does this case mean?",
      "range": {
        "startLine": 804,
        "startChar": 0,
        "endLine": 806,
        "endChar": 17
      },
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c0ffcae_6c8a2756",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 5
      },
      "lineNbr": 852,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-04-19T17:08:49Z",
      "side": 1,
      "message": "the world is stopped anyway so it doesn\u0027t matter much, but for slightly better code readability you could do this as an atomic swap.",
      "range": {
        "startLine": 851,
        "startChar": 1,
        "endLine": 852,
        "endChar": 47
      },
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4d12152_ef308fed",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 5
      },
      "lineNbr": 883,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-04-19T17:08:49Z",
      "side": 1,
      "message": "nit: p.ptr() \u003d\u003d nil",
      "range": {
        "startLine": 883,
        "startChar": 13,
        "endLine": 883,
        "endChar": 19
      },
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a240991_e7c5a127",
        "filename": "src/runtime/mprof.go",
        "patchSetId": 5
      },
      "lineNbr": 916,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-04-19T17:08:49Z",
      "side": 1,
      "message": "the osyield here is somewhat unfortunate. it seems to me like at least goroutineProfileWithLabelsConcurrent could use Gosched here, but other callers (like in execute) cannot.\n\nmaybe there\u0027s nothing to be done about this, because adding an argument to this function isn\u0027t really feasible. and it probably doesn\u0027t make a huge difference in the long run.",
      "range": {
        "startLine": 916,
        "startChar": 3,
        "endLine": 916,
        "endChar": 12
      },
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad255500_385fca84",
        "filename": "src/runtime/runtime2.go",
        "patchSetId": 5
      },
      "lineNbr": 491,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-04-19T17:08:49Z",
      "side": 1,
      "message": "this reads a bit like this is a boolean. maybe \"goroutineProfiled is the state of the goroutine with respect to a goroutine profile\"?",
      "range": {
        "startLine": 490,
        "startChar": 1,
        "endLine": 491,
        "endChar": 22
      },
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cec1ec0_8eff9146",
        "filename": "src/runtime/runtime2.go",
        "patchSetId": 5
      },
      "lineNbr": 493,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-04-19T17:08:49Z",
      "side": 1,
      "message": "just curious, in case you didn\u0027t check, is there any \"free\" padding you can sneak this into to avoid a size increase for the struct?",
      "range": {
        "startLine": 490,
        "startChar": 1,
        "endLine": 493,
        "endChar": 0
      },
      "revId": "bbdef02a3ffaa61b3eb3bb944ccaeafa70d4f003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}