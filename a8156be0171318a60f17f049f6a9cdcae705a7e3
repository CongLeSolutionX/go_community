{
  "comments": [
    {
      "key": {
        "uuid": "702a0062_5062a7c0",
        "filename": "src/os/user/cgo_lookup_unix.go",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 13437
      },
      "writtenOn": "2016-11-30T18:15:29Z",
      "side": 1,
      "message": "This file is untouched, apart from the rename.",
      "revId": "a8156be0171318a60f17f049f6a9cdcae705a7e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "702a0062_30a0d3d7",
        "filename": "src/os/user/lookup_unix.go",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 13437
      },
      "writtenOn": "2016-11-30T18:15:29Z",
      "side": 1,
      "message": "This boolean also guards user.GroupIds(), which I believe would require getting usernames from /etc/group and then reading /etc/passwd to translate usernames to user IDs, or issuing sequential calls to LookupId(). I didn\u0027t want to add that here.\n\nIf you set this to true, the tests fail with CGO_ENABLED\u003d0 because GroupIds() fails, the other tests pass.",
      "revId": "a8156be0171318a60f17f049f6a9cdcae705a7e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d82efcd_56fd94fa",
        "filename": "src/os/user/lookup_unix.go",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 13437
      },
      "writtenOn": "2016-11-30T18:15:29Z",
      "side": 1,
      "message": "If /etc/group contains\n\n    match:*::root\n\nI\u0027m not sure whether we should report \"\" as a valid Gid, or report that there was no match. I chose the latter, but happy to change.",
      "revId": "a8156be0171318a60f17f049f6a9cdcae705a7e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "702a0062_f00c7b24",
        "filename": "src/os/user/lookup_unix.go",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 13437
      },
      "writtenOn": "2016-11-30T18:15:29Z",
      "side": 1,
      "message": "Some of the \"/etc\"-parsing code in the net package guards the load with a sync.Once. I am guessing that we don\u0027t want that here since the contents of /etc/group may change while the program is in progress (versus a file like /etc/services).",
      "revId": "a8156be0171318a60f17f049f6a9cdcae705a7e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "702a0062_501c6751",
        "filename": "src/os/user/lookup_unix.go",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 13437
      },
      "writtenOn": "2016-11-30T18:15:29Z",
      "side": 1,
      "message": "The libc code calls a \"isspace\" macro; I tried reading through the code to see the exact characters used by isspace but I couldn\u0027t find it. I borrowed this from the /etc-parsing code in the net package.",
      "revId": "a8156be0171318a60f17f049f6a9cdcae705a7e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "702a0062_f052bbf7",
        "filename": "src/os/user/lookup_unix_test.go",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 13437
      },
      "writtenOn": "2016-11-30T18:15:29Z",
      "side": 1,
      "message": "Some specifications for /etc/group mention pluses and minuses before a group name; I chose to ignore those entirely. You should only match those in a file if you search for a group named \"+foo\".\n\n(also, yuck, cyberciti.biz) https://www.cyberciti.biz/faq/plus-minus-sign-in-unix-linux-passwd-file/",
      "revId": "a8156be0171318a60f17f049f6a9cdcae705a7e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}