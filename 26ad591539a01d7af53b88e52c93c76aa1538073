{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d905828e_2e355484",
        "filename": "src/cmd/doc/main.go",
        "patchSetId": 3
      },
      "lineNbr": 214,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-24T16:11:00Z",
      "side": 1,
      "message": "This should probably also include `\"cmd\"` and `\"all\"`, which are also literals that expand to multiple packages.\n\nBut I wonder if we need a more general fix for multi-package patterns: if I run `go doc ...template` today, it looks like I get documentation for `html/template` but not `text/template. ðŸ¤”",
      "revId": "26ad591539a01d7af53b88e52c93c76aa1538073",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5b6f1d7_e97e9745",
        "filename": "src/cmd/doc/main.go",
        "patchSetId": 3
      },
      "lineNbr": 214,
      "author": {
        "id": 57963
      },
      "writtenOn": "2022-06-25T13:34:26Z",
      "side": 1,
      "message": "Do you have an idea about a more genreal fix? I think we have to touch src/go/build/build.go for this which can have a huge effect on other parts of the project",
      "parentUuid": "d905828e_2e355484",
      "revId": "26ad591539a01d7af53b88e52c93c76aa1538073",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f9899e9_99426cb3",
        "filename": "src/cmd/doc/main.go",
        "patchSetId": 3
      },
      "lineNbr": 214,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-27T20:58:20Z",
      "side": 1,
      "message": "I do not know what the general fix is, but it looks like all of the code paths here end up in either `go/build.Import` or `go/build.ImportDir`.\n\nBoth of those functions should be returning a non-nil error if the `path`, `dir`, and/or `srcDir` argument is a multi-package pattern instead of a proper package path or directory. If that isn\u0027t happening, that does seem like the right place to look for a fix.\n\n(Having a huge effect on other parts of the project is not necessarily a bad thing! That just means you have the opportunity to fix lots of related bugs across the project at the same time. ðŸ˜…)",
      "parentUuid": "a5b6f1d7_e97e9745",
      "revId": "26ad591539a01d7af53b88e52c93c76aa1538073",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2943347_e1cd0264",
        "filename": "src/cmd/doc/main.go",
        "patchSetId": 3
      },
      "lineNbr": 214,
      "author": {
        "id": 57963
      },
      "writtenOn": "2022-06-27T22:41:20Z",
      "side": 1,
      "message": "I played around a bit and found out the following pattern:\n\n`go doc archive` prints docs for `cmd/internal/archive` which is fine because it is the only sub-package in the standard library which is named `archive`.\n\n`go doc compress` prints an error which is fine as well because `compress` is not importable by itself - only `compress/{bzip2,flate,etc.}` - and there is no other sub-package called `compress` in the standard library\n\n`go doc container` verifies the case from `go doc compress`\n\n`go doc debug` verifies the case from `go doc archive`\n\nNow to the faulty part:\n\n`go doc template` prints the docs of `html/template` which is NOT fine because `template` isn\u0027t an importable first-level package and isn\u0027t a unique sub-package: there are `html/template` and `text/template`.\n\nLong story short: It will print the wrong output if the argument (1) is a first level package and (2) is not a unique sub-package across the standard library. Does that make sense?\n\nI will look tomorrow for a possible fix.",
      "parentUuid": "8f9899e9_99426cb3",
      "revId": "26ad591539a01d7af53b88e52c93c76aa1538073",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}