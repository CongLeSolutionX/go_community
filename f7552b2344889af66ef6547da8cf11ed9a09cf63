{
  "comments": [
    {
      "key": {
        "uuid": "e530e7ea_2c93130c",
        "filename": "src/internal/syscall/windows/reparse_windows.go",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 11631
      },
      "writtenOn": "2016-09-23T17:13:38Z",
      "side": 1,
      "message": "You might want to embed REPARSE_DATA_BUFFER_HEADER into it.\n\ntype SymbolicLinkReparseBuffer struct {\n  REPARSE_DATA_BUFFER_HEADER\n}",
      "revId": "f7552b2344889af66ef6547da8cf11ed9a09cf63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "826ba19a_d9dc33dc",
        "filename": "src/internal/syscall/windows/reparse_windows.go",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 5070
      },
      "writtenOn": "2016-10-06T01:20:27Z",
      "side": 1,
      "message": "I try to make all structures here match what Windows provides. So future readers can google for them, and these will just work as per Windows documentation. The SymbolicLinkReparseBuffer structure corresponds to SymbolicLinkReparseBuffer union member of REPARSE_DATA_BUFFER. If I will embed REPARSE_DATA_BUFFER_HEADER into SymbolicLinkReparseBuffer, it will be confusing.",
      "parentUuid": "e530e7ea_2c93130c",
      "revId": "f7552b2344889af66ef6547da8cf11ed9a09cf63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff6a38fa_d54d7c6b",
        "filename": "src/internal/syscall/windows/reparse_windows.go",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 11631
      },
      "writtenOn": "2016-10-06T13:57:59Z",
      "side": 1,
      "message": "Hm. I understand what are you talking about.\n\nActually there are two definitions.\n\nhttps://msdn.microsoft.com/en-us/library/ff552012.aspx\nhttps://msdn.microsoft.com/en-us/library/cc232005.aspx\n\nMy suggestion is following later one. Both are correct. Both could be confusing?",
      "parentUuid": "826ba19a_d9dc33dc",
      "revId": "f7552b2344889af66ef6547da8cf11ed9a09cf63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff6a38fa_f566b8b9",
        "filename": "src/internal/syscall/windows/reparse_windows.go",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 5070
      },
      "writtenOn": "2016-10-07T05:16:28Z",
      "side": 1,
      "message": "\u003e Actually there are two definitions.\n \u003e \n \u003e https://msdn.microsoft.com/en-us/library/ff552012.aspx\n \u003e https://msdn.microsoft.com/en-us/library/cc232005.aspx\n\nThese are the same. First one is real definition for REPARSE_DATA_BUFFER. But REPARSE_DATA_BUFFER last field is a union. And the\n\nhttps://msdn.microsoft.com/en-us/library/cc232005.aspx\n\nlooks like REPARSE_DATA_BUFFER version with union part set to GenericReparseBuffer.\n\nSince REPARSE_DATA_BUFFER have union part, it can not be translated into Go. So I prefer not to define it in internal/syscall/windows package, because it will confuse future package users into believing that REPARSE_DATA_BUFFER is defined correctly. But it cannot be done. I hope I have explained my thinking.",
      "parentUuid": "ff6a38fa_d54d7c6b",
      "revId": "f7552b2344889af66ef6547da8cf11ed9a09cf63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e530e7ea_0c985724",
        "filename": "src/internal/syscall/windows/reparse_windows.go",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 11631
      },
      "writtenOn": "2016-09-23T17:13:38Z",
      "side": 1,
      "message": "Same as above.",
      "revId": "f7552b2344889af66ef6547da8cf11ed9a09cf63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "826ba19a_f9e1f78c",
        "filename": "src/internal/syscall/windows/reparse_windows.go",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 5070
      },
      "writtenOn": "2016-10-06T01:20:27Z",
      "side": 1,
      "message": "Same as above.",
      "parentUuid": "e530e7ea_0c985724",
      "revId": "f7552b2344889af66ef6547da8cf11ed9a09cf63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e530e7ea_8c8327b3",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 11631
      },
      "writtenOn": "2016-09-23T17:13:38Z",
      "side": 1,
      "message": "As I said on CL 28010, I want to add new tests for symlink files. Can you change this function to support not only directory, but also file?",
      "revId": "f7552b2344889af66ef6547da8cf11ed9a09cf63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "826ba19a_19f78b52",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 5070
      },
      "writtenOn": "2016-10-06T01:20:27Z",
      "side": 1,
      "message": "Why? Do you know of any broken code?\nEven if we decide to do it, lets do it in the next CL.",
      "parentUuid": "e530e7ea_8c8327b3",
      "revId": "f7552b2344889af66ef6547da8cf11ed9a09cf63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff6a38fa_55796c82",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 11631
      },
      "writtenOn": "2016-10-06T13:57:59Z",
      "side": 1,
      "message": "I revisit this CL because you said:\n\n\u003e \u003e So I want to test not only existing formats, but also common\n\u003e \u003e combinations if the spec allow it. ...\n\n\u003e Well, my offer to extend CL 25320 still stands.\n\n...Why do we need say same things again and again...",
      "parentUuid": "826ba19a_19f78b52",
      "revId": "f7552b2344889af66ef6547da8cf11ed9a09cf63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff6a38fa_753c687d",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 5070
      },
      "writtenOn": "2016-10-07T05:16:28Z",
      "side": 1,
      "message": "\u003e \u003e Well, my offer to extend CL 25320 still stands.\n \u003e \n \u003e ...Why do we need say same things again and again...\n\nPerhaps I did not explain myself well. I am happy to add / adjust whatever required in this CL to achieve its goal - add tests for issues #15978 and #16145. Adding tests for non-directory links will just make this goal more distant.",
      "parentUuid": "ff6a38fa_55796c82",
      "revId": "f7552b2344889af66ef6547da8cf11ed9a09cf63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}