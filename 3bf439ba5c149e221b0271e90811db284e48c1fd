{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4c3c8460_b4e0773b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13640
      },
      "writtenOn": "2021-10-19T12:08:05Z",
      "side": 1,
      "message": "Thanks for this - are you working on register ABI conversion? If so, we might want to raise an issue for tracking purposes.",
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8291e65a_a800e3d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7530
      },
      "writtenOn": "2021-10-21T03:48:46Z",
      "side": 1,
      "message": "#40724 is the tracker of all register ABI. Should we open another one?",
      "parentUuid": "4c3c8460_b4e0773b",
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2eed7278_4f887203",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-10-21T14:09:13Z",
      "side": 1,
      "message": "Using that issue is fine.",
      "parentUuid": "8291e65a_a800e3d3",
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7dc9dfa9_3403e5f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7530
      },
      "writtenOn": "2021-10-21T15:11:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2eed7278_4f887203",
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e76eb960_9db8e39d",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 731,
      "author": {
        "id": 13640
      },
      "writtenOn": "2021-10-19T12:08:05Z",
      "side": 1,
      "message": "arm64 defines 16 registers for both integer and floating-point - I suggest we do the same for riscv64. Also, we should likely define this based on RVC (compressed) register encoding such that we can benefit from this later on. This would likely mean:\n\nX8 - X15 (compressed), X16 - X19, X21 - X25\n\nIt would also be possible to move the context pointer from X20 to another register if we wanted to have a contiguous range.",
      "range": {
        "startLine": 731,
        "startChar": 30,
        "endLine": 731,
        "endChar": 38
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e97aa1ca_0f662bb4",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 731,
      "author": {
        "id": 50270
      },
      "writtenOn": "2021-10-20T11:31:20Z",
      "side": 1,
      "message": "Since we already have the aliases A0-A7 I\u0027d be really keen to use those as the first 8 arguments even if it reduces the number of opportunities to used compressed instructions. It\u0027ll make most assembly and disassembly much easier to follow. Is that the plan?\n\nMy proposed order would be:\n\nX10-X17,X8-X9,X18-X23\n\nWhich is equivalent to:\n\nA0-A7,S0-S7\n\nThough it would mean bumping the closure context pointer into a different register (X26?). That\u0027s used so infrequently in assembly that I think we could safely do that for both stack and register calling conventions.",
      "parentUuid": "e76eb960_9db8e39d",
      "range": {
        "startLine": 731,
        "startChar": 30,
        "endLine": 731,
        "endChar": 38
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bdc903f_28b06e1e",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 731,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-10-20T14:16:05Z",
      "side": 1,
      "message": "I think we may want to minimize the use of the aliases. Two naming conventions are more confusing than helpful.\n\nThat said, it is okay to choose whatever argument register order you like.\n\nYeah, I think it is okay to change the context register if necessary.",
      "parentUuid": "e97aa1ca_0f662bb4",
      "range": {
        "startLine": 731,
        "startChar": 30,
        "endLine": 731,
        "endChar": 38
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7e7d242_63d81cd3",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 731,
      "author": {
        "id": 7530
      },
      "writtenOn": "2021-10-21T03:48:46Z",
      "side": 1,
      "message": "@joel It\u0027s about \u003c 1% impact while the number of argument registers is over 13 (Appendix Register Usage Analysis).\n\nSo everyone agrees on contiguous range from X8-X23 (16 registers) and change context register to X26?",
      "parentUuid": "e76eb960_9db8e39d",
      "range": {
        "startLine": 731,
        "startChar": 30,
        "endLine": 731,
        "endChar": 38
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14477b5b_4fdc0835",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 731,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-10-21T14:09:13Z",
      "side": 1,
      "message": "SGTM.",
      "parentUuid": "a7e7d242_63d81cd3",
      "range": {
        "startLine": 731,
        "startChar": 30,
        "endLine": 731,
        "endChar": 38
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b356ade_ed914261",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 731,
      "author": {
        "id": 7530
      },
      "writtenOn": "2021-10-21T15:11:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14477b5b_4fdc0835",
      "range": {
        "startLine": 731,
        "startChar": 30,
        "endLine": 731,
        "endChar": 38
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dba54e99_c672a661",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 731,
      "author": {
        "id": 13640
      },
      "writtenOn": "2021-10-21T15:43:10Z",
      "side": 1,
      "message": "Doesn\u0027t this specify the order in which the registers are used?\n\nIf so, I think Michael\u0027s suggestion makes sense - as much as Go doesn\u0027t stick to regular ABIs, it will make disassembly much more readable with non-Go tools.",
      "parentUuid": "1b356ade_ed914261",
      "range": {
        "startLine": 731,
        "startChar": 30,
        "endLine": 731,
        "endChar": 38
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b78010b4_a68f116f",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 734,
      "author": {
        "id": 13640
      },
      "writtenOn": "2021-10-19T12:08:05Z",
      "side": 1,
      "message": "Similar here - F8 through F15 are RVC so we should use these first, so something like:\n\nF8 - F15, F0 - F7",
      "range": {
        "startLine": 734,
        "startChar": 8,
        "endLine": 734,
        "endChar": 16
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "973980fd_1013d350",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 734,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-10-19T14:33:40Z",
      "side": 1,
      "message": "Does it have shorter encoding for F8-F15 than F0-F7? Seems a bit weird.\n\nIf we do this, mention the reason in Rationale section.",
      "parentUuid": "b78010b4_a68f116f",
      "range": {
        "startLine": 734,
        "startChar": 8,
        "endLine": 734,
        "endChar": 16
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67805c2b_b4e4e494",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 734,
      "author": {
        "id": 13640
      },
      "writtenOn": "2021-10-19T17:48:54Z",
      "side": 1,
      "message": "Correct - some RVC instructions use three bit (prime) register encodings, which map to X8 through X15 for integer instructions and F8 through F15 for floating point instructions (and other registers cannot be used). For more details see table 16.2 on page 99 of:\n\n  https://github.com/riscv/riscv-isa-manual/releases/download/Ratified-IMFDQC-and-Priv-v1.11/riscv-privileged-20190608.pdf",
      "parentUuid": "973980fd_1013d350",
      "range": {
        "startLine": 734,
        "startChar": 8,
        "endLine": 734,
        "endChar": 16
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cefc6719_d3f64be0",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 734,
      "author": {
        "id": 7530
      },
      "writtenOn": "2021-10-21T03:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67805c2b_b4e4e494",
      "range": {
        "startLine": 734,
        "startChar": 8,
        "endLine": 734,
        "endChar": 16
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbaa427a_b6a81bf8",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 744,
      "author": {
        "id": 13640
      },
      "writtenOn": "2021-10-19T12:08:05Z",
      "side": 1,
      "message": "X3 is currently used as a general purpose register for Go, however the plan is to reserve it as it is marked as the Global Pointer (GP) in the ABI:\n\n  https://go-review.googlesource.com/c/go/+/351859",
      "range": {
        "startLine": 744,
        "startChar": 2,
        "endLine": 744,
        "endChar": 42
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "886a1ccd_dd7ca8ef",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 744,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-10-19T14:33:40Z",
      "side": 1,
      "message": "Either way, I don\u0027t think we need a specific register for \"function address on indirect calls\".  Any integer register could do.",
      "parentUuid": "bbaa427a_b6a81bf8",
      "range": {
        "startLine": 744,
        "startChar": 2,
        "endLine": 744,
        "endChar": 42
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3106e467_dcf1e35e",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 744,
      "author": {
        "id": 7530
      },
      "writtenOn": "2021-10-21T03:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "886a1ccd_dd7ca8ef",
      "range": {
        "startLine": 744,
        "startChar": 2,
        "endLine": 744,
        "endChar": 42
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd8d6768_f6315fcd",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 745,
      "author": {
        "id": 13640
      },
      "writtenOn": "2021-10-19T12:08:05Z",
      "side": 1,
      "message": "Missing space after \u0027TLS\u0027.",
      "range": {
        "startLine": 745,
        "startChar": 8,
        "endLine": 745,
        "endChar": 18
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbaed2f8_34955534",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 745,
      "author": {
        "id": 7530
      },
      "writtenOn": "2021-10-21T03:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd8d6768_f6315fcd",
      "range": {
        "startLine": 745,
        "startChar": 8,
        "endLine": 745,
        "endChar": 18
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c7e1f39_ac1d8454",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 755,
      "author": {
        "id": 13640
      },
      "writtenOn": "2021-10-19T12:08:05Z",
      "side": 1,
      "message": "I don\u0027t believe this is currently the case - we likely have 8 byte alignment. This is something that we should also fix in order to make RVC instructions more effective.",
      "range": {
        "startLine": 755,
        "startChar": 41,
        "endLine": 755,
        "endChar": 67
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "132fdcea_5d07c168",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 755,
      "author": {
        "id": 7530
      },
      "writtenOn": "2021-10-21T03:48:46Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "1c7e1f39_ac1d8454",
      "range": {
        "startLine": 755,
        "startChar": 41,
        "endLine": 755,
        "endChar": 67
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba0b73a3_d287b9f5",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 764,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-10-19T14:33:40Z",
      "side": 1,
      "message": "I don\u0027t think we use frame pointers on RISCV64 (at least for now).",
      "range": {
        "startLine": 764,
        "startChar": 6,
        "endLine": 764,
        "endChar": 28
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae12293e_bf6a62a8",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 764,
      "author": {
        "id": 7530
      },
      "writtenOn": "2021-10-21T03:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba0b73a3_d287b9f5",
      "range": {
        "startLine": 764,
        "startChar": 6,
        "endLine": 764,
        "endChar": 28
      },
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0433f5ad_8aa13e4a",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 771,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-10-19T14:33:40Z",
      "side": 1,
      "message": "Add a blank line here.",
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b3408dd_781c076b",
        "filename": "src/cmd/compile/abi-internal.md",
        "patchSetId": 1
      },
      "lineNbr": 771,
      "author": {
        "id": 7530
      },
      "writtenOn": "2021-10-21T03:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0433f5ad_8aa13e4a",
      "revId": "3bf439ba5c149e221b0271e90811db284e48c1fd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}