{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "18635046_4afa5c2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 32637
      },
      "writtenOn": "2021-10-16T18:06:08Z",
      "side": 1,
      "message": "Added some thoughts, note that I am not a maintainer",
      "revId": "e26452d003a27c713b3c502a2cfc1e06e617ee96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3abe056e_f1a3e763",
        "filename": "src/net/http/server.go",
        "patchSetId": 2
      },
      "lineNbr": 3373,
      "author": {
        "id": 32637
      },
      "writtenOn": "2021-10-16T18:06:08Z",
      "side": 1,
      "message": "Is it only possible if client hung up or also due to some other reason? I.e. should the error be more generic like `var ErrRequestCanceled \u003d errors.New(\"http: Request canceled\")`?",
      "revId": "e26452d003a27c713b3c502a2cfc1e06e617ee96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83cd3ccd_c13605b1",
        "filename": "src/net/http/server.go",
        "patchSetId": 2
      },
      "lineNbr": 3373,
      "author": {
        "id": 54373
      },
      "writtenOn": "2021-10-16T22:56:56Z",
      "side": 1,
      "message": "Great point, thank you.\n\n\"For incoming server requests, the context is canceled when the client\u0027s connection closes, the request is canceled (with HTTP/2), or when the ServeHTTP method returns.\"\n-- https://pkg.go.dev/net/http#Request.Context\n\nI think \"http: Request canceled\" makes more sense.\n\nI\u0027m unsure if it\u0027s possible to hit the 3rd condition (when the ServeHTTP method returns) at this point -- perhaps if there is a goroutine that tries to write after ServeHTTP returns.\n\nIf that is the case, maybe it would be nice to have a 3rd error message, though it looks like it would require a much more substantial change.",
      "parentUuid": "3abe056e_f1a3e763",
      "revId": "e26452d003a27c713b3c502a2cfc1e06e617ee96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7004f59_1f172511",
        "filename": "src/net/http/server.go",
        "patchSetId": 2
      },
      "lineNbr": 3373,
      "author": {
        "id": 32637
      },
      "writtenOn": "2021-10-19T01:49:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "83cd3ccd_c13605b1",
      "revId": "e26452d003a27c713b3c502a2cfc1e06e617ee96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72f7de6d_48ac7caa",
        "filename": "src/net/http/server.go",
        "patchSetId": 2
      },
      "lineNbr": 3386,
      "author": {
        "id": 32637
      },
      "writtenOn": "2021-10-16T18:06:08Z",
      "side": 1,
      "message": "Could also be `err error` set to either ErrHandlerTimeout or ErrClientHangup instead of two flags",
      "revId": "e26452d003a27c713b3c502a2cfc1e06e617ee96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02c052d6_2fbba578",
        "filename": "src/net/http/server.go",
        "patchSetId": 2
      },
      "lineNbr": 3386,
      "author": {
        "id": 54373
      },
      "writtenOn": "2021-10-16T23:01:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72f7de6d_48ac7caa",
      "revId": "e26452d003a27c713b3c502a2cfc1e06e617ee96",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}