{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "41b01164_39e15d48",
        "filename": "test/range3.go",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-10-05T15:24:34Z",
      "side": 1,
      "message": "This should be a compile-time error, shouldn\u0027t it?\nProbably something before noder should reject this code.\n\n(We do have to handle non-constant negative numbers here. What\u0027s the proposed semantics for that? I\u0027m not sure.)",
      "revId": "76c5d3a3f2fb423210a78a48d4867f4cd371a33a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29aeec55_65e439ee",
        "filename": "test/range3.go",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 14665
      },
      "writtenOn": "2023-10-05T15:28:16Z",
      "side": 1,
      "message": "\u003e This should be a compile-time error, shouldn\u0027t it?\n\nIt should compile ok, just don\u0027t do any iteration. Copied from the proposal (https://github.com/golang/go/issues/61405):\n\n\u003e For an integer n, the index iteration values 0 through n-1 are produced, with the same type as n. If n \u003c\u003d 0, the loop does not run any iterations.\n\n\u003e (We do have to handle non-constant negative numbers here. What\u0027s the proposed semantics for that? I\u0027m not sure.)\n\nNo, since when non-constant negative numbers will have a concrete type instead of untyped here.",
      "parentUuid": "41b01164_39e15d48",
      "revId": "76c5d3a3f2fb423210a78a48d4867f4cd371a33a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}