{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "203d9d77_f9e80a17",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 24534
      },
      "writtenOn": "2022-09-06T09:43:17Z",
      "side": 1,
      "message": "Thanks",
      "revId": "9b6164cc325c804d7219e7404a404fcd2ae92556",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a7d6204_57ac076c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-06T09:43:34Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d9b6164cc\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "9b6164cc325c804d7219e7404a404fcd2ae92556",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98dccde2_cc768c31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-06T09:55:55Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "6a7d6204_57ac076c",
      "tag": "autogenerated:trybots~happy",
      "revId": "9b6164cc325c804d7219e7404a404fcd2ae92556",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9be07686_385f63a5",
        "filename": "src/cmd/compile/internal/ssa/schedule.go",
        "patchSetId": 5
      },
      "lineNbr": 564,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-07T20:51:35Z",
      "side": 1,
      "message": "I find all this logic confusing. How about a bit of a rewrite?\n\n// carryInput reports whether v accepts a carry value as input.\nfunc (v *Value) carryInput() bool {\n    for _, a :\u003d range v.Args {\n        if a.Type.IsCarry() { return true }\n    }\n    // special cases for PPC64 which put their carry values in XER instead of flags\n    switch v.Op {\n        case OpPPC64SUBE, ...: return true\n    }\n    return false\n}\n\n// carryOutput reports whether v generates a carry as output.\nfunc (v *Value) carryOutput() bool {\n    if v.Type.IsFlags() \u0026\u0026 v.Op !\u003d OpSelect1 { return true }\n    if v.Type.IsTuple() \u0026\u0026 v.Type.FieldType(1).IsFlags { return true }\n    // special cases for PPC64 which put their carry values in XER instead of flags\n    switch v.Op { \n        case OpPPC64ADDC, ...: return true\n    }\n    return false\n}\n\nfunc (v *Value) isCarryCreator() bool {\n    return v.carryOutput() \u0026\u0026 !v.carryInput()\n}",
      "revId": "9b6164cc325c804d7219e7404a404fcd2ae92556",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab52ec6b_ad586667",
        "filename": "src/cmd/compile/internal/ssa/schedule.go",
        "patchSetId": 5
      },
      "lineNbr": 564,
      "author": {
        "id": 24534
      },
      "writtenOn": "2022-09-09T06:59:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9be07686_385f63a5",
      "revId": "9b6164cc325c804d7219e7404a404fcd2ae92556",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1b7da99_d0ea6ed4",
        "filename": "src/cmd/compile/internal/ssa/schedule.go",
        "patchSetId": 5
      },
      "lineNbr": 571,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-07T20:51:35Z",
      "side": 1,
      "message": "I don\u0027t think this is right because there are ops that both consume and produce a carry, and we should not return them here. e.g. amd64\u0027s ADCQ.\n\nI think we need to iterate through v.Args and return false if any input is of flags type.",
      "revId": "9b6164cc325c804d7219e7404a404fcd2ae92556",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26b4a7c5_cae915e4",
        "filename": "src/cmd/compile/internal/ssa/schedule.go",
        "patchSetId": 5
      },
      "lineNbr": 571,
      "author": {
        "id": 24534
      },
      "writtenOn": "2022-09-09T06:59:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1b7da99_d0ea6ed4",
      "revId": "9b6164cc325c804d7219e7404a404fcd2ae92556",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0edcb60c_014677c0",
        "filename": "src/cmd/compile/internal/ssa/schedule.go",
        "patchSetId": 5
      },
      "lineNbr": 591,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-07T20:51:35Z",
      "side": 1,
      "message": "I\u0027m falling very out of love with the name of this function. \"producer\" means \"the thing that produced the carry that I am consuming\", but just getCarryInput seems much more sensible?\n(and maybe my carryInput should just \"return v.getCarryInput() !\u003d nil\" and have the code I showed above in getCarryInput)",
      "revId": "9b6164cc325c804d7219e7404a404fcd2ae92556",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af84e79d_3c602e32",
        "filename": "src/cmd/compile/internal/ssa/schedule.go",
        "patchSetId": 5
      },
      "lineNbr": 591,
      "author": {
        "id": 24534
      },
      "writtenOn": "2022-09-09T06:59:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0edcb60c_014677c0",
      "revId": "9b6164cc325c804d7219e7404a404fcd2ae92556",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "674eca0e_5ec40895",
        "filename": "src/cmd/compile/internal/ssa/schedule_test.go",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-07T20:51:35Z",
      "side": 1,
      "message": "Some more evocative names would help here to understand.\n\nv5 -\u003e A1\nv10 -\u003e A2\n\nv7 -\u003e B1\nv12 -\u003e B2\n\nb -\u003e A1carry\na -\u003e A1value\n\nand so on. Then you can write things like:\n\n// One carry chain is A1-\u003eA1carry-\u003eA2\n// The other is B1-\u003eB1carry-\u003eB2",
      "range": {
        "startLine": 114,
        "startChar": 9,
        "endLine": 114,
        "endChar": 11
      },
      "revId": "9b6164cc325c804d7219e7404a404fcd2ae92556",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c795206_cc32f802",
        "filename": "src/cmd/compile/internal/ssa/schedule_test.go",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 24534
      },
      "writtenOn": "2022-09-09T06:59:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "674eca0e_5ec40895",
      "range": {
        "startLine": 114,
        "startChar": 9,
        "endLine": 114,
        "endChar": 11
      },
      "revId": "9b6164cc325c804d7219e7404a404fcd2ae92556",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8deead8_8b99fcc7",
        "filename": "src/cmd/compile/internal/ssa/schedule_test.go",
        "patchSetId": 5
      },
      "lineNbr": 134,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-09-07T20:51:35Z",
      "side": 1,
      "message": "You might need to rework this a bit to look things up by name instead of by value number. I think fun.values has that mapping.",
      "revId": "9b6164cc325c804d7219e7404a404fcd2ae92556",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b7cb2e3_ef371ef0",
        "filename": "src/cmd/compile/internal/ssa/schedule_test.go",
        "patchSetId": 5
      },
      "lineNbr": 134,
      "author": {
        "id": 24534
      },
      "writtenOn": "2022-09-09T06:59:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8deead8_8b99fcc7",
      "revId": "9b6164cc325c804d7219e7404a404fcd2ae92556",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}