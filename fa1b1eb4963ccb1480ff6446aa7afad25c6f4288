{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "39e2fcf5_619ef132",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 7,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-05-09T13:32:55Z",
      "side": 1,
      "message": "\"...for range with floating-point operand\"\n\nIn \"for k, v :\u003d range x\", the iteration variables are k, v, but here I think you mean x.",
      "range": {
        "startLine": 7,
        "startChar": 35,
        "endLine": 7,
        "endChar": 68
      },
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "223fdf3a_e7930832",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 7,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-05-16T18:32:36Z",
      "side": 1,
      "message": "No I mean the iteration variable.",
      "parentUuid": "39e2fcf5_619ef132",
      "range": {
        "startLine": 7,
        "startChar": 35,
        "endLine": 7,
        "endChar": 68
      },
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd37aa13_c9b1255a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-04-25T20:56:36Z",
      "side": 1,
      "message": "This is not essentially a bug fix.\nReady for review.",
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8619d20_f2acfdc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-05-08T22:18:01Z",
      "side": 1,
      "message": "Gentle ping.",
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94012c4f_f5e22aba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 31647
      },
      "writtenOn": "2024-05-08T22:41:00Z",
      "side": 1,
      "message": "For the record, I was not (and am still not) in the attention set of this change. Comments from @gri@google.com do not trigger reviewer attention when the CL is authored by @gri@golang.org. This is why I had not yet reviewed.",
      "parentUuid": "b8619d20_f2acfdc8",
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ffec934_e6657fc5",
        "filename": "src/cmd/compile/internal/types2/stmt.go",
        "patchSetId": 9
      },
      "lineNbr": 937,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-05-09T13:32:55Z",
      "side": 1,
      "message": "Where was this invariant established?",
      "fixSuggestions": [
        {
          "fixId": "19f96647_2cc071f2",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/compile/internal/types2/stmt.go",
              "range": {
                "startLine": 937,
                "startChar": 0,
                "endLine": 938,
                "endChar": 0
              },
              "replacement": "\t\t\t\tassert(i \u003d\u003d 0)                         // at most one iteration variable (checked by parser)\n"
            },
            {
              "path": "src/cmd/compile/internal/types2/stmt.go",
              "range": {
                "startLine": 972,
                "startChar": 0,
                "endLine": 973,
                "endChar": 0
              },
              "replacement": "\t\t\t\tassert(i \u003d\u003d 0) // at most one iteration variable (checked by parser)\n"
            }
          ]
        }
      ],
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52d2827d_47cdd723",
        "filename": "src/cmd/compile/internal/types2/stmt.go",
        "patchSetId": 9
      },
      "lineNbr": 937,
      "author": {
        "id": 31647
      },
      "writtenOn": "2024-05-09T14:26:51Z",
      "side": 1,
      "message": "FWIW I also was confused by this at first. But the invariant is a consequence of rangeKeyVal behavior for numeric operands, I assume. For lhs[1], rhs[1] will be nil on line 929, so we won\u0027t get here. Agree that\u0027s rather hard to see.",
      "parentUuid": "2ffec934_e6657fc5",
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d38111f9_8260ed6f",
        "filename": "src/cmd/compile/internal/types2/stmt.go",
        "patchSetId": 9
      },
      "lineNbr": 937,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-05-16T18:32:36Z",
      "side": 1,
      "message": "added more commentary",
      "parentUuid": "52d2827d_47cdd723",
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5708d42_4f2346e2",
        "filename": "src/cmd/compile/internal/types2/stmt.go",
        "patchSetId": 9
      },
      "lineNbr": 972,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-05-09T13:32:55Z",
      "side": 1,
      "message": "ditto",
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6a5afee_cd33f478",
        "filename": "src/cmd/compile/internal/types2/stmt.go",
        "patchSetId": 9
      },
      "lineNbr": 972,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-05-16T18:32:36Z",
      "side": 1,
      "message": "see above",
      "parentUuid": "c5708d42_4f2346e2",
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "494f275c_56b9176d",
        "filename": "src/internal/types/testdata/check/stmt0.go",
        "patchSetId": 9
      },
      "lineNbr": 959,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-05-09T13:32:55Z",
      "side": 1,
      "message": "What happens with 1.0, which is an untyped floating-point constant whose value is an integer?",
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "501079f8_d51ebb84",
        "filename": "src/internal/types/testdata/check/stmt0.go",
        "patchSetId": 9
      },
      "lineNbr": 959,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-05-09T13:33:16Z",
      "side": 1,
      "message": "(Ignore: answered by further reading.)",
      "parentUuid": "494f275c_56b9176d",
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7672058b_f19cde5d",
        "filename": "src/internal/types/testdata/spec/range_int.go",
        "patchSetId": 9
      },
      "lineNbr": 175,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-05-09T13:32:55Z",
      "side": 1,
      "message": "This is inconsistent with other places in the spec where an untyped constant is used as a dimension: for arrays, the dimension may be any untyped constant whose value is a nonnegative integer, even if the type is untyped float or untyped complex.\n\nExample: https://go.dev/play/p/5k2SDJ5N8cK\n\nIs that intentional?",
      "fixSuggestions": [
        {
          "fixId": "bcb1ee61_cd2b5de8",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/internal/types/testdata/spec/range_int.go",
              "range": {
                "startLine": 175,
                "startChar": 0,
                "endLine": 176,
                "endChar": 0
              },
              "replacement": "\tfor j \u003d range 10.0 {\n"
            }
          ]
        }
      ],
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22b98d6f_3bee8e1b",
        "filename": "src/internal/types/testdata/spec/range_int.go",
        "patchSetId": 9
      },
      "lineNbr": 175,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-05-16T18:32:36Z",
      "side": 1,
      "message": "Yes. Intentional. See discussion in issue #66561 (https://github.com/golang/go/issues/66561#issuecomment-2078256208).",
      "parentUuid": "7672058b_f19cde5d",
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dd51e92_918a6754",
        "filename": "src/internal/types/testdata/spec/range_int.go",
        "patchSetId": 9
      },
      "lineNbr": 188,
      "author": {
        "id": 31647
      },
      "writtenOn": "2024-05-08T22:57:51Z",
      "side": 1,
      "message": "This error message is confusing. I think the semantics are correct, but the error should really be on the \u0027i\u0027, with an appropriate message, since it is the type of i that causes the incorrect constant type.",
      "range": {
        "startLine": 188,
        "startChar": 18,
        "endLine": 188,
        "endChar": 80
      },
      "fixSuggestions": [
        {
          "fixId": "a6e92e09_c0a40bfb",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/internal/types/testdata/spec/range_int.go",
              "range": {
                "startLine": 171,
                "startChar": 0,
                "endLine": 172,
                "endChar": 0
              },
              "replacement": "\tfor j \u003d range 1 {\n"
            },
            {
              "path": "src/internal/types/testdata/spec/range_int.go",
              "range": {
                "startLine": 188,
                "startChar": 0,
                "endLine": 189,
                "endChar": 0
              },
              "replacement": "\tfor i \u003d range 10 {\n"
            }
          ]
        }
      ],
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "805dc96a_0fa00432",
        "filename": "src/internal/types/testdata/spec/range_int.go",
        "patchSetId": 9
      },
      "lineNbr": 188,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-05-16T18:32:36Z",
      "side": 1,
      "message": "fixed",
      "parentUuid": "9dd51e92_918a6754",
      "range": {
        "startLine": 188,
        "startChar": 18,
        "endLine": 188,
        "endChar": 80
      },
      "revId": "fa1b1eb4963ccb1480ff6446aa7afad25c6f4288",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}