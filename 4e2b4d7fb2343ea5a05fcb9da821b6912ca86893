{
  "comments": [
    {
      "key": {
        "uuid": "ae9b12ce_31d4f9d4",
        "filename": "src/runtime/netpoll_epoll.go",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 5400
      },
      "writtenOn": "2019-04-12T07:06:01Z",
      "side": 0,
      "message": "This part used to be critical for correctness: if the rest of Ps are idle and we waiting for just new network work, then returning with empty list would leave no threads waiting in netpoll and total deadlock.\nI see that you also changed handling of empty list on the caller side. So it may be fine in the end.\nBut why these 2 changes? If we reacquire P on empty list, then check for work globally, and then block in netpoll again, it looks like a very expensive way to do this \"goto retry\".",
      "revId": "4e2b4d7fb2343ea5a05fcb9da821b6912ca86893",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "113ca3f3_36644d21",
        "filename": "src/runtime/netpoll_epoll.go",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-04-13T01:41:23Z",
      "side": 0,
      "message": "In the case where block is true, which is now expressed as delay !\u003d 0, we\u0027ve blocked for some period of time.  We want to return so that we can check whether there are any timers ready to run.  In particular when epoll_wait times out with no descriptors ready, it just returns 0, and in that case we have to return.",
      "parentUuid": "ae9b12ce_31d4f9d4",
      "revId": "4e2b4d7fb2343ea5a05fcb9da821b6912ca86893",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41e6c47a_b6847536",
        "filename": "src/runtime/proc.go",
        "patchSetId": 1
      },
      "lineNbr": 2371,
      "author": {
        "id": 5400
      },
      "writtenOn": "2019-04-12T07:06:01Z",
      "side": 0,
      "message": "What was wrong here? Checking if the list is empty looks like a reasonable first thing to do. If it\u0027s empty, we don\u0027t need to grab a P, injectglist, etc.",
      "revId": "4e2b4d7fb2343ea5a05fcb9da821b6912ca86893",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "116a336e_fc8ffeca",
        "filename": "src/runtime/proc.go",
        "patchSetId": 1
      },
      "lineNbr": 2371,
      "author": {
        "id": 5400
      },
      "writtenOn": "2019-04-12T07:25:18Z",
      "side": 0,
      "message": "Reading the later changes, this is because of the break functionality, right?\n\nBut still I don\u0027t understand why we are changing it this way.\nAfter a break we want to recalculate the timeout, right?\nIf we have an empty list and there are idle Ps, most likely it does not make sense to acquirep. Because otherwise somebody else should have been wake another thread which would acquire that P.",
      "parentUuid": "41e6c47a_b6847536",
      "revId": "4e2b4d7fb2343ea5a05fcb9da821b6912ca86893",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7edb491b_134c70ea",
        "filename": "src/runtime/proc.go",
        "patchSetId": 1
      },
      "lineNbr": 2371,
      "author": {
        "id": 5400
      },
      "writtenOn": "2019-04-12T07:25:50Z",
      "side": 0,
      "message": "Perhaps I need to look at later changes that actually add timeout recalc.",
      "parentUuid": "116a336e_fc8ffeca",
      "revId": "4e2b4d7fb2343ea5a05fcb9da821b6912ca86893",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e26fb0be_d3b60eea",
        "filename": "src/runtime/proc.go",
        "patchSetId": 1
      },
      "lineNbr": 2371,
      "author": {
        "id": 5206
      },
      "writtenOn": "2019-04-13T01:41:23Z",
      "side": 0,
      "message": "This is setting up for later changes, yes.  We want to acquire a P, and use that to recalculate the timeout for another call to netpoll.",
      "parentUuid": "7edb491b_134c70ea",
      "revId": "4e2b4d7fb2343ea5a05fcb9da821b6912ca86893",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}