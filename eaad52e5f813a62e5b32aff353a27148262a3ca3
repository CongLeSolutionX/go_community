{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "76629c44_b66c54c0",
        "filename": "src/runtime/libfuzzer_arm64.s",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-05-11T19:09:08Z",
      "side": 1,
      "message": "I\u0027m not sure I understand how the return address works here.\nWhere is the return address of runtime.libfuzzerCallTraceIntCmp stored and restored?\nThe return address starts in R30, but you end up clobbering that register with an address in the sled. The sled needs to know where it should return to somehow.\n\nThe x86 code puts the return address on the stack, so the return address to the sled doesn\u0027t overwrite the overall return address. It just requires some push/pop to use a different stack slot.",
      "revId": "eaad52e5f813a62e5b32aff353a27148262a3ca3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}