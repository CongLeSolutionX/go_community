{
  "comments": [
    {
      "key": {
        "uuid": "aac7cc2c_eb082543",
        "filename": "src/syscall/types_linux.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 13315
      },
      "writtenOn": "2017-05-10T18:03:51Z",
      "side": 1,
      "message": "Did you make sure that this include has no bad effect on other architectures?",
      "revId": "3d43e81d19910af6f66194f057ca0adb57a8613b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfca5887_4b280492",
        "filename": "src/syscall/types_linux.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 17679
      },
      "writtenOn": "2017-05-11T10:15:18Z",
      "side": 1,
      "message": "I\u0027ve regenerated all the linux ztypes files with cross compilers and the only other architecture this include affects is ARM64 where adding this header actually fixes the regeneration of PtraceRegs there.",
      "parentUuid": "aac7cc2c_eb082543",
      "revId": "3d43e81d19910af6f66194f057ca0adb57a8613b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d33623cf_853e0807",
        "filename": "src/syscall/types_linux.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 13315
      },
      "writtenOn": "2017-05-11T13:56:16Z",
      "side": 1,
      "message": "Is there any problem for ARM64? Does the regeneration produce a different struct? If so, you can also include that in this CL.",
      "parentUuid": "bfca5887_4b280492",
      "revId": "3d43e81d19910af6f66194f057ca0adb57a8613b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adde9823_be4d1341",
        "filename": "src/syscall/types_linux.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 17679
      },
      "writtenOn": "2017-05-11T14:08:16Z",
      "side": 1,
      "message": "\u003e Is there any problem for ARM64? Does the regeneration produce a different struct? If so, you can also include that in this CL.\n\nBefore this CL an empty PtraceRegs was being generated on ARM64 because the linux/ptrace.h header was missing, but the ztypes_linux_arm64.go file already contained the correct PtraceRegs. After this CL, the PtraceRegs generation is fixed on ARM64 as an unintended side effect, but no regeneration needs to take place because it was already correct in the ztypes file.\n\nDo you want me to mention this in the commit message?",
      "parentUuid": "d33623cf_853e0807",
      "revId": "3d43e81d19910af6f66194f057ca0adb57a8613b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ad4f0df_ddaec3c9",
        "filename": "src/syscall/types_linux.go",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 13315
      },
      "writtenOn": "2017-05-11T14:17:00Z",
      "side": 1,
      "message": "Thanks. Sounds good. Yeah, you could mention this.",
      "parentUuid": "adde9823_be4d1341",
      "revId": "3d43e81d19910af6f66194f057ca0adb57a8613b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}