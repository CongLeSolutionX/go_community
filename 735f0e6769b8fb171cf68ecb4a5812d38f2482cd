{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bf784f7b_51af152d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-12-02T16:24:00Z",
      "side": 1,
      "message": "We\u0027re in the code freeze so this will have to wait for 1.19 unless this is fixing an important performance issue that cannot wait.\n\nWhat\u0027s the impact on code size?\n",
      "revId": "735f0e6769b8fb171cf68ecb4a5812d38f2482cd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c8de54c_b7020fce",
        "filename": "src/cmd/compile/internal/reflectdata/alg.go",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 5200
      },
      "writtenOn": "2021-12-02T20:47:57Z",
      "side": 1,
      "message": "It would be nice if we had some notion of the complexity of comparing the element type, so we could adjust the unrolling amount.\nFor instance, if comparing types requires calling into the runtime (e.g. ifaceeq), it\u0027s probably not worth unrolling.\n\nOf course, that\u0027s also a problem in the current scheme, where we unroll completely or not based on just the size of the array. So it\u0027s not to say that this CL isn\u0027t worth doing, just another idea to consider.",
      "revId": "735f0e6769b8fb171cf68ecb4a5812d38f2482cd",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}