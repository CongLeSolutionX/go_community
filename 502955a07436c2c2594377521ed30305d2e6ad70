{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "78c2e2bb_831ab876",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-22T05:13:21Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "0232f902_cc4d262a",
      "tag": "autogenerated:trybots~beginning",
      "revId": "502955a07436c2c2594377521ed30305d2e6ad70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae31585e_770b0444",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-22T05:13:21Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d502955a0\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "502955a07436c2c2594377521ed30305d2e6ad70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "740440f8_19d5baf5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-22T05:28:02Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "ae31585e_770b0444",
      "tag": "autogenerated:trybots~happy",
      "revId": "502955a07436c2c2594377521ed30305d2e6ad70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e136ff1_9b23ba29",
        "filename": "src/time/format_rfc3339.go",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-08-22T20:04:24Z",
      "side": 1,
      "message": "I\u0027m a bit wary of turning on a fuzzing path with so many slice operations. I see that there is an existing `FuzzParseRFC3339` test â€” can that be adapted to cover `UnmarshalJSON`?",
      "revId": "502955a07436c2c2594377521ed30305d2e6ad70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40980dd7_977b6a12",
        "filename": "src/time/format_rfc3339.go",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-08-22T20:04:24Z",
      "side": 1,
      "message": "Should this be moved up to line 167 or so?\nIt seems like a waste to allocate and populate a new `ParseError` if we\u0027re just going to throw it away.",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 195,
        "endChar": 3
      },
      "revId": "502955a07436c2c2594377521ed30305d2e6ad70",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}