{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "76a38212_31863b1a",
        "filename": "src/crypto/internal/cryptotest/block.go",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 3467131
      },
      "writtenOn": "2024-06-28T00:40:44Z",
      "side": 1,
      "message": "Call this in each test case.",
      "range": {
        "startLine": 18,
        "startChar": 1,
        "endLine": 18,
        "endChar": 24
      },
      "revId": "dd5df99f1a86e0756a8143fc657f7da32f1df69f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f641f2d_9725e0bc",
        "filename": "src/crypto/internal/cryptotest/block.go",
        "patchSetId": 7
      },
      "lineNbr": 62,
      "author": {
        "id": 3467131
      },
      "writtenOn": "2024-06-28T00:40:44Z",
      "side": 1,
      "message": "I recommend splitting these up into two separate test cases. In this case it\u0027s not crucial, but:\n\nIn the abstract, each test case should verify one desired behavior.\nIn the concrete, if the merged test case fails on the first expect, the second expect will never run, so the person running the test won\u0027t know if it would have passed or failed.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 62,
        "endChar": 3
      },
      "revId": "dd5df99f1a86e0756a8143fc657f7da32f1df69f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f42210d3_9ca955fe",
        "filename": "src/crypto/internal/cryptotest/block.go",
        "patchSetId": 7
      },
      "lineNbr": 90,
      "author": {
        "id": 3467131
      },
      "writtenOn": "2024-06-28T00:40:44Z",
      "side": 1,
      "message": "In this case, having four separate test cases is probably even more valuable - if I\u0027m debugging my cipher.Block, I probably want to know whether each test is passing/failing, rather than just which is the first to fail.",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 90,
        "endChar": 113
      },
      "revId": "dd5df99f1a86e0756a8143fc657f7da32f1df69f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c049a38_ceeae7a0",
        "filename": "src/crypto/internal/cryptotest/block.go",
        "patchSetId": 7
      },
      "lineNbr": 100,
      "author": {
        "id": 3467131
      },
      "writtenOn": "2024-06-28T00:40:44Z",
      "side": 1,
      "message": "Optional: Consider giving your indices into dst (blocksize, blocksize*2) semantically meaningful names (maybe startOfBlock and startOfSuffix?)",
      "range": {
        "startLine": 100,
        "startChar": 26,
        "endLine": 100,
        "endChar": 35
      },
      "revId": "dd5df99f1a86e0756a8143fc657f7da32f1df69f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ae4f101_a097a3ee",
        "filename": "src/crypto/internal/cryptotest/block.go",
        "patchSetId": 7
      },
      "lineNbr": 137,
      "author": {
        "id": 3467131
      },
      "writtenOn": "2024-06-28T00:40:44Z",
      "side": 1,
      "message": "Optional: also test overlap where src starts later in the underlying array than dst. (Defining both src and dst as slices into a common buffer might make this easier)",
      "range": {
        "startLine": 130,
        "startChar": 1,
        "endLine": 137,
        "endChar": 3
      },
      "revId": "dd5df99f1a86e0756a8143fc657f7da32f1df69f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f55798a6_c79bcb9e",
        "filename": "src/crypto/internal/cryptotest/block.go",
        "patchSetId": 7
      },
      "lineNbr": 137,
      "author": {
        "id": 3467131
      },
      "writtenOn": "2024-06-28T00:40:44Z",
      "side": 1,
      "message": "Optional: also test single-byte overlaps (off-by-one is a mischievous beast).",
      "range": {
        "startLine": 130,
        "startChar": 0,
        "endLine": 137,
        "endChar": 3
      },
      "revId": "dd5df99f1a86e0756a8143fc657f7da32f1df69f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da630167_9b6eacb6",
        "filename": "src/crypto/internal/cryptotest/block.go",
        "patchSetId": 7
      },
      "lineNbr": 143,
      "author": {
        "id": 3467131
      },
      "writtenOn": "2024-06-28T00:40:44Z",
      "side": 1,
      "message": "Optional: rename this (perhaps subslice?) to avoid confusion with https://pkg.go.dev/bytes",
      "range": {
        "startLine": 143,
        "startChar": 2,
        "endLine": 143,
        "endChar": 7
      },
      "revId": "dd5df99f1a86e0756a8143fc657f7da32f1df69f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e22f888_54fe093a",
        "filename": "src/crypto/internal/cryptotest/block.go",
        "patchSetId": 7
      },
      "lineNbr": 146,
      "author": {
        "id": 3467131
      },
      "writtenOn": "2024-06-28T00:40:44Z",
      "side": 1,
      "message": "I\u0027m guessing the cipher function can\u0027t reasonably extend the dst slice here because it\u0027s not returning the updated dst slice?",
      "range": {
        "startLine": 146,
        "startChar": 49,
        "endLine": 146,
        "endChar": 74
      },
      "revId": "dd5df99f1a86e0756a8143fc657f7da32f1df69f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}