{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "de7cfb3f_ec076da0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-11-13T17:52:20Z",
      "side": 1,
      "message": "I spotted some possible problems.\n\nThese findings are based on simple heuristics. If a finding appears wrong, briefly reply here saying so. Otherwise, please address any problems and update the GitHub PR. When complete, mark this comment as \u0027Done\u0027 and click the [blue \u0027Reply\u0027 button](https://go.dev/wiki/GerritBot#i-left-a-reply-to-a-comment-in-gerrit-but-no-one-but-me-can-see-it) above.\n\nPossible problems detected:\n  1. The commit message body is very brief. That can be OK if the change is trivial like correcting spelling or fixing a broken link, but usually the description should provide context for the change and explain what it does in complete sentences.\n\nThe commit title and commit message body come from the GitHub PR title and description, and must be edited in the GitHub web interface (not via git). For instructions, see [here](https://go.dev/wiki/GerritBot/#how-does-gerritbot-determine-the-final-commit-message). For guidelines on commit messages for the Go project, see [here](https://go.dev/doc/contribute#commit_messages).\n\n\n(In general for Gerrit code reviews, the change author is expected to [log in to Gerrit](https://go-review.googlesource.com/login/) with a Gmail or other Google account and then close out each piece of feedback by marking it as \u0027Done\u0027 if implemented as suggested or otherwise reply to each review comment. See the [Review](https://go.dev/doc/contribute#review) section of the Contributing Guide for details.)",
      "revId": "a10f1b7c69bf9d43b8b0037fee8ac922d81e272c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7737fc6f_c2fb0884",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-11-13T21:27:29Z",
      "side": 1,
      "message": "This seems okay. On the other hand, we may change the file format without changing the builtin list, and we\u0027d also need to update the magic number. Maybe we\u0027ll just remember to run mkbuiltin in that case, instead of manually updating the magic number?",
      "revId": "a10f1b7c69bf9d43b8b0037fee8ac922d81e272c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a37ebd23_282d8dbc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3657746
      },
      "writtenOn": "2024-11-14T11:05:38Z",
      "side": 1,
      "message": "`mkbuiltin.go` is to \"write to builtinlist.go\".\nNot sure I understand \"change the file format without changing the builtin list\", does that mean writing a new `magic.go` file containing the Magic?",
      "parentUuid": "7737fc6f_c2fb0884",
      "revId": "a10f1b7c69bf9d43b8b0037fee8ac922d81e272c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31966c45_0bbe6d93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3657746
      },
      "writtenOn": "2024-11-14T11:05:38Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "de7cfb3f_ec076da0",
      "revId": "a10f1b7c69bf9d43b8b0037fee8ac922d81e272c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0eb1e75a_912bdf25",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-11-14T14:42:04Z",
      "side": 1,
      "message": "We need to update the Magic number if the new object file parsing is not compatible with the old one. Changing the list of builtins can be one cause of that, but there can be others. E.g. we change the object file format (see the big comment at the start of cmd/internal/goobj/objfile.go), which has nothing to do with the builtin list, but will cause the new parser unable to parse old file.",
      "parentUuid": "a37ebd23_282d8dbc",
      "revId": "a10f1b7c69bf9d43b8b0037fee8ac922d81e272c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f411dbb7_e6d71686",
        "filename": "src/cmd/internal/goobj/mkbuiltin.go",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-11-14T14:42:04Z",
      "side": 1,
      "message": "Thinking this again, I\u0027m not sure it\u0027s a good idea to use the Go version. If anything changed, we want to bump to Magic to the current Go version, which this line handles well. But if nothing change, we want re-run mkbuiltin to be a no-op. It doesn\u0027t seem desired if nothing changes and it still updates the Magic number just because the Go version increases.",
      "revId": "a10f1b7c69bf9d43b8b0037fee8ac922d81e272c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54958041_3049ffc4",
        "filename": "src/cmd/internal/goobj/objfile.go",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-11-14T14:42:04Z",
      "side": 1,
      "message": "Update this comment. Also mention how to update this.",
      "revId": "a10f1b7c69bf9d43b8b0037fee8ac922d81e272c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}