{
  "comments": [
    {
      "key": {
        "uuid": "7fae7669_839ea37a",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 941,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "Why do these rules need to insert OffPtrs? Can you just do (MOVHZload {s} [i0] p mem)?",
      "range": {
        "startLine": 941,
        "startChar": 45,
        "endLine": 941,
        "endChar": 69
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "951bf682_ae4ea3d7",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 943,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "single | between each byte everywhere (repeated in other rules too)",
      "range": {
        "startLine": 943,
        "startChar": 18,
        "endLine": 943,
        "endChar": 19
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc765eb5_08325fa8",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 970,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "I think this rule is redundant, the rule above should handle all cases right?",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 970,
        "endChar": 87
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20488561_cd384300",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "I think this rule is also redundant, the rule below should be enough. If you do need to keep it though I think it needs to be broken across a couple of lines.",
      "range": {
        "startLine": 973,
        "startChar": 0,
        "endLine": 973,
        "endChar": 452
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c527423b_1811c45e",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 975,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "Why does the offset need to be word aligned? Instruction constraint?",
      "range": {
        "startLine": 975,
        "startChar": 0,
        "endLine": 975,
        "endChar": 19
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3004dbb7_6da771c5",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1025,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "I think the store rules should be broken up into tiers like the loads are to make them more resilient to the order the rules are applied in. So this rule would be:\n\n(MOVBstore [i7] {s} p (SRDconst w [56])\n\tx0:(MOVBstore [i6] {s} p (SRDconst w [48])\n\tx1:(MOVBstore [i5] {s} p (SRDconst w [40])\n\tx2:(MOVBstore [i4] {s} p (SRDconst w [32])\n\tx3:(MOVWstore [i0] {s} p w)))))",
      "range": {
        "startLine": 1017,
        "startChar": 23,
        "endLine": 1025,
        "endChar": 39
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eac5d35_24ce58a0",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1030,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "So i0 doesn\u0027t need to be a multiple of 4 for stores, just loads?",
      "range": {
        "startLine": 1030,
        "startChar": 18,
        "endLine": 1030,
        "endChar": 20
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb008b04_f1fd402f",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1040,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "Again, this should be MOVB + MOVB + MOVH to make the rule more resilient in my opinion.",
      "range": {
        "startLine": 1038,
        "startChar": 43,
        "endLine": 1040,
        "endChar": 35
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}