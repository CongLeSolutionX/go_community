{
  "comments": [
    {
      "key": {
        "uuid": "7fae7669_839ea37a",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 941,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "Why do these rules need to insert OffPtrs? Can you just do (MOVHZload {s} [i0] p mem)?",
      "range": {
        "startLine": 941,
        "startChar": 45,
        "endLine": 941,
        "endChar": 69
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a13391b_1697ea0d",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 941,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-31T20:40:55Z",
      "side": 1,
      "message": "I copied these from another rules file, without thinking about it enough. I will change them.",
      "parentUuid": "7fae7669_839ea37a",
      "range": {
        "startLine": 941,
        "startChar": 45,
        "endLine": 941,
        "endChar": 69
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "951bf682_ae4ea3d7",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 943,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "single | between each byte everywhere (repeated in other rules too)",
      "range": {
        "startLine": 943,
        "startChar": 18,
        "endLine": 943,
        "endChar": 19
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fc251ce_bcf1f509",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 943,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-31T20:40:55Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "951bf682_ae4ea3d7",
      "range": {
        "startLine": 943,
        "startChar": 18,
        "endLine": 943,
        "endChar": 19
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc765eb5_08325fa8",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 970,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "I think this rule is redundant, the rule above should handle all cases right?",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 970,
        "endChar": 87
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b1f821f_e1f1b84b",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 970,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-31T20:40:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc765eb5_08325fa8",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 970,
        "endChar": 87
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20488561_cd384300",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "I think this rule is also redundant, the rule below should be enough. If you do need to keep it though I think it needs to be broken across a couple of lines.",
      "range": {
        "startLine": 973,
        "startChar": 0,
        "endLine": 973,
        "endChar": 452
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdba7313_ad24566a",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-31T20:40:55Z",
      "side": 1,
      "message": "I will fornat it nicer.\nIt is not quite redundant because the above rules that lower to MOVH and MOVW contain SLWconst but the rules for 8 byte loads use SLDconst.",
      "parentUuid": "20488561_cd384300",
      "range": {
        "startLine": 973,
        "startChar": 0,
        "endLine": 973,
        "endChar": 452
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b557719c_2ee1c8ee",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T23:55:01Z",
      "side": 1,
      "message": "Ah yes, good point.",
      "parentUuid": "bdba7313_ad24566a",
      "range": {
        "startLine": 973,
        "startChar": 0,
        "endLine": 973,
        "endChar": 452
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c527423b_1811c45e",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 975,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "Why does the offset need to be word aligned? Instruction constraint?",
      "range": {
        "startLine": 975,
        "startChar": 0,
        "endLine": 975,
        "endChar": 19
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1cd0678_78080f69",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 975,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-31T20:40:55Z",
      "side": 1,
      "message": "The MOVD offset field must be a multiple of 4. I could generate 2 MOVW if it wasn\u0027t but I don\u0027t think that happens very often.",
      "parentUuid": "c527423b_1811c45e",
      "range": {
        "startLine": 975,
        "startChar": 0,
        "endLine": 975,
        "endChar": 19
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3004dbb7_6da771c5",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1025,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "I think the store rules should be broken up into tiers like the loads are to make them more resilient to the order the rules are applied in. So this rule would be:\n\n(MOVBstore [i7] {s} p (SRDconst w [56])\n\tx0:(MOVBstore [i6] {s} p (SRDconst w [48])\n\tx1:(MOVBstore [i5] {s} p (SRDconst w [40])\n\tx2:(MOVBstore [i4] {s} p (SRDconst w [32])\n\tx3:(MOVWstore [i0] {s} p w)))))",
      "range": {
        "startLine": 1017,
        "startChar": 23,
        "endLine": 1025,
        "endChar": 39
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4737398_4ee4808c",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1025,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-31T20:40:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3004dbb7_6da771c5",
      "range": {
        "startLine": 1017,
        "startChar": 23,
        "endLine": 1025,
        "endChar": 39
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49619156_3dae414e",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1025,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-31T20:40:55Z",
      "side": 1,
      "message": "As noted above, this can\u0027t make use of shorter rules because this one uses SRD instead of SRW.",
      "parentUuid": "3004dbb7_6da771c5",
      "range": {
        "startLine": 1017,
        "startChar": 23,
        "endLine": 1025,
        "endChar": 39
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0eac5d35_24ce58a0",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1030,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "So i0 doesn\u0027t need to be a multiple of 4 for stores, just loads?",
      "range": {
        "startLine": 1030,
        "startChar": 18,
        "endLine": 1030,
        "endChar": 20
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6adf239f_30fe4077",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1030,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-31T20:40:55Z",
      "side": 1,
      "message": "No you are right, I missed this one.",
      "parentUuid": "0eac5d35_24ce58a0",
      "range": {
        "startLine": 1030,
        "startChar": 18,
        "endLine": 1030,
        "endChar": 20
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb008b04_f1fd402f",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1040,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T12:11:43Z",
      "side": 1,
      "message": "Again, this should be MOVB + MOVB + MOVH to make the rule more resilient in my opinion.",
      "range": {
        "startLine": 1038,
        "startChar": 43,
        "endLine": 1040,
        "endChar": 35
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fd103fe_267ba69e",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1040,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-31T20:40:55Z",
      "side": 1,
      "message": "I tried this and couldn\u0027t make it work. Must be related to the differences in the truncation in the rules when the input value is a 2 or 4 byte value. In the first case, it uses (SRWconst(MOVHZreg w) [8]) but if the input value is 4 bytes then MOVWZreg could be used (but isn\u0027t and doesn\u0027t seem necessary).",
      "parentUuid": "fb008b04_f1fd402f",
      "range": {
        "startLine": 1038,
        "startChar": 43,
        "endLine": 1040,
        "endChar": 35
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57366a0e_58d22f6b",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1040,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-10-31T23:55:01Z",
      "side": 1,
      "message": "I think the MOVHZreg can be removed from the pattern since the high bits are ignored by the stores. That might be enough to get it to work?",
      "parentUuid": "1fd103fe_267ba69e",
      "range": {
        "startLine": 1038,
        "startChar": 43,
        "endLine": 1040,
        "endChar": 35
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f038b01c_9024d563",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1040,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-11-02T14:29:31Z",
      "side": 1,
      "message": "In the PutUint16 function, the input value is 2 bytes so the MOVHZreg has been inserted to truncate it. So if I remove it, that match won\u0027t happen, and I will continue to get stb, stb instead of sth. \n\nAnd then in the PutUint32 function, the input value is 4 bytes so it won\u0027t have the MOVHZreg, so that means it can\u0027t reuse/build upon the PutUint16 rule since that one must have the MOVHZreg.",
      "parentUuid": "57366a0e_58d22f6b",
      "range": {
        "startLine": 1038,
        "startChar": 43,
        "endLine": 1040,
        "endChar": 35
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa90217e_a0d286ab",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1040,
      "author": {
        "id": 11990
      },
      "writtenOn": "2017-11-03T09:55:23Z",
      "side": 1,
      "message": "Yes, I see what you mean. We could perhaps add some rules like this I guess to remove unnecessary zero extensions:\n\n(MOVBstore {sym} [off] s:(SRWconst \u003ct\u003e [c] (MOVHZreg x)) ptr mem) \u0026\u0026 8 \u003c\u003d c \u0026\u0026 s.Uses \u003d\u003d 1 -\u003e (MOVBstore {sym} [off] (SRWconst \u003ct\u003e [c] x) ptr mem)\n\nMaybe something to experiment with when it comes time to add big endian loads, probably not worth doing now.",
      "parentUuid": "f038b01c_9024d563",
      "range": {
        "startLine": 1038,
        "startChar": 43,
        "endLine": 1040,
        "endChar": 35
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8edd937c_590e2c59",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 1040,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-11-03T17:37:27Z",
      "side": 1,
      "message": "Yes, after your last comment I started thinking about how to do that...  But not in this one, something for a later change.",
      "parentUuid": "aa90217e_a0d286ab",
      "range": {
        "startLine": 1038,
        "startChar": 43,
        "endLine": 1040,
        "endChar": 35
      },
      "revId": "abef0da903dde7038d68c7f7027178326d5a5fa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}