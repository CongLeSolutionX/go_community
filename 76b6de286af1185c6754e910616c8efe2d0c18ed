{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "11ea89f6_d3602635",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-04-16T22:24:24Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d76b6de28",
      "tag": "autogenerated:trybots~beginning",
      "revId": "76b6de286af1185c6754e910616c8efe2d0c18ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9eaaf4a_9bb79f26",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-04-16T22:35:38Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "11ea89f6_d3602635",
      "tag": "autogenerated:trybots~happy",
      "revId": "76b6de286af1185c6754e910616c8efe2d0c18ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c26e07d8_5af54212",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 34895
      },
      "writtenOn": "2022-04-17T01:29:40Z",
      "side": 1,
      "message": "Thanks.",
      "revId": "76b6de286af1185c6754e910616c8efe2d0c18ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21bcd190_690d8bcd",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 2
      },
      "lineNbr": 1504,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-04-19T21:28:48Z",
      "side": 1,
      "message": "Would be interesting to also test a m[S]int map with a string key.",
      "revId": "76b6de286af1185c6754e910616c8efe2d0c18ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47cd17a9_50daf801",
        "filename": "src/reflect/all_test.go",
        "patchSetId": 2
      },
      "lineNbr": 1504,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-04-29T23:47:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "21bcd190_690d8bcd",
      "revId": "76b6de286af1185c6754e910616c8efe2d0c18ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af58e2cb_d13a2704",
        "filename": "src/reflect/value.go",
        "patchSetId": 2
      },
      "lineNbr": 1621,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-04-19T21:28:48Z",
      "side": 1,
      "message": "I think this condition is too strict. It should be ok to use mapaccess_faststr for\n\ntype S string\nvar k S\nvar m map[S]int\n_ \u003d m[k]\n\nI think we want\n\nkey.kind() \u003d\u003d String \u0026\u0026 tt.key \u003d\u003d key.typ\n\nThe second half of that is the part that we need to enforce to fix the bug.",
      "range": {
        "startLine": 1621,
        "startChar": 4,
        "endLine": 1621,
        "endChar": 24
      },
      "revId": "76b6de286af1185c6754e910616c8efe2d0c18ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e16ab07_8a971e56",
        "filename": "src/reflect/value.go",
        "patchSetId": 2
      },
      "lineNbr": 1621,
      "author": {
        "id": 6480
      },
      "writtenOn": "2022-04-19T22:19:03Z",
      "side": 1,
      "message": "Yes. I have that in a stash, though with `(tt.key \u003d\u003d stringType || key.kind() \u003d\u003d String) \u0026\u0026 tt.key \u003d\u003d key.typ` since I found that the kind() call was noticeably slower (I\u0027ll check this).\n\nAre you OK with the additional complexity given a performance impact?",
      "parentUuid": "af58e2cb_d13a2704",
      "range": {
        "startLine": 1621,
        "startChar": 4,
        "endLine": 1621,
        "endChar": 24
      },
      "revId": "76b6de286af1185c6754e910616c8efe2d0c18ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a4069d1_54e724c3",
        "filename": "src/reflect/value.go",
        "patchSetId": 2
      },
      "lineNbr": 1621,
      "author": {
        "id": 6480
      },
      "writtenOn": "2022-04-19T22:50:45Z",
      "side": 1,
      "message": "This is the trade-off (old is the single test for `key.kind() \u003d\u003d String` and new is `(tt.key \u003d\u003d stringType || key.kind() \u003d\u003d String)`)\n\n```\nname                              old time/op    new time/op    delta\nMap/StringKeys/MapIndex-8           2.39µs ± 5%    2.55µs ±11%  +6.90%  (p\u003d0.013 n\u003d10+9)\nMap/StringKeys/SetMapIndex-8        4.67µs ± 4%    4.77µs ± 1%  +2.09%  (p\u003d0.018 n\u003d10+9)\nMap/StringKindKeys/MapIndex-8       2.33µs ± 3%    2.28µs ± 4%    ~     (p\u003d0.109 n\u003d10+10)\nMap/StringKindKeys/SetMapIndex-8    4.95µs ± 4%    4.61µs ± 1%  -6.83%  (p\u003d0.000 n\u003d10+10)\nMap/Uint64Keys/MapIndex-8           3.39µs ± 5%    3.11µs ± 2%  -8.30%  (p\u003d0.000 n\u003d10+9)\nMap/Uint64Keys/SetMapIndex-8        5.54µs ± 2%    5.00µs ± 1%  -9.72%  (p\u003d0.000 n\u003d9+10)\n```\n\n`string` loses some, but non-`string` types gain. Which would you prefer?",
      "parentUuid": "7e16ab07_8a971e56",
      "range": {
        "startLine": 1621,
        "startChar": 4,
        "endLine": 1621,
        "endChar": 24
      },
      "revId": "76b6de286af1185c6754e910616c8efe2d0c18ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "107267f5_59baaefb",
        "filename": "src/reflect/value.go",
        "patchSetId": 2
      },
      "lineNbr": 1621,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-04-29T23:47:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a4069d1_54e724c3",
      "range": {
        "startLine": 1621,
        "startChar": 4,
        "endLine": 1621,
        "endChar": 24
      },
      "revId": "76b6de286af1185c6754e910616c8efe2d0c18ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29dd5f51_438a4811",
        "filename": "src/reflect/value.go",
        "patchSetId": 2
      },
      "lineNbr": 2237,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-04-19T21:28:48Z",
      "side": 1,
      "message": "Same here.",
      "revId": "76b6de286af1185c6754e910616c8efe2d0c18ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59e76a6b_10b88f7f",
        "filename": "src/reflect/value.go",
        "patchSetId": 2
      },
      "lineNbr": 2237,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-04-29T23:47:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29dd5f51_438a4811",
      "revId": "76b6de286af1185c6754e910616c8efe2d0c18ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}