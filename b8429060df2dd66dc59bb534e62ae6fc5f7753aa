{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cf24f341_ac11975a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-21T19:30:11Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003db8429060",
      "tag": "autogenerated:trybots~beginning",
      "revId": "b8429060df2dd66dc59bb534e62ae6fc5f7753aa",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "798ac2fb_43f22a3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-21T19:30:11Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "d1566244_e3693f47",
      "tag": "autogenerated:trybots~beginning",
      "revId": "b8429060df2dd66dc59bb534e62ae6fc5f7753aa",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39ce9298_a8e0f060",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-21T19:45:16Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n* windows-amd64-longtest\n",
      "parentUuid": "cf24f341_ac11975a",
      "tag": "autogenerated:trybots~happy",
      "revId": "b8429060df2dd66dc59bb534e62ae6fc5f7753aa",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7615c22_c89fd6ec",
        "filename": "src/testing/fuzz.go",
        "patchSetId": 6
      },
      "lineNbr": 351,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-05-24T17:30:21Z",
      "side": 1,
      "message": "I think this can go back to being a direct call to tRunner without the enclosing func() { ... }()",
      "revId": "b8429060df2dd66dc59bb534e62ae6fc5f7753aa",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6627c4ec_1546c4b1",
        "filename": "src/testing/testing.go",
        "patchSetId": 6
      },
      "lineNbr": 470,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-05-24T17:30:21Z",
      "side": 1,
      "message": "Nit: move this below bench above, since it\u0027s pretty similar.",
      "revId": "b8429060df2dd66dc59bb534e62ae6fc5f7753aa",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad4d9edc_965e0508",
        "filename": "src/testing/testing.go",
        "patchSetId": 6
      },
      "lineNbr": 1226,
      "author": {
        "id": 17092
      },
      "writtenOn": "2021-05-24T17:30:21Z",
      "side": 1,
      "message": "If we only check this for the current t.common, we\u0027ll miss subtests. For example, I think this would still panic:\n\n  func Fuzz(f *testing.F) {\n    f.Fuzz(func(t *testing.T, _ []byte) {\n      t.Run(\"sub\", func(t *testing.T) {\n        panic(\"sub panicked\")\n      }\n    })\n  }\n\nProbably the easiest way to fix that would be to add an isFuzzing method on common that walks up the chain and returns true if any parent is fuzzing.",
      "revId": "b8429060df2dd66dc59bb534e62ae6fc5f7753aa",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}