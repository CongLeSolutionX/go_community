{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7b217ff5_1a873126",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-09T06:39:45Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d82a39c1c\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b699caf1_e358a3ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-09T06:49:59Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "7b217ff5_1a873126",
      "tag": "autogenerated:trybots~happy",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5ef7ab0_b90c4c08",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 66749
      },
      "writtenOn": "2023-11-10T03:07:33Z",
      "side": 1,
      "message": "Excuse me, could you take a look at this? Thanks.",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b95d605_b6e3ac16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 66749
      },
      "writtenOn": "2023-11-11T08:24:41Z",
      "side": 1,
      "message": "Hi, I noticed CL 235198 was abandoned, could you please take a look at this? Thanks.",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb540142_d0aff95b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-11T10:11:15Z",
      "side": 1,
      "message": "Thank you for this change Jes! LGTM but let\u0027s try to lock-in a test with a suggestion of sorts:\n\nfunc TestWriteThrough(t *testing.T) {\n        cases :\u003d []struct {\n                name      string\n                extras    int\n                wantAttrs uint32\n        }{\n                {\"sync set\", os.O_SYNC, 1},\n                {\"sync not set\", 0, 0},\n        }\n\n        for _, tt :\u003d range cases {\n                tt :\u003d tt\n                t.Run(tt.name, func(t *testing.T) {\n                        path :\u003d filepath.Join(t.TestDir(), fmt.Sprintf(\"%x.txt\", tt.name))\n                        h, err :\u003d syscall.Open(dir, syscall.O_RDWR|syscall.O_CREATE, 0)\n                        if err !\u003d nil {\n                                t.Fatal(err)\n                        }\n                        defer func() {\n                                syscall.CloseHandle(h)\n                                os.Remove(path)\n                        }()\n\n                        fi :\u003d new(syscall.ByHandleFileInformation)\n                        if err :\u003d syscall.GetFileInformationByHandle(h, fi); err !\u003d nil {\n                                t.Fatal(err)\n                        }\n\n                        if g :\u003d fi.FileAttributes \u0026 0x80000000; g !\u003d tt.wantAttrs {\n                                t.Fatalf(\"Attributes mismatch:\\n\\tgot\u003d%d\\nyet wanted:\\n\\t%d from: %x\u00260x80000000\", g, tt.wantAttrs, fi.FileAttributes)\n                        }\n                })\n        }\n}\n\nIan, Alex, Brad, Tobias kindly help me review my suggestion for the test, thank you!",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0af6eb98_014549fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 34993
      },
      "writtenOn": "2023-11-15T10:22:53Z",
      "side": 1,
      "message": "Thanks for working on this. Tests missing.",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ac29dde_b9feb004",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 34993
      },
      "writtenOn": "2023-11-15T10:24:25Z",
      "side": 1,
      "message": "RELNOTE\u003dyes",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc566e2e_98f72800",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 66749
      },
      "writtenOn": "2023-11-15T12:11:16Z",
      "side": 1,
      "message": "@quimmuntal@gmail.com, Thanks, could you please review Emmanuel\u0027s suggestion for the test?",
      "parentUuid": "cb540142_d0aff95b",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59fb9e85_5f0336a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 34993
      },
      "writtenOn": "2023-11-15T12:48:30Z",
      "side": 1,
      "message": "Better implement it, test it locally and I\u0027ll review it once submitted.",
      "parentUuid": "fc566e2e_98f72800",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bf503fd_5c7dfce0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 66749
      },
      "writtenOn": "2023-11-19T14:30:22Z",
      "side": 1,
      "message": "Based on test below, I found FileAttributes would not change even if O_SYNC is set.\n```\nfunc TestWriteThrough(t *testing.T) {\n\tcases :\u003d []struct {\n\t\tname string\n\t\tmode int\n\t}{\n\t\t{\"not set\", os.O_CREATE | os.O_RDWR},\n\t\t{\"set\", os.O_CREATE | os.O_RDWR | os.O_SYNC},\n\t}\n\n\tfor _, tt :\u003d range cases {\n\t\ttt :\u003d tt\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tpath :\u003d filepath.Join(t.TempDir(), fmt.Sprintf(\"%x.txt\", tt.name))\n\t\t\tfd, err :\u003d syscall.Open(path, tt.mode, 0644)\n\t\t\tif err !\u003d nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\tdefer func() {\n\t\t\t\tsyscall.CloseHandle(fd)\n\t\t\t\tos.Remove(path)\n\t\t\t}()\n\n\t\t\tvar d syscall.ByHandleFileInformation\n\t\t\tif err :\u003d syscall.GetFileInformationByHandle(fd, \u0026d); err !\u003d nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\n\t\t\tconst _FILE_FLAG_WRITE_THROUGH \u003d 0x80000000\n\n\t\t\tattrs :\u003d d.FileAttributes\n\t\t\tattrs1, attrs2 :\u003d attrs, attrs\n\t\t\tattrs1 \u0026^\u003d _FILE_FLAG_WRITE_THROUGH\n\t\t\tattrs2 |\u003d _FILE_FLAG_WRITE_THROUGH\n\n\t\t\tif tt.mode\u0026os.O_SYNC !\u003d 0 {\n\t\t\t\tfmt.Printf(\"set, attrs: 0x%08x, attrs1: 0x%08x, attrs2: 0x%08x\\n\", attrs, attrs1, attrs2)\n\t\t\t} else {\n\t\t\t\tfmt.Printf(\"not set, attrs: 0x%08x, attrs1: 0x%08x, attrs2: 0x%08x\\n\", attrs, attrs1, attrs2)\n\t\t\t}\n\t\t})\n\t}\n\n}\n```\n\n```\ngit log --oneline -n 2\n68b555bde4 (HEAD -\u003e change-541015, github/change-541015) syscall: support O_SYNC flag for os.OpenFile on windows\n1cc19e5ba0 cmd/go: allow toolchain upgrades in \u0027go mod download\u0027 when we would already allow go.mod updates\n\nnot set, attrs: 0x00000020, attrs1: 0x00000020, attrs2: 0x80000020\nset, attrs: 0x00000020, attrs1: 0x00000020, attrs2: 0x80000020\nPASS\nok syscall 26.036s\n```\n\n```\ngit checkout master \n\ngit log --oneline -n 2\n631a6c2abf (HEAD -\u003e master, github/master) all: add missing copyright header\nf664031bc1 net,os: arrange zero-copy of os.File and net.TCPConn to net.UnixConn\n\ngo test -run\u003dTestWriteThrough\n\nnot set, attrs: 0x00000020, attrs1: 0x00000020, attrs2: 0x80000020\nset, attrs: 0x00000020, attrs1: 0x00000020, attrs2: 0x80000020\nPASS\nok syscall 0.864s\n```",
      "parentUuid": "59fb9e85_5f0336a5",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "193008b8_46c75772",
        "filename": "src/syscall/syscall_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 386,
      "author": {
        "id": 34993
      },
      "writtenOn": "2023-11-15T10:22:53Z",
      "side": 1,
      "message": "IMO there is no need to link issue 35358 nor Microsoft docs here. We don\u0027t do this for other flag mapping, and it is clear that the flag documentation is in the CreateFile doc page.",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dea833b8_49f98005",
        "filename": "src/syscall/syscall_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 386,
      "author": {
        "id": 66749
      },
      "writtenOn": "2023-11-15T13:39:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "193008b8_46c75772",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f6941f3_2e3c6e9f",
        "filename": "src/syscall/syscall_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 394,
      "author": {
        "id": 34993
      },
      "writtenOn": "2023-11-15T10:22:53Z",
      "side": 1,
      "message": "If the file is read-only, then it can\u0027t be written, so setting `_FILE_FLAG_WRITE_THROUGH` makes no sense.",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "367e9dc5_7b493a2d",
        "filename": "src/syscall/syscall_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 394,
      "author": {
        "id": 66749
      },
      "writtenOn": "2023-11-15T13:39:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f6941f3_2e3c6e9f",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}