{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7b217ff5_1a873126",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-09T06:39:45Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d82a39c1c\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b699caf1_e358a3ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-11-09T06:49:59Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "7b217ff5_1a873126",
      "tag": "autogenerated:trybots~happy",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5ef7ab0_b90c4c08",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 66749
      },
      "writtenOn": "2023-11-10T03:07:33Z",
      "side": 1,
      "message": "Excuse me, could you take a look at this? Thanks.",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b95d605_b6e3ac16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 66749
      },
      "writtenOn": "2023-11-11T08:24:41Z",
      "side": 1,
      "message": "Hi, I noticed CL 235198 was abandoned, could you please take a look at this? Thanks.",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb540142_d0aff95b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2023-11-11T10:11:15Z",
      "side": 1,
      "message": "Thank you for this change Jes! LGTM but let\u0027s try to lock-in a test with a suggestion of sorts:\n\nfunc TestWriteThrough(t *testing.T) {\n        cases :\u003d []struct {\n                name      string\n                extras    int\n                wantAttrs uint32\n        }{\n                {\"sync set\", os.O_SYNC, 1},\n                {\"sync not set\", 0, 0},\n        }\n\n        for _, tt :\u003d range cases {\n                tt :\u003d tt\n                t.Run(tt.name, func(t *testing.T) {\n                        path :\u003d filepath.Join(t.TestDir(), fmt.Sprintf(\"%x.txt\", tt.name))\n                        h, err :\u003d syscall.Open(dir, syscall.O_RDWR|syscall.O_CREATE, 0)\n                        if err !\u003d nil {\n                                t.Fatal(err)\n                        }\n                        defer func() {\n                                syscall.CloseHandle(h)\n                                os.Remove(path)\n                        }()\n\n                        fi :\u003d new(syscall.ByHandleFileInformation)\n                        if err :\u003d syscall.GetFileInformationByHandle(h, fi); err !\u003d nil {\n                                t.Fatal(err)\n                        }\n\n                        if g :\u003d fi.FileAttributes \u0026 0x80000000; g !\u003d tt.wantAttrs {\n                                t.Fatalf(\"Attributes mismatch:\\n\\tgot\u003d%d\\nyet wanted:\\n\\t%d from: %x\u00260x80000000\", g, tt.wantAttrs, fi.FileAttributes)\n                        }\n                })\n        }\n}\n\nIan, Alex, Brad, Tobias kindly help me review my suggestion for the test, thank you!",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0af6eb98_014549fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 34993
      },
      "writtenOn": "2023-11-15T10:22:53Z",
      "side": 1,
      "message": "Thanks for working on this. Tests missing.",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "193008b8_46c75772",
        "filename": "src/syscall/syscall_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 386,
      "author": {
        "id": 34993
      },
      "writtenOn": "2023-11-15T10:22:53Z",
      "side": 1,
      "message": "IMO there is no need to link issue 35358 nor Microsoft docs here. We don\u0027t do this for other flag mapping, and it is clear that the flag documentation is in the CreateFile doc page.",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f6941f3_2e3c6e9f",
        "filename": "src/syscall/syscall_windows.go",
        "patchSetId": 2
      },
      "lineNbr": 394,
      "author": {
        "id": 34993
      },
      "writtenOn": "2023-11-15T10:22:53Z",
      "side": 1,
      "message": "If the file is read-only, then it can\u0027t be written, so setting `_FILE_FLAG_WRITE_THROUGH` makes no sense.",
      "revId": "82a39c1c50c48af2727208b0ab595880129c4321",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}