{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d3d2e0a5_a8b25a16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-15T15:28:11Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d96781ac9",
      "tag": "autogenerated:trybots~beginning",
      "revId": "96781ac976743307196dc5ed41371f5271b08fef",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6e11978_5aa18541",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-15T15:32:32Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d96781ac9\nFailed on linux-amd64-longtest: https://storage.googleapis.com/go-build-log/96781ac9/linux-amd64-longtest_f5940c7a.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "d3d2e0a5_a8b25a16",
      "tag": "autogenerated:trybots~progress",
      "revId": "96781ac976743307196dc5ed41371f5271b08fef",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea3c8474_b818360b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-15T15:39:52Z",
      "side": 1,
      "message": "2 of 28 SlowBots failed.\nFailed on linux-amd64-longtest: https://storage.googleapis.com/go-build-log/96781ac9/linux-amd64-longtest_f5940c7a.log\nFailed on windows-amd64-longtest: https://storage.googleapis.com/go-build-log/96781ac9/windows-amd64-longtest_0a230c8e.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n* windows-amd64-longtest\n",
      "parentUuid": "d3d2e0a5_a8b25a16",
      "tag": "autogenerated:trybots~failed",
      "revId": "96781ac976743307196dc5ed41371f5271b08fef",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3641f070_f7c18030",
        "filename": "src/testing/fuzz.go",
        "patchSetId": 2
      },
      "lineNbr": 440,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-10-15T15:31:42Z",
      "side": 1,
      "message": "Is it possible to reach this line when isFuzzWorker is false? In that case, buf will be empty.\n\n(I guess if that happened before this CL, f.output would be empty too — so this is not a regression.)",
      "revId": "96781ac976743307196dc5ed41371f5271b08fef",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "778e58b0_97b0a4bd",
        "filename": "src/testing/fuzz.go",
        "patchSetId": 2
      },
      "lineNbr": 440,
      "author": {
        "id": 28759
      },
      "writtenOn": "2021-10-15T15:50:20Z",
      "side": 1,
      "message": "Yes it\u0027s possible. It would happen in the case of `go test` without fuzzing (e.g. running a fuzz target as a unit test). That\u0027s line 492. But in that case t.parent.w will just be Stdout. So when t.flushToParent is called, the output will get flushed to Stdout like we want. The error message here will be empty, but that\u0027s fine. We always dropped that error message on the floor anyway.\n\nIt\u0027s not possible when fuzzing. Only the worker calls run()\n\nWe could certainly change the code to always write to a buffer, then in line 492 we could write the error message to Stdout, but that\u0027s not really necessary.",
      "parentUuid": "3641f070_f7c18030",
      "revId": "96781ac976743307196dc5ed41371f5271b08fef",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f57afaa2_f046c122",
        "filename": "src/testing/fuzz.go",
        "patchSetId": 2
      },
      "lineNbr": 440,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-10-15T16:19:32Z",
      "side": 1,
      "message": "Ahh, I see — we return the error regardless of how `run` is called, but its contents are ignored if we aren\u0027t running as a fuzz worker.\n\nIn that case, it might be a little clearer to explicitly pass in the buffer:\n\n\trun :\u003d func(captureOut io.Writer, e corpusEntry) (ok bool) {\n\t\t…\n\t\tif captureOut !\u003d nil {\n\t\t\t// …\n\t\t\tt.parent.w \u003d captureOut\n\t\t}\n\t\t…\n\t\treturn !t.Failed()\n\t}\n\nThat would keep the three coupled details (use of the returned error, output redirection, and the isFuzzWorker flag) all together on the caller side of the run function.",
      "parentUuid": "778e58b0_97b0a4bd",
      "revId": "96781ac976743307196dc5ed41371f5271b08fef",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d07f5d13_431d8e42",
        "filename": "src/testing/fuzz.go",
        "patchSetId": 2
      },
      "lineNbr": 440,
      "author": {
        "id": 28759
      },
      "writtenOn": "2021-10-15T16:45:41Z",
      "side": 1,
      "message": "Yeah I like that better. Done.",
      "parentUuid": "f57afaa2_f046c122",
      "revId": "96781ac976743307196dc5ed41371f5271b08fef",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}