{
  "comments": [
    {
      "key": {
        "uuid": "b094d1f8_a2ec6a32",
        "filename": "src/cmd/compile/internal/gc/bexport.go",
        "patchSetId": 5
      },
      "lineNbr": 177,
      "author": {
        "id": 5210
      },
      "writtenOn": "2017-10-31T00:28:42Z",
      "side": 1,
      "message": "doesn\u0027t really say what it is - how about\n\n// types already seen by markType",
      "revId": "5bbce5e00999a0b9165b4e225daec4becdf98f9f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d26bdc6c_d5c924d2",
        "filename": "src/cmd/compile/internal/gc/bexport.go",
        "patchSetId": 5
      },
      "lineNbr": 177,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-10-31T18:59:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b094d1f8_a2ec6a32",
      "revId": "5bbce5e00999a0b9165b4e225daec4becdf98f9f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4df2ffe_b006b37c",
        "filename": "src/cmd/compile/internal/gc/bexport.go",
        "patchSetId": 5
      },
      "lineNbr": 235,
      "author": {
        "id": 5210
      },
      "writtenOn": "2017-10-31T00:28:42Z",
      "side": 1,
      "message": "This comment is confusing: it talks about functions but all one sees is types in the code below. Perhaps add:\n\n// This is done by tracking down all inlineable methods reachable from exported types.\n\n\nAnother important property here is that it\u0027s ok if the algorithm is not perfekt as it will simply resolve in missing exported function bodies. Not sure where to best say that.",
      "range": {
        "startLine": 235,
        "startChar": 34,
        "endLine": 235,
        "endChar": 38
      },
      "revId": "5bbce5e00999a0b9165b4e225daec4becdf98f9f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4e3aa35_dda619b2",
        "filename": "src/cmd/compile/internal/gc/bexport.go",
        "patchSetId": 5
      },
      "lineNbr": 235,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-10-31T18:59:02Z",
      "side": 1,
      "message": "Done. Also, added the comment explaining the algorithm doesn\u0027t need to be perfect within markType.",
      "parentUuid": "a4df2ffe_b006b37c",
      "range": {
        "startLine": 235,
        "startChar": 34,
        "endLine": 235,
        "endChar": 38
      },
      "revId": "5bbce5e00999a0b9165b4e225daec4becdf98f9f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8cab63f_d5b7e075",
        "filename": "src/cmd/compile/internal/gc/bexport.go",
        "patchSetId": 5
      },
      "lineNbr": 674,
      "author": {
        "id": 5210
      },
      "writtenOn": "2017-10-31T00:28:42Z",
      "side": 1,
      "message": "s/when/When/",
      "range": {
        "startLine": 674,
        "startChar": 5,
        "endLine": 674,
        "endChar": 9
      },
      "revId": "5bbce5e00999a0b9165b4e225daec4becdf98f9f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90b87ab9_5bed7397",
        "filename": "src/cmd/compile/internal/gc/bexport.go",
        "patchSetId": 5
      },
      "lineNbr": 674,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-10-31T18:59:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8cab63f_d5b7e075",
      "range": {
        "startLine": 674,
        "startChar": 5,
        "endLine": 674,
        "endChar": 9
      },
      "revId": "5bbce5e00999a0b9165b4e225daec4becdf98f9f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "029775ee_61d5c1ed",
        "filename": "src/cmd/compile/internal/gc/inl.go",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 5210
      },
      "writtenOn": "2017-10-31T00:28:42Z",
      "side": 1,
      "message": "Is it worthwhile commenting that function bodies are trees so the recursive traversal will always terminate? (Maybe not.)",
      "range": {
        "startLine": 230,
        "startChar": 15,
        "endLine": 230,
        "endChar": 19
      },
      "revId": "5bbce5e00999a0b9165b4e225daec4becdf98f9f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afe43203_b16f96bc",
        "filename": "src/cmd/compile/internal/gc/inl.go",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-10-31T18:59:02Z",
      "side": 1,
      "message": "By recursive traversal, do you mean just calling inspectList on n.Func.Inl? If so, I don\u0027t think that\u0027s necessary. syntax.go documents that the Node AST is a DAG, and recursively iterating over syntax trees is inspectList\u0027s entire purpose.\n\nI was thinking about commenting to point out recursive functions can\u0027t be inlined, so the recursive inlFlood calls are guaranteed to bottom out at leaf functions. But because of the n.Func.ExportInline flag, we\u0027re guaranteed to not recurse anyway.\n\nI\u0027m leaning towards no comment, but don\u0027t feel strongly.",
      "parentUuid": "029775ee_61d5c1ed",
      "range": {
        "startLine": 230,
        "startChar": 15,
        "endLine": 230,
        "endChar": 19
      },
      "revId": "5bbce5e00999a0b9165b4e225daec4becdf98f9f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}