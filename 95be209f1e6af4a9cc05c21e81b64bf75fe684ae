{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ca62d43b_b68d0650",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-26T20:46:05Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d95be209f",
      "tag": "autogenerated:trybots~beginning",
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39cdea30_530f9465",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-26T20:50:01Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d95be209f\nFailed on linux-arm64-aws: https://storage.googleapis.com/go-build-log/95be209f/linux-arm64-aws_bcab880d.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "ca62d43b_b68d0650",
      "tag": "autogenerated:trybots~progress",
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77ae6aa0_c28c5339",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-26T20:57:46Z",
      "side": 1,
      "message": "16 of 31 TryBots failed.\nFailed on linux-arm64-aws: https://storage.googleapis.com/go-build-log/95be209f/linux-arm64-aws_bcab880d.log\nFailed on freebsd-amd64-12_3: https://storage.googleapis.com/go-build-log/95be209f/freebsd-amd64-12_3_41afca97.log\nFailed on linux-arm-aws: https://storage.googleapis.com/go-build-log/95be209f/linux-arm-aws_d4ffd09e.log\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/95be209f/linux-amd64_1675c7a2.log\nFailed on linux-amd64-nounified: https://storage.googleapis.com/go-build-log/95be209f/linux-amd64-nounified_b250db3f.log\nFailed on openbsd-amd64-68: https://storage.googleapis.com/go-build-log/95be209f/openbsd-amd64-68_50ad8055.log\nFailed on linux-amd64-boringcrypto: https://storage.googleapis.com/go-build-log/95be209f/linux-amd64-boringcrypto_fc81f72a.log\nFailed on openbsd-amd64-70: https://storage.googleapis.com/go-build-log/95be209f/openbsd-amd64-70_7d1b7e9c.log\nFailed on linux-amd64-unified: https://storage.googleapis.com/go-build-log/95be209f/linux-amd64-unified_a3ab43e0.log\nFailed on misc-compile-other-1: https://storage.googleapis.com/go-build-log/95be209f/misc-compile-other-1_7b17b53e.log\nFailed on linux-386: https://storage.googleapis.com/go-build-log/95be209f/linux-386_7c81fab5.log\nFailed on windows-amd64-2016: https://storage.googleapis.com/go-build-log/95be209f/windows-amd64-2016_de7f7216.log\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/95be209f/linux-amd64-race_75c00973.log\nFailed on windows-386-2012: https://storage.googleapis.com/go-build-log/95be209f/windows-386-2012_03e2d276.log\nFailed on (x/tools) linux-amd64: https://storage.googleapis.com/go-build-log/95be209f/linux-amd64_abf40ba1.log\nFailed on windows-386-2008: https://storage.googleapis.com/go-build-log/95be209f/windows-386-2008_bbab0f86.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "ca62d43b_b68d0650",
      "tag": "autogenerated:trybots~failed",
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d947796e_cd143aff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-05-26T21:14:52Z",
      "side": 1,
      "message": "The fix needs to be ported to go/types.",
      "parentUuid": "77ae6aa0_c28c5339",
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbc43890_fab7bee0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-05-26T21:28:21Z",
      "side": 1,
      "message": "Still trying to fully understand the fix but it does appear to fix the issue; thanks!\n\nPlease make the same change in go/types (almost 100% symmetric code), and add the test case there as well.",
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64360724_e83965d5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-05-26T21:38:19Z",
      "side": 1,
      "message": "Actually, before you make the suggested changes, hold your horses.\nI think perhaps we can do even better.",
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d74c9479_e6dc5678",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-05-27T04:21:51Z",
      "side": 1,
      "message": "Let\u0027s chat about this fix. I do think you uncovered a serious flaw (thanks!) but I think we can do better than what we have now.",
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efdb9ecb_438915be",
        "filename": "src/cmd/compile/internal/types2/validtype.go",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-05-27T04:21:51Z",
      "side": 1,
      "message": "I think the infoMap model is fundamentally incorrect. This code works also without it, except that it gets super slow for esoteric cases (testdata/fixedbugs/issue6977.go).",
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d296c3bc_85417ebf",
        "filename": "src/cmd/compile/internal/types2/validtype.go",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-05-26T21:28:21Z",
      "side": 1,
      "message": "I think this can be like before:\n\nfor i, tn :\u003d range path {\n   if tn \u003d\u003d t.obj { ...",
      "range": {
        "startLine": 76,
        "startChar": 12,
        "endLine": 76,
        "endChar": 15
      },
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5741367_0230d4ec",
        "filename": "src/cmd/compile/internal/types2/validtype.go",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-05-26T21:28:21Z",
      "side": 1,
      "message": "extra empty line",
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1e73f7b_4f73e8fb",
        "filename": "src/cmd/compile/internal/types2/validtype.go",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-05-27T04:21:51Z",
      "side": 1,
      "message": "I don\u0027t believe that is needed. For one it will remove valuable information when reporting the error",
      "range": {
        "startLine": 107,
        "startChar": 20,
        "endLine": 107,
        "endChar": 21
      },
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d4ed8a4_d3fbda08",
        "filename": "test/typeparam/issue52698.go",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-05-26T21:28:21Z",
      "side": 1,
      "message": "Rather than have this in the test directory, please move this file into\n\nsrc/cmd/compile/internal/types2/testdata/fixedbugs\n\n(and remove the // compile comment).\n\nThen this test will be run always as part of the (short) type checker tests.",
      "range": {
        "startLine": 1,
        "startChar": 3,
        "endLine": 1,
        "endChar": 10
      },
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "812b9ce2_b2285b08",
        "filename": "test/typeparam/issue52698.go",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-05-26T21:28:21Z",
      "side": 1,
      "message": "Can you please also add this simplified test case:\n\n```\ntype A struct {\n\t_ B[C]\n}\n\ntype D[P1 any] struct {\n\t_ P1\n}\n\ntype B[P2 any] struct {\n\t_ D[P2]\n}\n\ntype C struct {\n\t_ B[string]\n}\n```\nand then add a comment:\n\n```\n// test case from issue\n```\n\nfollowed by the test that\u0027s already here.\n(this matches the style we have elsewhere for type checker tests.)",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 0
      },
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9222591e_074b3fd8",
        "filename": "test/typeparam/issue52698.go",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-05-26T21:28:21Z",
      "side": 1,
      "message": "This comment is not needed and somewhat confusing (details are in the issue). Leave away.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 96
      },
      "revId": "95be209f1e6af4a9cc05c21e81b64bf75fe684ae",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}