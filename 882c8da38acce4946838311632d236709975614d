{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "62d8c058_60846020",
        "filename": "src/cmd/compile/internal/noder/reader.go",
        "patchSetId": 2
      },
      "lineNbr": 3234,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-09-26T23:26:28Z",
      "side": 1,
      "message": "I\u0027m not sure I understand the point of iDerived here. If !derived, we\u0027re going to return a plain OTYPE regardless. Whether we do that here or below doesn\u0027t matter.",
      "revId": "882c8da38acce4946838311632d236709975614d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7aadd8e_d9e8e865",
        "filename": "src/cmd/compile/internal/noder/reader.go",
        "patchSetId": 2
      },
      "lineNbr": 3234,
      "author": {
        "id": 58123
      },
      "writtenOn": "2024-09-27T00:48:09Z",
      "side": 1,
      "message": "Both the source and target of a type assertion are non-generic.",
      "parentUuid": "62d8c058_60846020",
      "revId": "882c8da38acce4946838311632d236709975614d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2539a963_34ba1e97",
        "filename": "src/cmd/compile/internal/noder/reader.go",
        "patchSetId": 2
      },
      "lineNbr": 3234,
      "author": {
        "id": 14665
      },
      "writtenOn": "2024-09-27T02:11:36Z",
      "side": 1,
      "message": "Same concern here, iDerived and derived always have the same value. We dont need iDerived here.",
      "parentUuid": "d7aadd8e_d9e8e865",
      "revId": "882c8da38acce4946838311632d236709975614d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfd8be6a_51dd1e9c",
        "filename": "src/cmd/compile/internal/noder/reader.go",
        "patchSetId": 2
      },
      "lineNbr": 3239,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-09-26T23:26:28Z",
      "side": 1,
      "message": "This comment probably isn\u0027t needed.",
      "range": {
        "startLine": 3239,
        "startChar": 22,
        "endLine": 3239,
        "endChar": 37
      },
      "revId": "882c8da38acce4946838311632d236709975614d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0d5b2bc_2db7bb6d",
        "filename": "src/cmd/compile/internal/noder/reader.go",
        "patchSetId": 2
      },
      "lineNbr": 3239,
      "author": {
        "id": 58123
      },
      "writtenOn": "2024-09-27T00:48:09Z",
      "side": 1,
      "message": "The target of a type assertion is a non-generic interface.",
      "parentUuid": "dfd8be6a_51dd1e9c",
      "range": {
        "startLine": 3239,
        "startChar": 22,
        "endLine": 3239,
        "endChar": 37
      },
      "revId": "882c8da38acce4946838311632d236709975614d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed16cce5_95f882fa",
        "filename": "test/codegen/typeswitch.go",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-09-26T23:26:28Z",
      "side": 1,
      "message": "I think it would also be worth having a test where the type in the case statement is an instantiated generic, or perhaps a type parameter.",
      "revId": "882c8da38acce4946838311632d236709975614d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b6cce23_aae50839",
        "filename": "test/codegen/typeswitch.go",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 58123
      },
      "writtenOn": "2024-09-27T00:48:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed16cce5_95f882fa",
      "revId": "882c8da38acce4946838311632d236709975614d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}