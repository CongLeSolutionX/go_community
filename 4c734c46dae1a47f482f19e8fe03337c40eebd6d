{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5433e550_e625c1c5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 17576
      },
      "writtenOn": "2022-03-04T21:26:09Z",
      "side": 1,
      "message": "I was scratching my head about this change in isolation because this could create a large number of mappings, with perhaps deleterious effects on the performance of other mmap* operations for the process as well as running out of address spaces.\n\nBut then I saw the follow-up change. Might be good to mention that this is meant to be a temporary state :).",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 0
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93f1fcbc_6568b978",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-03-04T21:56:39Z",
      "side": 1,
      "message": "this change is still useful in isolation.\n\nit creates a lot of mappings and linux keeps a frighteningly low default limit on mappings, but I think it also merges them under the hood, and chunks are kept contiguous in general. every other OS has a very high limit on mappings and it really does not matter.\n\nthe existing code also already might run out of address space, because it never reuses space.",
      "parentUuid": "5433e550_e625c1c5",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 0
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c40049cd_05175f32",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 17576
      },
      "writtenOn": "2022-03-04T22:00:18Z",
      "side": 1,
      "message": "\u003e it creates a lot of mappings and linux keeps a frighteningly low default limit on mappings, but I think it also merges them under the hood, and chunks are kept contiguous in general. every other OS has a very high limit on mappings and it really does not matter.\n\nAlright, nice.\n\n\u003e the existing code also already might run out of address space, because it never reuses space.\n\nLikely a misunderstanding on my part, but the description says:\n\n\u003e However, a hard\nunmapping means that at any point the process could map something else into that region, breaking the safety guarantees.\n\nWhich seems contradictory with \"it never reuses space\".",
      "parentUuid": "93f1fcbc_6568b978",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 0
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9afdcdd4_3be5c999",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-03-04T22:07:47Z",
      "side": 1,
      "message": "ohhh, yeah sorry, I could be clearer on that front.\n\nwhat I meant was that the arena code keeps picking a higher and higher address because it wants to leave the old address space it used unmapped. so it *could* end up mapping things outside of, say, the race detector\u0027s allowable address space.\n\nbut because it totally unmaps the region, there\u0027s really nothing stopping anything else from mapping there. like, if someone did a syscall.Mmap, it might actually take over that region (if the OS chooses it without a hint, or if they provide that as the hint address), and code that erroneously dereferences pointers into that region wouldn\u0027t actually fail like it\u0027s supposed to.",
      "parentUuid": "c40049cd_05175f32",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 0
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "610da1fd_1b0ab85d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-03-04T23:50:15Z",
      "side": 1,
      "message": "I tried to clarify in the commit message.",
      "parentUuid": "9afdcdd4_3be5c999",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 0
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "045e8774_6c0ef47b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7061
      },
      "writtenOn": "2022-03-04T18:46:13Z",
      "side": 1,
      "message": "Was worried about creation rate and running out of address space, but OOB conversation reveals the existence of another CL to address that problem.",
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ba48e97_2caff1ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-04T18:53:40Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d4c734c46",
      "tag": "autogenerated:trybots~beginning",
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1c0c4f0_4adfebc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-04T18:57:17Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d4c734c46\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/4c734c46/linux-amd64-race_0c693721.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "0ba48e97_2caff1ea",
      "tag": "autogenerated:trybots~progress",
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fce5de2_b95b4477",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-04T19:05:30Z",
      "side": 1,
      "message": "1 of 29 TryBots failed.\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/4c734c46/linux-amd64-race_0c693721.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "0ba48e97_2caff1ea",
      "tag": "autogenerated:trybots~failed",
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee64a22b_3b1c453e",
        "filename": "src/runtime/arena.go",
        "patchSetId": 2
      },
      "lineNbr": 295,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-03-04T16:38:15Z",
      "side": 1,
      "message": "these two lines are the core of the CL. the rest is all just fixing up the fact that we\u0027re not actually unmapping anything anymore to be less misleading.",
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6282c0a1_b724b386",
        "filename": "src/runtime/arena.go",
        "patchSetId": 2
      },
      "lineNbr": 295,
      "author": {
        "id": 17576
      },
      "writtenOn": "2022-03-04T21:26:09Z",
      "side": 1,
      "message": "I wonder what effect retaining the mapping has on kernel-side performance for other mapping operations the runtime does. The list could get pretty big (as evidenced by it overflowing from time to time). Any way, it seems like the follow-up CL handles that problem.",
      "range": {
        "startLine": 295,
        "startChar": 2,
        "endLine": 295,
        "endChar": 10
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54d13197_af9fcc61",
        "filename": "src/runtime/arena.go",
        "patchSetId": 2
      },
      "lineNbr": 295,
      "author": {
        "id": 17576
      },
      "writtenOn": "2022-03-04T21:26:09Z",
      "side": 1,
      "message": "In src/runtime/malloc.go it says sysFault is only used for debugging the runtime. I guess that\u0027s out of date with this patch.",
      "range": {
        "startLine": 295,
        "startChar": 2,
        "endLine": 295,
        "endChar": 10
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4636ca9e_fa07658c",
        "filename": "src/runtime/arena.go",
        "patchSetId": 2
      },
      "lineNbr": 295,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-03-04T21:56:39Z",
      "side": 1,
      "message": "normally I\u0027d agree with you, but since the goal here is to update a patch, I\u0027m inclined to touch fewer files if that\u0027s OK with you.",
      "parentUuid": "54d13197_af9fcc61",
      "range": {
        "startLine": 295,
        "startChar": 2,
        "endLine": 295,
        "endChar": 10
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5eea862_562c4fe4",
        "filename": "src/runtime/arena.go",
        "patchSetId": 2
      },
      "lineNbr": 295,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-03-04T21:56:39Z",
      "side": 1,
      "message": "commented on your commit message comment about this.",
      "parentUuid": "6282c0a1_b724b386",
      "range": {
        "startLine": 295,
        "startChar": 2,
        "endLine": 295,
        "endChar": 10
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5564e242_fbabaac1",
        "filename": "src/runtime/arena.go",
        "patchSetId": 2
      },
      "lineNbr": 295,
      "author": {
        "id": 17576
      },
      "writtenOn": "2022-03-04T22:00:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4636ca9e_fa07658c",
      "range": {
        "startLine": 295,
        "startChar": 2,
        "endLine": 295,
        "endChar": 10
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c53a18b7_3fdc7ff9",
        "filename": "src/runtime/arena.go",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 17576
      },
      "writtenOn": "2022-03-04T21:57:56Z",
      "side": 1,
      "message": "As discussed in the channel. This is redundant iif `sysFault` is implemented as a `mmap` with `MAP_FIXED` instead of `mprotect`, which it currently is.\n\nmpratt@ confirms that the former drops the pages automatically. Remapping it READ/WRITE gives back zeroed memory (which I\u0027ve confirmed experimentally).\n\nOf course, if somehow someone changes int the future to use `mprotect`, this won\u0027t work anymore [1].\n\n[1]: Then again, I bet the reason for using `mmap` over `mprotect` is exactly this, and on purpose.",
      "range": {
        "startLine": 297,
        "startChar": 2,
        "endLine": 297,
        "endChar": 11
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f936fa3e_e4f9c00d",
        "filename": "src/runtime/arena.go",
        "patchSetId": 2
      },
      "lineNbr": 297,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-03-04T23:50:15Z",
      "side": 1,
      "message": "Done, and thank you so much for digging into this!",
      "parentUuid": "c53a18b7_3fdc7ff9",
      "range": {
        "startLine": 297,
        "startChar": 2,
        "endLine": 297,
        "endChar": 11
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb794e48_2f1292a9",
        "filename": "src/runtime/mheap.go",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 17576
      },
      "writtenOn": "2022-03-04T21:26:09Z",
      "side": 1,
      "message": "Outdated comment?",
      "range": {
        "startLine": 302,
        "startChar": 43,
        "endLine": 302,
        "endChar": 51
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7abd1c5b_b8906099",
        "filename": "src/runtime/mheap.go",
        "patchSetId": 2
      },
      "lineNbr": 474,
      "author": {
        "id": 17576
      },
      "writtenOn": "2022-03-04T21:26:09Z",
      "side": 1,
      "message": "Outdated comment?",
      "range": {
        "startLine": 474,
        "startChar": 75,
        "endLine": 474,
        "endChar": 83
      },
      "revId": "4c734c46dae1a47f482f19e8fe03337c40eebd6d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}