{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "efaca75e_57c74a26",
        "filename": "src/cmd/compile/internal/ssa/_gen/generic.rules",
        "patchSetId": 7
      },
      "lineNbr": 609,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-01-10T17:12:29Z",
      "side": 1,
      "message": "These look correct, but I think I\u0027d rather have them like the last few rules, written out for each size and not using {min,max}ValueForInt applied to the type.\nDepending on the type is a bit dicey. I don\u0027t think it is a problem when we are still in the generic domain, but when you get into machine-dependent rules you can have, e.g., an 8-byte compare with a 4-byte constant arg (e.g. CMPQ with a MOVLconst argument).",
      "revId": "624847965ce7b7267ba75ed69e6d3e8148281e65",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7874b36_03c005c5",
        "filename": "src/cmd/compile/internal/ssa/_gen/generic.rules",
        "patchSetId": 7
      },
      "lineNbr": 609,
      "author": {
        "id": 55763
      },
      "writtenOn": "2024-01-11T01:59:39Z",
      "side": 1,
      "message": "I originally did the splitting since the type checker wouldn\u0027t compile the code (trying to write int64 result to all consts 8, 16, 32, 64 wouldn\u0027t pass).\n\nDo you also want me to split the uint rules ?",
      "parentUuid": "efaca75e_57c74a26",
      "revId": "624847965ce7b7267ba75ed69e6d3e8148281e65",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ebc6375_33b439d0",
        "filename": "src/cmd/compile/internal/ssa/_gen/generic.rules",
        "patchSetId": 7
      },
      "lineNbr": 609,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-01-11T18:29:10Z",
      "side": 1,
      "message": "No, the uint rules are fine.",
      "parentUuid": "a7874b36_03c005c5",
      "revId": "624847965ce7b7267ba75ed69e6d3e8148281e65",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}