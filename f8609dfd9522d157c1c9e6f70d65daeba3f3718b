{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a6d87941_3bd8da33",
        "filename": "src/cmd/compile/internal/abi/abiutils.go",
        "patchSetId": 5
      },
      "lineNbr": 131,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-03-01T20:13:38Z",
      "side": 1,
      "message": "(Eventually we might need to handle int64 decomposition on 32-bit.)",
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42cff1c3_3f6a226e",
        "filename": "src/cmd/compile/internal/abi/abiutils.go",
        "patchSetId": 5
      },
      "lineNbr": 131,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-03-04T00:01:05Z",
      "side": 1,
      "message": "I went ahead and added that, not clear it is correct but there is a TODO about endianness.",
      "parentUuid": "a6d87941_3bd8da33",
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69d0c7e6_8460f667",
        "filename": "src/cmd/compile/internal/abi/abiutils.go",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-03-01T20:13:38Z",
      "side": 1,
      "message": "Maybe check array size. It can be 1 or 0 for now, maybe we\u0027ll have more in the future.",
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "225dc9fe_a2caca59",
        "filename": "src/cmd/compile/internal/abi/abiutils.go",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-03-04T00:01:05Z",
      "side": 1,
      "message": "Done. Zero, for sure.",
      "parentUuid": "69d0c7e6_8460f667",
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a784018b_f2e29dfb",
        "filename": "src/cmd/compile/internal/ssa/expand_calls.go",
        "patchSetId": 5
      },
      "lineNbr": 825,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-03-01T20:13:38Z",
      "side": 1,
      "message": "Does OpLoad work for non-SSA\u0027able values? I thought OpDereference is only for non-SSA\u0027able values?\n\nAlso, does it belong to this CL (i.e. has anything to do with results)?",
      "range": {
        "startLine": 823,
        "startChar": 0,
        "endLine": 825,
        "endChar": 2
      },
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a30feab_827dfb86",
        "filename": "src/cmd/compile/internal/ssa/expand_calls.go",
        "patchSetId": 5
      },
      "lineNbr": 825,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-03-04T00:01:05Z",
      "side": 1,
      "message": "Non-SSA-able OpLoad works here, for sure.  ExpandCalls uses recursion to take aggregates apart and doesn\u0027t construct StructMake/StructSelect intermediates.\n\nFor returning (larger) results, OpDereference(address) is fed to a MakeResults which is the Control of the return block.",
      "parentUuid": "a784018b_f2e29dfb",
      "range": {
        "startLine": 823,
        "startChar": 0,
        "endLine": 825,
        "endChar": 2
      },
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5081b7ee_cb96fb54",
        "filename": "src/cmd/compile/internal/ssa/expand_calls.go",
        "patchSetId": 5
      },
      "lineNbr": 825,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-03-04T16:44:03Z",
      "side": 1,
      "message": "If OpLoad with non-SSA-able values only live within this pass, it is probably okay. Other passes may not like it, but they won\u0027t see it.\n\nBut I still don\u0027t quite understand why we want to do this. This CL doesn\u0027t handle non-SSA-able results yet, right? They why it matters? Thanks.",
      "parentUuid": "4a30feab_827dfb86",
      "range": {
        "startLine": 823,
        "startChar": 0,
        "endLine": 825,
        "endChar": 2
      },
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05f9b1ea_6a017537",
        "filename": "src/cmd/compile/internal/ssa/expand_calls.go",
        "patchSetId": 5
      },
      "lineNbr": 825,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-03-04T17:07:43Z",
      "side": 1,
      "message": "It may have slipped in during a refactoring, I\u0027ll take it out and see if anything happens.",
      "parentUuid": "5081b7ee_cb96fb54",
      "range": {
        "startLine": 823,
        "startChar": 0,
        "endLine": 825,
        "endChar": 2
      },
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2784af4_91ae1dd3",
        "filename": "src/cmd/compile/internal/ssa/expand_calls.go",
        "patchSetId": 5
      },
      "lineNbr": 1193,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-03-01T20:13:38Z",
      "side": 1,
      "message": "I\u0027m not sure I followed this change...",
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bca8918a_e904901e",
        "filename": "src/cmd/compile/internal/ssa/expand_calls.go",
        "patchSetId": 5
      },
      "lineNbr": 1193,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-03-04T00:01:05Z",
      "side": 1,
      "message": "I\u0027ll add a comment -- it is just a key for a map, so the offset doesn\u0027t need to be real.  OffsetOfResult is now less defined.",
      "parentUuid": "a2784af4_91ae1dd3",
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f3e7719_623738d7",
        "filename": "src/cmd/compile/internal/ssa/expand_calls.go",
        "patchSetId": 5
      },
      "lineNbr": 1193,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-03-04T16:44:03Z",
      "side": 1,
      "message": "Okay, then it makes sense.",
      "parentUuid": "bca8918a_e904901e",
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a622a7cc_02038954",
        "filename": "src/cmd/compile/internal/ssa/lower.go",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-03-01T20:13:38Z",
      "side": 1,
      "message": "The new format doesn\u0027t seem to work well with them.",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 42,
        "endChar": 4
      },
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8edc7764_4c6841ce",
        "filename": "src/cmd/compile/internal/ssa/lower.go",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 7061
      },
      "writtenOn": "2021-03-04T00:01:05Z",
      "side": 1,
      "message": "I don\u0027t understand, but I can put it back like it was.\nThis was just so I could figure out some mistake of mine.",
      "parentUuid": "a622a7cc_02038954",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 42,
        "endChar": 4
      },
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db436797_b982408b",
        "filename": "src/cmd/compile/internal/ssa/lower.go",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-03-04T16:44:03Z",
      "side": 1,
      "message": "I just meant: the arg types are supposed to be print right after v.Op and v.Type. With the change it prints after b, which doesn\u0027t make much sense.",
      "parentUuid": "8edc7764_4c6841ce",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 42,
        "endChar": 4
      },
      "revId": "f8609dfd9522d157c1c9e6f70d65daeba3f3718b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}