{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9268da87_aa637e6f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-25T23:38:41Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "18f00a9a_bf2f436e",
      "tag": "autogenerated:trybots~beginning",
      "revId": "a4eb0c83fb8cf99ae3126b4dd3c6b2293d3f6b9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14ae3df6_8d804b75",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-25T23:38:41Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003da4eb0c83",
      "tag": "autogenerated:trybots~beginning",
      "revId": "a4eb0c83fb8cf99ae3126b4dd3c6b2293d3f6b9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd9358cf_a3b4e66c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-25T23:50:07Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* openbsd-amd64-68\n",
      "parentUuid": "14ae3df6_8d804b75",
      "tag": "autogenerated:trybots~happy",
      "revId": "a4eb0c83fb8cf99ae3126b4dd3c6b2293d3f6b9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ade41318_f1f6ca1b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5153
      },
      "writtenOn": "2021-05-25T23:54:06Z",
      "side": 1,
      "message": "Looks good on a first cut and certainly better than my hacks in https://go-review.googlesource.com/c/go/+/281314. I\u0027ll try to take a closer look tomorrow.",
      "revId": "a4eb0c83fb8cf99ae3126b4dd3c6b2293d3f6b9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57ac20e8_7dbbf0a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-05-29T21:20:37Z",
      "side": 1,
      "message": "Have you had a chance to look at this again?  It would be nice to fix this for 1.17.  Thanks.",
      "parentUuid": "ade41318_f1f6ca1b",
      "revId": "a4eb0c83fb8cf99ae3126b4dd3c6b2293d3f6b9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2df1d0c2_452bf85c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5153
      },
      "writtenOn": "2021-05-30T21:21:35Z",
      "side": 1,
      "message": "Sorry for the delay. This doesn\u0027t fix the test case in https://github.com/golang/go/issues/43505, did you expect it to? The object files generated in that case are perfect valid ELF object files, so it\u0027s not some kind of \"pure bytecode file\" that\u0027s tripping the linker up in this case.",
      "parentUuid": "57ac20e8_7dbbf0a6",
      "revId": "a4eb0c83fb8cf99ae3126b4dd3c6b2293d3f6b9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1ef3ac5_33650b49",
        "filename": "src/cmd/cgo/gcc.go",
        "patchSetId": 2
      },
      "lineNbr": 1641,
      "author": {
        "id": 5153
      },
      "writtenOn": "2021-05-30T21:21:35Z",
      "side": 1,
      "message": "This is required for issue 46295 but does it also fix issue 43830 at the same time without the other fixes required? Also is there a chance that the compiler will reject -fno-lto or do compilers generally ignore unrecognized -fno-* flags?",
      "range": {
        "startLine": 1641,
        "startChar": 0,
        "endLine": 1641,
        "endChar": 61
      },
      "revId": "a4eb0c83fb8cf99ae3126b4dd3c6b2293d3f6b9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}