{
  "comments": [
    {
      "key": {
        "uuid": "7cd85b36_028a88d7",
        "filename": "src/cmd/compile/internal/syntax/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-03-22T02:59:56Z",
      "side": 1,
      "message": "I\u0027d slightly prefer making this an internal method, and then adding methods like\n\n    func (s *BlockStmt) Rbrace() src.Pos {\n        return s.posAt(s.rbrace)\n    }\n\nto make uses slightly cleaner, but I\u0027m not opposed to this either.",
      "revId": "2ea0eada8e1871d88642f03fe21d01c79570dc9c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a028dd32_a7d1e429",
        "filename": "src/cmd/compile/internal/syntax/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 5210
      },
      "writtenOn": "2017-03-22T04:17:50Z",
      "side": 1,
      "message": "The reason why I haven\u0027t do so is that I\u0027m experimenting with getting rid of src.Pos altogether in this package. The dependency on package src bothered me ever since I introduced it.",
      "parentUuid": "7cd85b36_028a88d7",
      "revId": "2ea0eada8e1871d88642f03fe21d01c79570dc9c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "311a9c36_898b1200",
        "filename": "src/cmd/compile/internal/syntax/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 380,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-03-22T02:59:56Z",
      "side": 1,
      "message": "Any thoughts on changing IfStmt, ForStmt, FuncLit, and FuncDecl to use BlockStmt instead of []Stmt? (Maybe *BlockStmt for FuncDecl.)",
      "revId": "2ea0eada8e1871d88642f03fe21d01c79570dc9c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "470b99b2_42698ff6",
        "filename": "src/cmd/compile/internal/syntax/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 380,
      "author": {
        "id": 5210
      },
      "writtenOn": "2017-03-22T04:17:50Z",
      "side": 1,
      "message": "I played with that. My primary reason for the current approach was that this uses less memory (unless empty Then clause) and saves an indirection. Currently we allocate 262B/line on average, and making this a block (and everywhere else) bumps that up to ~300B/line or so, a 10% increase. And for Switch and Select statements we\u0027d loose the information about the types of the body entries (Case/CommClause).\n\nMaybe that\u0027s premature optimization, but the whole point of this package was to be minimal and as fast as we can make it reasonably. (Again, maybe this is not \"reasonable\").",
      "parentUuid": "311a9c36_898b1200",
      "revId": "2ea0eada8e1871d88642f03fe21d01c79570dc9c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50f636ec_309131bb",
        "filename": "src/cmd/compile/internal/syntax/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 380,
      "author": {
        "id": 5210
      },
      "writtenOn": "2017-03-22T04:30:12Z",
      "side": 1,
      "message": "Actually, this may not be correct. Will remeasure.",
      "parentUuid": "470b99b2_42698ff6",
      "revId": "2ea0eada8e1871d88642f03fe21d01c79570dc9c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cefbffa8_37201a0e",
        "filename": "src/cmd/compile/internal/syntax/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 380,
      "author": {
        "id": 5210
      },
      "writtenOn": "2017-03-22T05:30:51Z",
      "side": 1,
      "message": "This was a classical case of premature optimization. The difference is 1.3% which is clearly not worth it.\n\nWill send a separate CL simplifying all this.",
      "parentUuid": "50f636ec_309131bb",
      "revId": "2ea0eada8e1871d88642f03fe21d01c79570dc9c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be8a549f_be8895e7",
        "filename": "src/cmd/compile/internal/syntax/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-03-22T02:59:56Z",
      "side": 1,
      "message": "I don\u0027t think we need End for CaseClause or CommClause: the scope ends implicitly at the either the next Clause or the enclosing Switch/SelectStmt.\n\nSimilarly, I don\u0027t think we need those Stmts\u0027 Lbrace positions either.",
      "range": {
        "startLine": 428,
        "startChar": 7,
        "endLine": 428,
        "endChar": 12
      },
      "revId": "2ea0eada8e1871d88642f03fe21d01c79570dc9c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7b3d754_bd57d934",
        "filename": "src/cmd/compile/internal/syntax/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 5210
      },
      "writtenOn": "2017-03-22T04:17:50Z",
      "side": 1,
      "message": "Indeed. In this case it actually doesn\u0027t cost, but I will remove it.",
      "parentUuid": "be8a549f_be8895e7",
      "range": {
        "startLine": 428,
        "startChar": 7,
        "endLine": 428,
        "endChar": 12
      },
      "revId": "2ea0eada8e1871d88642f03fe21d01c79570dc9c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}