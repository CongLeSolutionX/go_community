{
  "comments": [
    {
      "key": {
        "uuid": "7cd85b36_028a88d7",
        "filename": "src/cmd/compile/internal/syntax/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-03-22T02:59:56Z",
      "side": 1,
      "message": "I\u0027d slightly prefer making this an internal method, and then adding methods like\n\n    func (s *BlockStmt) Rbrace() src.Pos {\n        return s.posAt(s.rbrace)\n    }\n\nto make uses slightly cleaner, but I\u0027m not opposed to this either.",
      "revId": "2ea0eada8e1871d88642f03fe21d01c79570dc9c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "311a9c36_898b1200",
        "filename": "src/cmd/compile/internal/syntax/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 380,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-03-22T02:59:56Z",
      "side": 1,
      "message": "Any thoughts on changing IfStmt, ForStmt, FuncLit, and FuncDecl to use BlockStmt instead of []Stmt? (Maybe *BlockStmt for FuncDecl.)",
      "revId": "2ea0eada8e1871d88642f03fe21d01c79570dc9c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be8a549f_be8895e7",
        "filename": "src/cmd/compile/internal/syntax/nodes.go",
        "patchSetId": 1
      },
      "lineNbr": 428,
      "author": {
        "id": 5440
      },
      "writtenOn": "2017-03-22T02:59:56Z",
      "side": 1,
      "message": "I don\u0027t think we need End for CaseClause or CommClause: the scope ends implicitly at the either the next Clause or the enclosing Switch/SelectStmt.\n\nSimilarly, I don\u0027t think we need those Stmts\u0027 Lbrace positions either.",
      "range": {
        "startLine": 428,
        "startChar": 7,
        "endLine": 428,
        "endChar": 12
      },
      "revId": "2ea0eada8e1871d88642f03fe21d01c79570dc9c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}