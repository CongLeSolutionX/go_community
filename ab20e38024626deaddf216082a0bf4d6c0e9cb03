{
  "comments": [
    {
      "key": {
        "uuid": "fcab02ee_c081aef2",
        "filename": "src/cmd/compile/internal/ssa/likelyadjust.go",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 5200
      },
      "writtenOn": "2016-03-24T22:56:53Z",
      "side": 1,
      "message": "Shouldn\u0027t this be sl.depth \u003c l.depth?  Exit edges go to loops of shallower depth, right?",
      "revId": "ab20e38024626deaddf216082a0bf4d6c0e9cb03",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "518159c7_d6fbe48b",
        "filename": "src/cmd/compile/internal/ssa/likelyadjust.go",
        "patchSetId": 1
      },
      "lineNbr": 417,
      "author": {
        "id": 7061
      },
      "writtenOn": "2016-03-28T15:14:11Z",
      "side": 1,
      "message": "If the exit edge from loop A targets the header of loop B, then they have the same depth.  But the comparison is wrong direction, so that\u0027s wrong when sl is not nil.\n\nEqual depth isn\u0027t possible if critical edges have been removed, but that\u0027s not guaranteed.",
      "parentUuid": "fcab02ee_c081aef2",
      "revId": "ab20e38024626deaddf216082a0bf4d6c0e9cb03",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c86862c_586349ab",
        "filename": "src/cmd/compile/internal/ssa/regalloc.go",
        "patchSetId": 1
      },
      "lineNbr": 591,
      "author": {
        "id": 7061
      },
      "writtenOn": "2016-03-23T21:19:06Z",
      "side": 1,
      "message": "Comment needs fixing.",
      "range": {
        "startLine": 588,
        "startChar": 4,
        "endLine": 591,
        "endChar": 27
      },
      "revId": "ab20e38024626deaddf216082a0bf4d6c0e9cb03",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcab02ee_60f71a79",
        "filename": "src/cmd/compile/internal/ssa/regalloc.go",
        "patchSetId": 1
      },
      "lineNbr": 1136,
      "author": {
        "id": 5200
      },
      "writtenOn": "2016-03-24T22:56:53Z",
      "side": 1,
      "message": "This allocation will be expensive, one for each block.  Allocate it once and clear() it.",
      "revId": "ab20e38024626deaddf216082a0bf4d6c0e9cb03",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "518159c7_d6cd2484",
        "filename": "src/cmd/compile/internal/ssa/regalloc.go",
        "patchSetId": 1
      },
      "lineNbr": 1136,
      "author": {
        "id": 7061
      },
      "writtenOn": "2016-03-28T15:14:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fcab02ee_60f71a79",
      "revId": "ab20e38024626deaddf216082a0bf4d6c0e9cb03",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcab02ee_80c5e608",
        "filename": "src/cmd/compile/internal/ssa/regalloc.go",
        "patchSetId": 1
      },
      "lineNbr": 1140,
      "author": {
        "id": 5200
      },
      "writtenOn": "2016-03-24T22:56:53Z",
      "side": 1,
      "message": "s/_/whichExit/, that way you don\u0027t need the decl above or the ++ below.",
      "revId": "ab20e38024626deaddf216082a0bf4d6c0e9cb03",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "518159c7_f6caa069",
        "filename": "src/cmd/compile/internal/ssa/regalloc.go",
        "patchSetId": 1
      },
      "lineNbr": 1140,
      "author": {
        "id": 7061
      },
      "writtenOn": "2016-03-28T15:14:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fcab02ee_80c5e608",
      "revId": "ab20e38024626deaddf216082a0bf4d6c0e9cb03",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcab02ee_60a9da54",
        "filename": "src/cmd/compile/internal/ssa/regalloc.go",
        "patchSetId": 1
      },
      "lineNbr": 1142,
      "author": {
        "id": 5200
      },
      "writtenOn": "2016-03-24T22:56:53Z",
      "side": 1,
      "message": "It might be good to separate the logic of computing start-of-block live values from end-of-block live values.  It feels like you\u0027re mixing up that computation and another about exit IDs.\n\nlive :\u003d newSparseSet(...)\ns.findStartLive(b, live)\n\n(s *state) findStartLive(b *Block, live *sparseSet) {\n   live.clear()\n   live.addAllValues(s.live[b.ID].contents())\n   if b.Control !\u003d nil {...}\n   for i :\u003d len(b.Values)-1; i \u003e\u003d 0; i-- {\n      v :\u003d b.Values[i]\n      live.remove(v.ID)\n      ...\n   }\n}\nMaybe also add an index describing the input edge you\u0027re talking about, in case it matters (if you need to process phi ops).",
      "revId": "ab20e38024626deaddf216082a0bf4d6c0e9cb03",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "518159c7_96c7ac60",
        "filename": "src/cmd/compile/internal/ssa/regalloc.go",
        "patchSetId": 1
      },
      "lineNbr": 1142,
      "author": {
        "id": 7061
      },
      "writtenOn": "2016-03-28T15:14:11Z",
      "side": 1,
      "message": "I\u0027d prefer not to do this; I took at stab at it, and it got messy, partly because of the need to filter out values (! needReg) from an existing sparse set or map.  If you think this is important, say so, and I\u0027ll take an additional whack at it.",
      "parentUuid": "fcab02ee_60a9da54",
      "revId": "ab20e38024626deaddf216082a0bf4d6c0e9cb03",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c86862c_386e9594",
        "filename": "src/cmd/compile/internal/ssa/sparsemap.go",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 7061
      },
      "writtenOn": "2016-03-23T21:19:06Z",
      "side": 1,
      "message": "s/Preset/Present; \"unless there [is]\"",
      "range": {
        "startLine": 55,
        "startChar": 3,
        "endLine": 55,
        "endChar": 54
      },
      "revId": "ab20e38024626deaddf216082a0bf4d6c0e9cb03",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}