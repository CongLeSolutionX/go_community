{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8cb75145_8d0e0cab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-10T22:23:10Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d303cf542\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "303cf5425f9d170d0fa1e9bcc0cdc08696faee80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "482b3584_a40d33e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-10T22:23:10Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "ea585314_c37f9dac",
      "tag": "autogenerated:trybots~beginning",
      "revId": "303cf5425f9d170d0fa1e9bcc0cdc08696faee80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6806bfb_038f2868",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-10T22:38:33Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n* windows-amd64-longtest\n",
      "parentUuid": "8cb75145_8d0e0cab",
      "tag": "autogenerated:trybots~happy",
      "revId": "303cf5425f9d170d0fa1e9bcc0cdc08696faee80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1abe395a_d04a8aaf",
        "filename": "src/cmd/go/internal/list/list.go",
        "patchSetId": 7
      },
      "lineNbr": 771,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-11T15:50:26Z",
      "side": 1,
      "message": "s/PackagesList/PackageList/",
      "range": {
        "startLine": 771,
        "startChar": 16,
        "endLine": 771,
        "endChar": 28
      },
      "revId": "303cf5425f9d170d0fa1e9bcc0cdc08696faee80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39b62ae8_2f11a11c",
        "filename": "src/cmd/go/internal/list/list.go",
        "patchSetId": 7
      },
      "lineNbr": 771,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-11T15:50:26Z",
      "side": 1,
      "message": "What happens if there is an import-cycle error?\n\n(I guess in that case the `Error` field gets set on each package in the cycle and the `Imports` fields omit enough edges to break the cycle? Probably worth a comment either way.)",
      "range": {
        "startLine": 771,
        "startChar": 5,
        "endLine": 771,
        "endChar": 39
      },
      "revId": "303cf5425f9d170d0fa1e9bcc0cdc08696faee80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7fbbb399_eec742b8",
        "filename": "src/cmd/go/internal/list/list.go",
        "patchSetId": 7
      },
      "lineNbr": 771,
      "author": {
        "id": 10033
      },
      "writtenOn": "2023-04-11T19:00:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1abe395a_d04a8aaf",
      "range": {
        "startLine": 771,
        "startChar": 16,
        "endLine": 771,
        "endChar": 28
      },
      "revId": "303cf5425f9d170d0fa1e9bcc0cdc08696faee80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f0de35e_182004f8",
        "filename": "src/cmd/go/internal/list/list.go",
        "patchSetId": 7
      },
      "lineNbr": 771,
      "author": {
        "id": 10033
      },
      "writtenOn": "2023-04-11T19:00:36Z",
      "side": 1,
      "message": "In the case of an import cycle error, the error is only set on the first package in the cycle that\u0027s encountered. I\u0027m pretty sure (see comment) that the error is bubbled up all the packages in the cycle.",
      "parentUuid": "39b62ae8_2f11a11c",
      "range": {
        "startLine": 771,
        "startChar": 5,
        "endLine": 771,
        "endChar": 39
      },
      "revId": "303cf5425f9d170d0fa1e9bcc0cdc08696faee80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aed6cd88_587db7cb",
        "filename": "src/cmd/go/internal/list/list.go",
        "patchSetId": 7
      },
      "lineNbr": 775,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-11T15:50:26Z",
      "side": 1,
      "message": "Use the `loadPackageList` helper here? (Or is that unnecessary for some reason?)",
      "range": {
        "startLine": 775,
        "startChar": 9,
        "endLine": 775,
        "endChar": 25
      },
      "revId": "303cf5425f9d170d0fa1e9bcc0cdc08696faee80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6363c09d_24e62275",
        "filename": "src/cmd/go/internal/list/list.go",
        "patchSetId": 7
      },
      "lineNbr": 775,
      "author": {
        "id": 10033
      },
      "writtenOn": "2023-04-11T19:00:36Z",
      "side": 1,
      "message": "loadPackageList checks errors and exits nonzero on dependency packages if not -e, which is the behavior we want when running go list -deps. But doing that here would change the current behavior of go list, which is to ignore errors set on dependency packages if -deps is not set.",
      "parentUuid": "aed6cd88_587db7cb",
      "range": {
        "startLine": 775,
        "startChar": 9,
        "endLine": 775,
        "endChar": 25
      },
      "revId": "303cf5425f9d170d0fa1e9bcc0cdc08696faee80",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}