{
  "comments": [
    {
      "key": {
        "uuid": "f0417882_026f6d48",
        "filename": "src/cmd/go/internal/modfetch/proxy.go",
        "patchSetId": 15
      },
      "lineNbr": 284,
      "author": {
        "id": 5190
      },
      "writtenOn": "2019-06-25T18:36:14Z",
      "side": 1,
      "message": "This (@v/list returns version and timestamp pairs) is part of undocumented secret of proxy protocols. Should it be kept? Or should it be documented?",
      "range": {
        "startLine": 284,
        "startChar": 4,
        "endLine": 284,
        "endChar": 42
      },
      "revId": "19690053606dd14dedcf028bb37df79e3e33c003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c19755e_1489b487",
        "filename": "src/cmd/go/internal/modfetch/proxy.go",
        "patchSetId": 15
      },
      "lineNbr": 284,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-06-25T18:58:38Z",
      "side": 1,
      "message": "Good question. Certainly one of the two. üôÇ\n\nIt avoids a round-trip in the common case, so it seems worth keeping to me.\nEither way, please file an issue to discuss.",
      "parentUuid": "f0417882_026f6d48",
      "range": {
        "startLine": 284,
        "startChar": 4,
        "endLine": 284,
        "endChar": 42
      },
      "revId": "19690053606dd14dedcf028bb37df79e3e33c003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6443cce_7773847b",
        "filename": "src/cmd/go/internal/modfetch/proxy.go",
        "patchSetId": 15
      },
      "lineNbr": 286,
      "author": {
        "id": 5190
      },
      "writtenOn": "2019-06-25T18:36:14Z",
      "side": 1,
      "message": "Why is it ok to trust the timestamp embeded in this pseudo-version like version string and use it for sorting? OTOH, the actual timestamp is from the p.Stat call.",
      "range": {
        "startLine": 286,
        "startChar": 4,
        "endLine": 286,
        "endChar": 35
      },
      "revId": "19690053606dd14dedcf028bb37df79e3e33c003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b3687f9_11d27169",
        "filename": "src/cmd/go/internal/modfetch/proxy.go",
        "patchSetId": 15
      },
      "lineNbr": 286,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-06-25T18:58:38Z",
      "side": 1,
      "message": "We just added validation for pseudo-version timestamps, so if we\u0027ve extracted it we know it\u0027s correct.\n\nThere may be invalid timestamps in existing proxies (including existing module caches used as file:// proxies), but the cases in which the invalid timestamp is also ‚Äúlatest‚Äù should be rare and getting rarer (since we\u0027re hopefully no longer creating new invalid pseudo-versions).\n\nI don\u0027t think it\u0027s worth the expense of an extra Stat call to detect these errors.",
      "parentUuid": "a6443cce_7773847b",
      "range": {
        "startLine": 286,
        "startChar": 4,
        "endLine": 286,
        "endChar": 35
      },
      "revId": "19690053606dd14dedcf028bb37df79e3e33c003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c088c55b_2aacdd39",
        "filename": "src/cmd/go/internal/modfetch/proxy.go",
        "patchSetId": 15
      },
      "lineNbr": 349,
      "author": {
        "id": 5190
      },
      "writtenOn": "2019-06-25T18:36:14Z",
      "side": 1,
      "message": "This makes it to fall back to the \"@v/list\" query if the proxy does not implement the \"@latest\" endpoint. Currently, the published proxy proto spec does not specify whether the pseudo-versions can be included in @v/list, nor what @latest endpoint should report. Depending on how a proxy interprets and implements the protocol, I am afraid the go command may end up behaving differently in a subtle way.",
      "range": {
        "startLine": 349,
        "startChar": 2,
        "endLine": 349,
        "endChar": 19
      },
      "revId": "19690053606dd14dedcf028bb37df79e3e33c003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42e63312_425ea423",
        "filename": "src/cmd/go/internal/modfetch/proxy.go",
        "patchSetId": 15
      },
      "lineNbr": 349,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-06-25T18:58:38Z",
      "side": 1,
      "message": "Agreed; we should document the intended behavior for these endpoints.\n\nWe should also take care to ensure that the contents of the module cache remain valid for proxy implementations.\n\nThat sort of cleanup should probably wait for 1.14. Want to file an issue so we don\u0027t forget?",
      "parentUuid": "c088c55b_2aacdd39",
      "range": {
        "startLine": 349,
        "startChar": 2,
        "endLine": 349,
        "endChar": 19
      },
      "revId": "19690053606dd14dedcf028bb37df79e3e33c003",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}