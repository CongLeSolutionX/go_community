{
  "comments": [
    {
      "key": {
        "uuid": "d2732c54_4ac8ebdf",
        "filename": "src/net/http/transport.go",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-24T22:14:53Z",
      "side": 1,
      "message": "This isn\u0027t consistent with the build tag in the other file, which says \"js,wasm\".\n\nThis line would break GopherJS compiling net/http.\n\nMaybe you just want to GopherJS to use the other file? Or later we can, once there\u0027s a unified JS syscall interface or plan? For now let\u0027s keep GopherJS using this file, so make this:\n\n  // +build !js,wasm",
      "range": {
        "startLine": 10,
        "startChar": 10,
        "endLine": 10,
        "endChar": 13
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d73dcf9d_485b6bae",
        "filename": "src/net/http/transport.go",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T09:36:55Z",
      "side": 1,
      "message": "Ah, of course. I was using this less restrictive tag because it seemed to be the one used elsewhere to exclude the JS target. Good point!",
      "parentUuid": "d2732c54_4ac8ebdf",
      "range": {
        "startLine": 10,
        "startChar": 10,
        "endLine": 10,
        "endChar": 13
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e8f76e9_111b0734",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 6005
      },
      "writtenOn": "2018-05-24T23:00:13Z",
      "side": 1,
      "message": "Can you please rearrange the code in this file so that the RoundTrip method comes first, and streamReader, arrayReader definitions come afterwards? I think it\u0027s more readable when the higher level functionality comes first and puts the lower level helpers in context.",
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "042770ec_d32819ad",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T10:10:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e8f76e9_111b0734",
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fdf2552_10394318",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-24T22:14:53Z",
      "side": 1,
      "message": "make these both buffered of size 1, so sends don\u0027t block in orphaned goroutines.",
      "range": {
        "startLine": 34,
        "startChar": 7,
        "endLine": 36,
        "endChar": 27
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57af19b7_7c26e2da",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T21:27:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1fdf2552_10394318",
      "range": {
        "startLine": 34,
        "startChar": 7,
        "endLine": 36,
        "endChar": 27
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47918586_b697a297",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-24T22:14:53Z",
      "side": 1,
      "message": "is this guaranteed to have at least 1 arg?",
      "range": {
        "startLine": 49,
        "startChar": 33,
        "endLine": 49,
        "endChar": 48
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "172d6c87_a4de8589",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T09:36:55Z",
      "side": 1,
      "message": "This appears to return a \"TypeError\" exception at closer inspection: https://streams.spec.whatwg.org/#byob-reader-read. I will adjust this accordingly.\n\nAs for the number of arguments, the best I can find is https://www.w3.org/2001/tag/doc/promises-guide/#shorthand-reacting, which I think implies that the exception used to reject the promise will be the only parameter to the onRejected callback.",
      "parentUuid": "47918586_b697a297",
      "range": {
        "startLine": 49,
        "startChar": 33,
        "endLine": 49,
        "endChar": 48
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5390efe3_24904e56",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-24T22:14:53Z",
      "side": 1,
      "message": "end in period.",
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1226cf87_85823cfb",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T09:36:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5390efe3_24904e56",
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d895fa3_80f8b25e",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-24T22:14:53Z",
      "side": 1,
      "message": "can you also note it on r.err, adding a field to streamReader:\n\n    err error // sticky read error",
      "range": {
        "startLine": 60,
        "startChar": 2,
        "endLine": 61,
        "endChar": 16
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "898345b5_c07d9b64",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T09:36:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d895fa3_80f8b25e",
      "range": {
        "startLine": 60,
        "startChar": 2,
        "endLine": 61,
        "endChar": 16
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3aa30d8_4ab6beec",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-24T22:14:53Z",
      "side": 1,
      "message": "same comments as above",
      "range": {
        "startLine": 88,
        "startChar": 7,
        "endLine": 113,
        "endChar": 25
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ed027e0_d3058d2d",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T09:36:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e3aa30d8_4ab6beec",
      "range": {
        "startLine": 88,
        "startChar": 7,
        "endLine": 113,
        "endChar": 25
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3720fb94_f71cd993",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T21:27:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ed027e0_d3058d2d",
      "range": {
        "startLine": 88,
        "startChar": 7,
        "endLine": 113,
        "endChar": 25
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce956a6e_66ba5d79",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-24T22:14:53Z",
      "side": 1,
      "message": "this minimal definition will break any code that sets those fields explicitly:\n\nhttps://golang.org/pkg/net/http/#Transport\n\nI think we should re-use the declaration of the Transport type and only explicitly define the RoundTrip method in +build tag protected files.\n\nIn the future the wasm code could respect those knobs, or return with an error early if any options are unsupported.\n\nThat work?\n\nAdditionally, you may want to compile-in the old RoundTrip implementation into ws,asm always, so the fake network for localhost still works.\n\nThis change would preclude running a fake in-memory HTTP server on localhost and connecting to it from Go, which all the net/http tests depend on in neelance\u0027s latest CLs.\n\nYou could make rename the other RoundTrip to roundTrip and only +build protect the top-level RoundTrip methods.\n\nThen in this one, if the request.URL is 127.0.0.1 or whatever, you can just:\n\n   return t.roundTrip(req) // use fake in-memory network for tests",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 129,
        "endChar": 23
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1cd58c5_b8a4d5be",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T21:27:52Z",
      "side": 1,
      "message": "Having thought about this a little more, it\u0027s not entirely unreasonable for a user to want to make a request to the local loopback, right? Do we have some way to definitely tell the request is a test request rather than a user hosting their own WASM code?",
      "parentUuid": "ce956a6e_66ba5d79",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 129,
        "endChar": 23
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c94f1910_3e4f8139",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-24T22:14:53Z",
      "side": 1,
      "message": "you can drop the \"t \".",
      "range": {
        "startLine": 132,
        "startChar": 6,
        "endLine": 132,
        "endChar": 9
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "707f494d_8841ad92",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T21:27:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c94f1910_3e4f8139",
      "range": {
        "startLine": 132,
        "startChar": 6,
        "endLine": 132,
        "endChar": 9
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7dae756_ccfcced2",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-24T22:14:53Z",
      "side": 1,
      "message": "reference the upstream web/DOM/JS specs about this.\n\n(this has been my pet peeve for years, not having such support in browsers)",
      "range": {
        "startLine": 149,
        "startChar": 28,
        "endLine": 149,
        "endChar": 62
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "242cf855_36e41080",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T09:36:55Z",
      "side": 1,
      "message": "I\u0027m actually not sure what to reference here... googling around a bit I\u0027ve found a StackOverflow post from late 2016 attempting to use a ReadableStream in the _request_ body, and comments saying this may be supported in browsers soon. I might attempt to implement a ReadableStream struct for browsers that support it as a follow up to this, to see whether it is indeed possible or not.\n\nOtherwise I guess we have to reference https://fetch.spec.whatwg.org/#concept-body?\n\nYour thoughts?",
      "parentUuid": "b7dae756_ccfcced2",
      "range": {
        "startLine": 149,
        "startChar": 28,
        "endLine": 149,
        "endChar": 62
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0121944c_18af1339",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-27T15:24:26Z",
      "side": 1,
      "message": "I had a quick go at implementing this locally and it just doesn\u0027t seem to be working even where the ReadableStream is supported (Chromium 66.0.3359.181). I think for Blink the relevant issue is https://bugs.chromium.org/p/chromium/issues/detail?id\u003d688906, but do we just want to reference the Spec (see previous comment)?",
      "parentUuid": "242cf855_36e41080",
      "range": {
        "startLine": 149,
        "startChar": 28,
        "endLine": 149,
        "endChar": 62
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abb4781d_beecea75",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-24T22:14:53Z",
      "side": 1,
      "message": "drop the \"_ \u003d\"",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 152,
        "endChar": 7
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9fb4fb5_2ea1e0f8",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T21:27:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "abb4781d_beecea75",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 152,
        "endChar": 7
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c1ecb63_3ace6bcd",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-24T22:14:53Z",
      "side": 1,
      "message": "likewise",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 6
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f456789_adfd333d",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T21:27:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c1ecb63_3ace6bcd",
      "range": {
        "startLine": 155,
        "startChar": 2,
        "endLine": 155,
        "endChar": 6
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db9d94cc_20788317",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-05-24T22:14:53Z",
      "side": 1,
      "message": "buffered",
      "range": {
        "startLine": 159,
        "startChar": 6,
        "endLine": 161,
        "endChar": 27
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "392a72d9_56001567",
        "filename": "src/net/http/transport_js.go",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 16585
      },
      "writtenOn": "2018-05-25T09:36:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db9d94cc_20788317",
      "range": {
        "startLine": 159,
        "startChar": 6,
        "endLine": 161,
        "endChar": 27
      },
      "revId": "e46264b54045d8b5faaeea26e91ef5d9bcb478c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}