{
  "comments": [
    {
      "key": {
        "uuid": "99abd4ef_72aff019",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 2
      },
      "lineNbr": 1123,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-06-15T22:42:04Z",
      "side": 1,
      "message": "This kind of repetitive code hides bugs very effectively. And it looks like there\u0027s going to be plenty more of it. And for 1.6 minux plans to rework the structure of Progs to reduce the memory footprint of the compiler, and this mass of code will make that harder.\n\nAny chance of generating this instead?\n\nOr use some Op-indexed table in which we could look up some attributes, and set up the Prog dynamically?",
      "revId": "10e53f1cf249f360e3c384dad383875f5393f893",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "594a3c43_060e4a3c",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 2
      },
      "lineNbr": 1123,
      "author": {
        "id": 5270
      },
      "writtenOn": "2015-06-15T22:58:32Z",
      "side": 1,
      "message": "I\u0027d vote for generating the Prog filling code.\nI\u0027ll put together a CL to do the generation.",
      "parentUuid": "99abd4ef_72aff019",
      "revId": "10e53f1cf249f360e3c384dad383875f5393f893",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "594a3c43_27f8a8f4",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64.rules",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-06-16T19:42:18Z",
      "side": 1,
      "message": "Yes, I think this rule can replace the Const rule above.",
      "revId": "10e53f1cf249f360e3c384dad383875f5393f893",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "594a3c43_67f2b014",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64Ops.go",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-06-16T19:42:18Z",
      "side": 1,
      "message": "extend arg0 from int32 to int64.  Same mod for the following 2 lines.",
      "range": {
        "startLine": 128,
        "startChar": 41,
        "endLine": 128,
        "endChar": 42
      },
      "revId": "10e53f1cf249f360e3c384dad383875f5393f893",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "594a3c43_27bfc81e",
        "filename": "src/cmd/compile/internal/ssa/stackalloc.go",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-06-16T19:42:18Z",
      "side": 1,
      "message": "use addOff?",
      "revId": "10e53f1cf249f360e3c384dad383875f5393f893",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}