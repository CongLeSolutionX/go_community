{
  "comments": [
    {
      "key": {
        "uuid": "6b763314_55aeb677",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T01:47:51Z",
      "side": 1,
      "message": "This still fails on my windows xp:\n\n...\n--- FAIL: TestInterfacesWindows (0.36s)\n        interface_windows_test.go:42: interface address is not contained in output of ipconfig: 127.0.0.1/0\n--- FAIL: TestInterfaceAddrsWindows (0.25s)\n        interface_windows_test.go:67: interface address is not contained in output of ipconfig: 127.0.0.1/0\nFAIL\nFAIL    net     5.094s",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_ef86f13d",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5076
      },
      "writtenOn": "2015-01-22T08:06:51Z",
      "side": 1,
      "message": "please use existing test cases in interface_test.go. now we are sure that nacl, plan9 and solaris don\u0027t support interfaces+ifi.addr, and nacl, plan9, solaris, dragonfly, netbsd and openbsd don\u0027t support ifi.multicastaddr.\n\ninstead please put test cases which require windows-specific configuration. for example, a test that tries interface identification on layer2-encap such as dot1q, layer3-encap such as ip-over-ip.",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_8f9add78",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-22T08:47:03Z",
      "side": 1,
      "message": "Currently, tests for Interfaces/InterfaceAddrs are already working on windows. The tests I added is in interface_windows_test.go. so it run just on windows. I\u0027m thinking this tests are regression test for .#5395.",
      "parentUuid": "6b763314_ef86f13d",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_352e9a80",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T01:47:51Z",
      "side": 1,
      "message": "Perhaps you can try and search for it anyway, and if not found skip some tests below. Maybe t.Log the fact that you skipped some tests for that interface.",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_55231697",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T01:47:51Z",
      "side": 1,
      "message": "Remove if not needed.",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_d51d4659",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T01:47:51Z",
      "side": 1,
      "message": "ipmask[0] contains address. Why is it called ipmask then?\n\nAlso strings.Contains(output, ipmask[0]) is too general. Surely there is ip address there somewhere. Perhaps you can find appropriate interface section in the output (with regexp and i.Name) and use correct line in that section. Same for checking netmask value below.",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_f51a425e",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 44,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T01:47:51Z",
      "side": 1,
      "message": "Well do that. That is whole point of your change. Isn\u0027t it?",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_953caeb3",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 61,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T01:47:51Z",
      "side": 1,
      "message": "All same comments in this block as in previous function.",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}