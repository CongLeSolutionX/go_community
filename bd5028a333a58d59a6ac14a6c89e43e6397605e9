{
  "comments": [
    {
      "key": {
        "uuid": "6b763314_55aeb677",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T01:47:51Z",
      "side": 1,
      "message": "This still fails on my windows xp:\n\n...\n--- FAIL: TestInterfacesWindows (0.36s)\n        interface_windows_test.go:42: interface address is not contained in output of ipconfig: 127.0.0.1/0\n--- FAIL: TestInterfaceAddrsWindows (0.25s)\n        interface_windows_test.go:67: interface address is not contained in output of ipconfig: 127.0.0.1/0\nFAIL\nFAIL    net     5.094s",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_558796f7",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-23T01:56:33Z",
      "side": 1,
      "message": "Could you please figure out what address was given, what output of ipconfig was given?",
      "parentUuid": "6b763314_55aeb677",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_401fd285",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T04:39:54Z",
      "side": 1,
      "message": "C:\\\u003eipconfig\n\nWindows IP Configuration\n\n\nEthernet adapter Local Area Connection:\n\n        Connection-specific DNS Suffix  . : sge.local\n        IP Address. . . . . . . . . . . . : 10.0.9.224\n        Subnet Mask . . . . . . . . . . . : 255.255.255.0\n        Default Gateway . . . . . . . . . : 10.0.9.254\n\nC:\\\u003e",
      "parentUuid": "6b763314_558796f7",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_ef86f13d",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5076
      },
      "writtenOn": "2015-01-22T08:06:51Z",
      "side": 1,
      "message": "please use existing test cases in interface_test.go. now we are sure that nacl, plan9 and solaris don\u0027t support interfaces+ifi.addr, and nacl, plan9, solaris, dragonfly, netbsd and openbsd don\u0027t support ifi.multicastaddr.\n\ninstead please put test cases which require windows-specific configuration. for example, a test that tries interface identification on layer2-encap such as dot1q, layer3-encap such as ip-over-ip.",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_8f9add78",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-22T08:47:03Z",
      "side": 1,
      "message": "Currently, tests for Interfaces/InterfaceAddrs are already working on windows. The tests I added is in interface_windows_test.go. so it run just on windows. I\u0027m thinking this tests are regression test for .#5395.",
      "parentUuid": "6b763314_ef86f13d",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_15b8be98",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-23T02:11:43Z",
      "side": 1,
      "message": "Ah, 127.0.0.1/0 is that. I don\u0027t get loop-back address from Interfaces() on my PC.",
      "parentUuid": "6b763314_8f9add78",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_95cbce2f",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-23T02:17:13Z",
      "side": 1,
      "message": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa366058(v\u003dvs.85).aspx#IfType\n\nIt\u0027s possible to check by IF_TYPE_SOFTWARE_LOOPBACK. But I don\u0027t know what the expected returns of Interfaces().\n\nMikio, could you please describe to me the spec of Interfaces/InterfaceAddrs?",
      "parentUuid": "6b763314_15b8be98",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_55db16f8",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5076
      },
      "writtenOn": "2015-01-23T02:29:00Z",
      "side": 1,
      "message": "the test cases in interface_test.go are old and loosely because at that time all of the first class ports didn\u0027t implement this functionality. while we are here, you can update, extend, make existing test cases more strictly; e.g., adding type-assertions to the returned values of ifi.addrs and ifi.multicastaddrs, verifying address families using by using parsecidr, parseip, to4/to16 and supportsIPv6/supportsIPv4 variable, etc.\n\nin addition, your test cases look weird. for example,\n\n\u003e ip :\u003d addr.String()\n\nwhy string? we know that addr must be IPNet.\n\n\u003e ipmask :\u003d strings.Split(ip, \"/\")\n\u003e if len(ipmask) !\u003d 2 \n\nwhat\u0027s the assumption on this test? all prefix lengths must be represented two digits?",
      "parentUuid": "6b763314_8f9add78",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_00987a4d",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-23T06:19:22Z",
      "side": 1,
      "message": "I\u0027m thinking returns 127.0.0.0/0 from net.InterfaceAddrs() is not invalid. So I\u0027ll fix tests.",
      "parentUuid": "6b763314_55db16f8",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_0005dab1",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5076
      },
      "writtenOn": "2015-01-23T07:15:14Z",
      "side": 1,
      "message": "i\u0027d recommend you not to use ipconfig, at least for testing exposed api. it\u0027s fine you want to stick to some windows-specific stuff and to write tests for it. but we need test cases for exposed api as the primary goal of this cl.",
      "parentUuid": "6b763314_00987a4d",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_80eaaa2f",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-23T09:11:25Z",
      "side": 1,
      "message": "I wonder how would be possible to test without using go. Any idea?",
      "parentUuid": "6b763314_0005dab1",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab858b8b_40982e81",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5076
      },
      "writtenOn": "2015-01-24T01:44:20Z",
      "side": 1,
      "message": "i don\u0027t understand. there\u0027s no way to concrete observation unless you are out of the measuring object. again, i\u0027d recommend you to update existing test cases in interface_test.go; run interfaces, interfaceaddrs and verify the returned values more strictly.",
      "parentUuid": "6b763314_80eaaa2f",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab858b8b_23efb4c1",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-26T01:15:03Z",
      "side": 1,
      "message": "Mikio, I suggest you propose the test change. You know that area well. Please make change that covers broken issue 5395 scenario and post it here. Hopefully mattn and me will be able to make it pass on windows. Thank you.",
      "parentUuid": "ab858b8b_40982e81",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab858b8b_86924e5f",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5076
      },
      "writtenOn": "2015-01-26T09:18:21Z",
      "side": 1,
      "message": "sent cl-3304 feel free to cherry-pick as needed.",
      "parentUuid": "ab858b8b_23efb4c1",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab858b8b_a675926c",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-26T12:27:55Z",
      "side": 1,
      "message": "Thank you! I got this just now: https://gist.github.com/f801162baf1778c40bc6",
      "parentUuid": "ab858b8b_86924e5f",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77f61b4b_e21f6857",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-27T06:02:04Z",
      "side": 1,
      "message": "Yes, it breaks on my windows too. But I suggest we skip these tests on windows in cl 3304, and then you can enable them again in this cl. Please approve cl 3304, if you agree.",
      "parentUuid": "ab858b8b_a675926c",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 26
      },
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_352e9a80",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T01:47:51Z",
      "side": 1,
      "message": "Perhaps you can try and search for it anyway, and if not found skip some tests below. Maybe t.Log the fact that you skipped some tests for that interface.",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_1576fe77",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-23T01:56:33Z",
      "side": 1,
      "message": "will do",
      "parentUuid": "6b763314_352e9a80",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_55231697",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T01:47:51Z",
      "side": 1,
      "message": "Remove if not needed.",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_357bfa5e",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-23T01:56:33Z",
      "side": 1,
      "message": "will do",
      "parentUuid": "6b763314_55231697",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_d51d4659",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T01:47:51Z",
      "side": 1,
      "message": "ipmask[0] contains address. Why is it called ipmask then?\n\nAlso strings.Contains(output, ipmask[0]) is too general. Surely there is ip address there somewhere. Perhaps you can find appropriate interface section in the output (with regexp and i.Name) and use correct line in that section. Same for checking netmask value below.",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_558076d6",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-23T01:56:33Z",
      "side": 1,
      "message": "as i said, output of ipconfig contains multi-byte characters in my locale. so can\u0027t check where the section is there.\n\nipmask is IP(and)MASK. so i named ipmask. what is good you thought?",
      "parentUuid": "6b763314_d51d4659",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_c0010231",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T04:39:54Z",
      "side": 1,
      "message": "If you not using ipconfig output, don\u0027t call it altogether. Just check that mask values are reasonable (mikio might help you here) and be done with that.\n\nBut I would find English speaking computer (our builders use English) and do what I suggested. Up to you.",
      "parentUuid": "6b763314_558076d6",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_f51a425e",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 44,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T01:47:51Z",
      "side": 1,
      "message": "Well do that. That is whole point of your change. Isn\u0027t it?",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_f597a21e",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 44,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-23T01:56:33Z",
      "side": 1,
      "message": "Because if you have two interfaces, and both has same netmask, this test can\u0027t check which netmask is matched in the output.",
      "parentUuid": "6b763314_f51a425e",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_00fcfac5",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 44,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T04:39:54Z",
      "side": 1,
      "message": "Like I said, you can separate ipconfig output into different interface related sections. Then each section will have only one mask.",
      "parentUuid": "6b763314_f597a21e",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_80a62ac5",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 44,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-23T06:19:22Z",
      "side": 1,
      "message": "To separate output into sections, it need to match interface name that get from net.Interfaces(). But net.Interfaces() is utf-8, output of ipconfig is cp932 on my environment.",
      "parentUuid": "6b763314_00fcfac5",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_953caeb3",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 61,
      "author": {
        "id": 5070
      },
      "writtenOn": "2015-01-23T01:47:51Z",
      "side": 1,
      "message": "All same comments in this block as in previous function.",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b763314_758572e5",
        "filename": "src/net/interface_windows_test.go",
        "patchSetId": 10
      },
      "lineNbr": 61,
      "author": {
        "id": 5025
      },
      "writtenOn": "2015-01-23T01:56:33Z",
      "side": 1,
      "message": "will do",
      "parentUuid": "6b763314_953caeb3",
      "revId": "bd5028a333a58d59a6ac14a6c89e43e6397605e9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}