{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "043fc93a_00c590f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-12-16T09:39:30Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "7c800860_e150a49d",
      "tag": "autogenerated:trybots~beginning",
      "revId": "0e8c87cc848ad9eb51e9aba0b192d17ffd4204a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc3e12da_77ee88a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-12-16T09:39:30Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d0e8c87cc\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "0e8c87cc848ad9eb51e9aba0b192d17ffd4204a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e38ca07f_00cfc849",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-12-16T09:51:10Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "dc3e12da_77ee88a6",
      "tag": "autogenerated:trybots~happy",
      "revId": "0e8c87cc848ad9eb51e9aba0b192d17ffd4204a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0ea66bc_c1f0e01a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-12-17T18:14:45Z",
      "side": 1,
      "message": "What\u0027s the benefit of this? It seems to make the code far less clear without a justification.",
      "revId": "0e8c87cc848ad9eb51e9aba0b192d17ffd4204a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48d9f567_9345700d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 64033
      },
      "writtenOn": "2023-12-18T13:29:28Z",
      "side": 1,
      "message": "This will reuse runtime.memequal when actually comparing slice data.\nbytealg.Equal can still indicate that the meaning here is to compare equality.",
      "parentUuid": "c0ea66bc_c1f0e01a",
      "revId": "0e8c87cc848ad9eb51e9aba0b192d17ffd4204a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "876fbedd_a4e96822",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 64033
      },
      "writtenOn": "2023-12-18T13:32:11Z",
      "side": 1,
      "message": "Less repetitive implementation code means a smaller binary size, which should be a benefit.\nSorry, just because of network problems did not include in the last reply.",
      "parentUuid": "48d9f567_9345700d",
      "revId": "0e8c87cc848ad9eb51e9aba0b192d17ffd4204a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63cd6dd4_9eecf971",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 55763
      },
      "writtenOn": "2023-12-18T15:44:47Z",
      "side": 1,
      "message": "Assuming theses changes are worthwhile (which I doubt, what is the cost of 1 function and 1 loop really ?) then you can keep eqslice and have the `unsafe` foolry inside `eqslice`, so the readability isn\u0027t compromised as much.",
      "parentUuid": "876fbedd_a4e96822",
      "revId": "0e8c87cc848ad9eb51e9aba0b192d17ffd4204a7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}