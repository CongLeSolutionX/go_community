{
  "comments": [
    {
      "key": {
        "uuid": "8158a81b_92e27aaa",
        "filename": "misc/cgo/test/issue7978.go",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 5206
      },
      "writtenOn": "2014-12-27T04:38:19Z",
      "side": 1,
      "message": "It doesn\u0027t make much sense to only test __GNUC_MINOR__.  This test will be true for 4.3, false for 5.0.  I can see that it might work OK for this specific case, but it doesn\u0027t seem like the right thing to do.  Instead of worrying about testing APPLE and ARM, I suggest something like\n\n#if defined(__clang__) || __GNUC_MAJOR__ \u003e\u003d 5 || (__GNUC_MAJOR__ \u003d\u003d 4 \u0026\u0026 __GNUC_MINOR__ \u003e 2)\n#define HAS_SYNC_FETCH_AND_ADD 1\n#else\n#define HAS_SYNC_FETCH_AND_ADD 0\n#endif\n\nHere I\u0027m assuming you are right about GCC 4.1 not having a working sync_fetch_and_add.  The extension was introduced in 4.1, so it\u0027s definitely missing in 4.0.",
      "revId": "7f2be3f3589d91adbbf650e9b6355ed783d66d9f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c14e2056_b75bf04a",
        "filename": "misc/cgo/test/issue7978.go",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 5055
      },
      "writtenOn": "2014-12-27T06:10:20Z",
      "side": 1,
      "message": "I did some investigation, and it seems the gcc on ios is 4.2.1,\nand it does support __sync_fetch_and_add, however, it couldn\u0027t\ninline the definition of that primitive, and instead calls the\nprimitive in libSystem.\n\nBut on ios, libSystem doesn\u0027t have that primitive, as clang will\nexpand the definition inline.\n\nso it\u0027s not gcc\u0027s fault. I will change the condition to require\nclang on ios.",
      "parentUuid": "8158a81b_92e27aaa",
      "revId": "7f2be3f3589d91adbbf650e9b6355ed783d66d9f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}