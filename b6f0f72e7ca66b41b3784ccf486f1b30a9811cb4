{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6ff01227_9a724803",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-11T19:13:32Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003db6f0f72e\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "b6f0f72e7ca66b41b3784ccf486f1b30a9811cb4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e46bb219_076e5cbb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-11T19:32:44Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003db6f0f72e\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "b6f0f72e7ca66b41b3784ccf486f1b30a9811cb4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04d8a567_10591cc7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-11T19:32:44Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "6ff01227_9a724803",
      "tag": "autogenerated:trybots~beginning",
      "revId": "b6f0f72e7ca66b41b3784ccf486f1b30a9811cb4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1346db57_8d8ce9a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-11T19:41:49Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "e46bb219_076e5cbb",
      "tag": "autogenerated:trybots~happy",
      "revId": "b6f0f72e7ca66b41b3784ccf486f1b30a9811cb4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "481c9275_a61ed887",
        "filename": "src/runtime/asm_wasm.s",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 63983
      },
      "writtenOn": "2023-11-05T17:40:21Z",
      "side": 1,
      "message": "I see that most platforms have runtimeÂ·abort(SB), can we define an abort for wasm as well, if possible? That would make the code more close to what we have for other arches. badmorestackg0 for example already calls abort, so it would be a matter to calling abort after badmorestackgsignal and badsystemstack",
      "revId": "b6f0f72e7ca66b41b3784ccf486f1b30a9811cb4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da58e14a_4da1218c",
        "filename": "src/runtime/asm_wasm.s",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 63983
      },
      "writtenOn": "2023-11-05T17:50:03Z",
      "side": 1,
      "message": "Actually, switchToCrashStack calls abort, but only for arches that implement the crash stack. If we plan to support crash stack on wasm that is another reason to have a abort function.",
      "parentUuid": "481c9275_a61ed887",
      "revId": "b6f0f72e7ca66b41b3784ccf486f1b30a9811cb4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}