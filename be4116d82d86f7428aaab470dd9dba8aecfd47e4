{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c4e69e72_a3307917",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-01-12T09:25:47Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dbe4116d8\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "be4116d82d86f7428aaab470dd9dba8aecfd47e4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3fb970c_0ca92ecc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-01-12T09:40:59Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "c4e69e72_a3307917",
      "tag": "autogenerated:trybots~happy",
      "revId": "be4116d82d86f7428aaab470dd9dba8aecfd47e4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e478349_c8f3a851",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-01-13T21:10:10Z",
      "side": 1,
      "message": "Thanks for the CL. I think it may be better to delay this until the CL adding the SEH support, so we can see how this is actually used. Thanks.",
      "revId": "be4116d82d86f7428aaab470dd9dba8aecfd47e4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e94d804e_c4000ffa",
        "filename": "src/runtime/symtab.go",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-01-13T21:10:10Z",
      "side": 1,
      "message": "Maybe add \"on platforms where frame pointer is generally enabled\". I think we probably don\u0027t set NOFRAME on platforms where frame pointer is not used at all.\n\nI\u0027m not sure this works on all platforms. On LR architectures NOFRAME means not only suppressing the frame pointer, but also not creating a frame and saving the LR. Not sure what matters is which, or both.",
      "revId": "be4116d82d86f7428aaab470dd9dba8aecfd47e4",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}