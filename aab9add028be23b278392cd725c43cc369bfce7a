{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8f192fcd_3638d809",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7061
      },
      "writtenOn": "2022-08-08T15:00:42Z",
      "side": 1,
      "message": "LGTM, curious if it leads to better code, or if this is just a better expression of what\u0027s actually going on.",
      "revId": "aab9add028be23b278392cd725c43cc369bfce7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38adb5a6_f9fb4d89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-08-08T15:03:22Z",
      "side": 1,
      "message": "If you prefer this, I think it is fine.\n\nPersonally I think the old rules are simpler. Each SSA Op corresponds to a specific use case, and no Select ops are needed. Also, for the case where we only need the flags, now it probably needs to allocate a register, whereas the old rule would not (the register allocator doesn\u0027t care REGTMP). On the other hand, if there are cases where both the value and the flags are needed, this may be beneficial. Up to you.",
      "revId": "aab9add028be23b278392cd725c43cc369bfce7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99775341_81c8fee0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6320
      },
      "writtenOn": "2022-08-08T15:19:28Z",
      "side": 1,
      "message": "I started on this because we\u0027ve had the TODO comment to fix this in here for a long time (added by David Chase) and I\u0027m also looking at improvements to the rules that use ANDCCconst with CMP and ISELB. I think there will be cases where both results are wanted. But I agree this makes the rules messier.\n\nIf the input operand to the ANDCCconst is not used again, I\u0027m assuming the register allocator would just reuse the input reg for output. But I didn\u0027t think about that case and will check out how much it affects anything.",
      "parentUuid": "38adb5a6_f9fb4d89",
      "revId": "aab9add028be23b278392cd725c43cc369bfce7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cdc0f7ac_22b6aae2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6320
      },
      "writtenOn": "2022-08-08T15:23:40Z",
      "side": 1,
      "message": "I added some rules with ISELB to generate better code, and I am working on some other improvements with this new op that hopefully pan out which I will do in a separate CL.",
      "parentUuid": "8f192fcd_3638d809",
      "revId": "aab9add028be23b278392cd725c43cc369bfce7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdde2274_4e1474ec",
        "filename": "src/cmd/compile/internal/ppc64/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 764,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-08-08T15:03:22Z",
      "side": 1,
      "message": "Delete?",
      "revId": "aab9add028be23b278392cd725c43cc369bfce7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8a1dd7b_476b9b49",
        "filename": "src/cmd/compile/internal/ppc64/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 764,
      "author": {
        "id": 6320
      },
      "writtenOn": "2022-08-08T15:19:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fdde2274_4e1474ec",
      "revId": "aab9add028be23b278392cd725c43cc369bfce7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a74f15c4_418e8857",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 316,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-08-08T15:03:22Z",
      "side": 1,
      "message": "Delete?",
      "revId": "aab9add028be23b278392cd725c43cc369bfce7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d2904a3_80aab4d5",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 316,
      "author": {
        "id": 6320
      },
      "writtenOn": "2022-08-08T15:19:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a74f15c4_418e8857",
      "revId": "aab9add028be23b278392cd725c43cc369bfce7a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}