{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8872fdf3_3e593b5c",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 25
      },
      "lineNbr": 25,
      "author": {
        "id": 31647
      },
      "writtenOn": "2024-05-22T13:11:17Z",
      "side": 1,
      "message": "s/or a/or",
      "range": {
        "startLine": 25,
        "startChar": 35,
        "endLine": 25,
        "endChar": 39
      },
      "revId": "2922a79036f39943cadc3c45a4a31f69a5167612",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "939cf098_7605fee2",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 25
      },
      "lineNbr": 35,
      "author": {
        "id": 31647
      },
      "writtenOn": "2024-05-22T13:11:17Z",
      "side": 1,
      "message": "Even if the shared context is nil, cycles will be avoided.\nThe context simply allows sharing instances across successive calls to Instantiate, as an optimization.",
      "range": {
        "startLine": 33,
        "startChar": 3,
        "endLine": 35,
        "endChar": 26
      },
      "revId": "2922a79036f39943cadc3c45a4a31f69a5167612",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b692d64f_5ebf99a9",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 25
      },
      "lineNbr": 40,
      "author": {
        "id": 31647
      },
      "writtenOn": "2024-05-22T13:11:17Z",
      "side": 1,
      "message": "I don\u0027t know why we don\u0027t deduplicate signatures. I can\u0027t think of a good reason.",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 77
      },
      "revId": "2922a79036f39943cadc3c45a4a31f69a5167612",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f446b84d_2f9863ca",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 25
      },
      "lineNbr": 109,
      "author": {
        "id": 31647
      },
      "writtenOn": "2024-05-22T13:11:17Z",
      "side": 1,
      "message": "I have no idea what local is, and I feel like I probably wrote this comment...\n\nHow about:\n```\n// Record the result in all contexts.\n// Prefer to re-use existing types from expanding context, if it exists, to reduce\n// the memory pinned by the Named type.\n```",
      "range": {
        "startLine": 109,
        "startChar": 48,
        "endLine": 109,
        "endChar": 64
      },
      "revId": "2922a79036f39943cadc3c45a4a31f69a5167612",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bf62ead_ef87f778",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 25
      },
      "lineNbr": 132,
      "author": {
        "id": 31647
      },
      "writtenOn": "2024-05-22T13:11:17Z",
      "side": 1,
      "message": "This assertion is not correct. We can reach an alias instance while instantiating a named type.\n\n```\ntype N[T any] struct { f A[T] }\ntype A[T any] \u003d []T\n```",
      "range": {
        "startLine": 132,
        "startChar": 2,
        "endLine": 132,
        "endChar": 54
      },
      "revId": "2922a79036f39943cadc3c45a4a31f69a5167612",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1da6e584_e8f556b3",
        "filename": "src/cmd/compile/internal/types2/instantiate.go",
        "patchSetId": 25
      },
      "lineNbr": 152,
      "author": {
        "id": 31647
      },
      "writtenOn": "2024-05-22T13:11:17Z",
      "side": 1,
      "message": "I don\u0027 think we even want to do this. Since the Alias holds type arguments, I think we want to preserve its type parameters.",
      "range": {
        "startLine": 151,
        "startChar": 2,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "2922a79036f39943cadc3c45a4a31f69a5167612",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff0996aa_3a934429",
        "filename": "src/cmd/compile/internal/types2/named.go",
        "patchSetId": 25
      },
      "lineNbr": 501,
      "author": {
        "id": 31647
      },
      "writtenOn": "2024-05-22T13:11:17Z",
      "side": 1,
      "message": "I don\u0027t think we need the clone method. It is only necessary for the special case of Signature types.",
      "range": {
        "startLine": 500,
        "startChar": 0,
        "endLine": 501,
        "endChar": 60
      },
      "revId": "2922a79036f39943cadc3c45a4a31f69a5167612",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d3355ba_b54d444d",
        "filename": "src/cmd/compile/internal/types2/subst.go",
        "patchSetId": 25
      },
      "lineNbr": 101,
      "author": {
        "id": 31647
      },
      "writtenOn": "2024-05-22T13:11:17Z",
      "side": 1,
      "message": "Yes. I believe aliases should behave like Named types.\nSo we should keep the type params, and bind type args.\nAs is, it doesn\u0027t look like type args are even being set anywhere?",
      "range": {
        "startLine": 101,
        "startChar": 3,
        "endLine": 101,
        "endChar": 43
      },
      "revId": "2922a79036f39943cadc3c45a4a31f69a5167612",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}