{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7d2fccc8_59e01382",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-07-23T01:41:55Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d8af842e8\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "8af842e88939883fc215e9655ec6243f4a23d6ac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f396d18_f1b5ddfb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 31976
      },
      "writtenOn": "2022-07-23T01:46:09Z",
      "side": 1,
      "message": "R\u003dgo1.20",
      "revId": "8af842e88939883fc215e9655ec6243f4a23d6ac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4b5920f_6cbd037c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-07-23T01:55:54Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "7d2fccc8_59e01382",
      "tag": "autogenerated:trybots~happy",
      "revId": "8af842e88939883fc215e9655ec6243f4a23d6ac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "972d8c3b_457db035",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5781
      },
      "writtenOn": "2022-07-23T11:00:20Z",
      "side": 1,
      "message": "I explicitly left those in because syscall is frozen. The 64-bit inodes change was special-cased because the code is/was also used by the runtime and had to be modified.\nBut these structs are different, similar to the now incompatible Kevent struct (runtime had always used a private type for it).",
      "revId": "8af842e88939883fc215e9655ec6243f4a23d6ac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9eb8df3_cb906ea7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 31976
      },
      "writtenOn": "2022-07-23T11:46:52Z",
      "side": 1,
      "message": "The upcoming freebsd/riscv64 port doesn\u0027t support anything earlier than FreeBSD 12 (there\u0027s no pre-12 compat code in the kernel) so these definitions do not make sense on freebsd/riscv64. We can remove these only in riscv64 code, but then the API surface would be different between archs.",
      "parentUuid": "972d8c3b_457db035",
      "revId": "8af842e88939883fc215e9655ec6243f4a23d6ac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fca517e4_cd39d842",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5781
      },
      "writtenOn": "2022-07-23T12:09:56Z",
      "side": 1,
      "message": "It\u0027s not just about freebsd/riscv64. These are stale left-over cruft even on all currently supported freebsd GOARCHes.\nBut I think it\u0027s enough to create empty structs and counterpart 0 value *Size consts just for it to compile.\nNobody is supposed to be using syscall.IfmaMsghdr for eg. anyway. IMHO it\u0027d be better getting a panic instead.",
      "parentUuid": "d9eb8df3_cb906ea7",
      "revId": "8af842e88939883fc215e9655ec6243f4a23d6ac",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}