{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ae2a460c_46908bdc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5056
      },
      "writtenOn": "2020-11-25T15:02:42Z",
      "side": 1,
      "message": "I\u0027m confused by the CL description and the comment in the code.\nIf random pages are being unmapped out from under us, lots more is going to break.\nIt must be that there are certain conditions under which unmapping happens\nand that they are limited to this one case. But then the comment and the\ncommit message should be more precise about the exact conditions under which\nunmapping happens. Can you make them more precise? The next reader will appreciate it.\n\nThanks.",
      "revId": "2e6e88218a9fa0596b857aa344442d9c9cb58e87",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d159e4c6_5fad2373",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-11-25T15:14:07Z",
      "side": 1,
      "message": "It\u0027s not random pages. I _think_ it is that when we copy a symbol\u0027s data to the mmap\u0027d output buffer, we change sym.P to point to the output buffer; later, if we need to grow the size of the file, we unmap the buffer and map a larger one; at this point sym.P still points to the old buffer, which is unmapped. I\u0027m not really sure why the resource symbol gets copied, though. Probably some PE-specific thing.",
      "parentUuid": "ae2a460c_46908bdc",
      "revId": "2e6e88218a9fa0596b857aa344442d9c9cb58e87",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}