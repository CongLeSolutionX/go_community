{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "da870590_326bf322",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-05-23T21:41:04Z",
      "side": 1,
      "message": "I think you mean CL 585019 ?",
      "range": {
        "startLine": 13,
        "startChar": 62,
        "endLine": 13,
        "endChar": 70
      },
      "revId": "c815c9b6a55fb1cd20901a29788dd460750a79a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25fce4f6_5c3c0dba",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 26451
      },
      "writtenOn": "2024-05-23T22:21:40Z",
      "side": 1,
      "message": "fixed",
      "parentUuid": "da870590_326bf322",
      "range": {
        "startLine": 13,
        "startChar": 62,
        "endLine": 13,
        "endChar": 70
      },
      "revId": "c815c9b6a55fb1cd20901a29788dd460750a79a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8211af73_58d7b536",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 26451
      },
      "writtenOn": "2024-05-23T21:34:17Z",
      "side": 1,
      "message": "Tested to fix crash in runc+go1.22+old-glibc in the least ugly way possible.\n\nPlease consider merging and backporting to Go 1.22.x.",
      "revId": "c815c9b6a55fb1cd20901a29788dd460750a79a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8c99e40_fc1b082e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-05-23T21:36:12Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dc815c9b6\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "c815c9b6a55fb1cd20901a29788dd460750a79a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a970d90_68d0d32a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-05-23T21:38:48Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003dc815c9b6\nFailed on freebsd-amd64-12_3: https://storage.googleapis.com/go-build-log/c815c9b6/freebsd-amd64-12_3_bb9c074b.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "a8c99e40_fc1b082e",
      "tag": "autogenerated:trybots~progress",
      "revId": "c815c9b6a55fb1cd20901a29788dd460750a79a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7de6c0dd_e01e6de5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-05-23T21:49:54Z",
      "side": 1,
      "message": "2 of 46 TryBots failed.\nFailed on freebsd-amd64-12_3: https://storage.googleapis.com/go-build-log/c815c9b6/freebsd-amd64-12_3_bb9c074b.log\nFailed on openbsd-amd64-72: https://storage.googleapis.com/go-build-log/c815c9b6/openbsd-amd64-72_80c97978.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "a8c99e40_fc1b082e",
      "tag": "autogenerated:trybots~failed",
      "revId": "c815c9b6a55fb1cd20901a29788dd460750a79a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3233b626_5964ca8a",
        "filename": "src/runtime/cgo/gcc_stack_unix.c",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-05-23T21:41:04Z",
      "side": 1,
      "message": "Maybe just call pthread_attr_init instead?",
      "range": {
        "startLine": 17,
        "startChar": 20,
        "endLine": 17,
        "endChar": 25
      },
      "revId": "c815c9b6a55fb1cd20901a29788dd460750a79a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25045728_2bb3249b",
        "filename": "src/runtime/cgo/gcc_stack_unix.c",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-05-23T21:41:25Z",
      "side": 1,
      "message": "Yes, please.",
      "parentUuid": "3233b626_5964ca8a",
      "range": {
        "startLine": 17,
        "startChar": 20,
        "endLine": 17,
        "endChar": 25
      },
      "revId": "c815c9b6a55fb1cd20901a29788dd460750a79a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf7afc38_a0fc4428",
        "filename": "src/runtime/cgo/gcc_stack_unix.c",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 26451
      },
      "writtenOn": "2024-05-23T21:58:50Z",
      "side": 1,
      "message": "Initially I thought so, too, but unlike other `pthread_*` functions, `pthread_getattr_np` is supposed to initialize the `attr` argument (as denoted by the `getattr` part), so, strictly speaking, pthread_attr_init is not needed.\n\nFrom the man page (https://man7.org/linux/man-pages/man3/pthread_getattr_np.3.html):\n\n\u003e The pthread_getattr_np() function initializes the thread attributes object referred to by attr \u003c...\u003e\n\nAlas, in some circumstances it doesn\u0027t do that.\n\nOTOH, pthread_attr_init won\u0027t hurt either. I\u0027m just not using it because someone will read the above man page and decide the pthread_attr_init is not needed. Well, we can add a comment...\n\nLet me know which way you prefer.",
      "parentUuid": "25045728_2bb3249b",
      "range": {
        "startLine": 17,
        "startChar": 20,
        "endLine": 17,
        "endChar": 25
      },
      "revId": "c815c9b6a55fb1cd20901a29788dd460750a79a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc56b2be_dfb6eb91",
        "filename": "src/runtime/cgo/gcc_stack_unix.c",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-05-23T22:03:31Z",
      "side": 1,
      "message": "Let\u0027s call pthread_attr_init, with a comment saying that before glibc 2.32 pthread_getattr_np did not actually call pthread_attr_init.",
      "parentUuid": "bf7afc38_a0fc4428",
      "range": {
        "startLine": 17,
        "startChar": 20,
        "endLine": 17,
        "endChar": 25
      },
      "revId": "c815c9b6a55fb1cd20901a29788dd460750a79a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e754746e_c60e6044",
        "filename": "src/runtime/cgo/gcc_stack_unix.c",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 26451
      },
      "writtenOn": "2024-05-23T22:21:40Z",
      "side": 1,
      "message": "So, I went ahead with `pthread_attr_init`, although theoretically in case of subsequent `pthread_getattr_np` it could mean \"double init\", yet practically glibc doesn\u0027t do anything fancy (like dynamic allocation) in `pthread_attr_init` (see e.g. glibc\u0027s nptl/pthread_attr_init.c, https://sourceware.org/git/?p\u003dglibc.git;a\u003dblob;f\u003dnptl/pthread_attr_init.c;hb\u003drefs/heads/release/2.39/master).\n\nAdded the comment and updated the commit message accordingly.",
      "parentUuid": "bf7afc38_a0fc4428",
      "range": {
        "startLine": 17,
        "startChar": 20,
        "endLine": 17,
        "endChar": 25
      },
      "revId": "c815c9b6a55fb1cd20901a29788dd460750a79a2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}