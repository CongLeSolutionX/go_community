{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8a230731_81144821",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-05-03T21:42:49Z",
      "side": 1,
      "message": "Very rough WIP version. Just posting for reference.",
      "revId": "0e4525b0b45d05041192f1aa406c7f3c76c3854e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6c11435_805698ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-03T21:45:21Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d0e4525b0\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "0e4525b0b45d05041192f1aa406c7f3c76c3854e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d544a50e_7d6690aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-03T21:55:43Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "f6c11435_805698ae",
      "tag": "autogenerated:trybots~happy",
      "revId": "0e4525b0b45d05041192f1aa406c7f3c76c3854e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89ec1c98_9ebaf9e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 62319
      },
      "writtenOn": "2023-05-08T16:25:38Z",
      "side": 1,
      "message": "For Michael Pratt only.",
      "revId": "0e4525b0b45d05041192f1aa406c7f3c76c3854e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2deaad3a_3692668e",
        "filename": "src/cmd/compile/internal/pgo/irgraph.go",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 62319
      },
      "writtenOn": "2023-05-08T16:25:38Z",
      "side": 1,
      "message": "Indeed. This will increase build time significantly.",
      "range": {
        "startLine": 334,
        "startChar": 10,
        "endLine": 334,
        "endChar": 83
      },
      "revId": "0e4525b0b45d05041192f1aa406c7f3c76c3854e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3f54e85_36ce35a0",
        "filename": "src/cmd/compile/internal/pgo/irgraph.go",
        "patchSetId": 1
      },
      "lineNbr": 350,
      "author": {
        "id": 62319
      },
      "writtenOn": "2023-05-08T16:25:38Z",
      "side": 1,
      "message": "Should we move this ahead of line 345? I have not looked at the cost of LinkFuncName.",
      "range": {
        "startLine": 348,
        "startChar": 3,
        "endLine": 350,
        "endChar": 4
      },
      "revId": "0e4525b0b45d05041192f1aa406c7f3c76c3854e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "235752e4_3a2dc136",
        "filename": "src/cmd/compile/internal/pgo/irgraph.go",
        "patchSetId": 1
      },
      "lineNbr": 366,
      "author": {
        "id": 62319
      },
      "writtenOn": "2023-05-08T16:25:38Z",
      "side": 1,
      "message": "Iterating over p.NodeMap is a bit tricky. I have seen duplicated edges to the same receiver with same offset but a different edge-weight. In WeightedCG construction, we accummulate these inaccuracies. \n\nThis is what also happens in CDF computation. We need to aggregate the weights. I am still cleaning up my CL.",
      "range": {
        "startLine": 366,
        "startChar": 19,
        "endLine": 366,
        "endChar": 34
      },
      "revId": "0e4525b0b45d05041192f1aa406c7f3c76c3854e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54e4e4c6_e114b07c",
        "filename": "src/cmd/compile/internal/pgo/irgraph.go",
        "patchSetId": 1
      },
      "lineNbr": 366,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-05-11T20:07:56Z",
      "side": 1,
      "message": "Can you go into more detail about this? The key to NodeMap is {Caller, Callee, CallLineOffset}. How could there be duplicate entries? Wouldn\u0027t those duplicate entries have the same key?",
      "parentUuid": "235752e4_3a2dc136",
      "range": {
        "startLine": 366,
        "startChar": 19,
        "endLine": 366,
        "endChar": 34
      },
      "revId": "0e4525b0b45d05041192f1aa406c7f3c76c3854e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d428c0a1_54a2808c",
        "filename": "src/cmd/compile/internal/pgo/irgraph.go",
        "patchSetId": 1
      },
      "lineNbr": 375,
      "author": {
        "id": 62319
      },
      "writtenOn": "2023-05-08T16:25:38Z",
      "side": 1,
      "message": "same here. Iterating over NodeMap can be expensive.",
      "range": {
        "startLine": 375,
        "startChar": 21,
        "endLine": 375,
        "endChar": 36
      },
      "revId": "0e4525b0b45d05041192f1aa406c7f3c76c3854e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ef92184_7778241b",
        "filename": "src/cmd/compile/internal/pgo/irgraph.go",
        "patchSetId": 1
      },
      "lineNbr": 535,
      "author": {
        "id": 62319
      },
      "writtenOn": "2023-05-08T16:25:38Z",
      "side": 1,
      "message": "In the next version, we should store more than one concrete receivers just in case the hottest callee does not work due to other constraints.",
      "range": {
        "startLine": 533,
        "startChar": 12,
        "endLine": 535,
        "endChar": 23
      },
      "revId": "0e4525b0b45d05041192f1aa406c7f3c76c3854e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdb65fa0_1004ffc9",
        "filename": "src/cmd/compile/internal/pgo/irgraph.go",
        "patchSetId": 1
      },
      "lineNbr": 535,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-05-11T20:02:00Z",
      "side": 1,
      "message": "The latest version actually takes a different approach: if the hottest callee is unavailable (i.e., no IR because not in the transitive deps), then we won\u0027t specialize at all.\n\nInitially, I just skipped missing callees, so I\u0027d specialize to the second-hottest callee (if available). I decided to adjust since the second-hottest could be quite cold (hottest might be 99% of weight, second hottest 1%), and thus not worth specializing.\n\nOTOH, maybe a hybrid approach is better. If #1 is 45% and #2 is 40%, then there is probably still value in specializing for #2.\n\n(I haven\u0027t done any profiling to validate which of these options is better empirically.)",
      "parentUuid": "3ef92184_7778241b",
      "range": {
        "startLine": 533,
        "startChar": 12,
        "endLine": 535,
        "endChar": 23
      },
      "revId": "0e4525b0b45d05041192f1aa406c7f3c76c3854e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}