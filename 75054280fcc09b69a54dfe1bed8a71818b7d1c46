{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8a0e4f38_a9c23605",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-07-27T13:02:52Z",
      "side": 1,
      "message": "ok, all done I think. It looks like my PR includes some linker changes that didn\u0027t make it into your final submission, but it all seems to work fine.",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42eeb1d1_b956c772",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-31T22:31:00Z",
      "side": 1,
      "message": "Could you un-skip the test disassemling in cmd/pprof/pprof_test.go https://cs.opensource.google/go/go/+/master:src/cmd/pprof/pprof_test.go;l\u003d79 ? Thanks.",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cefe8db_56c874b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-31T22:31:08Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d75054280\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c5e86b2_395ef63b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-31T22:31:08Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "76ffbd88_4f2435b4",
      "tag": "autogenerated:trybots~beginning",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa5d6df1_eac10312",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-31T22:32:52Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d75054280\nFailed on windows-amd64-2016: https://storage.googleapis.com/go-build-log/75054280/windows-amd64-2016_f52ee3a3.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "3cefe8db_56c874b6",
      "tag": "autogenerated:trybots~progress",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9819be1_d493e50c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-31T22:33:11Z",
      "side": 1,
      "message": "Thanks. All code in cmd/link should be fine, handled at tip now. I reordered some code so \"git rebase\" may be confused (this happened to my local tree).",
      "parentUuid": "8a0e4f38_a9c23605",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68efa063_9638ef7f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-31T23:07:33Z",
      "side": 1,
      "message": "5 of 47 SlowBots failed.\nFailed on windows-amd64-2016: https://storage.googleapis.com/go-build-log/75054280/windows-amd64-2016_f52ee3a3.log\nFailed on windows-386-2016: https://storage.googleapis.com/go-build-log/75054280/windows-386-2016_679db979.log\nFailed on misc-compile-windows-arm64: https://storage.googleapis.com/go-build-log/75054280/misc-compile-windows-arm64_50731d28.log\nFailed on misc-compile-windows-arm: https://storage.googleapis.com/go-build-log/75054280/misc-compile-windows-arm_cddb2dc7.log\nFailed on darwin-arm64-12: https://storage.googleapis.com/go-build-log/75054280/darwin-arm64-12_4184a6e7.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\nSlowBot builds that ran:\n* darwin-amd64-13\n* darwin-arm64-12\n",
      "parentUuid": "3cefe8db_56c874b6",
      "tag": "autogenerated:trybots~failed",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "000c164e_14bf8ffb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-08-01T20:02:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42eeb1d1_b956c772",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec95bd5e_4c52fe40",
        "filename": "src/runtime/pprof/defs_darwin.go",
        "patchSetId": 11
      },
      "lineNbr": 20,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-01T17:16:45Z",
      "side": 1,
      "message": "I think we should use vm_region_basic_info_data_64_t. That probably explains the memory corruption -- the OS writes more data beyond the struct we passed in, so it will corrupt some other data. With this, you could try without noescape.",
      "range": {
        "startLine": 20,
        "startChar": 33,
        "endLine": 20,
        "endChar": 60
      },
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d84a93a_152e1718",
        "filename": "src/runtime/pprof/defs_darwin.go",
        "patchSetId": 11
      },
      "lineNbr": 20,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-08-01T20:02:50Z",
      "side": 1,
      "message": "Thanks, this works as expected. The only difference is the offset field which is 64 bits vs 32. Using -godefs doesn\u0027t work for the 64_t version (it generates padding of [8] byte rather than an int64 for the Offset so I hand-edited to make sense.\n\nI don\u0027t have access to an amd64 machine whilst traveling so hopefully the build bots work. I did eventually figure out to build from source somewhat successfully for windows using parallels so the windows changes compile now.",
      "parentUuid": "ec95bd5e_4c52fe40",
      "range": {
        "startLine": 20,
        "startChar": 33,
        "endLine": 20,
        "endChar": 60
      },
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "772e1f85_9b5edf4c",
        "filename": "src/runtime/pprof/defs_darwin.go",
        "patchSetId": 11
      },
      "lineNbr": 20,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-01T20:43:59Z",
      "side": 1,
      "message": "Okay. The [8]byte is weird... Hand-editing is fine.\n\nOn AMD64 it produces the same [8]byte and your editing is fine. (You can get the generated file by running `GOARCH\u003damd64 go tool cgo -godefs`.)\n\nWe should put the noescape back. It should work correctly with and without noescape, but for performance noescape is better.",
      "parentUuid": "7d84a93a_152e1718",
      "range": {
        "startLine": 20,
        "startChar": 33,
        "endLine": 20,
        "endChar": 60
      },
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdf2ba2f_b0fb6f62",
        "filename": "src/runtime/pprof/defs_darwin.go",
        "patchSetId": 11
      },
      "lineNbr": 20,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-08-02T08:15:35Z",
      "side": 1,
      "message": "I tried with both the current/head go command and the released 20.x version and both behave this way. I created https://github.com/golang/go/issues/61707\n\nnoescape is back.",
      "parentUuid": "772e1f85_9b5edf4c",
      "range": {
        "startLine": 20,
        "startChar": 33,
        "endLine": 20,
        "endChar": 60
      },
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd4d13c3_e9bb5c15",
        "filename": "src/runtime/pprof/proto_windows.go",
        "patchSetId": 11
      },
      "lineNbr": 45,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-31T22:31:00Z",
      "side": 1,
      "message": "Seems the \"buildid\" result is missing.",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2ede82d_078c18da",
        "filename": "src/runtime/pprof/proto_windows.go",
        "patchSetId": 11
      },
      "lineNbr": 45,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-08-01T20:02:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd4d13c3_e9bb5c15",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63ad9a21_54df5b50",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 11
      },
      "lineNbr": 804,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-01T17:25:14Z",
      "side": 1,
      "message": "MOVL (MOVQ probably doesn\u0027t hurt, but MOVL is better). This is a 32-bit value.",
      "range": {
        "startLine": 804,
        "startChar": 1,
        "endLine": 804,
        "endChar": 5
      },
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7eb191f_517df81f",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 11
      },
      "lineNbr": 804,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-08-01T20:02:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63ad9a21_54df5b50",
      "range": {
        "startLine": 804,
        "startChar": 1,
        "endLine": 804,
        "endChar": 5
      },
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0af31816_df39d00c",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 11
      },
      "lineNbr": 804,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-01T20:43:59Z",
      "side": 1,
      "message": "Should be MOVL instead of MOVD. MOVL is the 32-bit move on x86.",
      "parentUuid": "f7eb191f_517df81f",
      "range": {
        "startLine": 804,
        "startChar": 1,
        "endLine": 804,
        "endChar": 5
      },
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a4d0bec_38d66b2b",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 11
      },
      "lineNbr": 804,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-08-02T08:15:35Z",
      "side": 1,
      "message": "Done. I couldn\u0027t find anywhere where the MOV commands are documented?",
      "parentUuid": "0af31816_df39d00c",
      "range": {
        "startLine": 804,
        "startChar": 1,
        "endLine": 804,
        "endChar": 5
      },
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54f638a9_9725a703",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 11
      },
      "lineNbr": 809,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-01T17:25:14Z",
      "side": 1,
      "message": "Same here, MOVL.",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a16a9a10_ca2b0b81",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 11
      },
      "lineNbr": 809,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-08-01T20:02:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "54f638a9_9725a703",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0bdd47d_b5d16edc",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 11
      },
      "lineNbr": 809,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-01T20:43:59Z",
      "side": 1,
      "message": "Also here, MOVL. Thanks.",
      "parentUuid": "a16a9a10_ca2b0b81",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5fa4964_28f4da8f",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 11
      },
      "lineNbr": 809,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-08-02T08:15:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0bdd47d_b5d16edc",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36eb67d6_d69640fb",
        "filename": "src/runtime/sys_darwin_arm64.s",
        "patchSetId": 11
      },
      "lineNbr": 775,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-01T17:25:14Z",
      "side": 1,
      "message": "MOVW.",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "475a2417_e07e6984",
        "filename": "src/runtime/sys_darwin_arm64.s",
        "patchSetId": 11
      },
      "lineNbr": 775,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-08-01T20:02:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36eb67d6_d69640fb",
      "revId": "75054280fcc09b69a54dfe1bed8a71818b7d1c46",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}