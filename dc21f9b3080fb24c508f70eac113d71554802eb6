{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7bb3acc0_bf4f70a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-08T01:11:00Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003ddc21f9b3",
      "tag": "autogenerated:trybots~beginning",
      "revId": "dc21f9b3080fb24c508f70eac113d71554802eb6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06681430_20562ece",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-08T01:23:52Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "7bb3acc0_bf4f70a3",
      "tag": "autogenerated:trybots~happy",
      "revId": "dc21f9b3080fb24c508f70eac113d71554802eb6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f842c746_129c7ede",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-02-08T06:09:48Z",
      "side": 1,
      "message": "I\u0027m not sure I understand why just having the high 32 bits be 0 is bad. I don\u0027t see how that leads to all 0s from fastrand. Only if all 64 bits are 0 is it bad.\nSo is this just a 1-in-2^32 problem? Or am I misunderstanding?\n\n",
      "revId": "dc21f9b3080fb24c508f70eac113d71554802eb6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dce8eda5_9dbfa0f8",
        "filename": "src/runtime/proc.go",
        "patchSetId": 1
      },
      "lineNbr": 809,
      "author": {
        "id": 7530
      },
      "writtenOn": "2022-02-08T01:37:34Z",
      "side": 1,
      "message": "Maybe an XOR with prime (sha1)? \n\nlo ^\u003d 0x67452301\nhi ^\u003d 0xEFCDAB89",
      "range": {
        "startLine": 807,
        "startChar": 0,
        "endLine": 809,
        "endChar": 2
      },
      "revId": "dc21f9b3080fb24c508f70eac113d71554802eb6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24d28973_e639bb47",
        "filename": "src/runtime/proc.go",
        "patchSetId": 1
      },
      "lineNbr": 809,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-02-08T05:08:52Z",
      "side": 1,
      "message": "In this CL I\u0027m trying to just restore the same behavior that was in 1.17, because we know that that was acceptable.  At this stage in the release I would prefer to postpone any improvements until 1.19.",
      "parentUuid": "dce8eda5_9dbfa0f8",
      "range": {
        "startLine": 807,
        "startChar": 0,
        "endLine": 809,
        "endChar": 2
      },
      "revId": "dc21f9b3080fb24c508f70eac113d71554802eb6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b236ee9_45997d04",
        "filename": "src/runtime/proc.go",
        "patchSetId": 1
      },
      "lineNbr": 810,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-02-08T06:09:48Z",
      "side": 1,
      "message": "This is the same as before for little-endian machines, but different for big-endian ones. Not sure how much that matters, but it is not obviously equivalent to 1.17.",
      "revId": "dc21f9b3080fb24c508f70eac113d71554802eb6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}