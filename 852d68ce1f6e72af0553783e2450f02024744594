{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6dfdfb5e_8b35c6a9",
        "filename": "src/math/big/rat.go",
        "patchSetId": 13
      },
      "lineNbr": 596,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-11-03T15:36:04Z",
      "side": 1,
      "message": "I agree that this is an ok condition to report but it doesn\u0027t match the specification in the issue.\nI think the specification needs to change, which requires some work on the issue, despite it being already accepted.",
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf05f271_8d2243f4",
        "filename": "src/math/big/rat.go",
        "patchSetId": 13
      },
      "lineNbr": 596,
      "author": {
        "id": 34725
      },
      "writtenOn": "2023-11-03T16:18:17Z",
      "side": 1,
      "message": "Yes, the current code doesn\u0027t match the [spec](https://github.com/golang/go/issues/50489#issuecomment-1063238319), but the [main concern](https://github.com/golang/go/issues/50489#issuecomment-1034100095) is that the big number might not fit in memory. On the contrary, there shouldn\u0027t be a concern about memory according to the current theorem, and as Russ said in the issue: `If there is some trivial computation of the non-repeated prefix and it is guaranteed to fit in int64 and it\u0027s useful, then maybe we could think about adding it. But none of those three seem to be true.`\n\nThus, I\u0027m with you on that one.",
      "parentUuid": "6dfdfb5e_8b35c6a9",
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6eb25ee_6b121844",
        "filename": "src/math/big/rat.go",
        "patchSetId": 13
      },
      "lineNbr": 596,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-11-03T18:36:58Z",
      "side": 1,
      "message": "My comment was not implying we should change the primary computation, just the meaning of the boolean.\nYour implementation reports whether the result is exact, which I believe is what it should be doing. But that is not what Russ\u0027 comment said.\nIn any case, I replied on the issue to clarify this.",
      "parentUuid": "cf05f271_8d2243f4",
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f577239_5f5d656f",
        "filename": "src/math/big/rat_test.go",
        "patchSetId": 13
      },
      "lineNbr": 760,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-11-03T15:36:04Z",
      "side": 1,
      "message": "this should be 1, true per the the comment\nhttps://github.com/golang/go/issues/50489#issuecomment-1063238319\n\n(But don\u0027t change this yet, I think the specification in the issue can be better.)",
      "range": {
        "startLine": 760,
        "startChar": 13,
        "endLine": 760,
        "endChar": 18
      },
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7979411_ef4065c5",
        "filename": "src/math/big/rat_test.go",
        "patchSetId": 13
      },
      "lineNbr": 760,
      "author": {
        "id": 34725
      },
      "writtenOn": "2023-11-03T16:18:17Z",
      "side": 1,
      "message": "See the above reply.",
      "parentUuid": "2f577239_5f5d656f",
      "range": {
        "startLine": 760,
        "startChar": 13,
        "endLine": 760,
        "endChar": 18
      },
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6875987_e9a74fba",
        "filename": "src/math/big/rat_test.go",
        "patchSetId": 13
      },
      "lineNbr": 760,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-11-03T18:36:58Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "c7979411_ef4065c5",
      "range": {
        "startLine": 760,
        "startChar": 13,
        "endLine": 760,
        "endChar": 18
      },
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3ff4198_a4b1548c",
        "filename": "src/math/big/rat_test.go",
        "patchSetId": 13
      },
      "lineNbr": 768,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-11-03T15:36:04Z",
      "side": 1,
      "message": "rather than writing a couple of negative test cases, it would be better to test all tests with positive and negative numbers",
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f273923_2b850be8",
        "filename": "src/math/big/rat_test.go",
        "patchSetId": 13
      },
      "lineNbr": 768,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-11-03T15:36:04Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 768,
        "startChar": 15,
        "endLine": 768,
        "endChar": 20
      },
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98c2dc06_d8a7be30",
        "filename": "src/math/big/rat_test.go",
        "patchSetId": 13
      },
      "lineNbr": 769,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-11-03T15:36:04Z",
      "side": 1,
      "message": "ditto",
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "faf6438f_0a7e78ae",
        "filename": "src/math/big/rat_test.go",
        "patchSetId": 13
      },
      "lineNbr": 773,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-11-03T15:36:04Z",
      "side": 1,
      "message": "ditto",
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a975e3d6_ea75f170",
        "filename": "src/math/big/rat_test.go",
        "patchSetId": 13
      },
      "lineNbr": 775,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-11-03T15:36:04Z",
      "side": 1,
      "message": "ditto",
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f37ded5_759104d9",
        "filename": "src/math/big/rat_test.go",
        "patchSetId": 13
      },
      "lineNbr": 785,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-11-03T15:36:04Z",
      "side": 1,
      "message": "This needs more code to verify correctness of test cases.\nPer https://github.com/golang/go/issues/50489#issuecomment-1063238319, if ok is false, the count must be zero.",
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f765f559_98c177fd",
        "filename": "src/math/big/rat_test.go",
        "patchSetId": 13
      },
      "lineNbr": 785,
      "author": {
        "id": 34725
      },
      "writtenOn": "2023-11-03T16:18:17Z",
      "side": 1,
      "message": "See the above reply.",
      "parentUuid": "1f37ded5_759104d9",
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46b45d8d_efec254e",
        "filename": "src/math/big/rat_test.go",
        "patchSetId": 13
      },
      "lineNbr": 785,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-11-03T18:36:58Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "f765f559_98c177fd",
      "revId": "852d68ce1f6e72af0553783e2450f02024744594",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one Code-Review+2 is required. Self review is not allowed."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "852d68ce1f6e72af0553783e2450f02024744594",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "852d68ce1f6e72af0553783e2450f02024744594",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "852d68ce1f6e72af0553783e2450f02024744594",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "LUCI-Pass",
        "description": {
          "value": "Changes on release branches must pass LUCI unless TryBot-Bypass+1 is set."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "branch:\"^refs/heads/release-branch.+\" -label:LUCI-TryBot-Result\u003dMAX"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:TryBot-Bypass\u003dMAX"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"branch:\"^refs/heads/release-branch.+\" -label:LUCI-TryBot-Result=MAX"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:LUCI-TryBot-Result=MAX"],"failingAtoms":["branch:\"^refs/heads/release-branch.+\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:TryBot-Bypass=MAX"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "852d68ce1f6e72af0553783e2450f02024744594",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Matching-Subject-Prefix",
        "description": {
          "value": "Changes on release branches must have a matching [release-branch.go1.nn] subject prefix."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "branch:\"^refs/heads/release-branch.+\" -prefixsubject:\"[release-branch\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"branch:\"^refs/heads/release-branch.+\" -prefixsubject:\"[release-branch\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:\"^refs/heads/release-branch.+\"","prefixsubject:\"[release-branch\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "852d68ce1f6e72af0553783e2450f02024744594",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Holds",
        "description": {
          "value": "Changes with a Hold+1 vote are not submittable."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "NOT label:Hold\u003d1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"NOT label:Hold=1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Hold=1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "852d68ce1f6e72af0553783e2450f02024744594",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable, unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:allow-unresolved-comments"]}
      },
      "patchSetCommitId": "852d68ce1f6e72af0553783e2450f02024744594",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Wait-Release",
        "description": {
          "value": "Changes with the hashtag wait-release cannot be submitted."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "hashtag:wait-release"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:wait-release"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:wait-release"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "852d68ce1f6e72af0553783e2450f02024744594",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "852d68ce1f6e72af0553783e2450f02024744594",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "TryBots-Pass",
        "description": {
          "value": "Changes must pass TryBots unless TryBot-Bypass+1 is set."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config -(label:LUCI-TryBot-Result\u003dMAX OR label:TryBot-Result\u003dMAX)"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:TryBot-Bypass\u003dMAX"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config -(label:LUCI-TryBot-Result=MAX OR label:TryBot-Result=MAX)"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:LUCI-TryBot-Result=MAX"],"failingAtoms":["branch:refs/meta/config","label:TryBot-Result=MAX"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:TryBot-Bypass=MAX"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "852d68ce1f6e72af0553783e2450f02024744594",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}