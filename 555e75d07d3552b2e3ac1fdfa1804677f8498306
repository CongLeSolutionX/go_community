{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2eb73266_2a6bb01f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-16T22:24:06Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d555e75d0",
      "tag": "autogenerated:trybots~beginning",
      "revId": "555e75d07d3552b2e3ac1fdfa1804677f8498306",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2e8f330_37c56b95",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-06-16T22:37:10Z",
      "side": 1,
      "message": "FWIW, rf has a git-generate tool, which lets you include\n\n```\n[git-generate]\nsome\ncommands\nto\nrun\n```\n\nin your commit message, and then running `git generate` will run the given script to re-generate the CL. It makes it easier to review refactorings because then as a reviewer you can focus on the script, and just spot check the CL body.\n\n(Russ and I also had a convention of ending the subject line of these CLs with \"[generated]\".)",
      "revId": "555e75d07d3552b2e3ac1fdfa1804677f8498306",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}