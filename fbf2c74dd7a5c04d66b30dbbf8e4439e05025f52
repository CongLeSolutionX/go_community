{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "774d217a_8c4dd87c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 60
      },
      "lineNbr": 31,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-27T16:07:21Z",
      "side": 1,
      "message": "“For #47257.”?",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3c972a7_f8cae17b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 60
      },
      "lineNbr": 31,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T17:50:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "774d217a_8c4dd87c",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94d6cf28_52b18396",
        "filename": "/COMMIT_MSG",
        "patchSetId": 60
      },
      "lineNbr": 31,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T18:49:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "774d217a_8c4dd87c",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5191a36_33bc8399",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 60
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-27T01:17:29Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003dfbf2c74d\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77d4c83c_9b289db9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 60
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-27T01:17:29Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "130c3e0f_187e8ce1",
      "tag": "autogenerated:trybots~beginning",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "880478f6_8c7f8bb7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 60
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-27T01:24:06Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003dfbf2c74d\nFailed on linux-amd64-nounified: https://storage.googleapis.com/go-build-log/fbf2c74d/linux-amd64-nounified_1f37dea5.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "b5191a36_33bc8399",
      "tag": "autogenerated:trybots~progress",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d261770_97fa19ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 60
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-10-27T01:39:34Z",
      "side": 1,
      "message": "2 of 32 SlowBots failed.\nFailed on linux-amd64-nounified: https://storage.googleapis.com/go-build-log/fbf2c74d/linux-amd64-nounified_1f37dea5.log\nFailed on linux-amd64-longtest: https://storage.googleapis.com/go-build-log/fbf2c74d/linux-amd64-longtest_986d0052.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n* windows-amd64-longtest\n",
      "parentUuid": "b5191a36_33bc8399",
      "tag": "autogenerated:trybots~failed",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bc62feb_91fe8246",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 60
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-27T15:41:54Z",
      "side": 1,
      "message": "\u003e 2 of 32 SlowBots failed.\n\u003e Failed on linux-amd64-nounified: https://storage.googleapis.com/go-build-log/fbf2c74d/linux-amd64-nounified_1f37dea5.log\n\nI think this just needs an importcfg file: it is invoking `go tool compile` and `go tool link`, and the `link` steps need to find the correct location for `runtime.a`.\n\nThe reason the failure isn\u0027t showing up on the other builders is because the test is skipped basically everywhere else:\nhttps://cs.opensource.google/go/go/+/master:src/cmd/link/link_test.go;l\u003d1096-1098;drc\u003d7ea0520234aafb47d05bb4822cb7af54c6ac7554\n\n\n\u003e Failed on linux-amd64-longtest: https://storage.googleapis.com/go-build-log/fbf2c74d/linux-amd64-longtest_986d0052.log\n\n```\n            \u003e exec /usr/bin/env bash -x test.sh\n            [stdout]\n            /workdir/go/src/internal/reflectlite/swapper.go:9:2: could not import internal/unsafeheader (open $WORK/b022/_pkg_.a: no such file or directory)\n```\n\nI don\u0027t know what\u0027s going on here. The script clearly writes that file earlier on:\n```\n            /workdir/go/pkg/tool/linux_amd64/compile -o $WORK/b022/_pkg_.a -trimpath \"$WORK/b022\u003d\u003e\" -p internal/unsafeheader -std -complete -buildid Wm1tX3WB93wey7PjIlZo/Wm1tX3WB93wey7PjIlZo -c\u003d4 -nolocalimports -importcfg $WORK/b022/importcfg -pack /workdir/go/src/internal/unsafeheader/unsafeheader.go\n            /workdir/go/pkg/tool/linux_amd64/buildid -w $WORK/b023/_pkg_.a # internal\n            cp $WORK/b023/_pkg_.a /workdir/tmp/cmd-go-test-3713553710/tmpdir2543117927/build_dash_x3670831120/tmp/cache/60/60a6e70bd8091cee031bee38b0732c4150bfbcbd878d2149ed182fa8a0a6df2f-d # internal\n            /workdir/go/pkg/tool/linux_amd64/buildid -w $WORK/b022/_pkg_.a # internal\n```",
      "parentUuid": "8d261770_97fa19ef",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de6beba4_1364aa15",
        "filename": "misc/cgo/testshared/shared_test.go",
        "patchSetId": 60
      },
      "lineNbr": 37,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-27T16:07:21Z",
      "side": 1,
      "message": "s/deternmining/determining/",
      "range": {
        "startLine": 37,
        "startChar": 90,
        "endLine": 37,
        "endChar": 102
      },
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f214950a_90514aa1",
        "filename": "misc/cgo/testshared/shared_test.go",
        "patchSetId": 60
      },
      "lineNbr": 37,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T17:50:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de6beba4_1364aa15",
      "range": {
        "startLine": 37,
        "startChar": 90,
        "endLine": 37,
        "endChar": 102
      },
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce91c944_9b723954",
        "filename": "misc/cgo/testshared/shared_test.go",
        "patchSetId": 60
      },
      "lineNbr": 37,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T18:49:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de6beba4_1364aa15",
      "range": {
        "startLine": 37,
        "startChar": 90,
        "endLine": 37,
        "endChar": 102
      },
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05285576_890e8e68",
        "filename": "misc/cgo/testshared/shared_test.go",
        "patchSetId": 60
      },
      "lineNbr": 160,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-27T16:07:21Z",
      "side": 1,
      "message": "Instead of using `mycontext.Import`, can we identify `gorootInstallDir` using `go list` after we run the `go install` step?\n\nI see the following behavior in local testing:\n\n```\n/tmp/goroot/go/src$ ../bin/go list -buildmode\u003dshared -json\u003dShlib runtime sync/atomic\n{}\n{}\n\n/tmp/goroot/go/src$ ../bin/go install -buildmode\u003dshared runtime sync/atomic\n\n/tmp/goroot/go/src$ ../bin/go list -linkshared -json\u003dShlib runtime sync/atomic\n{\n        \"Shlib\": \"/tmp/goroot/go/pkg/linux_amd64_dynlink/libruntime,sync-atomic.so\"\n}\n{\n        \"Shlib\": \"/tmp/goroot/go/pkg/linux_amd64_dynlink/libruntime,sync-atomic.so\"\n}\n```\n\nSo I think we could do:\n1. Run the `go install` at line 165.\n2. Then run `go list -linkshared -f \u0027{{.Shlib}}\u0027 runtime`.\n3. Check that the output is non-empty, and then send it through `filepath.Dir` to identify `gorootInstallDir`.\n\nAnd then we can drop the changes involving `runtimeCgoPkg`, since we shouldn\u0027t need to refer to that package explicitly.",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 160,
        "endChar": 58
      },
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d706e30_8d8e6e0b",
        "filename": "misc/cgo/testshared/shared_test.go",
        "patchSetId": 60
      },
      "lineNbr": 160,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T18:49:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "05285576_890e8e68",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 160,
        "endChar": 58
      },
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bc62166_5d26eebb",
        "filename": "src/cmd/compile/internal/importer/gcimporter.go",
        "patchSetId": 60
      },
      "lineNbr": 70,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-27T17:27:14Z",
      "side": 1,
      "message": "(nit) It looks like `id` is invariantly equal to `bp.ImportPath` at the exit from the `default` case, so maybe factor it out for clarity?\n\n```\nif bp.PkgObj \u003d\u003d \"\" {\n\t…\n\tif !ok {\n\t\tid \u003d path // …\n\t\treturn\n\t}\n} else {\n\tnoext \u003d strings.TrimSuffix(bp.PkgObj, \".a\")\n}\nid \u003d bp.ImportPath\n```",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee2e2b51_3ba603f2",
        "filename": "src/cmd/compile/internal/importer/gcimporter.go",
        "patchSetId": 60
      },
      "lineNbr": 70,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T18:49:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6bc62166_5d26eebb",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4feb6034_38380118",
        "filename": "src/cmd/go/go_test.go",
        "patchSetId": 60
      },
      "lineNbr": 1810,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-27T17:27:14Z",
      "side": 1,
      "message": "I\u0027m not convinced that a `GODEBUG` setting should be needed for this test.\n\n(Probably a non-empty `-pkgdir` setting should imply `installgoroot\u003dall` automatically?)",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9774884e_4072d3d9",
        "filename": "src/cmd/go/go_test.go",
        "patchSetId": 60
      },
      "lineNbr": 1810,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-27T18:43:34Z",
      "side": 1,
      "message": "Per out-of-band discussion: maybe change the test to check the location of `runtime/cgo` instead, and change `(*load.Package).copyBuild` to only rewrite `PkgObj` if it is non-empty?",
      "parentUuid": "4feb6034_38380118",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "109891e8_6189a189",
        "filename": "src/cmd/go/go_test.go",
        "patchSetId": 60
      },
      "lineNbr": 1810,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T20:09:32Z",
      "side": 1,
      "message": "Discussed an alternative test that uses packages that still have installed .as: net (and runtime/cgo)",
      "parentUuid": "9774884e_4072d3d9",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88e8cb2c_f348e2b0",
        "filename": "src/cmd/go/internal/work/build.go",
        "patchSetId": 60
      },
      "lineNbr": 728,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-27T17:27:14Z",
      "side": 1,
      "message": "(nit) I think this case can be folded into the new one?",
      "range": {
        "startLine": 727,
        "startChar": 0,
        "endLine": 728,
        "endChar": 50
      },
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d8d4625_bd06415d",
        "filename": "src/cmd/go/internal/work/build.go",
        "patchSetId": 60
      },
      "lineNbr": 728,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T18:49:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88e8cb2c_f348e2b0",
      "range": {
        "startLine": 727,
        "startChar": 0,
        "endLine": 728,
        "endChar": 50
      },
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f6c7735_c90feacb",
        "filename": "src/cmd/go/internal/work/build.go",
        "patchSetId": 60
      },
      "lineNbr": 744,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-27T17:27:14Z",
      "side": 1,
      "message": "Conceptually I think this belongs with the two `p.Name !\u003d \"main\"` cases above. Come to think of it, we *do* want to ensure that packages named `main` in `GOROOT/src` have install targets!\n\nSo, probably:\n```\ncase p.Name !\u003d \"main\" \u0026\u0026 p.Standard \u0026\u0026 !buildinternal.NeedsInstalledDotA(p.ImportPath):\n```",
      "range": {
        "startLine": 742,
        "startChar": 0,
        "endLine": 744,
        "endChar": 33
      },
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9494b25_191969e6",
        "filename": "src/cmd/go/internal/work/build.go",
        "patchSetId": 60
      },
      "lineNbr": 744,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T18:49:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f6c7735_c90feacb",
      "range": {
        "startLine": 742,
        "startChar": 0,
        "endLine": 744,
        "endChar": 33
      },
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78128cbf_c2b0e750",
        "filename": "src/go/internal/gcimporter/gcimporter.go",
        "patchSetId": 60
      },
      "lineNbr": 69,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-27T17:27:14Z",
      "side": 1,
      "message": "(same here as in cmd/compile/internal/importer)",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a8ca530_b6cce215",
        "filename": "src/go/internal/gcimporter/gcimporter.go",
        "patchSetId": 60
      },
      "lineNbr": 69,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T18:49:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78128cbf_c2b0e750",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d39345a_77c8a5e4",
        "filename": "src/go/types/example_test.go",
        "patchSetId": 60
      },
      "lineNbr": 8,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-27T17:27:14Z",
      "side": 1,
      "message": "(nit) The existing condition looks increasingly imprecise: we have builders for `linux/arm`, `darwin/arm64`, and `windows/arm64` that all have perfectly fine access to compiled packages, and we have configurations for `ios/amd64` and `android/amd64` to support emulators that probably shouldn\u0027t have export data in the test environment.\n\nProbably this should explicitly exclude only the mobile platforms:\n\n```\n//go:build !android \u0026\u0026 !ios \u0026\u0026 !js\n```",
      "range": {
        "startLine": 8,
        "startChar": 11,
        "endLine": 8,
        "endChar": 25
      },
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd43c742_8567abe1",
        "filename": "src/go/types/example_test.go",
        "patchSetId": 60
      },
      "lineNbr": 8,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T18:49:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d39345a_77c8a5e4",
      "range": {
        "startLine": 8,
        "startChar": 11,
        "endLine": 8,
        "endChar": 25
      },
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c5dc154_2c28c7ad",
        "filename": "src/internal/buildinternal/needs_install.go",
        "patchSetId": 60
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-27T17:27:14Z",
      "side": 1,
      "message": "add copyright header",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a17c259_11c39e19",
        "filename": "src/internal/buildinternal/needs_install.go",
        "patchSetId": 60
      },
      "lineNbr": 0,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T18:49:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c5dc154_2c28c7ad",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30cbfb87_3c2af378",
        "filename": "src/internal/buildinternal/needs_install.go",
        "patchSetId": 60
      },
      "lineNbr": 5,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-27T17:27:14Z",
      "side": 1,
      "message": "Push this to the caller side? (It\u0027s not clear to me why this needs to be a package variable.)\n\n```\nif buildinternal.NeedsInstalledDotA(path) ||\n\tcfg.BuildBuildmode \u003d\u003d \"shared\" || cfg.BuildLinkshared {\n```",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e5363fd_24f4aaa1",
        "filename": "src/internal/buildinternal/needs_install.go",
        "patchSetId": 60
      },
      "lineNbr": 5,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T17:38:25Z",
      "side": 1,
      "message": "It\u0027s used in go/build, which doesn\u0027t have access to the cfg package.",
      "parentUuid": "30cbfb87_3c2af378",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f0d4d2d_2ecf1916",
        "filename": "src/internal/buildinternal/needs_install.go",
        "patchSetId": 60
      },
      "lineNbr": 5,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-10-27T20:09:32Z",
      "side": 1,
      "message": "We\u0027re changing how the paths to shlibs and other shared artifacts are created, discussed offline.",
      "parentUuid": "0e5363fd_24f4aaa1",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c098ee6_bf9cb6d8",
        "filename": "src/internal/buildinternal/needs_install.go",
        "patchSetId": 60
      },
      "lineNbr": 5,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-10-28T14:45:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f0d4d2d_2ecf1916",
      "revId": "fbf2c74dd7a5c04d66b30dbbf8e4439e05025f52",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}