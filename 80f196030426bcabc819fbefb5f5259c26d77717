{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dc50d804_5bb059ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-03T00:11:40Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d80f19603",
      "tag": "autogenerated:trybots~beginning",
      "revId": "80f196030426bcabc819fbefb5f5259c26d77717",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5ceac98_ee58d651",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-03T00:25:17Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "dc50d804_5bb059ff",
      "tag": "autogenerated:trybots~happy",
      "revId": "80f196030426bcabc819fbefb5f5259c26d77717",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6411ce35_66070909",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 29563
      },
      "writtenOn": "2022-03-03T19:36:47Z",
      "side": 1,
      "message": "In my experience, the most difficult part of this to get right is the error handling. I suspect we want to propagate the io.Copy and gzipWriter.Close() errors to the main thread through httpWriter.CloseWithError, but it can be tricky to close everything in the right order and check the right error types (given that Client.Do() will also try to close bodyReader).\n\nHandling all errors with log.Fatal is nice for simplicity of the example, but I\u0027ve done this incorrectly and caused a gzip.Writer panic :/",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 178,
        "endChar": 4
      },
      "revId": "80f196030426bcabc819fbefb5f5259c26d77717",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae7a3092_01933aed",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 9735
      },
      "writtenOn": "2022-03-03T21:13:42Z",
      "side": 1,
      "message": "Generally, gzip.Writer shouldn\u0027t panic. Do you have a reproduction for this?",
      "parentUuid": "6411ce35_66070909",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 178,
        "endChar": 4
      },
      "revId": "80f196030426bcabc819fbefb5f5259c26d77717",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8af74554_2a49ea17",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 29563
      },
      "writtenOn": "2022-03-03T21:46:07Z",
      "side": 1,
      "message": "See here: https://go.dev/play/p/xSyD9o5ZEI_R\n\nThis seems to be WAI based on https://github.com/golang/go/issues/18883",
      "parentUuid": "ae7a3092_01933aed",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 178,
        "endChar": 4
      },
      "revId": "80f196030426bcabc819fbefb5f5259c26d77717",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52d0c1ae_a9907da6",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 9735
      },
      "writtenOn": "2022-03-03T21:48:16Z",
      "side": 1,
      "message": "Yes, I would say that\u0027s WAI. gzip.Writer is not designed to be concurrency safe. That said, I don\u0027t understand the rationale for closing the gzip.Writer in a different goroutine as the one doing the writing.",
      "parentUuid": "8af74554_2a49ea17",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 178,
        "endChar": 4
      },
      "revId": "80f196030426bcabc819fbefb5f5259c26d77717",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}