{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a39b5cec_f0f8408e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-16T06:01:35Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dda01f52d\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "da01f52d5bb937edad3f76a0565c926b094fed60",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4648014_bd55f3b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-16T06:13:17Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "a39b5cec_f0f8408e",
      "tag": "autogenerated:trybots~happy",
      "revId": "da01f52d5bb937edad3f76a0565c926b094fed60",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32b7bc7e_b80968c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 24534
      },
      "writtenOn": "2022-08-16T06:29:37Z",
      "side": 1,
      "message": "Hi Cherry, this is the new implementation based on your suggestion. This CL doesn\u0027t contain any new instruction, just the framework, and https://go-review.googlesource.com/c/go/+/424138 is a demo of this version. If you think this version is acceptable, I\u0027ll add support for more instructions. Thanks~",
      "revId": "da01f52d5bb937edad3f76a0565c926b094fed60",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f19795f_d7c9cd11",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 24534
      },
      "writtenOn": "2022-08-22T06:05:18Z",
      "side": 1,
      "message": "Would you mind taking a look of this change, thanks.",
      "revId": "da01f52d5bb937edad3f76a0565c926b094fed60",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a26eeec5_0cd59223",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 24534
      },
      "writtenOn": "2022-10-09T04:09:25Z",
      "side": 1,
      "message": "Ping",
      "revId": "da01f52d5bb937edad3f76a0565c926b094fed60",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31356706_4afb431e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-10-27T21:53:13Z",
      "side": 1,
      "message": "The approach looks okay overall. Thanks. Will do detailed review next week.",
      "revId": "da01f52d5bb937edad3f76a0565c926b094fed60",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99f56421_6e7fcb7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 24534
      },
      "writtenOn": "2022-10-28T08:57:58Z",
      "side": 1,
      "message": "Ok, thanks~ this is a demo, https://go-review.googlesource.com/c/go/+/424138",
      "parentUuid": "31356706_4afb431e",
      "revId": "da01f52d5bb937edad3f76a0565c926b094fed60",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13c06cf1_12d1a9db",
        "filename": "src/cmd/internal/obj/arm64/args.go",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-10-27T21:53:13Z",
      "side": 1,
      "message": "So this is mostly generated but will be manually maintained in the future?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 9,
        "endChar": 70
      },
      "revId": "da01f52d5bb937edad3f76a0565c926b094fed60",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5f082f7_e6ae71df",
        "filename": "src/cmd/internal/obj/arm64/args.go",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 24534
      },
      "writtenOn": "2022-10-28T08:57:58Z",
      "side": 1,
      "message": "Yes. But this file basically requires no maintenance effort or extremely low maintenance effort except for the first time it is created. Because the instruction format will not change, there is usually no reason to change the types describing the instruction format.\n\nWe will write a script to parse the Arm instruction document to get this file, and hope we can maintain this file by maintaining this script. But to be honest, there is no fixed format for arm\u0027s instruction documentation or machine readable document, so this script is not expected to be very simple and elegant. So my idea is to update this script for big instruction versions like armv8, neon, sve etc. while allowing manual modification for small versions, such as armv8.1, armv8.2.\n\nThe current file is also generated by a script, but it seems that the script has been lost. But we obviously haven\u0027t updated this file, so I believe there won\u0027t be too much maintenance here.",
      "parentUuid": "13c06cf1_12d1a9db",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 9,
        "endChar": 70
      },
      "revId": "da01f52d5bb937edad3f76a0565c926b094fed60",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "104bc571_29ff6183",
        "filename": "src/cmd/internal/obj/arm64/encoding.go",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-10-27T21:53:13Z",
      "side": 1,
      "message": "If I understand correctly, when we add more instructions we\u0027ll add more encoding functions here? Could we do some table-based generation? Or they all will be manually added?",
      "revId": "da01f52d5bb937edad3f76a0565c926b094fed60",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53f30e5c_48022d28",
        "filename": "src/cmd/internal/obj/arm64/encoding.go",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 24534
      },
      "writtenOn": "2022-10-28T08:57:58Z",
      "side": 1,
      "message": "For some simple types, we can automatically generate encoding functions, but not easy to do for those complex. As I said before, writing a generator function by hand can be more complicated than writing an encoding function. So I actually prefer hand-write the encoding functions, and the maintenance effort is the same.\n\nWe can think of this function as the current asmout function, which will be the main place we need to modify when adding a new instructions later. But it\u0027s definitely much simpler than asmout.\n\nAnd usually we only need to write the encoding function for a type once.",
      "parentUuid": "104bc571_29ff6183",
      "revId": "da01f52d5bb937edad3f76a0565c926b094fed60",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}