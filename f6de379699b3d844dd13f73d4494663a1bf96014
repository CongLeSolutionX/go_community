{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "db12c715_e83e0263",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-24T15:30:49Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003df6de3796\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "f6de379699b3d844dd13f73d4494663a1bf96014",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9e6e31c_a842d3e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-08-24T15:42:36Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "db12c715_e83e0263",
      "tag": "autogenerated:trybots~happy",
      "revId": "f6de379699b3d844dd13f73d4494663a1bf96014",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e29cbe1_4b1dd3e0",
        "filename": "src/cmd/compile/internal/types2/unify.go",
        "patchSetId": 7
      },
      "lineNbr": 408,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-08-24T17:47:30Z",
      "side": 1,
      "message": "inexact",
      "range": {
        "startLine": 408,
        "startChar": 25,
        "endLine": 408,
        "endChar": 32
      },
      "revId": "f6de379699b3d844dd13f73d4494663a1bf96014",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f2d164c_3025ea95",
        "filename": "src/cmd/compile/internal/types2/unify.go",
        "patchSetId": 7
      },
      "lineNbr": 421,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-08-24T17:47:30Z",
      "side": 1,
      "message": "There is still order dependence in this CL.\n\nObserve that the following code is accepted.\n```\ntype A chan int\ntype B chan int\ntype C \u003d chan\u003c- int\n\nfunc F[T any](x, y, z T) {}\n\nfunc main() {\n\tvar a A\n\tvar b B\n\tvar c C\n\tF(c, a, b)\n}\n```\n\nBut change the arguments to `F` to `(a, b, c)`, and it fails. Coincidentally, changing C to `type C \u003d chan int` also fails, because the undirectional channel no longer prevents inferring the named types.\n\nI believe the condition should be `if yd || yn \u0026\u0026 !xd`, in order to have no order dependence (directionality always wins over namedness), but that will change the outcome of successful inference in some cases.",
      "range": {
        "startLine": 421,
        "startChar": 8,
        "endLine": 421,
        "endChar": 37
      },
      "revId": "f6de379699b3d844dd13f73d4494663a1bf96014",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}