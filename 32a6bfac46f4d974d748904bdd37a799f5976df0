{
  "comments": [
    {
      "key": {
        "uuid": "14f3f500_1b51f98a",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1108,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-19T16:12:58Z",
      "side": 1,
      "message": "I thought we decided this was unnecessary?",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a10d141_36584194",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1115,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-19T16:12:58Z",
      "side": 1,
      "message": "Add a comment for what R10 now holds.",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17a00a81_c7cbdac9",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1115,
      "author": {
        "id": 13015
      },
      "writtenOn": "2017-10-19T16:55:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4a10d141_36584194",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a197716_8e094a9e",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1125,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-19T16:12:58Z",
      "side": 1,
      "message": "This label needs a better name because you are also using it for 64 byte aligned data.",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a58815f_435c2e32",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1125,
      "author": {
        "id": 13015
      },
      "writtenOn": "2017-10-19T16:55:01Z",
      "side": 1,
      "message": "No. 64-byte alignment starts at preloop.",
      "parentUuid": "5a197716_8e094a9e",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e6eeac3_da7ea173",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1125,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-25T19:51:35Z",
      "side": 1,
      "message": "Isn\u0027t this code checking for 64 byte alignment and then branching to qw_align if it has that alignment?",
      "parentUuid": "3a58815f_435c2e32",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9719d96_bb9a779f",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1125,
      "author": {
        "id": 13015
      },
      "writtenOn": "2017-11-06T19:59:02Z",
      "side": 1,
      "message": "Yes, but it will skip to preloop just after, because it\u0027s already 64-byte aligned. The only reason to branch there is to set up the required auxiliary data in V0, V1 and V10. I\u0027ll clarify in the comments.",
      "parentUuid": "0e6eeac3_da7ea173",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "906853f0_4dd03bec",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1157,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-19T16:12:58Z",
      "side": 1,
      "message": "Does it help to move this up?",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b32fb9f_d5ba5164",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1157,
      "author": {
        "id": 13015
      },
      "writtenOn": "2017-10-19T16:55:01Z",
      "side": 1,
      "message": "Yes. This is a 5-cycle latency instruction.",
      "parentUuid": "906853f0_4dd03bec",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a35b8a1b_5c175a89",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1166,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-19T16:12:58Z",
      "side": 1,
      "message": "More detail on what you mean, such as quad word aligned but not 64 byte aligned.",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34dc7c6d_aba0368d",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1166,
      "author": {
        "id": 13015
      },
      "writtenOn": "2017-10-19T16:55:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a35b8a1b_5c175a89",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "288d5d00_bd41e8d4",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1205,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-19T16:12:58Z",
      "side": 1,
      "message": "iteration",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ff9be0e_26ca37ee",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1205,
      "author": {
        "id": 13015
      },
      "writtenOn": "2017-10-19T16:55:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "288d5d00_bd41e8d4",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acd4cb7b_620944fd",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1207,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-19T16:12:58Z",
      "side": 1,
      "message": "I see the value in loading 4 quad words at a time, but what is the value in compressing the result that just needs to be uncompressed later? Can\u0027t you just do the VCMPEQUBCC for each V reg like you do above?",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8e1946d_cfd11925",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1207,
      "author": {
        "id": 13015
      },
      "writtenOn": "2017-10-19T16:55:01Z",
      "side": 1,
      "message": "This is the most efficient approach for the loop. Each vcmpequb. changes cr6, so it would require one branch instruction per compare.",
      "parentUuid": "acd4cb7b_620944fd",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "095dd644_7426ddc2",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1305,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-19T16:12:58Z",
      "side": 1,
      "message": "Do you mean below?",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a619cd4f_72f1792a",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1305,
      "author": {
        "id": 13015
      },
      "writtenOn": "2017-10-19T16:55:01Z",
      "side": 1,
      "message": "No. Look at the code above. It\u0027s the same algorithm, but used for 4 vector registers.",
      "parentUuid": "095dd644_7426ddc2",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65036b4b_b83e57e8",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1308,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-10-19T16:12:58Z",
      "side": 1,
      "message": "Comment that the differences are due to endianness.",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b9cf453_2dfd1b54",
        "filename": "src/runtime/asm_ppc64x.s",
        "patchSetId": 1
      },
      "lineNbr": 1308,
      "author": {
        "id": 13015
      },
      "writtenOn": "2017-10-19T16:55:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "65036b4b_b83e57e8",
      "revId": "32a6bfac46f4d974d748904bdd37a799f5976df0",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}