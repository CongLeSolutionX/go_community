{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9aa46ae7_1135c957",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 53713
      },
      "writtenOn": "2021-09-08T07:36:55Z",
      "side": 1,
      "message": "I have submitted another commit according to your comments.",
      "revId": "c9fe38a9d1508888965c919d2417250f3a6da1c9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c135c89d_b7948e6c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 49447
      },
      "writtenOn": "2021-09-08T07:53:41Z",
      "side": 1,
      "message": "👍",
      "revId": "c9fe38a9d1508888965c919d2417250f3a6da1c9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23d8d12d_266094f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 53713
      },
      "writtenOn": "2021-09-10T02:55:56Z",
      "side": 1,
      "message": "I have run the benchmark with CPU\u003d1 and use benchstat to compare result before/after code change. There is no performance regression. Below is some of the result. \n\nname                                          old time/op    new time/op    delta\nMakeChan/Byte                                   59.4ns ± 0%    62.1ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMakeChan/Int                                    72.3ns ± 0%    75.0ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMakeChan/Ptr                                     144ns ± 0%     146ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMakeChan/Struct/0                               55.4ns ± 0%    56.1ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMakeChan/Struct/32                               123ns ± 0%     124ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMakeChan/Struct/40                               141ns ± 0%     143ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nChanNonblocking                                 3.83ns ± 0%    3.82ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSelectUncontended                               79.1ns ± 0%    79.4ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSelectSyncContended                              500ns ± 0%     500ns ± 0%   ~     (all equal)\nSelectAsyncContended                            79.2ns ± 0%    79.2ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSelectNonblock                                  15.6ns ± 0%    15.5ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nChanUncontended                                 4.11µs ± 0%    4.10µs ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nChanContended                                   4.13µs ± 0%    4.14µs ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nChanSync                                         182ns ± 0%     184ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nChanSyncWork                                    23.6µs ± 0%    23.5µs ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nChanProdCons0                                    190ns ± 0%     189ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nChanProdCons10                                  79.1ns ± 0%    78.7ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nChanProdCons100                                 48.8ns ± 0%    48.7ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nChanProdConsWork0                                411ns ± 0%     412ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nChanProdConsWork10                               278ns ± 0%     278ns ± 0%   ~     (all equal)\nChanProdConsWork100                              248ns ± 0%     248ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSelectProdCons                                   387ns ± 0%     387ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nChanCreation                                     102ns ± 0%     104ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nChanSem                                         41.1ns ± 0%    41.1ns ± 0%   ~     (all equal)\nChanPopular                                      306µs ± 0%     311µs ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nChanClosed                                      5.30ns ± 0%    5.27ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nCallClosure                                     1.46ns ± 0%    1.46ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nCallClosure1                                    1.45ns ± 0%    1.45ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nCallClosure2                                    20.4ns ± 0%    20.4ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nCallClosure3                                    20.3ns ± 0%    20.2ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nCallClosure4                                    20.1ns ± 0%    20.1ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nComplex128DivNormal                             4.32ns ± 0%    4.32ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nComplex128DivNisNaN                             7.29ns ± 0%    7.27ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nComplex128DivDisNaN                             7.88ns ± 0%    7.88ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nComplex128DivNisInf                             5.05ns ± 0%    5.06ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nComplex128DivDisInf                             10.9ns ± 0%    10.9ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypePtr                                      1.63ns ± 0%    1.63ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypePtr8                                     10.0ns ± 0%     9.9ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypePtr16                                    12.3ns ± 0%    12.3ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypePtr32                                    17.8ns ± 0%    17.4ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypePtr64                                    27.6ns ± 0%    27.5ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypePtr126                                   51.1ns ± 0%    50.9ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypePtr128                                   50.9ns ± 0%    49.5ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypePtrSlice                                  369ns ± 0%     366ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode1                                    5.76ns ± 0%    5.71ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode1Slice                               51.1ns ± 0%    50.7ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode8                                    12.1ns ± 0%    12.0ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode8Slice                                128ns ± 0%     128ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode64                                   30.9ns ± 0%    30.9ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode64Slice                               810ns ± 0%     807ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode64Dead                               15.5ns ± 0%    15.5ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode64DeadSlice                           732ns ± 0%     730ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode124                                  50.9ns ± 0%    50.9ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode124Slice                             1.52µs ± 0%    1.52µs ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode126                                  49.5ns ± 0%    49.5ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode126Slice                             1.51µs ± 0%    1.50µs ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode128                                  54.2ns ± 0%    54.1ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode128Slice                             1.67µs ± 0%    1.67µs ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode130                                  52.6ns ± 0%    52.6ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode130Slice                             1.64µs ± 0%    1.64µs ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode1024                                  396ns ± 0%     395ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSetTypeNode1024Slice                            12.1µs ± 0%    12.1µs ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAllocation                                      30.2µs ± 0%    30.1µs ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nReadMemStats                                    1.11µs ± 0%    1.12µs ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nScanStackNoLocals                                102ms ± 0%     101ms ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMSpanCountAlloc/bits\u003d64                         6.20ns ± 0%    6.17ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMSpanCountAlloc/bits\u003d128                        9.50ns ± 0%    9.39ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMSpanCountAlloc/bits\u003d256                        16.1ns ± 0%    16.0ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMSpanCountAlloc/bits\u003d512                        29.3ns ± 0%    29.1ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMSpanCountAlloc/bits\u003d1024                       55.6ns ± 0%    55.2ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nHash5                                           4.41ns ± 0%    4.36ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nHash16                                          3.97ns ± 0%    3.90ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nHash64                                          6.06ns ± 0%    6.01ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nHash1024                                        39.8ns ± 0%    39.4ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nHash65536                                       2.25µs ± 0%    2.23µs ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAlignedLoad                                     1.64ns ± 0%    1.63ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nUnalignedLoad                                   1.64ns ± 0%    1.63ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nEqEfaceConcrete                                 0.28ns ± 0%    0.27ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nEqIfaceConcrete                                 0.27ns ± 0%    0.27ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nNeEfaceConcrete                                 0.27ns ± 0%    0.27ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nNeIfaceConcrete                                 0.27ns ± 0%    0.27ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2EByteSized/bool                           0.89ns ± 0%    0.88ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2EByteSized/uint8                          0.89ns ± 0%    0.88ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2ESmall                                    2.18ns ± 0%    2.18ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2EUintptr                                  2.04ns ± 0%    2.04ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2ELarge                                    32.1ns ± 0%    32.1ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2ISmall                                    2.18ns ± 0%    2.18ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2IUintptr                                  2.05ns ± 0%    2.04ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2ILarge                                    32.4ns ± 0%    32.3ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvI2E                                         0.89ns ± 0%    0.88ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvI2I                                         6.32ns ± 0%    6.29ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAssertE2T                                       0.55ns ± 0%    0.55ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAssertE2TLarge                                  1.19ns ± 0%    1.18ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAssertE2I                                       5.85ns ± 0%    5.85ns ± 0%   ~     (all equal)\nAssertI2T                                       0.55ns ± 0%    0.55ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAssertI2I                                       6.34ns ± 0%    6.33ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAssertI2E                                       0.88ns ± 0%    0.88ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAssertE2E                                       0.68ns ± 0%    0.68ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAssertE2T2                                      0.68ns ± 0%    0.68ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAssertE2T2Blank                                 0.54ns ± 0%    0.54ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAssertI2E2                                      1.16ns ± 0%    1.16ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAssertI2E2Blank                                 0.54ns ± 0%    0.54ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAssertE2E2                                      0.88ns ± 0%    0.88ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nAssertE2E2Blank                                 0.54ns ± 0%    0.54ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/zero/16                             2.18ns ± 0%    2.18ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/zero/32                             2.18ns ± 0%    2.18ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/zero/64                             2.05ns ± 0%    2.04ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/zero/str                            2.19ns ± 0%    2.18ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/zero/slice                          2.33ns ± 0%    2.31ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/zero/big                             162ns ± 0%     166ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/nonzero/str                         38.6ns ± 0%    38.5ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/nonzero/slice                       41.4ns ± 0%    41.6ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/nonzero/big                          162ns ± 0%     165ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/smallint/16                         2.19ns ± 0%    2.17ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/smallint/32                         2.19ns ± 0%    2.17ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/smallint/64                         2.06ns ± 0%    2.04ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/largeint/16                         12.5ns ± 0%    12.6ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/largeint/32                         13.2ns ± 0%    13.0ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nConvT2Ezero/largeint/64                         20.7ns ± 0%    20.7ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMalloc8                                         0.55ns ± 0%    0.54ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMalloc16                                        0.34ns ± 0%    0.34ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMallocTypeInfo8                                 0.34ns ± 0%    0.34ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMallocTypeInfo16                                0.54ns ± 0%    0.54ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMallocLargeStruct                               16.9ns ± 0%    16.8ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nGoroutineSelect                                 4.78ms ± 0%    4.80ms ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nGoroutineBlocking                               4.80ms ± 0%    4.80ms ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nGoroutineForRange                               4.84ms ± 0%    4.83ms ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nGoroutineIdle                                   4.51ms ± 0%    4.43ms ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nHashStringSpeed                                 10.9ns ± 0%    11.4ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nHashBytesSpeed                                  15.8ns ± 0%    16.4ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nHashInt32Speed                                  7.34ns ± 0%    7.62ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nHashInt64Speed                                  7.39ns ± 0%    7.31ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nHashStringArraySpeed                            25.0ns ± 0%    22.9ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMegMap                                          9.73ns ± 0%    9.77ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMegOneMap                                       4.66ns ± 0%    4.65ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMegEqMap                                        77.6µs ± 0%    78.7µs ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMegEmptyMap                                     1.91ns ± 0%    1.91ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nSmallStrMap                                     9.09ns ± 0%    9.06ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapStringKeysEight_16                           9.83ns ± 0%    9.82ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapStringKeysEight_32                           8.23ns ± 0%    8.23ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapStringKeysEight_64                           8.24ns ± 0%    8.17ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapStringKeysEight_1M                           8.25ns ± 0%    8.18ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nIntMap                                          6.12ns ± 0%    6.05ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/1                                      3.29ns ± 0%    3.27ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/2                                      3.29ns ± 0%    3.26ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/3                                      3.28ns ± 0%    3.26ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/4                                      3.27ns ± 0%    3.26ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/5                                      3.27ns ± 0%    3.26ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/6                                      3.26ns ± 0%    3.26ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/7                                      3.26ns ± 0%    3.26ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/8                                      3.27ns ± 0%    3.26ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/9                                      6.05ns ± 0%    6.03ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/10                                     6.03ns ± 0%    6.03ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/11                                     6.04ns ± 0%    6.04ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/12                                     6.04ns ± 0%    6.05ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/13                                     6.03ns ± 0%    6.04ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/14                                     6.02ns ± 0%    6.03ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/15                                     6.00ns ± 0%    6.02ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapFirst/16                                     6.02ns ± 0%    6.03ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\nMapMid/1                                        3.53ns ± 0%    3.54ns ± 0%   ~     (p\u003d1.000 n\u003d1+1)\n\n",
      "revId": "c9fe38a9d1508888965c919d2417250f3a6da1c9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68467f7a_2bc5461f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 7530
      },
      "writtenOn": "2021-09-10T03:37:32Z",
      "side": 1,
      "message": "Usually we use `go test -bench\u003d. -count\u003d5` for decreasing p-value (\u003c 0.05).\nThese benchmarks only shows runtime has no regression, you might want to submit `test/bench/go1` in the root directory for overall comparison with cpu\u003d1/N and sockets\u003d2.",
      "parentUuid": "23d8d12d_266094f1",
      "revId": "c9fe38a9d1508888965c919d2417250f3a6da1c9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a6ca22f_f649d104",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 53713
      },
      "writtenOn": "2021-09-10T05:47:53Z",
      "side": 1,
      "message": "I have run the benchmark of `test/bench/go1` in the root directory for overall comparison with cpu\u003d1/N and sockets\u003d2. The command is `go test -bench\u003d. -count\u003d5 -cpu\u003d1`. Below is the result.\n\nname                   old time/op    new time/op    delta\nBinaryTree17              1.79s ± 2%     1.79s ± 1%    ~     (p\u003d0.421 n\u003d5+5)\nFannkuch11                2.15s ± 0%     2.15s ± 0%  -0.29%  (p\u003d0.016 n\u003d5+4)\nFmtFprintfEmpty          26.3ns ± 1%    26.2ns ± 0%    ~     (p\u003d0.151 n\u003d5+5)\nFmtFprintfString         46.6ns ± 0%    46.0ns ± 0%  -1.20%  (p\u003d0.008 n\u003d5+5)\nFmtFprintfInt            53.6ns ± 0%    53.5ns ± 0%  -0.16%  (p\u003d0.024 n\u003d5+5)\nFmtFprintfIntInt         84.4ns ± 0%    84.3ns ± 0%  -0.10%  (p\u003d0.024 n\u003d5+5)\nFmtFprintfPrefixedInt    96.0ns ± 0%    95.8ns ± 0%  -0.20%  (p\u003d0.008 n\u003d5+5)\nFmtFprintfFloat           138ns ± 0%     138ns ± 0%  -0.27%  (p\u003d0.016 n\u003d5+5)\nFmtManyArgs               358ns ± 0%     357ns ± 0%  -0.24%  (p\u003d0.008 n\u003d5+5)\nGobDecode                3.52ms ± 0%    3.53ms ± 1%    ~     (p\u003d1.000 n\u003d5+5)\nGobEncode                2.64ms ± 0%    2.63ms ± 0%    ~     (p\u003d0.151 n\u003d5+5)\nGzip                      151ms ± 0%     150ms ± 0%  -0.26%  (p\u003d0.032 n\u003d5+5)\nGunzip                   22.6ms ± 0%    22.5ms ± 0%    ~     (p\u003d0.056 n\u003d5+5)\nHTTPClientServer         28.5µs ± 0%    28.4µs ± 0%  -0.29%  (p\u003d0.024 n\u003d5+5)\nJSONEncode               6.21ms ± 1%    6.19ms ± 1%    ~     (p\u003d0.222 n\u003d5+5)\nJSONDecode               27.7ms ± 0%    27.6ms ± 0%    ~     (p\u003d0.151 n\u003d5+5)\nMandelbrot200            3.48ms ± 0%    3.47ms ± 0%  -0.26%  (p\u003d0.008 n\u003d5+5)\nGoParse                  2.38ms ± 1%    2.35ms ± 1%    ~     (p\u003d0.056 n\u003d5+5)\nRegexpMatchEasy0_32      43.1ns ± 0%    43.0ns ± 0%    ~     (p\u003d0.143 n\u003d5+5)\nRegexpMatchEasy0_1K       129ns ± 0%     129ns ± 0%  -0.16%  (p\u003d0.000 n\u003d5+4)\nRegexpMatchEasy1_32      38.5ns ± 1%    38.1ns ± 0%  -1.04%  (p\u003d0.008 n\u003d5+5)\nRegexpMatchEasy1_1K       196ns ± 0%     195ns ± 0%    ~     (p\u003d0.119 n\u003d5+5)\nRegexpMatchMedium_32      679ns ± 0%     678ns ± 0%    ~     (p\u003d0.167 n\u003d5+5)\nRegexpMatchMedium_1K     20.8µs ± 0%    21.5µs ± 6%    ~     (p\u003d0.690 n\u003d5+5)\nRegexpMatchHard_32       1.00µs ± 0%    1.01µs ± 0%    ~     (p\u003d0.087 n\u003d5+5)\nRegexpMatchHard_1K       30.4µs ± 0%    30.6µs ± 0%  +0.72%  (p\u003d0.008 n\u003d5+5)\nRevcomp                   311ms ± 0%     303ms ± 0%  -2.53%  (p\u003d0.016 n\u003d5+4)\nTemplate                 37.8ms ± 0%    37.7ms ± 0%    ~     (p\u003d0.310 n\u003d5+5)\nTimeParse                 163ns ± 0%     163ns ± 0%  -0.15%  (p\u003d0.000 n\u003d4+5)\nTimeFormat                208ns ± 1%     208ns ± 1%    ~     (p\u003d0.143 n\u003d5+5)\n\nname                   old speed      new speed      delta\nGobDecode               218MB/s ± 0%   218MB/s ± 1%    ~     (p\u003d1.000 n\u003d5+5)\nGobEncode               291MB/s ± 0%   292MB/s ± 0%    ~     (p\u003d0.151 n\u003d5+5)\nGzip                    129MB/s ± 0%   129MB/s ± 0%  +0.26%  (p\u003d0.024 n\u003d5+5)\nGunzip                  860MB/s ± 0%   861MB/s ± 0%    ~     (p\u003d0.056 n\u003d5+5)\nJSONEncode              312MB/s ± 1%   314MB/s ± 1%    ~     (p\u003d0.198 n\u003d5+5)\nJSONDecode             70.0MB/s ± 0%  70.2MB/s ± 0%    ~     (p\u003d0.151 n\u003d5+5)\nGoParse                24.3MB/s ± 1%  24.6MB/s ± 1%    ~     (p\u003d0.056 n\u003d5+5)\nRegexpMatchEasy0_32     743MB/s ± 0%   744MB/s ± 0%    ~     (p\u003d0.151 n\u003d5+5)\nRegexpMatchEasy0_1K    7.94GB/s ± 0%  7.95GB/s ± 0%  +0.17%  (p\u003d0.008 n\u003d5+5)\nRegexpMatchEasy1_32     832MB/s ± 1%   841MB/s ± 0%  +1.03%  (p\u003d0.008 n\u003d5+5)\nRegexpMatchEasy1_1K    5.24GB/s ± 0%  5.25GB/s ± 0%    ~     (p\u003d0.095 n\u003d5+5)\nRegexpMatchMedium_32   47.2MB/s ± 0%  47.2MB/s ± 0%    ~     (p\u003d0.143 n\u003d5+5)\nRegexpMatchMedium_1K   49.2MB/s ± 0%  47.6MB/s ± 6%    ~     (p\u003d0.651 n\u003d5+5)\nRegexpMatchHard_32     31.9MB/s ± 0%  31.8MB/s ± 0%    ~     (p\u003d0.063 n\u003d5+5)\nRegexpMatchHard_1K     33.7MB/s ± 0%  33.5MB/s ± 0%  -0.72%  (p\u003d0.008 n\u003d5+5)\nRevcomp                 818MB/s ± 0%   839MB/s ± 0%  +2.60%  (p\u003d0.016 n\u003d5+4)\nTemplate               51.3MB/s ± 0%  51.4MB/s ± 0%    ~     (p\u003d0.341 n\u003d5+5)\n",
      "revId": "c9fe38a9d1508888965c919d2417250f3a6da1c9",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}