{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e0069eaa_f1351493",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-11-20T20:13:04Z",
      "side": 1,
      "message": "Adding Damien as primary owner of the testing package.\n\nThis change looks basically fine to me. It would be nice to get it in before the freeze.",
      "revId": "b29530adfd1208a9a993bfddc50cba26adfe0cbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50fba36c_f9235f10",
        "filename": "src/cmd/internal/test2json/test2json.go",
        "patchSetId": 27
      },
      "lineNbr": 470,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-11-20T20:13:04Z",
      "side": 1,
      "message": "Do you mean to convert CR LF to just LF? In that case I think an i++ is missing. (The current code will produce two LFs.)\n\n\n\tif b \u003d\u003d \u0027\\r\u0027 \u0026\u0026 i+1 \u003c len(in) \u0026\u0026 in[i+1] \u003d\u003d \u0027\\n\u0027 {\n\t\ti++\n\t\tout \u003d append(out, in[i]) // \\n\n\t}",
      "range": {
        "startLine": 467,
        "startChar": 4,
        "endLine": 470,
        "endChar": 5
      },
      "revId": "b29530adfd1208a9a993bfddc50cba26adfe0cbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b865110_68d6c504",
        "filename": "src/cmd/internal/test2json/test2json.go",
        "patchSetId": 27
      },
      "lineNbr": 470,
      "author": {
        "id": 52633
      },
      "writtenOn": "2024-11-20T21:29:43Z",
      "side": 1,
      "message": "My goal was to preserve error messages, as in `t.Error(\"\\r\\n\")` should produce an event with CR LF. However, I forgot that ^N is inserted before LF, so the sequence coming into this method will be CR ^N LF. I tried to test it, but because normal circumstances produce CR ^N LF (if the user outputs CR), it doesn\u0027t trigger. I guess it would have to be a case like the crlf test where all the LFs were replaced with CR LF, and then the buffer happened to be split in just the right place.\n\nI set b to LF so that the succeeding if statement would still produce an event. I\u0027ll refactor it.",
      "parentUuid": "50fba36c_f9235f10",
      "range": {
        "startLine": 467,
        "startChar": 4,
        "endLine": 470,
        "endChar": 5
      },
      "revId": "b29530adfd1208a9a993bfddc50cba26adfe0cbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d4ee04b_b0d075af",
        "filename": "src/cmd/internal/test2json/test2json.go",
        "patchSetId": 27
      },
      "lineNbr": 470,
      "author": {
        "id": 52633
      },
      "writtenOn": "2024-11-20T22:02:59Z",
      "side": 1,
      "message": "I worked out a test that verifies you were correct about the bug and that your change fixes it. I am not trying to convert CR LF to LF. I don\u0027t know what circumstances would cause this scenario (short of ./pkg.test -test.v\u003dtest2json | sed \u0027s/$/\\r/g\u0027 | go tool test2json) but I\u0027m happy with this solution since it has parity between the behavior of t.Log and t.Error:\n\n- `\\x0fError\\x0e\\r\\n` (t.Error(\"Error\") with LF -\u003e CR LF) split before \\r produces an event with \"Error\" and an event with CR LF.\n- `Hello\\r\\n` (t.Log(\"Hello\") with LF -\u003e CR LF) split before \\r produces an event with \"Hello\" and an event with CR LF.",
      "parentUuid": "2b865110_68d6c504",
      "range": {
        "startLine": 467,
        "startChar": 4,
        "endLine": 470,
        "endChar": 5
      },
      "revId": "b29530adfd1208a9a993bfddc50cba26adfe0cbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c49676d_dee8cbf0",
        "filename": "src/cmd/internal/test2json/test2json.go",
        "patchSetId": 27
      },
      "lineNbr": 506,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-11-20T20:13:04Z",
      "side": 1,
      "message": "Clever!\n\nThough cleverer than necessary:\n\n    in[i+1] \u003d\u003d \u0027\\r\u0027 \u0026\u0026 in[i+2] \u003d\u003d \u0027\\n\u0027",
      "range": {
        "startLine": 506,
        "startChar": 30,
        "endLine": 506,
        "endChar": 71
      },
      "revId": "b29530adfd1208a9a993bfddc50cba26adfe0cbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b557577f_3dc09e25",
        "filename": "src/cmd/internal/test2json/test2json.go",
        "patchSetId": 27
      },
      "lineNbr": 506,
      "author": {
        "id": 52633
      },
      "writtenOn": "2024-11-20T21:29:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c49676d_dee8cbf0",
      "range": {
        "startLine": 506,
        "startChar": 30,
        "endLine": 506,
        "endChar": 71
      },
      "revId": "b29530adfd1208a9a993bfddc50cba26adfe0cbf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}