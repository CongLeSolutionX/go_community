{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "eaf43783_ebc40617",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 37
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-31T23:57:47Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d5606e8db\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36d0e54b_04869a5f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 37
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-06-01T00:00:21Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d5606e8db\nFailed on linux-arm64-aws: https://storage.googleapis.com/go-build-log/5606e8db/linux-arm64-aws_aa1d196f.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "eaf43783_ebc40617",
      "tag": "autogenerated:trybots~progress",
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ea0e2b4_94d7c4d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 37
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-06-01T00:03:04Z",
      "side": 1,
      "message": "31 of 31 TryBots failed.\nFailed on linux-arm64-aws: https://storage.googleapis.com/go-build-log/5606e8db/linux-arm64-aws_aa1d196f.log\nFailed on linux-arm-aws: https://storage.googleapis.com/go-build-log/5606e8db/linux-arm-aws_b94a8e2e.log\nFailed on misc-compile-other-2: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-other-2_08043533.log\nFailed on misc-compile-freebsd: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-freebsd_3915728a.log\nFailed on openbsd-amd64-70: https://storage.googleapis.com/go-build-log/5606e8db/openbsd-amd64-70_c1b6e2f9.log\nFailed on openbsd-amd64-68: https://storage.googleapis.com/go-build-log/5606e8db/openbsd-amd64-68_570b95bf.log\nFailed on windows-amd64-2016: https://storage.googleapis.com/go-build-log/5606e8db/windows-amd64-2016_a3e182c0.log\nFailed on freebsd-amd64-12_3: https://storage.googleapis.com/go-build-log/5606e8db/freebsd-amd64-12_3_6f46dfcb.log\nFailed on misc-compile-darwin: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-darwin_09491d1c.log\nFailed on misc-compile-ppc: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-ppc_229042ac.log\nFailed on misc-compile-netbsd: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-netbsd_90795121.log\nFailed on (x/tools) linux-amd64: https://storage.googleapis.com/go-build-log/5606e8db/linux-amd64_f70cb656.log\nFailed on misc-compile-netbsd-arm: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-netbsd-arm_83ec787a.log\nFailed on misc-compile-solaris: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-solaris_c2c8a852.log\nFailed on android-amd64-emu: https://storage.googleapis.com/go-build-log/5606e8db/android-amd64-emu_6ed33cfd.log\nFailed on misc-compile-other-1: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-other-1_c28cb918.log\nFailed on misc-compile-mipsle: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-mipsle_533a8faf.log\nFailed on misc-compile-mips: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-mips_7e76efbb.log\nFailed on misc-compile-openbsd: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-openbsd_f61dce4a.log\nFailed on js-wasm: https://storage.googleapis.com/go-build-log/5606e8db/js-wasm_21eb94a3.log\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/5606e8db/linux-amd64-race_2ce9206f.log\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/5606e8db/linux-amd64_16902306.log\nFailed on linux-amd64-nounified: https://storage.googleapis.com/go-build-log/5606e8db/linux-amd64-nounified_c8a0dd85.log\nFailed on linux-386: https://storage.googleapis.com/go-build-log/5606e8db/linux-386_b19ff3a6.log\nFailed on misc-compile-windows-arm: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-windows-arm_7dfba8f8.log\nFailed on misc-compile-plan9: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-plan9_cb819727.log\nFailed on linux-amd64-boringcrypto: https://storage.googleapis.com/go-build-log/5606e8db/linux-amd64-boringcrypto_bf3ec621.log\nFailed on misc-compile-openbsd-arm: https://storage.googleapis.com/go-build-log/5606e8db/misc-compile-openbsd-arm_2186d48a.log\nFailed on linux-amd64-unified: https://storage.googleapis.com/go-build-log/5606e8db/linux-amd64-unified_bbaf4499.log\nFailed on windows-386-2012: https://storage.googleapis.com/go-build-log/5606e8db/windows-386-2012_38fc3214.log\nFailed on windows-386-2008: https://storage.googleapis.com/go-build-log/5606e8db/windows-386-2008_199812d9.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "eaf43783_ebc40617",
      "tag": "autogenerated:trybots~failed",
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1d81b75_81e43a1f",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 22,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "(nit)\n```\nvar Enabled, _ \u003d strconv.ParseBool(os.Getenv(\"GOINDEX\"))\n```\n\n(for laxer matching)",
      "range": {
        "startLine": 22,
        "startChar": 14,
        "endLine": 22,
        "endChar": 34
      },
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf734e44_d400b61b",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 22,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-06-01T19:45:58Z",
      "side": 1,
      "message": "I\u0027m going to move this up to the next cl as per you cl comments, and will apply this change there.",
      "parentUuid": "f1d81b75_81e43a1f",
      "range": {
        "startLine": 22,
        "startChar": 14,
        "endLine": 22,
        "endChar": 34
      },
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc195a19_c740866e",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 24,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "update comment",
      "range": {
        "startLine": 24,
        "startChar": 15,
        "endLine": 24,
        "endChar": 93
      },
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8174def6_adada362",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 24,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-06-01T19:45:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc195a19_c740866e",
      "range": {
        "startLine": 24,
        "startChar": 15,
        "endLine": 24,
        "endChar": 93
      },
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e834e6e0_99b73738",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 41,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "Modules in the module cache shouldn\u0027t contain symlinks.\n(They\u0027re explicitly disallowed in the module zip files: https://cs.opensource.google/go/x/mod/+/master:zip/zip.go;l\u003d292-296;drc\u003d145421be2b2ebc85b8b2ec9594e5c4f61631500c)\n\nIf we use this function on modules outside of the module cache, I suppose we should just skip them? (That\u0027s what `search.Match.MatchPackages` does: https://github.com/golang/go/blob/8a56c7742d96c8ef8e8dcecaf3d1c0e9f022f708/src/cmd/go/internal/search/search.go#L158-L162)\n\nAnd, I suppose, an explicit import via a symlink will hit the slow path just like an explicit import through a path beginning with `_` or `.`?",
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b764d13e_efd6be84",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 41,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-06-01T19:45:58Z",
      "side": 1,
      "message": "Turned this into an email to russ. Let\u0027s skip in this cl and come back to it higher in the stack?",
      "parentUuid": "e834e6e0_99b73738",
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8865021a_61c45a7d",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 41,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T20:00:50Z",
      "side": 1,
      "message": "SGTM.",
      "parentUuid": "b764d13e_efd6be84",
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "152136f5_dbb723db",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 59,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "// directory containing package sources, relative to the module root\n?",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 59,
        "endChar": 53
      },
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a176228_8641d492",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 59,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-06-01T19:45:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "152136f5_dbb723db",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 59,
        "endChar": 53
      },
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12eda83d_0f3ed30c",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 70,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "(nit) A doc comment for this pair of functions would be helpful, especially for the empty-string edge case.",
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "114b399f_df141248",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 70,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-06-01T19:45:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12eda83d_0f3ed30c",
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49583dfd_fd8906dc",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 82,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "// This should be impossible because scanner.Error contains only strings and ints.\n\n?\n\n(Or is there a different reason?)",
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b429c7c7_699b9459",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 82,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-06-01T19:45:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "49583dfd_fd8906dc",
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1c47939_2aee3101",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 93,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "Since it\u0027s in the cache, should this error message suggest a command to clean the cache?\n\n(Or, should we thread the failure up to the caller so they can delete and recreate the index?)",
      "range": {
        "startLine": 93,
        "startChar": 59,
        "endLine": 93,
        "endChar": 92
      },
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4875415c_42db1718",
        "filename": "src/cmd/go/internal/modindex/scan.go",
        "patchSetId": 37
      },
      "lineNbr": 93,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-06-01T19:45:58Z",
      "side": 1,
      "message": "Added to error message. maybe we can take the second route higher on cl? adding a todo.",
      "parentUuid": "c1c47939_2aee3101",
      "range": {
        "startLine": 93,
        "startChar": 59,
        "endLine": 93,
        "endChar": 92
      },
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff0b82b3_9c3e5b38",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 37
      },
      "lineNbr": 15,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-06-01T04:06:23Z",
      "side": 1,
      "message": "s/endoce/encode/",
      "range": {
        "startLine": 15,
        "startChar": 3,
        "endLine": 15,
        "endChar": 15
      },
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "888f6133_58983652",
        "filename": "src/cmd/go/internal/modindex/write.go",
        "patchSetId": 37
      },
      "lineNbr": 15,
      "author": {
        "id": 10033
      },
      "writtenOn": "2022-06-01T19:45:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff0b82b3_9c3e5b38",
      "range": {
        "startLine": 15,
        "startChar": 3,
        "endLine": 15,
        "endChar": 15
      },
      "revId": "5606e8dbb5bdef52c61262ec887311566866a7ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}