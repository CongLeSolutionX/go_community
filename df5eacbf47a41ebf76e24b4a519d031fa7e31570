{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8bb5d56b_f3af6f03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-13T15:52:05Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003ddf5eacbf",
      "tag": "autogenerated:trybots~beginning",
      "revId": "df5eacbf47a41ebf76e24b4a519d031fa7e31570",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b071f40d_f820c1d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-13T16:06:07Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-386-longtest\n* linux-amd64-longtest\n* windows-amd64-longtest\n",
      "parentUuid": "8bb5d56b_f3af6f03",
      "tag": "autogenerated:trybots~happy",
      "revId": "df5eacbf47a41ebf76e24b4a519d031fa7e31570",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "960c96ba_ddb644d3",
        "filename": "src/cmd/go/internal/modload/modfile.go",
        "patchSetId": 7
      },
      "lineNbr": 369,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-10-14T20:32:38Z",
      "side": 1,
      "message": "This name is a bit awkward — the function retains absolute paths as absolute.\n\nMaybe canonicalizeReplacePath?\n\nA doc comment for this function would also be helpful.",
      "range": {
        "startLine": 369,
        "startChar": 5,
        "endLine": 369,
        "endChar": 22
      },
      "revId": "df5eacbf47a41ebf76e24b4a519d031fa7e31570",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed0326dc_c304c931",
        "filename": "src/cmd/go/internal/modload/modfile.go",
        "patchSetId": 7
      },
      "lineNbr": 369,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-10-14T20:32:38Z",
      "side": 1,
      "message": "(nit) We usually use `m` or `r` for variables of type module.Version, which makes them a bit easier to grep for.",
      "range": {
        "startLine": 369,
        "startChar": 23,
        "endLine": 369,
        "endChar": 30
      },
      "revId": "df5eacbf47a41ebf76e24b4a519d031fa7e31570",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c17b18fe_e4ea2f8b",
        "filename": "src/cmd/go/internal/modload/modfile.go",
        "patchSetId": 7
      },
      "lineNbr": 371,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-10-14T20:32:38Z",
      "side": 1,
      "message": "(nit) It might be a bit clearer do to this check before workFilePath, so that the reason we are looking up WorkFilePath is more obvious.",
      "range": {
        "startLine": 371,
        "startChar": 26,
        "endLine": 371,
        "endChar": 54
      },
      "revId": "df5eacbf47a41ebf76e24b4a519d031fa7e31570",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37c9b118_20d9bd25",
        "filename": "src/cmd/go/internal/modload/modfile.go",
        "patchSetId": 7
      },
      "lineNbr": 371,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-10-14T20:32:38Z",
      "side": 1,
      "message": "Also if version.Version !\u003d \"\"",
      "revId": "df5eacbf47a41ebf76e24b4a519d031fa7e31570",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a397a77_9cd9142b",
        "filename": "src/cmd/go/internal/modload/modfile.go",
        "patchSetId": 7
      },
      "lineNbr": 376,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-10-14T20:32:38Z",
      "side": 1,
      "message": "(not sure) Should we convert to / from slashes here?\n\n(I guess we need to pick one in case of conflicting slashiness in different modules, so we may as well pick the native filesystem...)",
      "range": {
        "startLine": 376,
        "startChar": 30,
        "endLine": 376,
        "endChar": 33
      },
      "revId": "df5eacbf47a41ebf76e24b4a519d031fa7e31570",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f61d17c_a94fed8c",
        "filename": "src/cmd/go/internal/modload/modfile.go",
        "patchSetId": 7
      },
      "lineNbr": 384,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-10-14T20:32:38Z",
      "side": 1,
      "message": "I\u0027m a little surprised that workFilePath isn\u0027t already invariantly absolute — could we establish that invariant and skip this step?\n\n(Are there other places where we use the WorkFilePath function, and if so should they be absolute or relative?)",
      "range": {
        "startLine": 378,
        "startChar": 0,
        "endLine": 384,
        "endChar": 2
      },
      "revId": "df5eacbf47a41ebf76e24b4a519d031fa7e31570",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03449d57_72a87074",
        "filename": "src/cmd/go/internal/modload/modfile.go",
        "patchSetId": 7
      },
      "lineNbr": 730,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-10-14T20:32:38Z",
      "side": 1,
      "message": "Use replaceRelativeTo here?",
      "range": {
        "startLine": 724,
        "startChar": 0,
        "endLine": 730,
        "endChar": 4
      },
      "revId": "df5eacbf47a41ebf76e24b4a519d031fa7e31570",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}