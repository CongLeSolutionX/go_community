{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6c21e1ef_eb0a0fe5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 34636
      },
      "writtenOn": "2022-02-02T23:24:37Z",
      "side": 1,
      "message": "I\u0027ve imported your proposed test revision (see below for minor change). PTAL. Thanks!",
      "revId": "d7fe14934f6b722747fc7bd8939936ee8d7ef76b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c941297_c2e8b27e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-03T03:14:05Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003dd7fe1493",
      "tag": "autogenerated:trybots~beginning",
      "revId": "d7fe14934f6b722747fc7bd8939936ee8d7ef76b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "063bd257_e71b765e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-03T03:31:22Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64-nocgo\n",
      "parentUuid": "3c941297_c2e8b27e",
      "tag": "autogenerated:trybots~happy",
      "revId": "d7fe14934f6b722747fc7bd8939936ee8d7ef76b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c33e30f_fc1c9c5c",
        "filename": "src/runtime/proc.go",
        "patchSetId": 5
      },
      "lineNbr": 1755,
      "author": {
        "id": 5167
      },
      "writtenOn": "2022-02-03T18:07:43Z",
      "side": 1,
      "message": "Out of curiosity, does this need the mp.curg !\u003d nil condition? I\u0027m fine with having it here, just want to make sure I understand.",
      "revId": "d7fe14934f6b722747fc7bd8939936ee8d7ef76b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dddeda3c_fefc9fa4",
        "filename": "src/runtime/proc.go",
        "patchSetId": 5
      },
      "lineNbr": 1755,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-02-03T19:28:07Z",
      "side": 1,
      "message": "My understanding is the the purpose of this check is to only send signals to Ms that appear to be stuck \"running\" user Gs (in a syscall), rather than those that have properly stopped per the STW (which will use the existing park wakeup).\n\nThat shouldn\u0027t be strictly necessary as far as I can tell, but it does make this change a bit more minimal I suppose.\n\n(Also worth noting that the check is racy, as the M may return from the syscall at any time and clear curg.)",
      "parentUuid": "2c33e30f_fc1c9c5c",
      "revId": "d7fe14934f6b722747fc7bd8939936ee8d7ef76b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "527946d4_29cddc3a",
        "filename": "src/runtime/proc.go",
        "patchSetId": 5
      },
      "lineNbr": 1755,
      "author": {
        "id": 34636
      },
      "writtenOn": "2022-02-03T19:31:24Z",
      "side": 1,
      "message": "If I remove it, the test continues to deadlock.\n\nWhat I noticed when I was first exploring the patch was that the deadlock thread always had a non-nil value for curg, which made sense to me if the code was blocked inside a syscall and hadn\u0027t fully parked in response to the stoptheworld this function had initiated.\n\nIn the cases where the code was held stopm()d this value was always nil.\n\n[FWIW I\u0027ve reworded some of the comments here.]",
      "parentUuid": "2c33e30f_fc1c9c5c",
      "revId": "d7fe14934f6b722747fc7bd8939936ee8d7ef76b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9f5249f_91de5b85",
        "filename": "src/runtime/proc.go",
        "patchSetId": 5
      },
      "lineNbr": 1755,
      "author": {
        "id": 34636
      },
      "writtenOn": "2022-02-03T21:38:57Z",
      "side": 1,
      "message": "Michael, do you think this race is problematic, or not? I could temporarily hold the m.mFixup.lock inside dropg() if you think that would help.",
      "parentUuid": "527946d4_29cddc3a",
      "revId": "d7fe14934f6b722747fc7bd8939936ee8d7ef76b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2311b5a7_c241309e",
        "filename": "src/runtime/proc.go",
        "patchSetId": 5
      },
      "lineNbr": 1755,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-02-03T22:03:17Z",
      "side": 1,
      "message": "I need to think about this some more and get back to you.",
      "parentUuid": "f9f5249f_91de5b85",
      "revId": "d7fe14934f6b722747fc7bd8939936ee8d7ef76b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4915375a_998ed175",
        "filename": "src/runtime/proc.go",
        "patchSetId": 5
      },
      "lineNbr": 1755,
      "author": {
        "id": 34636
      },
      "writtenOn": "2022-02-05T07:03:51Z",
      "side": 1,
      "message": "I\u0027ve been exploring this. I moved the allthreads function from proc.go into os_linux to be able to use signalM() as you suggest. I also blocked interrupts and put a lock around the code changing the m.curg linkage inside dropg().\n\nI started running the test with --test.count\u003d60000 under the debugger and it occasionally generates a panic stemming from runtime.acquirep(0x0) as called from inside stopm().\n\nIn an initial version of this patch I added an extra loop in stopm() to avoid that crash, but removed it at some point when I simplified the patch following discussion with Austin (patchset 2 -\u003e 3).\n\nMy working theory for why this loop is needed is that if there is a out of band sigPreempt aimed at an mp we think we\u0027re using the note to run the fixup on, that out of band signal will trigger the fixup and our notewakeup() will cause mPark() to return to soon.\n\nI put that checking loop back in and --test.count\u003d60000 under the debugger now works reliably.",
      "parentUuid": "2311b5a7_c241309e",
      "revId": "d7fe14934f6b722747fc7bd8939936ee8d7ef76b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fb18336_5536d685",
        "filename": "src/runtime/proc.go",
        "patchSetId": 5
      },
      "lineNbr": 1757,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-02-03T19:28:07Z",
      "side": 1,
      "message": "nit: drop \"also\". We _only_ wake them with a signal.",
      "revId": "d7fe14934f6b722747fc7bd8939936ee8d7ef76b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd1163ec_0bf1c53e",
        "filename": "src/runtime/proc.go",
        "patchSetId": 5
      },
      "lineNbr": 1757,
      "author": {
        "id": 34636
      },
      "writtenOn": "2022-02-03T21:38:57Z",
      "side": 1,
      "message": "Done\n\n[I included this in the comment update of patch set 6]",
      "parentUuid": "2fb18336_5536d685",
      "revId": "d7fe14934f6b722747fc7bd8939936ee8d7ef76b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60c4be73_14c56526",
        "filename": "src/runtime/signal_unix.go",
        "patchSetId": 5
      },
      "lineNbr": 599,
      "author": {
        "id": 5167
      },
      "writtenOn": "2022-02-03T18:07:43Z",
      "side": 1,
      "message": "This seems like an odd place to put this, since it\u0027s right in the middle of some setup code for the rest of this function. Does it have to be here, or can it be next to the other sigPreempt block below?",
      "revId": "d7fe14934f6b722747fc7bd8939936ee8d7ef76b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "557abe04_905cebf8",
        "filename": "src/runtime/signal_unix.go",
        "patchSetId": 5
      },
      "lineNbr": 599,
      "author": {
        "id": 34636
      },
      "writtenOn": "2022-02-03T19:31:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60c4be73_14c56526",
      "revId": "d7fe14934f6b722747fc7bd8939936ee8d7ef76b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}