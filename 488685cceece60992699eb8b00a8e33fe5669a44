{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "31ebff3c_bf1d2863",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5070
      },
      "writtenOn": "2024-04-23T11:59:17Z",
      "side": 1,
      "message": "We need 2 * +1 from Googlers before we can submit your CL.\n\nBut I can see your CL listed at https://go.dev/s/needs-review now.\n\nSo we will wait now.\n\nAlex",
      "revId": "488685cceece60992699eb8b00a8e33fe5669a44",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb4141e0_f9e1be97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-04-24T15:48:10Z",
      "side": 1,
      "message": "Thanks for the CL. Instead of just doing this for benchmarks, do we consider just using high precision timer for time.Now, or at least nanotime?",
      "revId": "488685cceece60992699eb8b00a8e33fe5669a44",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22a21b5f_5e0d9c71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 6785
      },
      "writtenOn": "2024-04-24T19:05:18Z",
      "side": 1,
      "message": "There was previous comment chain where I discussed the reasoning. It\u0027s mainly because I don\u0027t know answers to a bunch of questions:\n\n1. Are there systems where QPC is significantly slower? (e.g. instead of 20ns it takes 1000ns)\n2. What\u0027s the max measureable duration for QPC and do we need to fallback to \"non-monotonic measurement\" after some time? e.g. if it would measure 1 year, are there going to be any problems?\n3. Is there a reason it wasn\u0027t used from the start? Aside from compatibility with older OS versions or performance overhead of windows calls.\n4. Are there subtleties with sleeps and such.\n\nIn theory, yes, that would be a better change -- but I don\u0027t have sufficient knowledge to use QPC outside of this specific scenario.",
      "parentUuid": "eb4141e0_f9e1be97",
      "revId": "488685cceece60992699eb8b00a8e33fe5669a44",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "422fd75a_38edbb7f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5070
      },
      "writtenOn": "2024-04-26T08:05:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22a21b5f_5e0d9c71",
      "revId": "488685cceece60992699eb8b00a8e33fe5669a44",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1fcf7c57_2be87b4c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2024-04-26T13:59:40Z",
      "side": 1,
      "message": "Thanks. This is fine. Could you file an issue to discuss the possibility of using QPC in the runtime, if not already? Maybe also add a TODO mentioning that we can undo the change if the runtime has higher resolution timers? Thanks.",
      "parentUuid": "422fd75a_38edbb7f",
      "revId": "488685cceece60992699eb8b00a8e33fe5669a44",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98e52bd1_a2e19fe3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 6785
      },
      "writtenOn": "2024-04-26T14:37:04Z",
      "side": 1,
      "message": "Done and I created https://github.com/golang/go/issues/67066.",
      "parentUuid": "1fcf7c57_2be87b4c",
      "revId": "488685cceece60992699eb8b00a8e33fe5669a44",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}