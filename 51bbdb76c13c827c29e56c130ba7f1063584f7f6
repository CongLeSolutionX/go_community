{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b57212ad_3e1e0990",
        "filename": "src/runtime/panic.go",
        "patchSetId": 1
      },
      "lineNbr": 1038,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-01-26T04:27:05Z",
      "side": 1,
      "message": "Do you need to keep looking past non-open-codeded defers? I\u0027m not really familiar with defer/panic implementation details, but from the comments above, it seems like any open-coded defers that appear after a non-open-coded defer can be unlinked after that non-open-coded defer finishes?\n\nIf that\u0027s the case, can the code be shortened to something like below? This code seems to still pass tests. (Caveat: I haven\u0027t tried a full all.bash run.)\n\n```\ndeferp :\u003d \u0026gp._defer\nif !done {\n    d :\u003d *deferp\n    deferp \u003d \u0026d.link\n}\nfor {\n    d :\u003d *deferp\n    if d \u003d\u003d nil || !d.openDefer || d.started {\n        break\n    }\n    *deferp \u003d d.link\n    freedefer(d)\n}\n```",
      "range": {
        "startLine": 1037,
        "startChar": 0,
        "endLine": 1038,
        "endChar": 15
      },
      "revId": "51bbdb76c13c827c29e56c130ba7f1063584f7f6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}