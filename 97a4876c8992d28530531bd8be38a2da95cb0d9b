{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f3a3e65d_6557dbc4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-08T10:28:50Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d97a4876c\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "97a4876c8992d28530531bd8be38a2da95cb0d9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d5c0a68_f8f04a14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-08T10:28:50Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "910ed0b1_12c1ef90",
      "tag": "autogenerated:trybots~beginning",
      "revId": "97a4876c8992d28530531bd8be38a2da95cb0d9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32435dbe_7ab85c91",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-08T13:47:06Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-riscv64-unmatched\n",
      "parentUuid": "f3a3e65d_6557dbc4",
      "tag": "autogenerated:trybots~happy",
      "revId": "97a4876c8992d28530531bd8be38a2da95cb0d9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47d65ba4_ad9dc0c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-11-08T16:46:11Z",
      "side": 1,
      "message": "Looks reasonable. Thanks.",
      "revId": "97a4876c8992d28530531bd8be38a2da95cb0d9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31a3a277_c854c6f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-02-11T16:53:01Z",
      "side": 1,
      "message": "Looks good thanks, a few minor things.",
      "revId": "97a4876c8992d28530531bd8be38a2da95cb0d9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cc80954_a4aa8ccb",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 1848,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-02-11T16:53:01Z",
      "side": 1,
      "message": "I would probably say something like:\n\n```\n// For constants larger than 32 bits in size that have trailing zeros,\n// use the value with the trailing zeros removed and then ...\n```\n\nAlso s/tailing/trailing (typo)",
      "range": {
        "startLine": 1848,
        "startChar": 39,
        "endLine": 1848,
        "endChar": 49
      },
      "revId": "97a4876c8992d28530531bd8be38a2da95cb0d9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "384cb504_275a7c64",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 1848,
      "author": {
        "id": 52329
      },
      "writtenOn": "2023-02-12T13:18:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4cc80954_a4aa8ccb",
      "range": {
        "startLine": 1848,
        "startChar": 39,
        "endLine": 1848,
        "endChar": 49
      },
      "revId": "97a4876c8992d28530531bd8be38a2da95cb0d9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa9cc4a3_672154d5",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 1855,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-02-11T16:53:01Z",
      "side": 1,
      "message": "I think it is probably worth avoiding bits.TrailingZeros64 unless we know the constant is too large:\n\n```\nif !immIFits(ins.imm, 32) {\n    ctz :\u003d ...\n    ...\n}\n```",
      "range": {
        "startLine": 1855,
        "startChar": 2,
        "endLine": 1855,
        "endChar": 46
      },
      "revId": "97a4876c8992d28530531bd8be38a2da95cb0d9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0db1eb7_fbd926bc",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 1855,
      "author": {
        "id": 52329
      },
      "writtenOn": "2023-02-12T13:18:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa9cc4a3_672154d5",
      "range": {
        "startLine": 1855,
        "startChar": 2,
        "endLine": 1855,
        "endChar": 46
      },
      "revId": "97a4876c8992d28530531bd8be38a2da95cb0d9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d7595e1_8e2416e6",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 1862,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-11-08T16:46:11Z",
      "side": 1,
      "message": "If a split happens, would this still be beneficial? Maybe we do this only when it can fit in a single ADD and a shift?",
      "revId": "97a4876c8992d28530531bd8be38a2da95cb0d9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b47c19ea_fe5d5399",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 1862,
      "author": {
        "id": 52329
      },
      "writtenOn": "2022-11-09T06:25:30Z",
      "side": 1,
      "message": "I think it is still beneficial. Both LLVM and gcc follow this behaviour.\n    * LLVM: https://godbolt.org/z/bYYGcjaY5\n    * gcc: https://godbolt.org/z/4fKzeYPGc",
      "parentUuid": "4d7595e1_8e2416e6",
      "revId": "97a4876c8992d28530531bd8be38a2da95cb0d9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "079533b3_e8dafb2a",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 1862,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-02-11T16:53:01Z",
      "side": 1,
      "message": "I agree that this makes sense - a memory load is going to be two instructions, versus three instructions that avoid a memory load (and storage of the constant).",
      "parentUuid": "b47c19ea_fe5d5399",
      "revId": "97a4876c8992d28530531bd8be38a2da95cb0d9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}