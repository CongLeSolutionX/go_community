{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "065cb239_a929d928",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-08T16:44:15Z",
      "side": 1,
      "message": "Cuong: Thanks. Still a few `cap` calls remain though. Please remove these too. The only calls to `cap` that should remain should be in `methods` or `isEmpty`.\n\nIan/Cherry: Do either of you want to double-check this too?",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11bacd5b_d7f4b9d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-10-08T18:07:04Z",
      "side": 1,
      "message": "Thanks for asking. I posted some comments. Thanks.",
      "parentUuid": "065cb239_a929d928",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ff200b4_12a9c6c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-08T18:38:29Z",
      "side": 1,
      "message": "Yeah, thanks for the second set of eyes. I\u0027ve been so focused on the other aspects of this CL, I missed those details in refect\u0027s public API. :)",
      "parentUuid": "11bacd5b_d7f4b9d9",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2e3071c_f478d428",
        "filename": "src/internal/reflectlite/type.go",
        "patchSetId": 6
      },
      "lineNbr": 741,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-08T16:44:15Z",
      "side": 1,
      "message": "nit: blank line between this declaration and the comment below.",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ccf85f8_4e47e2a9",
        "filename": "src/internal/reflectlite/type.go",
        "patchSetId": 6
      },
      "lineNbr": 741,
      "author": {
        "id": 14665
      },
      "writtenOn": "2020-10-08T17:26:36Z",
      "side": 1,
      "message": "Ops, I did that for reflect/type.go, not sure why I missed for this.",
      "parentUuid": "e2e3071c_f478d428",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b26b608e_594a04d9",
        "filename": "src/reflect/type.go",
        "patchSetId": 6
      },
      "lineNbr": 1057,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-10-08T18:05:12Z",
      "side": 1,
      "message": "The doc says \"It panics if i is not in the range [0, NumMethod())\", but apparently it\u0027s not, with or without the CL.",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "597fbd91_d7316ffa",
        "filename": "src/reflect/type.go",
        "patchSetId": 6
      },
      "lineNbr": 1057,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-08T18:38:29Z",
      "side": 1,
      "message": "That seems like a bug too. We should make it panic like (*rtype).Method does.",
      "parentUuid": "b26b608e_594a04d9",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb7d506e_0c4a3738",
        "filename": "src/reflect/type.go",
        "patchSetId": 6
      },
      "lineNbr": 1062,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-10-08T18:05:12Z",
      "side": 1,
      "message": "Can this happen now?",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64a4d8b7_22972203",
        "filename": "src/reflect/type.go",
        "patchSetId": 6
      },
      "lineNbr": 1062,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-08T18:38:29Z",
      "side": 1,
      "message": "It should not. This can become an assert or something instead.",
      "parentUuid": "bb7d506e_0c4a3738",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a08a160a_97972ca3",
        "filename": "src/reflect/type.go",
        "patchSetId": 6
      },
      "lineNbr": 1082,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-10-08T18:05:12Z",
      "side": 1,
      "message": "So MethodByName can still return unexported method? But when it calls t.Method(i) below it will return an invalid Method. What is expected here?",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "224650f8_aa57b943",
        "filename": "src/reflect/type.go",
        "patchSetId": 6
      },
      "lineNbr": 1082,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-08T18:38:29Z",
      "side": 1,
      "message": "Ah, good catch. MethodByName should only return exported methods, so this could be expMethods instead.",
      "parentUuid": "a08a160a_97972ca3",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f4eeaf8_30a6b408",
        "filename": "src/reflect/type.go",
        "patchSetId": 6
      },
      "lineNbr": 1082,
      "author": {
        "id": 14665
      },
      "writtenOn": "2020-10-08T18:41:27Z",
      "side": 1,
      "message": "We expect here to return an invalid method. MethodByName can not return unexported method, because it uses Method(i), which does not return unexported method with this CL.",
      "parentUuid": "a08a160a_97972ca3",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc4987d7_1f386285",
        "filename": "src/reflect/value.go",
        "patchSetId": 6
      },
      "lineNbr": 1912,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-08T16:44:15Z",
      "side": 1,
      "message": "This should be updated to avoid using cap, like in methodReceiver.",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d69f1f65_58accc95",
        "filename": "src/reflect/value.go",
        "patchSetId": 6
      },
      "lineNbr": 1912,
      "author": {
        "id": 14665
      },
      "writtenOn": "2020-10-08T17:26:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc4987d7_1f386285",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f8539e3_e5d8b526",
        "filename": "src/runtime/alg.go",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-08T16:44:15Z",
      "side": 1,
      "message": "isEmpty",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c751e4d_56dfa586",
        "filename": "src/runtime/alg.go",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 14665
      },
      "writtenOn": "2020-10-08T17:26:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f8539e3_e5d8b526",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aab2f9d8_2ac05655",
        "filename": "src/runtime/mfinal.go",
        "patchSetId": 6
      },
      "lineNbr": 213,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-10-08T16:44:15Z",
      "side": 1,
      "message": "These two cap calls (here and L397 below) can be replaced with isEmpty",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12340660_d4da8b5c",
        "filename": "src/runtime/mfinal.go",
        "patchSetId": 6
      },
      "lineNbr": 213,
      "author": {
        "id": 14665
      },
      "writtenOn": "2020-10-08T17:26:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aab2f9d8_2ac05655",
      "revId": "a7a8e97409287a5ca4ee6c7f783b4beb390c1422",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}