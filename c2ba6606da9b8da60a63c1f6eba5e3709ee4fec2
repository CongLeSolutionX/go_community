{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "90eb8948_f869090e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6005
      },
      "writtenOn": "2022-05-09T03:32:25Z",
      "side": 1,
      "message": "TRY\u003dwindows-amd64, windows-arm64",
      "revId": "c2ba6606da9b8da60a63c1f6eba5e3709ee4fec2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d220565_1594d73a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-09T03:32:43Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003dc2ba6606",
      "tag": "autogenerated:trybots~beginning",
      "revId": "c2ba6606da9b8da60a63c1f6eba5e3709ee4fec2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3989fe32_cf1a4077",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-09T03:47:29Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* windows-amd64-2016\n* windows-arm64-11\n",
      "parentUuid": "4d220565_1594d73a",
      "tag": "autogenerated:trybots~happy",
      "revId": "c2ba6606da9b8da60a63c1f6eba5e3709ee4fec2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb25ec5d_0b15944f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6005
      },
      "writtenOn": "2022-05-09T13:24:04Z",
      "side": 1,
      "message": "Jason, do you think this change is reasonable, or can you think of downsides to making it that I\u0027m not taking into account? Thanks.",
      "revId": "c2ba6606da9b8da60a63c1f6eba5e3709ee4fec2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a5fefa4_1a2c3b6d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 20556
      },
      "writtenOn": "2022-05-09T17:31:28Z",
      "side": 1,
      "message": "Reverse engineering hostname.exe, it looks to me like the program always exits 1 if a problem occurs, or 0 if it doesn\u0027t.\n\n  WCHAR name[264];\n  FILE *stdout \u003d _acrt_iob_func(1), *stderr \u003d _acrt_iob_func(2);\n  HeapSetInformation(0, HeapEnableTerminationOnCorruption, 0, 0);\n  SetThreadUILanguage(0);\n  NlsFPutBom(stdout);\n  NlsFPutBom(stderr);\n  if (WSAStartup(0x101, \u0026wsadata))\n    NlsPerror(0x2713);\n  if (argc \u003e 1) {\n    // some error handling message stuff\n    NlsFPutMsgW(stderr, ...);\n    exit(1);\n  }\n  if (GetHostNameW(name, 257) \u003c 0) {\n    GetLastError();\n    NlsPerror(0x2712);\n    exit(1);\n  }\n  NlsFPutStringW(stdout, name);\n  NlsFPutStringW(stdout, L\"\\n\");\n  exit(0);\n  \nSo basically the only weird thing would be if NlsFPutStringW itself errors, as that return value isn\u0027t being checked. But then the rest of the test should probably fail anyway if we avoid the possibility of truncation and unlikely things like that.\n\nSo LGTM.",
      "revId": "c2ba6606da9b8da60a63c1f6eba5e3709ee4fec2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "402aba89_2048b9f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6005
      },
      "writtenOn": "2022-05-09T18:06:18Z",
      "side": 1,
      "message": "Thanks.",
      "revId": "c2ba6606da9b8da60a63c1f6eba5e3709ee4fec2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one Code-Review+2 is required. Self review is not allowed."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c2ba6606da9b8da60a63c1f6eba5e3709ee4fec2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Review",
        "description": {
          "value": "Changes that have DO NOT REVIEW in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (R|r)(E|e)(V|v)(I|i)(E|e)(W|w).*\""]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "c2ba6606da9b8da60a63c1f6eba5e3709ee4fec2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "c2ba6606da9b8da60a63c1f6eba5e3709ee4fec2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Holds",
        "description": {
          "value": "Changes with a Hold+1 vote are not submittable."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "NOT label:Hold\u003d1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"NOT label:Hold=1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Hold=1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c2ba6606da9b8da60a63c1f6eba5e3709ee4fec2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c2ba6606da9b8da60a63c1f6eba5e3709ee4fec2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}