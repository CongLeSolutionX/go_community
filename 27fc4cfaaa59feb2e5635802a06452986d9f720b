{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "86dfa91e_7f8c3279",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-03T09:04:24Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d27fc4cfa",
      "tag": "autogenerated:trybots~beginning",
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75c9f2bf_e88e3a2a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-03T09:16:31Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "86dfa91e_7f8c3279",
      "tag": "autogenerated:trybots~happy",
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67f37d6d_dba15ac0",
        "filename": "src/cmd/compile/internal/gc/obj.go",
        "patchSetId": 22
      },
      "lineNbr": 294,
      "author": {
        "id": 6875
      },
      "writtenOn": "2022-03-15T22:20:41Z",
      "side": 1,
      "message": "This trickiness may go away soon as we\u0027re going to require base.Ctxt.Pkgpath be set for 1.19.",
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01606e9f_8d61d549",
        "filename": "src/cmd/compile/internal/gc/obj.go",
        "patchSetId": 22
      },
      "lineNbr": 294,
      "author": {
        "id": 21345
      },
      "writtenOn": "2022-03-16T06:50:19Z",
      "side": 1,
      "message": "Got it. Do we need to change to use base.Ctxt.Pkgpath here? Thank you.",
      "parentUuid": "67f37d6d_dba15ac0",
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60ada7ef_7078b30b",
        "filename": "src/cmd/compile/internal/gc/obj.go",
        "patchSetId": 22
      },
      "lineNbr": 294,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-03-22T20:04:51Z",
      "side": 1,
      "message": "Sorry, I\u0027m not entirely sure what I meant here.\n\nI think you could do name \u003d nam.Sym().Pkg.Prefix + s.Name. I don\u0027t think s.Name ever has \"\" in front of it.\nUsing Pkg.Prefix instead of Pkg.Name avoids possible package conflicts.\n\n(here and where ShouldInstrumentGlobals is initialized)",
      "parentUuid": "01606e9f_8d61d549",
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87473d95_fc96747f",
        "filename": "src/cmd/compile/internal/pkginit/init.go",
        "patchSetId": 22
      },
      "lineNbr": 95,
      "author": {
        "id": 6875
      },
      "writtenOn": "2022-03-15T22:20:41Z",
      "side": 1,
      "message": "\u003d []_asan_global{...}",
      "range": {
        "startLine": 95,
        "startChar": 19,
        "endLine": 95,
        "endChar": 33
      },
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b372e3f_7837b9a9",
        "filename": "src/cmd/compile/internal/pkginit/init.go",
        "patchSetId": 22
      },
      "lineNbr": 95,
      "author": {
        "id": 21345
      },
      "writtenOn": "2022-03-16T06:50:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87473d95_fc96747f",
      "range": {
        "startLine": 95,
        "startChar": 19,
        "endLine": 95,
        "endChar": 33
      },
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b8be6e3_2c6aa994",
        "filename": "src/cmd/compile/internal/pkginit/init.go",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 6875
      },
      "writtenOn": "2022-03-15T22:20:41Z",
      "side": 1,
      "message": "\u0026globals[0]",
      "range": {
        "startLine": 96,
        "startChar": 27,
        "endLine": 96,
        "endChar": 34
      },
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a477c29_1849dd8b",
        "filename": "src/cmd/compile/internal/pkginit/init.go",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 21345
      },
      "writtenOn": "2022-03-16T06:50:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b8be6e3_2c6aa994",
      "range": {
        "startLine": 96,
        "startChar": 27,
        "endLine": 96,
        "endChar": 34
      },
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3929d31b_03d21e5d",
        "filename": "src/cmd/compile/internal/pkginit/initAsanGlobals.go",
        "patchSetId": 22
      },
      "lineNbr": 60,
      "author": {
        "id": 6875
      },
      "writtenOn": "2022-03-15T22:20:41Z",
      "side": 1,
      "message": "put an \"i\" here instead of \"_\".\nIt will be int instead of int64, but you can do a i2 :\u003d int64(i) at the start of the loop if you need to.",
      "range": {
        "startLine": 60,
        "startChar": 5,
        "endLine": 60,
        "endChar": 6
      },
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2551904f_33c86669",
        "filename": "src/cmd/compile/internal/pkginit/initAsanGlobals.go",
        "patchSetId": 22
      },
      "lineNbr": 60,
      "author": {
        "id": 21345
      },
      "writtenOn": "2022-03-16T06:50:19Z",
      "side": 1,
      "message": "Sorry, \"i\" here is string type. Because ShouldInstrumentGlobals is map[string]ir.Node. Thank you.",
      "parentUuid": "3929d31b_03d21e5d",
      "range": {
        "startLine": 60,
        "startChar": 5,
        "endLine": 60,
        "endChar": 6
      },
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59bb8727_edeb01bc",
        "filename": "src/cmd/compile/internal/pkginit/initAsanGlobals.go",
        "patchSetId": 22
      },
      "lineNbr": 99,
      "author": {
        "id": 6875
      },
      "writtenOn": "2022-03-15T22:20:41Z",
      "side": 1,
      "message": "Probably something like base.Ctxt.PosTable.Pos(n.Pos()).Filename (or AbsFilename? RelFilename?).",
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e7c5032_b84ad44b",
        "filename": "src/cmd/compile/internal/pkginit/initAsanGlobals.go",
        "patchSetId": 22
      },
      "lineNbr": 99,
      "author": {
        "id": 21345
      },
      "writtenOn": "2022-03-16T06:50:19Z",
      "side": 1,
      "message": "Wonderful! I will try it. Thank you. üëç",
      "parentUuid": "59bb8727_edeb01bc",
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33d54360_38ff9060",
        "filename": "src/cmd/compile/internal/pkginit/initAsanGlobals.go",
        "patchSetId": 22
      },
      "lineNbr": 111,
      "author": {
        "id": 6875
      },
      "writtenOn": "2022-03-15T22:20:41Z",
      "side": 1,
      "message": "I notice you\u0027re not setting odrIndicator. Is that written by asan itself?\n\nPart of why I ask is that this data will be in the data section (writeable). It might be interesting to figure out how to put this data in the read-only section. Of course that wouldn\u0027t work if asan itself writes it.",
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af64ce4a_f6a550e2",
        "filename": "src/cmd/compile/internal/pkginit/initAsanGlobals.go",
        "patchSetId": 22
      },
      "lineNbr": 111,
      "author": {
        "id": 21345
      },
      "writtenOn": "2022-03-16T06:50:19Z",
      "side": 1,
      "message": "Yes, I didn\u0027t set its value and it\u0027s not written by asan either. Asan will only check if its value is non-zero. \nYou mean we should write it even if its value is 0? (go does not follow ODR, right?). Thank you.",
      "parentUuid": "33d54360_38ff9060",
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85473f5c_f09eac14",
        "filename": "src/cmd/compile/internal/pkginit/initAsanGlobals.go",
        "patchSetId": 22
      },
      "lineNbr": 111,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-03-22T20:04:51Z",
      "side": 1,
      "message": "Maybe just a comment saying // odrIndicator \u003d 0 is the default, no need to set it explicitly here\n\nSo it sounds like this data could live in a read-only section. Probably not worth making that happen at the moment, I was just curious.",
      "parentUuid": "af64ce4a_f6a550e2",
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bef0327c_8b5ca3d9",
        "filename": "src/cmd/compile/internal/pkginit/initAsanGlobals.go",
        "patchSetId": 22
      },
      "lineNbr": 224,
      "author": {
        "id": 6875
      },
      "writtenOn": "2022-03-15T22:20:41Z",
      "side": 1,
      "message": "Maybe just add buildcfg to the NoInstrementPkgs list?",
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afd2809a_2ac972dc",
        "filename": "src/cmd/compile/internal/pkginit/initAsanGlobals.go",
        "patchSetId": 22
      },
      "lineNbr": 224,
      "author": {
        "id": 21345
      },
      "writtenOn": "2022-03-16T06:50:19Z",
      "side": 1,
      "message": "If we add it to the NoInstrumentPkgs list, then -race and -msan options will also not work on it. Is this behavior acceptable? Thank you.",
      "parentUuid": "bef0327c_8b5ca3d9",
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c3b0c84_a9da4f64",
        "filename": "src/cmd/compile/internal/pkginit/initAsanGlobals.go",
        "patchSetId": 22
      },
      "lineNbr": 224,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-03-22T20:04:51Z",
      "side": 1,
      "message": "Yes, that\u0027s fine. buildcfg is only used by tools, not end-user programs.",
      "parentUuid": "afd2809a_2ac972dc",
      "revId": "27fc4cfaaa59feb2e5635802a06452986d9f720b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}