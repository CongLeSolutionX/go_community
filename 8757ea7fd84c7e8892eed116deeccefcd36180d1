{
  "comments": [
    {
      "key": {
        "uuid": "d0507db3_43399506",
        "filename": "src/cmd/compile/internal/ssa/gen/generic.rules",
        "patchSetId": 1
      },
      "lineNbr": 1244,
      "author": {
        "id": 5143
      },
      "writtenOn": "2018-04-12T15:35:15Z",
      "side": 1,
      "message": "Please update (or perhaps remove) this comment.",
      "revId": "8757ea7fd84c7e8892eed116deeccefcd36180d1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd2f8c0d_aed8ebb2",
        "filename": "src/cmd/compile/internal/ssa/gen/generic.rules",
        "patchSetId": 1
      },
      "lineNbr": 1244,
      "author": {
        "id": 11990
      },
      "writtenOn": "2018-04-12T19:39:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0507db3_43399506",
      "revId": "8757ea7fd84c7e8892eed116deeccefcd36180d1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b5dec89_4666dda6",
        "filename": "src/cmd/compile/internal/ssa/gen/generic.rules",
        "patchSetId": 1
      },
      "lineNbr": 1248,
      "author": {
        "id": 5143
      },
      "writtenOn": "2018-04-12T15:35:15Z",
      "side": 1,
      "message": "Is it worth adding a rewrite rules for AddPtr as well? They\u0027d check whether the addend is 0 or the addends are equal, respectively.",
      "revId": "8757ea7fd84c7e8892eed116deeccefcd36180d1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a0e8427_d8f75c55",
        "filename": "src/cmd/compile/internal/ssa/gen/generic.rules",
        "patchSetId": 1
      },
      "lineNbr": 1248,
      "author": {
        "id": 11990
      },
      "writtenOn": "2018-04-12T19:39:16Z",
      "side": 1,
      "message": "AddPtr with a constant addend is converted into an OffPtr, so I think that case is already covered by the new rules. I tried adding another rule to compare pointers using isSamePtr but it didn\u0027t get any extra hits.",
      "parentUuid": "2b5dec89_4666dda6",
      "revId": "8757ea7fd84c7e8892eed116deeccefcd36180d1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff6e2df6_240e6658",
        "filename": "src/cmd/compile/internal/ssa/gen/generic.rules",
        "patchSetId": 1
      },
      "lineNbr": 1248,
      "author": {
        "id": 5143
      },
      "writtenOn": "2018-04-12T19:42:35Z",
      "side": 1,
      "message": "I had in mind code like:\n\ncopy(x[a:], x)\n\nCurrently we check\n\nx.ptr + a \u003d\u003d x.ptr\n\nInstead we could check\n\na \u003d\u003d 0\n\nSo the result wouldn\u0027t be a const bool but instead a simpler calculation. Similarly so for copy(x[a:], x[b:]), where we could check a \u003d\u003d b instead of x.ptr + a \u003d\u003d x.ptr + b.\n\nDoes that make more sense?",
      "parentUuid": "9a0e8427_d8f75c55",
      "revId": "8757ea7fd84c7e8892eed116deeccefcd36180d1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04b55f0e_aee8eb15",
        "filename": "src/cmd/compile/internal/ssa/gen/generic.rules",
        "patchSetId": 1
      },
      "lineNbr": 1248,
      "author": {
        "id": 11990
      },
      "writtenOn": "2018-04-13T12:32:53Z",
      "side": 1,
      "message": "Yes, thanks for explaining, that makes sense to me so I\u0027ve added the required rules.",
      "parentUuid": "ff6e2df6_240e6658",
      "revId": "8757ea7fd84c7e8892eed116deeccefcd36180d1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}