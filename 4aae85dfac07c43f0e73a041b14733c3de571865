{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e7196ef8_dfbe7969",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 20556
      },
      "writtenOn": "2021-02-14T18:33:16Z",
      "side": 1,
      "message": "Got a crasher on 386:\n\ntraceback: unexpected SPWRITE function golang.org/x/crypto/blake2s.hashBlocksSSSE3\nfatal error: traceback\nruntime stack:\nruntime.throw(0x10059a66, 0x9)\nruntime/panic.go:1117 +0x64\nruntime.gentraceback(0xffffffff, 0xffffffff, 0x0, 0x208848c0, 0x0, 0x0, 0x7fffffff, 0x1006cd4c, 0x9b1fbc0, 0x0, ...)\nruntime/traceback.go:234 +0x1699\nruntime.copystack(0x208848c0, 0x2000)\nruntime/stack.go:908 +0x236\nruntime.newstack()\nruntime/stack.go:1078 +0x203\nruntime.morestack()\nruntime/asm_386.s:469 +0x7f",
      "revId": "4aae85dfac07c43f0e73a041b14733c3de571865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f0e3f02_8f6dc9e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 20556
      },
      "writtenOn": "2021-02-15T11:42:07Z",
      "side": 1,
      "message": "It seems to be identifying the SPWRITE okay though:\n\n# golang.org/x/crypto/blake2s\nauto-SPWRITE: \"\".hashBlocksSSE2 00011 (/home/zx2c4/.go/pkg/mod/golang.org/x/crypto@v0.0.0-20201221181555-eec23a3978ad/blake2s/blake2s_386.s:304)        MOVL      DI, SP\nauto-SPWRITE: \"\".hashBlocksSSSE3 00811 (/home/zx2c4/.go/pkg/mod/golang.org/x/crypto@v0.0.0-20201221181555-eec23a3978ad/blake2s/blake2s_386.s:373)       MOVL      DI, SP",
      "parentUuid": "e7196ef8_dfbe7969",
      "revId": "4aae85dfac07c43f0e73a041b14733c3de571865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c3643be_68a383e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 20556
      },
      "writtenOn": "2021-02-15T12:45:29Z",
      "side": 1,
      "message": "Here\u0027s a dumb reproducer:\n\npackage main\n  \nimport (\n        \"runtime\"\n        \"sync\"\n        \"golang.org/x/crypto/blake2s\"\n)\n\nfunc main() {\n        var wg sync.WaitGroup\n        for i :\u003d 0; i \u003c 4; i++ {\n                wg.Add(1)\n                go func() {\n                        defer wg.Done()\n                        b2, _ :\u003d blake2s.New128(make([]byte, 16))\n                        big :\u003d make([]byte, 4096)\n                        for {\n                                b2.Write(big)\n                        }\n                }()\n                wg.Add(1)\n                go func() {\n                        for {\n                                runtime.GC()\n                        }\n                }()\n        }\n        wg.Wait()\n}\n\ntraceback: unexpected SPWRITE function golang.org/x/crypto/blake2s.hashBlocksSSSE3\nfatal error: traceback\n\nruntime stack:\nruntime.throw(0x80d328e, 0x9)\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/panic.go:1117 +0x6a\nruntime.gentraceback(0xffffffff, 0xffffffff, 0x0, 0x8800fc0, 0x0, 0x0, 0x7fffffff, 0x888fedc, 0x0, 0x0, ...)\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/traceback.go:234 +0x169c\nruntime.scanstack(0x8800fc0, 0x8832084)\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/mgcmark.go:749 +0x17b\nruntime.markroot.func1()\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/mgcmark.go:233 +0x9c\nruntime.markroot(0x8832084, 0xd)\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/mgcmark.go:206 +0x1bc\nruntime.gcDrain(0x8832084, 0x3)\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/mgcmark.go:1014 +0x11d\nruntime.gcBgMarkWorker.func2()\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/mgc.go:1980 +0x6c\nruntime.systemstack(0x8a80460)\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/asm_386.s:389 +0x41\n\ngoroutine 45 [GC worker (idle)]:\nruntime.systemstack_switch()\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/asm_386.s:356 fp\u003d0x8b0c7a4 sp\u003d0x8b0c7a0 pc\u003d0x809ddd0\nruntime.gcBgMarkWorker()\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/mgc.go:1967 +0x1c0 fp\u003d0x8b0c7f0 sp\u003d0x8b0c7a4 pc\u003d0x805e980\nruntime.goexit()\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/asm_386.s:1332 +0x1 fp\u003d0x8b0c7f4 sp\u003d0x8b0c7f0 pc\u003d0x809f2f1\ncreated by runtime.gcBgMarkStartWorkers\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/mgc.go:1835 +0x2d\n\ngoroutine 1 [semacquire]:\nsync.runtime_Semacquire(0x88121a8)\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/sema.go:56 +0x36\nsync.(*WaitGroup).Wait(0x88121a0)\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/sync/waitgroup.go:130 +0x7c\nmain.main()\n        /tmp/hasher/main.go:28 +0xa7\n\ngoroutine 5 [runnable]:\ngolang.org/x/crypto/blake2s.(*digest).Write(0x8894000, 0x8896000, 0x1000, 0x1000, 0x1000, 0x0, 0x0)\n        /home/zx2c4/.go/pkg/mod/golang.org/x/crypto@v0.0.0-20201221181555-eec23a3978ad/blake2s/blake2s.go:185 +0x242\nmain.main.func1(0x88121a0)\n        /tmp/hasher/main.go:18 +0xd8\ncreated by main.main\n        /tmp/hasher/main.go:13 +0x65\n\ngoroutine 6 [wait for GC cycle]:\nruntime.GC()\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/mgc.go:1154 +0x37\nmain.main.func2()\n        /tmp/hasher/main.go:24 +0x17\ncreated by main.main\n        /tmp/hasher/main.go:22 +0x8f\n\ngoroutine 7 [runnable]:\ngolang.org/x/crypto/blake2s.(*digest).Write(0x8980000, 0x8982000, 0x1000, 0x1000, 0x1000, 0x0, 0x0)\n        /home/zx2c4/.go/pkg/mod/golang.org/x/crypto@v0.0.0-20201221181555-eec23a3978ad/blake2s/blake2s.go:185 +0x242\nmain.main.func1(0x88121a0)\n        /tmp/hasher/main.go:18 +0xd8\ncreated by main.main\n        /tmp/hasher/main.go:13 +0x65\n\ngoroutine 8 [runnable]:\nruntime.GC()\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/mgc.go:1159 +0x62\nmain.main.func2()\n        /tmp/hasher/main.go:24 +0x17\ncreated by main.main\n        /tmp/hasher/main.go:22 +0x8f\n\ngoroutine 9 [runnable (scan)]:\ngolang.org/x/crypto/blake2s.hashBlocksSSSE3(0x8a14000, 0x8a14020, 0x0, 0x8a1402c, 0x40, 0x40)\n        /home/zx2c4/.go/pkg/mod/golang.org/x/crypto@v0.0.0-20201221181555-eec23a3978ad/blake2s/blake2s_386.s:362 +0xde8\ncreated by main.main\n        /tmp/hasher/main.go:13 +0x65\n\ngoroutine 10 [wait for GC cycle]:\nruntime.GC()\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/mgc.go:1154 +0x37\nmain.main.func2()\n        /tmp/hasher/main.go:24 +0x17\ncreated by main.main\n        /tmp/hasher/main.go:22 +0x8f\n\ngoroutine 11 [runnable]:\ngolang.org/x/crypto/blake2s.(*digest).Write(0x8912000, 0x8914000, 0x1000, 0x1000, 0x1000, 0x0, 0x0)\n        /home/zx2c4/.go/pkg/mod/golang.org/x/crypto@v0.0.0-20201221181555-eec23a3978ad/blake2s/blake2s.go:185 +0x242\nmain.main.func1(0x88121a0)\n        /tmp/hasher/main.go:18 +0xd8\ncreated by main.main\n        /tmp/hasher/main.go:13 +0x65\n\ngoroutine 12 [wait for GC cycle]:\nruntime.GC()\n        /home/zx2c4/Projects/wireguard-windows/.deps/go/src/runtime/mgc.go:1162 +0x6e\nmain.main.func2()\n        /tmp/hasher/main.go:24 +0x17\ncreated by main.main\n        /tmp/hasher/main.go:22 +0x8f\nexit status 2",
      "parentUuid": "9f0e3f02_8f6dc9e1",
      "revId": "4aae85dfac07c43f0e73a041b14733c3de571865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fda23921_a89ddc5f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5056
      },
      "writtenOn": "2021-02-15T15:37:41Z",
      "side": 1,
      "message": "This is a good crash, in that it identified invalid Go assembly that could cause silent memory corruption instead. It is not allowed to adjust SP by a non-fixed value, because then profiling ticks but more importantly the garbage collector cannot unwind the stack properly. \n\nThe assembly should be updated to remove the writes to SP. They are not safe. \nI filed #44269.",
      "parentUuid": "9c3643be_68a383e8",
      "revId": "4aae85dfac07c43f0e73a041b14733c3de571865",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}