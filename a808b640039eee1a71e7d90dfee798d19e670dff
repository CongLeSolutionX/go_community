{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "013eef16_2537ad96",
        "filename": "src/net/conf.go",
        "patchSetId": 7
      },
      "lineNbr": 51,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-05T22:32:54Z",
      "side": 1,
      "message": "I think I would rather see something like \"go package net: default resolver is ...\".",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8bcc947_da6d1633",
        "filename": "src/net/conf.go",
        "patchSetId": 7
      },
      "lineNbr": 51,
      "author": {
        "id": 55874
      },
      "writtenOn": "2023-04-06T08:32:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "013eef16_2537ad96",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34ee0756_9ad5b340",
        "filename": "src/net/conf.go",
        "patchSetId": 7
      },
      "lineNbr": 60,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-05T22:32:54Z",
      "side": 1,
      "message": "Use the same message as before: \"go package net: GODEBUG setting forcing use of Go\u0027s resolver\".",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac1aa721_c9a69426",
        "filename": "src/net/conf.go",
        "patchSetId": 7
      },
      "lineNbr": 60,
      "author": {
        "id": 55874
      },
      "writtenOn": "2023-04-06T08:32:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34ee0756_9ad5b340",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01a334ec_bf8063fb",
        "filename": "src/net/conf.go",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-05T22:32:54Z",
      "side": 1,
      "message": "Is there a reason to retain confVal.resolver \u003d\u003d resolverDynamic?  It seems simpler to say that when this function is done confVal.resolver is always either resolverGo or resolverCgo.",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f5b6eed_e191f995",
        "filename": "src/net/conf.go",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 55874
      },
      "writtenOn": "2023-04-06T08:32:24Z",
      "side": 1,
      "message": "the confVal.resolver might not change at all, so it might still be resolverDynamic (linux).",
      "parentUuid": "01a334ec_bf8063fb",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a01061e5_55f9d494",
        "filename": "src/net/conf.go",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-11T21:36:20Z",
      "side": 1,
      "message": "I agree that defaultResolver might be resolverDynamic.  But what I\u0027m thinking is that if we see that in this function, we set confVal.resolver to resolverCgo.  Is there a reason that we need to permit all three values in confVal.resolver?",
      "parentUuid": "4f5b6eed_e191f995",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c49c83a_2d6bef47",
        "filename": "src/net/conf.go",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 55874
      },
      "writtenOn": "2023-04-13T15:27:14Z",
      "side": 1,
      "message": "\u003e  But what I\u0027m thinking is that if we see that in this function, we set confVal.resolver to resolverCgo.\n\nThis is not the case for Linux, the confval.resolver is set at the beginning of this function to defaultResolver and might not change at all, so it might still be resolverDynamic. right?",
      "parentUuid": "a01061e5_55f9d494",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33377ac8_2cbbac1d",
        "filename": "src/net/conf.go",
        "patchSetId": 7
      },
      "lineNbr": 72,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-13T17:24:07Z",
      "side": 1,
      "message": "I\u0027m sorry, I\u0027m not expressing myself clearly.\n\nI suggest that we change this function so that confval.resolver is always set to either resolverGo or resolverCgo.  I think that would be clearer.  Would that cause any problems?",
      "parentUuid": "2c49c83a_2d6bef47",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a9d9c27_f6ba3e36",
        "filename": "src/net/conf_netcgo.go",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-05T22:32:54Z",
      "side": 1,
      "message": "We shouldn\u0027t need to check netgo here.  We don\u0027t have to worry about people who set both netgo and netcgo.  Also, if netcgo is set, we should set resolverCgo regardless of cgo/darwin/windows.",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9670dc11_d958c96d",
        "filename": "src/net/conf_netcgo.go",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 55874
      },
      "writtenOn": "2023-04-06T08:32:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a9d9c27_f6ba3e36",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e60f3db_8581cd00",
        "filename": "src/net/conf_netgo.go",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-05T22:32:54Z",
      "side": 1,
      "message": "s/resovlerGo/resolverGo/",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd58e73f_449c6013",
        "filename": "src/net/conf_netgo.go",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 55874
      },
      "writtenOn": "2023-04-06T08:32:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8e60f3db_8581cd00",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "254884e6_9e9b3ef8",
        "filename": "src/net/conf_netgo.go",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-05T22:32:54Z",
      "side": 1,
      "message": "Perhaps it would be simpler to just make this \"go:build netgo\" and handle the cgo/darwin/windows decision in conf.go at run time.",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f8a18b2_0af2c66c",
        "filename": "src/net/conf_netgo.go",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 55874
      },
      "writtenOn": "2023-04-06T08:32:24Z",
      "side": 1,
      "message": "I feel like this would make it more complicated. Is it even possible to get the cgo build tag at runtime?",
      "parentUuid": "254884e6_9e9b3ef8",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ff9184d_f3a0ed3d",
        "filename": "src/net/conf_netgo.go",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-11T21:36:20Z",
      "side": 1,
      "message": "My concern is that part of what makes this code hard to understand is these complicated build tag expressions and the way that they set variables at initialization time, so it\u0027s to understand from the source code what the configuration winds up being.  If we could get rid of all the init functions related to this, that would be ideal.\n\nCode can get the cgo build tag (or any build tag) by using two tiny files\n\n//go:build cgo\nconst cgoBuild \u003d true\n\n//go:build !cgo\nconst cgoBuild \u003d false",
      "parentUuid": "4f8a18b2_0af2c66c",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76b4c296_444ee8f4",
        "filename": "src/net/conf_netgo.go",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 55874
      },
      "writtenOn": "2023-04-13T15:27:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ff9184d_f3a0ed3d",
      "revId": "a808b640039eee1a71e7d90dfee798d19e670dff",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}