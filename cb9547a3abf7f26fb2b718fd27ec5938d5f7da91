{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4cd77104_ca68346f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-03T18:32:45Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "191f977b_0b664f15",
      "tag": "autogenerated:trybots~beginning",
      "revId": "cb9547a3abf7f26fb2b718fd27ec5938d5f7da91",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc8ec321_4e750901",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-03T18:32:45Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dcb9547a3\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "cb9547a3abf7f26fb2b718fd27ec5938d5f7da91",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a109fb9f_afbe54d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-03T18:43:08Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "fc8ec321_4e750901",
      "tag": "autogenerated:trybots~happy",
      "revId": "cb9547a3abf7f26fb2b718fd27ec5938d5f7da91",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8c8283c_89d559f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5305
      },
      "writtenOn": "2023-03-06T20:46:43Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "cb9547a3abf7f26fb2b718fd27ec5938d5f7da91",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2e187b1_6b9e11b6",
        "filename": "src/crypto/tls/conn.go",
        "patchSetId": 4
      },
      "lineNbr": 1570,
      "author": {
        "id": 28787
      },
      "writtenOn": "2023-03-04T11:08:00Z",
      "side": 1,
      "message": "ConnectionState() blocks until completion of the handshake. This was not a problem when running on top of TCP, since the implementation blocks until completion of the handshake anyway.\nA QUIC stack might want to allow sending of 0.5-RTT data. For 0.5-RTT data to be useful, the application needs to be able to check which ALPN was negotiated, and therefore needs to be able to call ConnectionState().\n\nIn my crypto/tls fork, I\u0027ve solved this by introducing a updateConnectionState method on the Conn, which is called after processing of every handshake message that can potentially lead to updates in the struct. Here\u0027s the commit: https://github.com/quic-go/qtls-go1-20/commit/cdd4200a5686ff9fe88e28711a6533b6b6fb1746.",
      "revId": "cb9547a3abf7f26fb2b718fd27ec5938d5f7da91",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bcd46c7_925085cb",
        "filename": "src/crypto/tls/conn.go",
        "patchSetId": 4
      },
      "lineNbr": 1570,
      "author": {
        "id": 5305
      },
      "writtenOn": "2023-03-06T20:46:43Z",
      "side": 1,
      "message": "Fixed by ensuring the handshake mutex is dropped when HandleCryptoData is not running.",
      "parentUuid": "e2e187b1_6b9e11b6",
      "revId": "cb9547a3abf7f26fb2b718fd27ec5938d5f7da91",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75b0e2ba_8334d8e0",
        "filename": "src/crypto/tls/quic.go",
        "patchSetId": 4
      },
      "lineNbr": 148,
      "author": {
        "id": 28787
      },
      "writtenOn": "2023-03-04T11:08:00Z",
      "side": 1,
      "message": "This is set to the error returned by handshake(). The alert passed to sendAlert is set on q.conn.out.\n\nThe QUIC stack needs to be able to access the alert though, as it needs to send the correct error code in the CONNECTION_CLOSE frame.",
      "revId": "cb9547a3abf7f26fb2b718fd27ec5938d5f7da91",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62d87dca_41eedc22",
        "filename": "src/crypto/tls/quic.go",
        "patchSetId": 4
      },
      "lineNbr": 148,
      "author": {
        "id": 5305
      },
      "writtenOn": "2023-03-06T20:46:43Z",
      "side": 1,
      "message": "handshake should return the same alert as passed to sendAlert; everything which calls sendAlert also returns the error back up the stack.\n\nAdded a test to verify that TLS errors are reported as an AlertError. Also reworked a bit of the handling of errors to hopefully make the godoc a bit clearer.",
      "parentUuid": "75b0e2ba_8334d8e0",
      "revId": "cb9547a3abf7f26fb2b718fd27ec5938d5f7da91",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}