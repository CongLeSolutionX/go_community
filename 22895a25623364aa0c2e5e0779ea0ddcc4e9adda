{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e46c03f1_d4a0d0f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-15T20:23:42Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d22895a25",
      "tag": "autogenerated:trybots~beginning",
      "revId": "22895a25623364aa0c2e5e0779ea0ddcc4e9adda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "554f0bf3_1d599b9c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-15T20:30:55Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d22895a25\nFailed on freebsd-amd64-12_2: https://storage.googleapis.com/go-build-log/22895a25/freebsd-amd64-12_2_d170ca34.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "e46c03f1_d4a0d0f9",
      "tag": "autogenerated:trybots~progress",
      "revId": "22895a25623364aa0c2e5e0779ea0ddcc4e9adda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63ca4226_be74f4c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-15T20:37:31Z",
      "side": 1,
      "message": "10 of 26 TryBots failed.\nFailed on freebsd-amd64-12_2: https://storage.googleapis.com/go-build-log/22895a25/freebsd-amd64-12_2_d170ca34.log\nFailed on linux-arm64-aws: https://storage.googleapis.com/go-build-log/22895a25/linux-arm64-aws_5a9fbd29.log\nFailed on windows-amd64-2016: https://storage.googleapis.com/go-build-log/22895a25/windows-amd64-2016_cea0b6b2.log\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/22895a25/linux-amd64_ecd3faf4.log\nFailed on linux-386: https://storage.googleapis.com/go-build-log/22895a25/linux-386_38f8a542.log\nFailed on linux-amd64-unified: https://storage.googleapis.com/go-build-log/22895a25/linux-amd64-unified_137d8eac.log\nFailed on windows-386-2012: https://storage.googleapis.com/go-build-log/22895a25/windows-386-2012_8bb8bf98.log\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/22895a25/linux-amd64-race_09a70606.log\nFailed on linux-arm-aws: https://storage.googleapis.com/go-build-log/22895a25/linux-arm-aws_407d4d61.log\nFailed on openbsd-amd64-68: https://storage.googleapis.com/go-build-log/22895a25/openbsd-amd64-68_b8963489.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "e46c03f1_d4a0d0f9",
      "tag": "autogenerated:trybots~failed",
      "revId": "22895a25623364aa0c2e5e0779ea0ddcc4e9adda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be9e90e7_0ed5102c",
        "filename": "src/cmd/link/internal/dwtest/dwloc_test.go",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-11-15T21:45:56Z",
      "side": 1,
      "message": "It might be helpful to add a comment explaining why the source files need to be copied.\n\n(Is there something that needs to modify them? Could programSourceCode itself be moved into some package within the testdata directory so that it doesn\u0027t need to be written dynamically?)",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 112,
        "endChar": 2
      },
      "revId": "22895a25623364aa0c2e5e0779ea0ddcc4e9adda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b69ca75_283e512f",
        "filename": "src/cmd/link/internal/dwtest/dwloc_test.go",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-11-15T21:45:56Z",
      "side": 1,
      "message": "We should avoid overriding the module cache directory, especially when the test is run outside of `all.bash`. If we set a fresh GOMODCACHE for each test, then it has to re-download the dependencies from the proxy.\n\n(We do want to re-download when we\u0027re testing the downloading behaviors of the `go` command, but here there doesn\u0027t seem to be a strong need for it.)",
      "revId": "22895a25623364aa0c2e5e0779ea0ddcc4e9adda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12d78fc3_d402463d",
        "filename": "src/cmd/link/internal/dwtest/dwloc_test.go",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-11-15T21:45:56Z",
      "side": 1,
      "message": "(not sure) You might not need this verbosity guard at all. (Generally stderr / stdout for test binaries is hidden if they pass, and if the test fails it doesn\u0027t seem like a lot of noise.)",
      "revId": "22895a25623364aa0c2e5e0779ea0ddcc4e9adda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea06e13c_b60185fc",
        "filename": "src/cmd/link/internal/dwtest/dwloc_test.go",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-11-15T21:18:34Z",
      "side": 1,
      "message": "The error here should probably be checked (so that we don\u0027t leave temporary directories lying around).\n\nThis probably also needs a backoff and retry on Windows. (See #45672, #25965, and associated bugs.)",
      "revId": "22895a25623364aa0c2e5e0779ea0ddcc4e9adda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a46e332b_8e6e87ec",
        "filename": "src/cmd/link/internal/dwtest/dwloc_test.go",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-11-15T21:18:34Z",
      "side": 1,
      "message": "I suggest deferring this until it is needed by some individual test, and then guarding it with a sync.Once.\n\n(If all of the individual tests are skipped — for example, because the don\u0027t match the `-run` regular expression — then we also shouldn\u0027t pay the latency of building the harness binary.)",
      "revId": "22895a25623364aa0c2e5e0779ea0ddcc4e9adda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afbfed8e_8fd5f47d",
        "filename": "src/cmd/link/internal/dwtest/dwloc_test.go",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-11-15T21:18:34Z",
      "side": 1,
      "message": "Since this test downloads and builds dependencies from the network, I would also skipping this test when testenv.HasExternalNetwork is true. (Otherwise, if the user runs `go test -short cmd` it will be run, and perhaps take a long time...)",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 153,
        "endChar": 1
      },
      "revId": "22895a25623364aa0c2e5e0779ea0ddcc4e9adda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03a4de37_36a83b74",
        "filename": "src/cmd/link/internal/dwtest/dwloc_test.go",
        "patchSetId": 3
      },
      "lineNbr": 170,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-11-15T21:45:56Z",
      "side": 1,
      "message": "If you add more than one test to this file, this will probably need to be a per-test directory (perhaps obtained from t.TempDir?) instead of a global working directory.",
      "range": {
        "startLine": 170,
        "startChar": 24,
        "endLine": 170,
        "endChar": 31
      },
      "revId": "22895a25623364aa0c2e5e0779ea0ddcc4e9adda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d28ffae3_1cbfaee2",
        "filename": "src/cmd/link/internal/dwtest/dwloc_test.go",
        "patchSetId": 3
      },
      "lineNbr": 220,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-11-15T21:45:56Z",
      "side": 1,
      "message": "It would be helpful to explain why the OS or arch is unsupported in these skips, so that future maintainers can know when to update them.\n\n(Do we skip particular OSs because the Delve library doesn\u0027t support them, or for some other reason? I assume that we skip particular architectures because the test looks for architecture-specific locations.)",
      "revId": "22895a25623364aa0c2e5e0779ea0ddcc4e9adda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3962efd2_eda35f38",
        "filename": "src/cmd/link/internal/dwtest/dwloc_test.go",
        "patchSetId": 3
      },
      "lineNbr": 238,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-11-15T21:45:56Z",
      "side": 1,
      "message": "(nit) No need to pass the test name to helpers or repeat it in failure messages.\n\n(The test log will already include the test name before the output lines, and either way the callee can retrieve it by calling t.Name.)",
      "range": {
        "startLine": 238,
        "startChar": 22,
        "endLine": 238,
        "endChar": 48
      },
      "revId": "22895a25623364aa0c2e5e0779ea0ddcc4e9adda",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}