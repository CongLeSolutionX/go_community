{
  "comments": [
    {
      "key": {
        "uuid": "86e9acd1_e2be22a3",
        "filename": "src/math/big/float_test.go",
        "patchSetId": 5
      },
      "lineNbr": 1403,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-03-17T13:54:22Z",
      "side": 1,
      "message": "I\u0027m going to take your word for it on these test cases.",
      "revId": "107855c05d013ad27ca79ef27346aa4822b1211e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66bd98c9_f936cfb0",
        "filename": "src/math/big/float_test.go",
        "patchSetId": 5
      },
      "lineNbr": 1403,
      "author": {
        "id": 5210
      },
      "writtenOn": "2015-03-17T16:08:46Z",
      "side": 1,
      "message": "They are all of the form 0.1pMaxExp+/-delta with 0.1 in binary form, i.e, the msb(mantissa) set and the exponent close to the maximum.",
      "parentUuid": "86e9acd1_e2be22a3",
      "revId": "107855c05d013ad27ca79ef27346aa4822b1211e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86e9acd1_02bceea8",
        "filename": "src/math/big/float_test.go",
        "patchSetId": 5
      },
      "lineNbr": 1446,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-03-17T13:54:22Z",
      "side": 1,
      "message": "join lines",
      "revId": "107855c05d013ad27ca79ef27346aa4822b1211e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66bd98c9_5946e331",
        "filename": "src/math/big/float_test.go",
        "patchSetId": 5
      },
      "lineNbr": 1446,
      "author": {
        "id": 5210
      },
      "writtenOn": "2015-03-17T16:08:46Z",
      "side": 1,
      "message": "prefer leaving as is",
      "parentUuid": "86e9acd1_02bceea8",
      "revId": "107855c05d013ad27ca79ef27346aa4822b1211e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86e9acd1_c2b126d4",
        "filename": "src/math/big/floatconv.go",
        "patchSetId": 5
      },
      "lineNbr": 147,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-03-17T13:54:22Z",
      "side": 1,
      "message": "What is form in this case?  Must we audit all error return paths to ensure that they maintain the representation invariants?",
      "revId": "107855c05d013ad27ca79ef27346aa4822b1211e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66bd98c9_79dabfef",
        "filename": "src/math/big/floatconv.go",
        "patchSetId": 5
      },
      "lineNbr": 147,
      "author": {
        "id": 5210
      },
      "writtenOn": "2015-03-17T16:08:46Z",
      "side": 1,
      "message": "The result is invalid in the error case.\nSetting it to nil to be safe.",
      "parentUuid": "86e9acd1_c2b126d4",
      "revId": "107855c05d013ad27ca79ef27346aa4822b1211e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86e9acd1_02c22e9f",
        "filename": "src/math/big/floatconv.go",
        "patchSetId": 5
      },
      "lineNbr": 147,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-03-17T16:29:32Z",
      "side": 1,
      "message": "I meant *z, not f.\n\nIf err!\u003dnil, the caller shouldn\u0027t assume that f is defined, so setting it to nil is unnecessary.  But they may well assume that z is safe to use for subsequent Set-like operations, and they might also assume that it is safe with Get-like operations, i.e., it has some legal value even though it\u0027s not specified which one.\n\nI was concerned that if error paths in this method (and others like it) leave z.form in a state that\u0027s inconsistent with f.{exp,prec,neg,mant} then there may be possibility of crashes or corruption.",
      "parentUuid": "66bd98c9_79dabfef",
      "revId": "107855c05d013ad27ca79ef27346aa4822b1211e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66bd98c9_19754bfc",
        "filename": "src/math/big/floatconv.go",
        "patchSetId": 5
      },
      "lineNbr": 147,
      "author": {
        "id": 5210
      },
      "writtenOn": "2015-03-17T16:42:14Z",
      "side": 1,
      "message": "Good point. Actually if z was ok before, it\u0027s ok now. But it might be better to be explicit. Will address.",
      "parentUuid": "86e9acd1_02c22e9f",
      "revId": "107855c05d013ad27ca79ef27346aa4822b1211e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}