{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dd6cfd82_cab9f312",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-09-25T15:40:35Z",
      "side": 1,
      "message": "s/andr/and/",
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de09a2f4_594e7e97",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-09-25T16:52:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd6cfd82_cab9f312",
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd526500_b6979b50",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-09-25T15:21:47Z",
      "side": 1,
      "message": "This CL is ready for another pass.",
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37cfcaef_42835fc6",
        "filename": "src/cmd/compile/internal/types2/check.go",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-09-25T15:40:35Z",
      "side": 1,
      "message": "this field needs to move out of this section now (this section is \"package information\" that is valid for the entire package.\nIt probably should go to below environment. And quite possibly become a field of environment.",
      "fixSuggestions": [
        {
          "fixId": "81332010_60be14ae",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/compile/internal/types2/check.go",
              "range": {
                "startLine": 123,
                "startChar": 0,
                "endLine": 127,
                "endChar": 0
              },
              "replacement": "\tnextID uint64                 // unique Id for type parameters (first valid Id is 1)\n\tobjMap map[Object]*declInfo   // maps package-level objects and (non-interface) methods to declaration info\n\timpMap map[importKey]*Package // maps (import path, source directory) to (complete or fake) package\n"
            },
            {
              "path": "src/cmd/compile/internal/types2/check.go",
              "range": {
                "startLine": 143,
                "startChar": 0,
                "endLine": 143,
                "endChar": 0
              },
              "replacement": "\tversion      goVersion              // current accepted language version; changes across files\n"
            }
          ]
        }
      ],
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a68d1ec6_7303763c",
        "filename": "src/cmd/compile/internal/types2/check.go",
        "patchSetId": 6
      },
      "lineNbr": 123,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-09-25T16:52:11Z",
      "side": 1,
      "message": "Done. I moved it into the environment; much cleaner.",
      "parentUuid": "37cfcaef_42835fc6",
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27d8fa58_0aa4547a",
        "filename": "src/cmd/compile/internal/types2/check.go",
        "patchSetId": 6
      },
      "lineNbr": 276,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-09-25T15:40:35Z",
      "side": 1,
      "message": "this is probably not needed anymore (and misleading as is) - see comment above about where this field belongs",
      "fixSuggestions": [
        {
          "fixId": "e226aa79_2d1d104e",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/compile/internal/types2/check.go",
              "range": {
                "startLine": 276,
                "startChar": 0,
                "endLine": 277,
                "endChar": 0
              },
              "replacement": "\t\tversion: goVersion,\n"
            }
          ]
        }
      ],
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1f6b479_5a722a63",
        "filename": "src/cmd/compile/internal/types2/check.go",
        "patchSetId": 6
      },
      "lineNbr": 276,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-09-25T16:52:11Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "27d8fa58_0aa4547a",
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "246849f7_3e0b32eb",
        "filename": "src/cmd/compile/internal/types2/check.go",
        "patchSetId": 6
      },
      "lineNbr": 325,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-09-25T15:40:35Z",
      "side": 1,
      "message": "This code should be adjusted. The check.version is now file-specific.",
      "fixSuggestions": [
        {
          "fixId": "4c6d8f44_4b311b83",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/compile/internal/types2/check.go",
              "range": {
                "startLine": 324,
                "startChar": 0,
                "endLine": 330,
                "endChar": 0
              },
              "replacement": ""
            },
            {
              "path": "src/cmd/compile/internal/types2/check.go",
              "range": {
                "startLine": 362,
                "startChar": 0,
                "endLine": 362,
                "endChar": 0
              },
              "replacement": "\n\t// check if package version is too new\n\tpkgVersionOk :\u003d check.version.isValid()\n\tif pkgVersionOk \u0026\u0026 len(files) \u003e 0 \u0026\u0026 check.version.cmp(go_current) \u003e 0 {\n\t\tcheck.errorf(files[0], TooNew, \"package requires newer Go version %v (application built with %v)\",\n\t\t\tcheck.version, go_current)\n\t}\n"
            }
          ]
        }
      ],
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f8751b0_a23049b9",
        "filename": "src/cmd/compile/internal/types2/check.go",
        "patchSetId": 6
      },
      "lineNbr": 325,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-09-25T16:52:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "246849f7_3e0b32eb",
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0238e6ae_e78c81d5",
        "filename": "src/cmd/compile/internal/types2/check.go",
        "patchSetId": 6
      },
      "lineNbr": 493,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-09-25T15:40:35Z",
      "side": 1,
      "message": "remove this empty line, or add one after line 495",
      "fixSuggestions": [
        {
          "fixId": "ce83236e_ed7b93ca",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/cmd/compile/internal/types2/check.go",
              "range": {
                "startLine": 493,
                "startChar": 0,
                "endLine": 494,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "525345df_01209846",
        "filename": "src/cmd/compile/internal/types2/check.go",
        "patchSetId": 6
      },
      "lineNbr": 493,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-09-25T16:52:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0238e6ae_e78c81d5",
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f36fc5b_cf4be4d3",
        "filename": "src/go/types/api_test.go",
        "patchSetId": 6
      },
      "lineNbr": 3238,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-09-25T15:40:35Z",
      "side": 1,
      "message": "This test is missing the types2 source",
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67ac7a79_2eca9364",
        "filename": "src/go/types/api_test.go",
        "patchSetId": 6
      },
      "lineNbr": 3238,
      "author": {
        "id": 57259
      },
      "writtenOn": "2024-09-25T16:52:11Z",
      "side": 1,
      "message": "I wasn\u0027t convinced it made sense in types2, since the syntax tree is never mutated beyond what comes out of the parser.",
      "parentUuid": "3f36fc5b_cf4be4d3",
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "198f88d8_99dfd50c",
        "filename": "src/go/types/api_test.go",
        "patchSetId": 6
      },
      "lineNbr": 3238,
      "author": {
        "id": 7392
      },
      "writtenOn": "2024-09-25T19:44:56Z",
      "side": 1,
      "message": "Sure, but this test really tests that the version is correctly determined independent of the source pos. So even in types2 you could construct an incorrect source that might crash allowVersion before this change.\n\nMake the source code something that actually needs the version. This is somewhat tricky because the file version will be 1.21 if set to something below. Maybe:\n\n\"//go:build go1.22\\npackage p; func _(f func(func() bool)) { for range f {} }\"\n\nand then set the Config version to 1.21 (before range-over-func was permitted).\nThis will test that the file version is picked up correctly (by accepting this program) even in the presence of an invalid position.\n\nAlternatively, if you want to make this test just about the go/types issue, call it TestIssue69477 instead. Put an empty Test of the same name into types2 with a comment // go/types test only , or the like. This way it\u0027s clear for another reader that leaving the test out was intentional.",
      "parentUuid": "67ac7a79_2eca9364",
      "revId": "5283cf7bf32bd84d92a132a79ad758473c92cd25",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}