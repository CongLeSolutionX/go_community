{
  "comments": [
    {
      "key": {
        "uuid": "63bd8ac9_bcc0c5aa",
        "filename": "src/text/scanner/scanner.go",
        "patchSetId": 4
      },
      "lineNbr": 211,
      "author": {
        "id": 5210
      },
      "writtenOn": "2015-03-31T23:59:43Z",
      "side": 1,
      "message": "please change comment to:\n\n// no char read yet, not EOF",
      "range": {
        "startLine": 211,
        "startChar": 27,
        "endLine": 211,
        "endChar": 30
      },
      "revId": "62560e3928abade99db5166035149c45fdf53f45",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63bd8ac9_9c9869f5",
        "filename": "src/text/scanner/scanner_test.go",
        "patchSetId": 4
      },
      "lineNbr": 620,
      "author": {
        "id": 5210
      },
      "writtenOn": "2015-03-31T23:59:43Z",
      "side": 1,
      "message": "Please let\u0027s call this differently: what we really care about is having a reader the counts. So let\u0027s call it countingReader. Also, we don\u0027t need a struct:\n\ntype countingReader int\n\nis all we need. Or even just counter, because it\u0027s really a counter that happens to be a reader:\n\ntype counter int",
      "range": {
        "startLine": 620,
        "startChar": 5,
        "endLine": 620,
        "endChar": 18
      },
      "revId": "62560e3928abade99db5166035149c45fdf53f45",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63bd8ac9_5c25f127",
        "filename": "src/text/scanner/scanner_test.go",
        "patchSetId": 4
      },
      "lineNbr": 624,
      "author": {
        "id": 5210
      },
      "writtenOn": "2015-03-31T23:59:43Z",
      "side": 1,
      "message": "This becomes:\n\nfunc (r *countingReader) Read .... {\n   *r++\n   return 0, io.EOF\n}",
      "range": {
        "startLine": 624,
        "startChar": 9,
        "endLine": 624,
        "endChar": 22
      },
      "revId": "62560e3928abade99db5166035149c45fdf53f45",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63bd8ac9_47bfdef3",
        "filename": "src/text/scanner/scanner_test.go",
        "patchSetId": 4
      },
      "lineNbr": 631,
      "author": {
        "id": 5210
      },
      "writtenOn": "2015-03-31T23:59:43Z",
      "side": 1,
      "message": "var r counter\n\n(or: var r countingReader)",
      "revId": "62560e3928abade99db5166035149c45fdf53f45",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63bd8ac9_dcc3c1a3",
        "filename": "src/text/scanner/scanner_test.go",
        "patchSetId": 4
      },
      "lineNbr": 638,
      "author": {
        "id": 5210
      },
      "writtenOn": "2015-03-31T23:59:43Z",
      "side": 1,
      "message": "for consistency, please s/eof/EOF/ here and below",
      "revId": "62560e3928abade99db5166035149c45fdf53f45",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63bd8ac9_87c9f6a8",
        "filename": "src/text/scanner/scanner_test.go",
        "patchSetId": 4
      },
      "lineNbr": 646,
      "author": {
        "id": 5210
      },
      "writtenOn": "2015-03-31T23:59:43Z",
      "side": 1,
      "message": "if r !\u003d 2 { ...",
      "range": {
        "startLine": 646,
        "startChar": 6,
        "endLine": 646,
        "endChar": 11
      },
      "revId": "62560e3928abade99db5166035149c45fdf53f45",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}