{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2076e84c_6657e3af",
        "filename": "src/cmd/asm/internal/asm/testdata/riscv64.s",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-03-17T17:57:21Z",
      "side": 1,
      "message": "Loading from a symbol will have a relocation. Is this encoding still valid/useful?",
      "range": {
        "startLine": 284,
        "startChar": 27,
        "endLine": 284,
        "endChar": 35
      },
      "revId": "afeeec9b9511afb89220ed60f9ead0a2501c1fbc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65e0db5b_4bcf10ab",
        "filename": "src/cmd/asm/internal/asm/testdata/riscv64.s",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 13640
      },
      "writtenOn": "2021-03-18T04:16:44Z",
      "side": 1,
      "message": "I believe so - the instruction sequence of the load is AUIPC + LD, which will then have a relocation applied. Unfortunately, this is still the last hold out in the assembler where we\u0027re modifying obj.Prog and not making the full sequence visible here. While matching on an AUIPC is not ideal, it does confirm that we\u0027re not generating another instruction sequence and that this is actually valid assembly (and not an error as it would have been previously).",
      "parentUuid": "2076e84c_6657e3af",
      "range": {
        "startLine": 284,
        "startChar": 27,
        "endLine": 284,
        "endChar": 35
      },
      "revId": "afeeec9b9511afb89220ed60f9ead0a2501c1fbc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}