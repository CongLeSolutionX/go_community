{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "942c4468_4dad49df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2021-02-02T03:01:16Z",
      "side": 1,
      "message": "Thank you, Wei! I\u0027ve replied to your updates, PTAL.",
      "revId": "0b7f3847eac5e8143c1439bae8a25d371ca60044",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d23fee1b_659eac32",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2021-02-02T09:05:34Z",
      "side": 1,
      "message": "Also cc-ing Bryan to examine potential flakes, please, and thank you!",
      "revId": "0b7f3847eac5e8143c1439bae8a25d371ca60044",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ed15d0c_aec0ac27",
        "filename": "src/net/http/fs_test.go",
        "patchSetId": 4
      },
      "lineNbr": 1423,
      "author": {
        "id": 5305
      },
      "writtenOn": "2021-02-02T18:40:43Z",
      "side": 1,
      "message": "I think the test for timeouts should be in net/sendfile_test.go.\n\nThe bug being fixed is in the ReadFrom method of net.TCPConn; the test should be as close to that point as possible.\n\nPerhaps we should also have this test for the net/http package, but testing net/http with files of different sizes to trigger potential bugs in net.TCPConn puts too much distance between the code under test and the test.",
      "revId": "0b7f3847eac5e8143c1439bae8a25d371ca60044",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b23d780_f7c5bc00",
        "filename": "src/net/http/fs_test.go",
        "patchSetId": 4
      },
      "lineNbr": 1423,
      "author": {
        "id": 27462
      },
      "writtenOn": "2021-02-03T11:21:20Z",
      "side": 1,
      "message": "Thanks! I\u0027m agree. Will add case in sendfile_test.go. I think we can keep both cases. The test case for net/http is like regression, even if it is not close to Sendfile.",
      "parentUuid": "9ed15d0c_aec0ac27",
      "revId": "0b7f3847eac5e8143c1439bae8a25d371ca60044",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96be72bc_3fb7e1e7",
        "filename": "src/net/http/fs_test.go",
        "patchSetId": 4
      },
      "lineNbr": 1423,
      "author": {
        "id": 27462
      },
      "writtenOn": "2021-02-04T15:28:12Z",
      "side": 1,
      "message": "Added case in net/sendfile_test.go.",
      "parentUuid": "6b23d780_f7c5bc00",
      "revId": "0b7f3847eac5e8143c1439bae8a25d371ca60044",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cc768e8_28cdb0b6",
        "filename": "src/net/http/fs_test.go",
        "patchSetId": 4
      },
      "lineNbr": 1428,
      "author": {
        "id": 5305
      },
      "writtenOn": "2021-02-02T18:40:43Z",
      "side": 1,
      "message": "Nit: I\u0027m guessing the \"filename :\u003d file\" is to avoid capturing the loop variable in the closure below. Shadowing the loop var (\"file :\u003d file\") will achieve the same while making it impossible to accidentally reference the wrong variable below.",
      "revId": "0b7f3847eac5e8143c1439bae8a25d371ca60044",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00bba3a0_fb92656f",
        "filename": "src/net/http/fs_test.go",
        "patchSetId": 4
      },
      "lineNbr": 1428,
      "author": {
        "id": 27462
      },
      "writtenOn": "2021-02-03T11:21:20Z",
      "side": 1,
      "message": "Got it!. Thank you",
      "parentUuid": "9cc768e8_28cdb0b6",
      "revId": "0b7f3847eac5e8143c1439bae8a25d371ca60044",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b085db75_21904c7b",
        "filename": "src/net/http/fs_test.go",
        "patchSetId": 4
      },
      "lineNbr": 1428,
      "author": {
        "id": 27462
      },
      "writtenOn": "2021-02-04T15:28:12Z",
      "side": 1,
      "message": "updated with filename :\u003d filename.",
      "parentUuid": "00bba3a0_fb92656f",
      "revId": "0b7f3847eac5e8143c1439bae8a25d371ca60044",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48448ee0_2dbafcae",
        "filename": "src/net/http/fs_test.go",
        "patchSetId": 4
      },
      "lineNbr": 1430,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-02-02T15:43:02Z",
      "side": 1,
      "message": "A comment for this constant would be helpful. 100ms is quite a long time, especially for a non-parallel test. Does the test really need it to be this long?",
      "revId": "0b7f3847eac5e8143c1439bae8a25d371ca60044",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "343f08cd_bffc877c",
        "filename": "src/net/http/fs_test.go",
        "patchSetId": 4
      },
      "lineNbr": 1430,
      "author": {
        "id": 27462
      },
      "writtenOn": "2021-02-03T11:21:20Z",
      "side": 1,
      "message": "I see. I will update it. Thanks for the suggestion.",
      "parentUuid": "48448ee0_2dbafcae",
      "revId": "0b7f3847eac5e8143c1439bae8a25d371ca60044",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f61c7c3_87032aff",
        "filename": "src/net/http/fs_test.go",
        "patchSetId": 4
      },
      "lineNbr": 1432,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-02-02T15:43:02Z",
      "side": 1,
      "message": "time.Sleep is generally not reliable for testing â€” especially not with a factor as small as 2. Is it possible to replace this sleeping with some form of synchronization?\n\nFor example, should the call to Get return before fileServer.ServeHTTP is run? If so, you could close a channel after Get returns, and receive from that channel here in the handler.",
      "revId": "0b7f3847eac5e8143c1439bae8a25d371ca60044",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa86a8e7_80731269",
        "filename": "src/net/http/fs_test.go",
        "patchSetId": 4
      },
      "lineNbr": 1432,
      "author": {
        "id": 27462
      },
      "writtenOn": "2021-02-03T11:21:20Z",
      "side": 1,
      "message": "Yeah. Try to use synchronization instead of time.Sleep here. Will update it later.",
      "parentUuid": "3f61c7c3_87032aff",
      "revId": "0b7f3847eac5e8143c1439bae8a25d371ca60044",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05d62902_e76d1e8c",
        "filename": "src/net/http/fs_test.go",
        "patchSetId": 4
      },
      "lineNbr": 1432,
      "author": {
        "id": 27462
      },
      "writtenOn": "2021-02-04T15:28:12Z",
      "side": 1,
      "message": "I used connection state hook to set deadline in the past. It acts like `server.WriteTimeout` and `time.Sleep`. Please take a look.",
      "parentUuid": "fa86a8e7_80731269",
      "revId": "0b7f3847eac5e8143c1439bae8a25d371ca60044",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}