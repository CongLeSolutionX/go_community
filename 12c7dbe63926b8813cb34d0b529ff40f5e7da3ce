{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d5d3fd01_1c71d7b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T01:08:13Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d12c7dbe6\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c1837d1_ffd6a44f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T01:08:13Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "53840f09_96bda9c2",
      "tag": "autogenerated:trybots~beginning",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b4580bb_bc052538",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T01:16:47Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "d5d3fd01_1c71d7b9",
      "tag": "autogenerated:trybots~happy",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a95f5c21_6ce04ab1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "LGTM overall.",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ebad380_0b8fc059",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 5
      },
      "lineNbr": 336,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-03-02T18:47:38Z",
      "side": 1,
      "message": "Maybe mention from one p..inittask symbol to another?",
      "range": {
        "startLine": 336,
        "startChar": 51,
        "endLine": 336,
        "endChar": 71
      },
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8810b33d_b585df6c",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 5
      },
      "lineNbr": 336,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-03T22:26:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ebad380_0b8fc059",
      "range": {
        "startLine": 336,
        "startChar": 51,
        "endLine": 336,
        "endChar": 71
      },
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "408a60aa_5846cbb3",
        "filename": "src/cmd/link/internal/ld/deadcode.go",
        "patchSetId": 5
      },
      "lineNbr": 216,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "Is it even possible to have a dead inittask record? Not sure how that would happen.",
      "range": {
        "startLine": 216,
        "startChar": 25,
        "endLine": 216,
        "endChar": 43
      },
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6d7f2ac_10d9f391",
        "filename": "src/cmd/link/internal/ld/deadcode.go",
        "patchSetId": 5
      },
      "lineNbr": 216,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-03T22:26:50Z",
      "side": 1,
      "message": "That\u0027s a good point, it is probably not possible. We only load reachable packages.",
      "parentUuid": "408a60aa_5846cbb3",
      "range": {
        "startLine": 216,
        "startChar": 25,
        "endLine": 216,
        "endChar": 43
      },
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "561bec9c_a50e9324",
        "filename": "src/cmd/link/internal/ld/heap.go",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "FYI, the history here is that we originally started out using the regular stdlib heap in the linker for deadcode, then realized that it is performance critical (makes a difference in how fast deadcode runs), so Cherry replaced the stdlib stuff with a specialized implementation (above).\n\nYour use case is not performance critical however, so it might be nice to have a comment here (at some point hopefully we can replace both with something that uses generics).",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10bef1c3_9b14552c",
        "filename": "src/cmd/link/internal/ld/heap.go",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-03T22:26:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "561bec9c_a50e9324",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa38ec17_f8cf0a9d",
        "filename": "src/cmd/link/internal/ld/heap.go",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-03-02T18:47:38Z",
      "side": 1,
      "message": "Accessing a symbol\u0027s name isn\u0027t very cheap. It might be good to not access it repeatedly. On the other hand, if this is only for a relatively small number of init symbols, it is probably fine.",
      "range": {
        "startLine": 65,
        "startChar": 5,
        "endLine": 65,
        "endChar": 16
      },
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94492049_88e8cd5d",
        "filename": "src/cmd/link/internal/ld/heap.go",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-03T22:26:50Z",
      "side": 1,
      "message": "These lists are pretty short, I\u0027m not too worried about it.",
      "parentUuid": "fa38ec17_f8cf0a9d",
      "range": {
        "startLine": 65,
        "startChar": 5,
        "endLine": 65,
        "endChar": 16
      },
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12f0f015_1bacc6e4",
        "filename": "src/cmd/link/internal/ld/inittask.go",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "Maybe notify @drchase when you submit this so he can add it to his list for the slice stuff CL he is working on.",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20ab555b_2134d693",
        "filename": "src/cmd/link/internal/ld/inittask.go",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-03T22:26:50Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "12f0f015_1bacc6e4",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c991e6a_1a094292",
        "filename": "src/cmd/link/internal/ld/inittask.go",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "is this ever going to execute?",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb6dd643_781fd02a",
        "filename": "src/cmd/link/internal/ld/inittask.go",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-03T22:26:50Z",
      "side": 1,
      "message": "Yes, this happens for all the references to the initialization functions from the inittask record.",
      "parentUuid": "2c991e6a_1a094292",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8a127ad_36d4b1df",
        "filename": "src/cmd/link/internal/ld/inittask.go",
        "patchSetId": 5
      },
      "lineNbr": 121,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "nit: {from:x, to:s}",
      "range": {
        "startLine": 121,
        "startChar": 30,
        "endLine": 121,
        "endChar": 34
      },
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd4245fd_f5a50fcf",
        "filename": "src/cmd/link/internal/ld/inittask.go",
        "patchSetId": 5
      },
      "lineNbr": 121,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-03T22:26:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8a127ad_36d4b1df",
      "range": {
        "startLine": 121,
        "startChar": 30,
        "endLine": 121,
        "endChar": 34
      },
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dff5737d_d4026d83",
        "filename": "src/cmd/link/internal/ld/link.go",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-03-02T18:47:38Z",
      "side": 1,
      "message": "Minor: usually we put specific symbol into the ArchSyms structure (which is embedded in this struct).",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9150a6cc_24b19a0c",
        "filename": "src/cmd/link/internal/ld/link.go",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-03T22:26:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dff5737d_d4026d83",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80bed1a7_8eae4a8e",
        "filename": "test/fixedbugs/issue31636.out",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "I tried a variant of this test with gccgo, and it looks like the bug is already fixed there. Is this consistent with your understanding?",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aeaea14a_23cb4c66",
        "filename": "test/fixedbugs/issue31636.out",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-03T22:26:50Z",
      "side": 1,
      "message": "No, I was unaware of that.\nWe\u0027re enforcing an order that was previously unspecified, so I guess it could happen by accident.",
      "parentUuid": "80bed1a7_8eae4a8e",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}