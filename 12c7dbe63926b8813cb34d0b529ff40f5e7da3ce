{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d5d3fd01_1c71d7b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T01:08:13Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d12c7dbe6\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c1837d1_ffd6a44f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T01:08:13Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "53840f09_96bda9c2",
      "tag": "autogenerated:trybots~beginning",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b4580bb_bc052538",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-01T01:16:47Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "d5d3fd01_1c71d7b9",
      "tag": "autogenerated:trybots~happy",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a95f5c21_6ce04ab1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "LGTM overall.",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "408a60aa_5846cbb3",
        "filename": "src/cmd/link/internal/ld/deadcode.go",
        "patchSetId": 5
      },
      "lineNbr": 216,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "Is it even possible to have a dead inittask record? Not sure how that would happen.",
      "range": {
        "startLine": 216,
        "startChar": 25,
        "endLine": 216,
        "endChar": 43
      },
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "561bec9c_a50e9324",
        "filename": "src/cmd/link/internal/ld/heap.go",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "FYI, the history here is that we originally started out using the regular stdlib heap in the linker for deadcode, then realized that it is performance critical (makes a difference in how fast deadcode runs), so Cherry replaced the stdlib stuff with a specialized implementation (above).\n\nYour use case is not performance critical however, so it might be nice to have a comment here (at some point hopefully we can replace both with something that uses generics).",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12f0f015_1bacc6e4",
        "filename": "src/cmd/link/internal/ld/inittask.go",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "Maybe notify @drchase when you submit this so he can add it to his list for the slice stuff CL he is working on.",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c991e6a_1a094292",
        "filename": "src/cmd/link/internal/ld/inittask.go",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "is this ever going to execute?",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8a127ad_36d4b1df",
        "filename": "src/cmd/link/internal/ld/inittask.go",
        "patchSetId": 5
      },
      "lineNbr": 121,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "nit: {from:x, to:s}",
      "range": {
        "startLine": 121,
        "startChar": 30,
        "endLine": 121,
        "endChar": 34
      },
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80bed1a7_8eae4a8e",
        "filename": "test/fixedbugs/issue31636.out",
        "patchSetId": 5
      },
      "lineNbr": 1,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-03-01T16:50:33Z",
      "side": 1,
      "message": "I tried a variant of this test with gccgo, and it looks like the bug is already fixed there. Is this consistent with your understanding?",
      "revId": "12c7dbe63926b8813cb34d0b529ff40f5e7da3ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}