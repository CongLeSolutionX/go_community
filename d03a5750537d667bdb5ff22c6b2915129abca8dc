{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "faa76437_49592a3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-12T05:28:14Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dd03a5750\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "d03a5750537d667bdb5ff22c6b2915129abca8dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e8cfcb5_56ff92f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-12T05:28:14Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "d84348aa_5d6de172",
      "tag": "autogenerated:trybots~beginning",
      "revId": "d03a5750537d667bdb5ff22c6b2915129abca8dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f576adc5_569d30f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-12T05:38:48Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "faa76437_49592a3c",
      "tag": "autogenerated:trybots~happy",
      "revId": "d03a5750537d667bdb5ff22c6b2915129abca8dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea32022b_b9fff5f6",
        "filename": "src/slices/slices.go",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-05-12T15:26:53Z",
      "side": 1,
      "message": "!overlap(s[i:tot], v) is a bit more precise.",
      "revId": "d03a5750537d667bdb5ff22c6b2915129abca8dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d7fab86_45653d50",
        "filename": "src/slices/slices.go",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-05-12T15:26:53Z",
      "side": 1,
      "message": "I\u0027m thinking that there might be a better way to handle overlap than just punt to alloc+copy. That\u0027s going to lead to a lot of allocation. Instead, we can use the slice array itself as temporary storage. Here\u0027s a half-baked idea:\n\nSo let\u0027s say we want to do:\n\n    s \u003d ... some slice of 10 elements ...\n    Insert(s, 2, s[6:9]).\n\nFirst we take s[2:10] and copy it to s[5:13]. Because that overlaps with our source slice v, we can just adjust where the source slice is. It started at s[6:9] but now it is at s[9:12]. So just use that second location as the source for the second copy.\n\nOf course it gets complicated if various parts partially overlap and/or hang off the end.",
      "revId": "d03a5750537d667bdb5ff22c6b2915129abca8dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae18d756_88e9aa32",
        "filename": "src/slices/slices.go",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-05-12T15:39:14Z",
      "side": 1,
      "message": "If the source slice lives in the about-to-be overwritten part just past the length of s (in the example above, say it was s[10:13]), then we can first do:\n\nswap(s[2:5], s[10:13])\n\nWhere swap does the obvious thing. Then we can recurse with i\u003d5, as our source v is now in the correct destination, and the part we just swapped out is now the source that needs inserting.\n\nAgain it gets tricky on the last recursive op when overlap occurs.",
      "parentUuid": "2d7fab86_45653d50",
      "revId": "d03a5750537d667bdb5ff22c6b2915129abca8dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fa44b64_94535c18",
        "filename": "src/slices/slices.go",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-05-12T15:00:57Z",
      "side": 1,
      "message": "I\u0027m not sure whether this `uintptr` comparisons are valid: is the runtime allowed to relocate the slice partway through evaluating this expression?",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 107,
        "endChar": 76
      },
      "revId": "d03a5750537d667bdb5ff22c6b2915129abca8dc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}