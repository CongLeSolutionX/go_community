{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b68816f8_d2bf468f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 47743
      },
      "writtenOn": "2021-09-17T21:33:38Z",
      "side": 1,
      "message": "CL was reviewed here: https://go-review.googlesource.com/c/go/+/303949\nBut reverted due to TestSplicePipePool test. Related issue is closed: https://github.com/golang/go/issues/48066\nI rebased the patch and tested it on 386 machine. There is no the issue so far. Could you please rerun trybot?",
      "revId": "c5be3948d166425d524510f1efa7d8bbb0102ba1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "643e4756_d3cb7fba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 47743
      },
      "writtenOn": "2021-09-21T22:20:24Z",
      "side": 1,
      "message": "Is there any chance to check the patch?",
      "revId": "c5be3948d166425d524510f1efa7d8bbb0102ba1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8e67026_a8c1e12f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-21T23:09:49Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dc5be3948",
      "tag": "autogenerated:trybots~beginning",
      "revId": "c5be3948d166425d524510f1efa7d8bbb0102ba1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4faa6008_dfc30e33",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-21T23:15:16Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003dc5be3948\nFailed on (x/tools) linux-amd64: https://storage.googleapis.com/go-build-log/c5be3948/linux-amd64_5dab814e.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "f8e67026_a8c1e12f",
      "tag": "autogenerated:trybots~progress",
      "revId": "c5be3948d166425d524510f1efa7d8bbb0102ba1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "603fc118_badb6212",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-21T23:21:43Z",
      "side": 1,
      "message": "1 of 26 TryBots failed.\nFailed on (x/tools) linux-amd64: https://storage.googleapis.com/go-build-log/c5be3948/linux-amd64_5dab814e.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "f8e67026_a8c1e12f",
      "tag": "autogenerated:trybots~failed",
      "revId": "c5be3948d166425d524510f1efa7d8bbb0102ba1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe5883b4_47cda7ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 47743
      },
      "writtenOn": "2021-09-21T23:34:13Z",
      "side": 1,
      "message": "```\ninternal/typeparams/typeparams_go118.go:120:15: named.Origin undefined (type *types.Named has no field or method Origin)\ninternal/typeparams/typeparams_go118.go:142:7: info.Instances undefined (type *types.Info has no field or method Instances)\ninternal/typeparams/typeparams_go118.go:142:45: undefined: types.Instance\ninternal/typeparams/typeparams_go118.go:149:10: info.Instances undefined (type *types.Info has no field or method Instances)\ninternal/typeparams/typeparams_go118.go:150:15: info.Instances undefined (type *types.Info has no field or method Instances)\n```\n\nThe errors are not related to the patch. Rebased, please rerun it.",
      "parentUuid": "603fc118_badb6212",
      "revId": "c5be3948d166425d524510f1efa7d8bbb0102ba1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "183507df_07e87efb",
        "filename": "src/sync/pool.go",
        "patchSetId": 4
      },
      "lineNbr": 304,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-09-21T23:34:23Z",
      "side": 1,
      "message": "The reset method seems to be roughly quadratic in the number of P\u0027s, and the number of P\u0027s can be large.  The version in the runtime package only calls reset when the number of P\u0027s changes, which happens rarely.  This algorithm is going to call reset for every pool, which could be a lot.  That doesn\u0027t seem ideal.  Since this code already depends on runtime internals, can we just use runtime.stealOrder somehow?",
      "revId": "c5be3948d166425d524510f1efa7d8bbb0102ba1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d471743_abaa4992",
        "filename": "src/sync/pool.go",
        "patchSetId": 4
      },
      "lineNbr": 304,
      "author": {
        "id": 47743
      },
      "writtenOn": "2021-09-21T23:43:09Z",
      "side": 1,
      "message": "runtime.stealOrder is not exported by runtime package as well as randomOrder type. This required API extension.",
      "parentUuid": "183507df_07e87efb",
      "revId": "c5be3948d166425d524510f1efa7d8bbb0102ba1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b514f3d8_8905f27e",
        "filename": "src/sync/pool.go",
        "patchSetId": 4
      },
      "lineNbr": 304,
      "author": {
        "id": 47743
      },
      "writtenOn": "2021-09-21T23:59:37Z",
      "side": 1,
      "message": "Also, according to this line:\n```\n\ts :\u003d p.localSize\n\tif uintptr(pid) \u003c s {\n\t\treturn indexLocal(l, pid), pid\n\t}\n\t// If GOMAXPROCS changes between GCs, we re-allocate the array and lose the old one.\n```\n\nReset will happen only if there is a new P try to pin.",
      "parentUuid": "1d471743_abaa4992",
      "revId": "c5be3948d166425d524510f1efa7d8bbb0102ba1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "001bc65b_5ca63581",
        "filename": "src/sync/pool.go",
        "patchSetId": 4
      },
      "lineNbr": 304,
      "author": {
        "id": 5206
      },
      "writtenOn": "2021-09-22T00:44:06Z",
      "side": 1,
      "message": "I understand that runtime.stealOrder is not exported, but this package already reaches into the runtime package using //go:linkname.  We can do that for stealOrder as well.\n\nI agree that Reset will only happen if there is a new P, but my point is that it will happen for every sync.Pool in the program.",
      "parentUuid": "b514f3d8_8905f27e",
      "revId": "c5be3948d166425d524510f1efa7d8bbb0102ba1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a929ed6c_cb262d69",
        "filename": "src/sync/pool.go",
        "patchSetId": 4
      },
      "lineNbr": 304,
      "author": {
        "id": 47743
      },
      "writtenOn": "2021-09-25T19:43:54Z",
      "side": 1,
      "message": "OK, I get your point. It easy to make a link to `stealOrder`, I guess like this:\n```\n//go:linkname pOrder runtime.stealOrder\nvar pOrder randomOrder\n```\n\nBut `randomOrder` and `randomEnum` types are still not exported, we can\u0027t use them. Or there is a solution to link type as well?\n\nAnother possibility make set of functions linked to `randomOrder` methods, like this:\n```\n//go:linkname runtime_LoadAcquintptr runtime/internal/atomic.LoadAcquintptr\nfunc runtime_order_start(i uint32)\n// etc.\n```\nBut it looks a little ugly.\n\nIs there any other solutions?",
      "parentUuid": "001bc65b_5ca63581",
      "revId": "c5be3948d166425d524510f1efa7d8bbb0102ba1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}