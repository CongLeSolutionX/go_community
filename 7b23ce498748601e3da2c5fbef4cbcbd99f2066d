{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "175b96d9_d0fb9b00",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2020-11-02T21:54:00Z",
      "side": 1,
      "message": "Thank you for the review, Keith! Comments addressed, PTAL.",
      "revId": "7b23ce498748601e3da2c5fbef4cbcbd99f2066d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a47a823d_256d0a70",
        "filename": "src/runtime/crash_test.go",
        "patchSetId": 18
      },
      "lineNbr": 247,
      "author": {
        "id": 5200
      },
      "writtenOn": "2020-11-02T22:25:11Z",
      "side": 1,
      "message": "10000",
      "range": {
        "startLine": 247,
        "startChar": 40,
        "endLine": 247,
        "endChar": 44
      },
      "revId": "7b23ce498748601e3da2c5fbef4cbcbd99f2066d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d665b5a7_6a55398f",
        "filename": "src/runtime/crash_test.go",
        "patchSetId": 18
      },
      "lineNbr": 247,
      "author": {
        "id": 5137
      },
      "writtenOn": "2020-11-02T22:52:41Z",
      "side": 1,
      "message": "Ahh, nice catch, thanks!",
      "parentUuid": "a47a823d_256d0a70",
      "range": {
        "startLine": 247,
        "startChar": 40,
        "endLine": 247,
        "endChar": 44
      },
      "revId": "7b23ce498748601e3da2c5fbef4cbcbd99f2066d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48dd5a29_8e4117f2",
        "filename": "src/runtime/traceback.go",
        "patchSetId": 18
      },
      "lineNbr": 100,
      "author": {
        "id": 5200
      },
      "writtenOn": "2020-11-02T22:25:11Z",
      "side": 1,
      "message": "I guess mentioning that \"regular\"\u003d\u003d\"not runtime\" would be useful here.",
      "revId": "7b23ce498748601e3da2c5fbef4cbcbd99f2066d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d69ccae0_0d5e3a5f",
        "filename": "src/runtime/traceback.go",
        "patchSetId": 18
      },
      "lineNbr": 100,
      "author": {
        "id": 5137
      },
      "writtenOn": "2020-11-02T22:52:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48dd5a29_8e4117f2",
      "revId": "7b23ce498748601e3da2c5fbef4cbcbd99f2066d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73e90e14_d0a47d03",
        "filename": "src/runtime/traceback.go",
        "patchSetId": 18
      },
      "lineNbr": 785,
      "author": {
        "id": 5200
      },
      "writtenOn": "2020-11-02T22:25:11Z",
      "side": 1,
      "message": "Don\u0027t we want something like:\n\nnframes :\u003d nregularframes\nif flags\u0026_TraceRuntimeFrames !\u003d 0 {\n    nframes \u003d totalframes\n}\n\nand then use nframes from here on out?\n\nFor that matter, maybe countframes should do that. It can base its returned value on that bit of the flags variable.",
      "revId": "7b23ce498748601e3da2c5fbef4cbcbd99f2066d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "034560d5_b5e885ef",
        "filename": "src/runtime/traceback.go",
        "patchSetId": 18
      },
      "lineNbr": 785,
      "author": {
        "id": 5137
      },
      "writtenOn": "2020-11-02T22:52:41Z",
      "side": 1,
      "message": "Sage advice, thank you! I forgot that we want to switch on _TraceRuntimeFrames. Done.",
      "parentUuid": "73e90e14_d0a47d03",
      "revId": "7b23ce498748601e3da2c5fbef4cbcbd99f2066d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}