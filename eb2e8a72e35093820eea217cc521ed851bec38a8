{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "91fbe897_48880a89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-01-31T23:18:33Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003deb2e8a72\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "eb2e8a72e35093820eea217cc521ed851bec38a8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0562561_606979f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-01-31T23:30:16Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "91fbe897_48880a89",
      "tag": "autogenerated:trybots~happy",
      "revId": "eb2e8a72e35093820eea217cc521ed851bec38a8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a115a554_16eafbbe",
        "filename": "src/cmd/compile/internal/types2/unify.go",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-02-01T19:44:08Z",
      "side": 1,
      "message": "This is fine, but could use some additional documentation, I think. Specifically, I\u0027m not sure the term \"type handle\" is defined anywhere. After reading the code, I understand that it is approximately an \"equivalence class\", but that is not apparent from the documentation here.\n\nI also think it may be possible to simplify the algorithm by having the handle track all the joined handles.\n\nIt\u0027s a bit of a trick, but consider if we had `handles map[*TypeParam]*[]Type`, and enforced an invariant that if len(handle[t]) \u003d\u003d 1, it is a known type, otherwise it contains a set of equivalent type parameters (when we join two type parameters we will produce a set of length at least 2).\n\nNot necessary for this CL. The current code is fine, and I understand further simplifications are coming.\n\nWill +2, and we can hammer out the documentation / clever tricks later.",
      "range": {
        "startLine": 55,
        "startChar": 1,
        "endLine": 55,
        "endChar": 29
      },
      "revId": "eb2e8a72e35093820eea217cc521ed851bec38a8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5b3ad51_d3a5f77e",
        "filename": "src/cmd/compile/internal/types2/unify.go",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-02-01T21:10:31Z",
      "side": 1,
      "message": "I think the documentation/definition is directly above:\n\n\"Joined type parameters (parameters that have been unified) share the same handle and thus type.\"\n\nBut I have rewritten this comment, it should be clearer now.",
      "parentUuid": "a115a554_16eafbbe",
      "range": {
        "startLine": 55,
        "startChar": 1,
        "endLine": 55,
        "endChar": 29
      },
      "revId": "eb2e8a72e35093820eea217cc521ed851bec38a8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}