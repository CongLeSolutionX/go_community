{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "279be798_be8f8326",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-28T08:57:58Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dad80aebf\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "ad80aebf4bf8ca459455db9949098d85ec62c891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e71883a_28214b6a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-28T09:06:37Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "279be798_be8f8326",
      "tag": "autogenerated:trybots~happy",
      "revId": "ad80aebf4bf8ca459455db9949098d85ec62c891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc1b47ab_6cd93cb8",
        "filename": "src/maps/maps.go",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-07T17:49:34Z",
      "side": 1,
      "message": "I think there is a question that needs to be answered here, which is are we cloning the capacity also? I think the answer is no, or at least that\u0027s what the previous code did.\nThe new code does clone the capacity, which is subtly different behavior. (e.g. make a big map, delete most entries, then clone it. How much space does the new map take?)\nI don\u0027t think that\u0027s a show stopper, but maybe something to think about.",
      "revId": "ad80aebf4bf8ca459455db9949098d85ec62c891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "480a9365_40be8462",
        "filename": "src/maps/maps.go",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-03-07T17:58:25Z",
      "side": 1,
      "message": "I do not think that maps.Clone should clone the capacity.  I think that people would find that surprising.  If a map has N entries, then the result of maps.Clone should be sized for N entries.",
      "parentUuid": "cc1b47ab_6cd93cb8",
      "revId": "ad80aebf4bf8ca459455db9949098d85ec62c891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e8781e8_b0e2d7d7",
        "filename": "src/maps/maps.go",
        "patchSetId": 6
      },
      "lineNbr": 71,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-07T17:49:34Z",
      "side": 1,
      "message": "\"var r M\" I think works here.\n\nProbably push this down just before the return also - it isn\u0027t needed until then.",
      "revId": "ad80aebf4bf8ca459455db9949098d85ec62c891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb5f5603_9f5dadc8",
        "filename": "src/maps/maps.go",
        "patchSetId": 6
      },
      "lineNbr": 73,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-07T17:49:34Z",
      "side": 1,
      "message": "Wow, that\u0027s ugly. There\u0027s a whole lot of assumptions about how reflectlite works and how it matches *runtime._type.\n\nCan\u0027t we just pass this as an interface to clone? That will pass the type along.\n\nfunc clone(m any) any\n\nThen you can just do\n\nreturn clone(m).(M)\n\nThe type will get included as part of the arg, and we can guarantee the right type on return. Because maps are single-pointer things, no allocation needed.",
      "revId": "ad80aebf4bf8ca459455db9949098d85ec62c891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cae94c7_b1b39da2",
        "filename": "src/runtime/map.go",
        "patchSetId": 6
      },
      "lineNbr": 1433,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-07T17:49:34Z",
      "side": 1,
      "message": "This needs a comment about what it is for (implementing maps.Clone).",
      "revId": "ad80aebf4bf8ca459455db9949098d85ec62c891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab5b390e_8beb81f1",
        "filename": "src/runtime/map.go",
        "patchSetId": 6
      },
      "lineNbr": 1433,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-07T17:49:34Z",
      "side": 1,
      "message": "Then\n\nfunc mapclone(m any) any {\n    e :\u003d efaceOf(\u0026m)\n    e.data \u003d mapclone2((*maptype)(unsafe.Pointer(e._type)), e.data)\n    return m\n}\n\nor something like that.",
      "revId": "ad80aebf4bf8ca459455db9949098d85ec62c891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e63fb59_c8b18bfd",
        "filename": "src/runtime/map.go",
        "patchSetId": 6
      },
      "lineNbr": 1438,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-03-07T17:49:34Z",
      "side": 1,
      "message": "What about flags? Maybe none are needed (sameSizeGrow is the only one I\u0027m unsure about), but a comment here would be good.",
      "revId": "ad80aebf4bf8ca459455db9949098d85ec62c891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}