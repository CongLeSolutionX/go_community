{
  "comments": [
    {
      "key": {
        "uuid": "8de6d230_d66e7b16",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 6
      },
      "lineNbr": 137,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-02-17T20:33:14Z",
      "side": 1,
      "message": "Are both dataCount and tagCount 30 bits now? The big comment at the top still says dataCount is 32 bits.",
      "revId": "8163e7ee72de784bdae7dcf5aa417c29a29825e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3696d650_836745f1",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-02-17T20:33:14Z",
      "side": 1,
      "message": "This is trimming the data argument to 30 bits, but the data field can still overflow into 32 bits. Did you mean uint64((uint32(x)+uint32(data))\u003c\u003c2\u003e\u003e2)?",
      "range": {
        "startLine": 147,
        "startChar": 66,
        "endLine": 147,
        "endChar": 102
      },
      "revId": "8163e7ee72de784bdae7dcf5aa417c29a29825e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13697f69_6e21b357",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 6
      },
      "lineNbr": 186,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-02-17T20:33:14Z",
      "side": 1,
      "message": "// Store overflowTime first so it\u0027s always available when overflow !\u003d 0.",
      "revId": "8163e7ee72de784bdae7dcf5aa417c29a29825e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db1ad584_1d831c17",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 6
      },
      "lineNbr": 300,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-02-17T20:33:14Z",
      "side": 1,
      "message": "Remove comment about tagLock",
      "revId": "8163e7ee72de784bdae7dcf5aa417c29a29825e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "821ef5e5_85cc8bf3",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 6
      },
      "lineNbr": 338,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-02-17T20:33:14Z",
      "side": 1,
      "message": "Add a comment to the g.labels field that it must only be written by the goroutine itself.",
      "revId": "8163e7ee72de784bdae7dcf5aa417c29a29825e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b21e3a1_29e14a24",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 6
      },
      "lineNbr": 343,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-02-17T20:33:14Z",
      "side": 1,
      "message": "Add a comment to wherever we overwrite gp.labels that it depends on the deletion barrier to mark the old labels since the signal handler can\u0027t have a barrier.",
      "revId": "8163e7ee72de784bdae7dcf5aa417c29a29825e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "777abda1_da2ac37e",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 6
      },
      "lineNbr": 438,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-02-17T20:33:14Z",
      "side": 1,
      "message": "// Commit previous read, returning that part of the ring to the writer.",
      "revId": "8163e7ee72de784bdae7dcf5aa417c29a29825e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a8002b1_52083e2b",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 6
      },
      "lineNbr": 485,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-02-17T20:33:14Z",
      "side": 1,
      "message": "b.w?",
      "range": {
        "startLine": 485,
        "startChar": 52,
        "endLine": 485,
        "endChar": 55
      },
      "revId": "8163e7ee72de784bdae7dcf5aa417c29a29825e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ccb4fda_c7b7cdf8",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 6
      },
      "lineNbr": 508,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-02-17T20:33:14Z",
      "side": 1,
      "message": "\"wraparound\"? You\u0027re still logically moving forward.",
      "range": {
        "startLine": 508,
        "startChar": 47,
        "endLine": 508,
        "endChar": 53
      },
      "revId": "8163e7ee72de784bdae7dcf5aa417c29a29825e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e8be34f_e1de22b7",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 6
      },
      "lineNbr": 512,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-02-17T20:33:14Z",
      "side": 1,
      "message": "// Wraparound record. Go back to the beginning of the ring.",
      "revId": "8163e7ee72de784bdae7dcf5aa417c29a29825e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3af04145_93b7be0f",
        "filename": "src/runtime/profbuf_test.go",
        "patchSetId": 6
      },
      "lineNbr": 155,
      "author": {
        "id": 5167
      },
      "writtenOn": "2017-02-17T20:33:14Z",
      "side": 1,
      "message": "Consider adding a test specifically for the ring wraparound behavior. E.g., test round-tripping of a record that has to be wrapped to the beginning of the ring; test when there are fewer tags than data records left before wraparound.",
      "revId": "8163e7ee72de784bdae7dcf5aa417c29a29825e3",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}