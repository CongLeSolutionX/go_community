{
  "comments": [
    {
      "key": {
        "uuid": "9f00a1d7_5d4ff9db",
        "filename": "src/cmd/link/internal/ld/deadcode.go",
        "patchSetId": 61
      },
      "lineNbr": 78,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "Do we still need to populate per-library and per-unit Textp? I thought they are only used for DWARF.\n\nAnd we can make ctxt.Textp directly from the Textp2\u0027s.",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90bb1018_11df2783",
        "filename": "src/cmd/link/internal/ld/deadcode.go",
        "patchSetId": 61
      },
      "lineNbr": 78,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "I think you are right, we don\u0027t need both Textp2 and Textp.  At some point when we get rid of the old DWARF-gen code I think we can remove the *sym.Symbol Textp\u0027s and rename the loader.Sym Textp2 to Textp.  I\u0027ll add comments to this effect.",
      "parentUuid": "9f00a1d7_5d4ff9db",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "014b3d15_44c3d71e",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 43,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "Is an array better? I think this will get populated enough that using an array probably doesn\u0027t waste too much space.",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "735f41ad_e64541df",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 43,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "Depends on how many type.* symbols we have relative to the total number of other symbols (non-package defs, non-package refs, and external) I guess.   I\u0027ll add a comment recording the suggestion.  I think it\u0027s probably worth benchmarking or doing an experiment.  If we were to switch to an array we could use a single array for both rtmap and tdmap.",
      "parentUuid": "014b3d15_44c3d71e",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f26dfcff_a1f5e227",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 47,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "Also this one. Or maybe we could generate an aux for this.",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2aca736_1ddd4d03",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 47,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "Ack. Although if we add an aux for it, doesn\u0027t that mean that the aux symbol has to be named and also dup-ok? In this new implementation the typedef DIE symbol is anonymous.",
      "parentUuid": "f26dfcff_a1f5e227",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4f402be_c7fb2546",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 72,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "I\u0027ll MakeSymbolUpdater not return the symbol index. It should always return the same one now.",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3142e0d6_4189f734",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 72,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "Cool, SGTM.",
      "parentUuid": "f4f402be_c7fb2546",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69056bc0_fc494696",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 231,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "The ctxt argument seems not necessary. Also functions below.",
      "range": {
        "startLine": 231,
        "startChar": 25,
        "endLine": 231,
        "endChar": 35
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa48d3bb_86249c76",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 231,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "I\u0027ll fix that up.",
      "parentUuid": "69056bc0_fc494696",
      "range": {
        "startLine": 231,
        "startChar": 25,
        "endLine": 231,
        "endChar": 35
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59b89ab0_f6e42d64",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 328,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "You could just return d.tmap[name]. If it is not in the map it will return 0.",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 328,
        "endChar": 9
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b711578d_647ee3ca",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 328,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "Good point, fixed.",
      "parentUuid": "59b89ab0_f6e42d64",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 328,
        "endChar": 9
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f737fd4f_7742ec22",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 357,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "It seems unnecessary to rename the variable.",
      "range": {
        "startLine": 357,
        "startChar": 60,
        "endLine": 357,
        "endChar": 66
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54343893_3c5678c2",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 357,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f737fd4f_7742ec22",
      "range": {
        "startLine": 357,
        "startChar": 60,
        "endLine": 357,
        "endChar": 66
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80078b52_37daa0a6",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 488,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "Seems this doesn\u0027t need to be wrapped.",
      "range": {
        "startLine": 488,
        "startChar": 38,
        "endLine": 488,
        "endChar": 50
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2f66db7_50fd8db2",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 488,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "You\u0027re right, I\u0027ll fix that.",
      "parentUuid": "80078b52_37daa0a6",
      "range": {
        "startLine": 488,
        "startChar": 38,
        "endLine": 488,
        "endChar": 50
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "336646f9_8dd49ee7",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 544,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "Seems worth cache this.",
      "range": {
        "startLine": 544,
        "startChar": 38,
        "endLine": 544,
        "endChar": 59
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7027491b_dd68156f",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 544,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "Fixed.",
      "parentUuid": "336646f9_8dd49ee7",
      "range": {
        "startLine": 544,
        "startChar": 38,
        "endLine": 544,
        "endChar": 59
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "faa05468_99a4d483",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 696,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "(For future) Would it be helpful if we can link from the element type symbol to the pointer type symbol (i.e. from type.T to type.*T) ? I think there is a ptrToThis field in the type descriptor. Maybe we can follow that link.",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "567ceb60_d4bd7921",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 696,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "You mean link via aux symbol? Yes, I think that would be helpful. I\u0027ll add a note",
      "parentUuid": "faa05468_99a4d483",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbf901a5_873a2ed0",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1056,
      "author": {
        "id": 32560
      },
      "writtenOn": "2020-02-13T20:07:53Z",
      "side": 1,
      "message": "I don\u0027t think this comment should be here. In about 3 weeks this comment adds no value.",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec1abe8c_9ff14f02",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1254,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "Maybe we can replace this with a linear array or switch statement. We could also define special indices for them.",
      "range": {
        "startLine": 1246,
        "startChar": 0,
        "endLine": 1254,
        "endChar": 2
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2db83d3b_36b91a0a",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1254,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "I\u0027ll add a note.",
      "parentUuid": "ec1abe8c_9ff14f02",
      "range": {
        "startLine": 1246,
        "startChar": 0,
        "endLine": 1254,
        "endChar": 2
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff6b96a0_302d57bf",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1355,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "Maybe you don\u0027t want to use :\u003d here?",
      "range": {
        "startLine": 1355,
        "startChar": 11,
        "endLine": 1355,
        "endChar": 13
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d15eac54_8c57618f",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1355,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "Good catch, yes. Fixed.",
      "parentUuid": "ff6b96a0_302d57bf",
      "range": {
        "startLine": 1355,
        "startChar": 11,
        "endLine": 1355,
        "endChar": 13
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae475f18_c35937b9",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1390,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "This loop doesn\u0027t look too bad to me.",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11fa3e21_3d4b12f9",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1390,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "OK, if it looks ok to you I\u0027ll prune the comment.",
      "parentUuid": "ae475f18_c35937b9",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51a3df3d_ecc3d6f0",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1390,
      "author": {
        "id": 32560
      },
      "writtenOn": "2020-02-13T20:07:53Z",
      "side": 1,
      "message": "I dissent slightly here. At a minimum I would prefer to see all the if conditions moved to a helper function (that could be easily tested :D), but I won\u0027t fight anyone on it.",
      "parentUuid": "11fa3e21_3d4b12f9",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3501718_7e9816af",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1390,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T20:48:56Z",
      "side": 1,
      "message": "I tried extracting the tests into a separate helper function, but it\u0027s kind of messy, since we either need to return bool + symname or read the sym name twice... I think I\u0027d rather leavethings the way they are now.",
      "parentUuid": "51a3df3d_ecc3d6f0",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e90f25ad_fdde7dd7",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1418,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "It probably makes more sense to move this to the compiler, as we already did for functions.",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15bf924a_64105590",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1418,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "Agreed. I think we talked about this in our meeting the other day. I\u0027ll add a comment.",
      "parentUuid": "e90f25ad_fdde7dd7",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88d31e3f_4085b985",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1433,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "Maybe also here (:\u003d)",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7122fa9_10514560",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1433,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88d31e3f_4085b985",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97e26dd5_b26b1577",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1450,
      "author": {
        "id": 32560
      },
      "writtenOn": "2020-02-13T20:07:53Z",
      "side": 1,
      "message": "Is this strictly necessary? Doesnt\u0027 dwarfctxt go out of scope at the end of this function, and get GC\u0027d anyway?",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54eb21fd_c636c408",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1450,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T20:48:56Z",
      "side": 1,
      "message": "You are quite right. I had imagined at one point that we would keep the dwarfcxt around from phase 1 and feed it into phase 2, but in fact there isn\u0027t anything that needs preserving right now. I\u0027ll remove.",
      "parentUuid": "97e26dd5_b26b1577",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4cc1f4c_19f72c82",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1474,
      "author": {
        "id": 32560
      },
      "writtenOn": "2020-02-13T20:07:53Z",
      "side": 1,
      "message": "Original comment: Would this be better placed in Loader.ExtractSymbols?\n\nEDIT: I see it\u0027s called in loadlibfull -- right after Extract Symbols. I won\u0027t fight on the placement of this code, but feel that since this is really loader.Sym-\u003e*sym.Symbol remapping, it should really live there.",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7bc6cf4_045e8754",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1519,
      "author": {
        "id": 32560
      },
      "writtenOn": "2020-02-13T20:07:53Z",
      "side": 1,
      "message": "I think there\u0027s a panic here if the cast doesn\u0027t work. I believe this should be on line 1523.",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "600a0add_a013870b",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1519,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T20:48:56Z",
      "side": 1,
      "message": "I\u0027m not quite sure what you mean here. The cast is checked (includes an OK flag) so I don\u0027t think a panic can happen.",
      "parentUuid": "b7bc6cf4_045e8754",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a56f8f6_ccde8247",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1519,
      "author": {
        "id": 32560
      },
      "writtenOn": "2020-02-13T21:05:46Z",
      "side": 1,
      "message": "discussed offline. Than will look at this code.",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9478ecaa_67a552c9",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1519,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-14T13:13:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "600a0add_a013870b",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "972f0baf_5790de4e",
        "filename": "src/cmd/link/internal/ld/dwarf.go",
        "patchSetId": 61
      },
      "lineNbr": 1519,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-14T13:13:36Z",
      "side": 1,
      "message": "OK, I have fixed this up. Thanks.",
      "parentUuid": "2a56f8f6_ccde8247",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cb6450f_a9992ad5",
        "filename": "src/cmd/link/internal/ld/dwarf2.go",
        "patchSetId": 61
      },
      "lineNbr": 1,
      "author": {
        "id": 32560
      },
      "writtenOn": "2020-02-13T20:07:53Z",
      "side": 1,
      "message": "Was this done with a \"git cp\"? It\u0027s certainly too late to make that work now, but It would be nice to know what\u0027s changed.",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b289b185_cf5f07af",
        "filename": "src/cmd/link/internal/ld/dwarf2.go",
        "patchSetId": 61
      },
      "lineNbr": 1,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T20:48:56Z",
      "side": 1,
      "message": "Apologies, I did not use \"git cp\". Hopefully this is ok given that all this code will be gone once I convert DWARF phase 2.",
      "parentUuid": "3cb6450f_a9992ad5",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "417e0abf_0b174212",
        "filename": "src/cmd/link/internal/loader/loader.go",
        "patchSetId": 61
      },
      "lineNbr": 1263,
      "author": {
        "id": 32560
      },
      "writtenOn": "2020-02-13T20:07:53Z",
      "side": 1,
      "message": "lots of duplicated code in here. Couldn\u0027t you just assign the comparison value to a variable, and remove the duplicated code?",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "178fa252_3c4ab478",
        "filename": "src/cmd/link/internal/loader/loader.go",
        "patchSetId": 61
      },
      "lineNbr": 2366,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "Maybe use a bitmap?",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "829f3ce1_23edecba",
        "filename": "src/cmd/link/internal/loader/loader.go",
        "patchSetId": 61
      },
      "lineNbr": 2366,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "178fa252_3c4ab478",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d50ef528_b2e26255",
        "filename": "src/cmd/link/internal/loader/loader.go",
        "patchSetId": 61
      },
      "lineNbr": 2376,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "I think we can use ReadWithoutName here. We don\u0027t need to check the name. It is a TEXT symbol so it cannot be nameless.",
      "range": {
        "startLine": 2376,
        "startChar": 8,
        "endLine": 2376,
        "endChar": 12
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c33eac0_f1362778",
        "filename": "src/cmd/link/internal/loader/loader.go",
        "patchSetId": 61
      },
      "lineNbr": 2376,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "d50ef528_b2e26255",
      "range": {
        "startLine": 2376,
        "startChar": 8,
        "endLine": 2376,
        "endChar": 12
      },
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0c31a7e_96d92554",
        "filename": "src/cmd/link/internal/loader/loader.go",
        "patchSetId": 61
      },
      "lineNbr": 2389,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-02-12T21:30:20Z",
      "side": 1,
      "message": "I think we probably only need isdup. For TEXT symbols, I think if isdup is true dupok must be true.",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "661ee100_b1d1b81a",
        "filename": "src/cmd/link/internal/loader/loader.go",
        "patchSetId": 61
      },
      "lineNbr": 2389,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-02-13T16:35:42Z",
      "side": 1,
      "message": "Fixed.",
      "parentUuid": "a0c31a7e_96d92554",
      "revId": "b1952fece5f8467f95aac5e89e46b41dfe56ea5a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}