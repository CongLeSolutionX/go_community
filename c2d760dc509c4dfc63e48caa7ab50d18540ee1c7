{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0ffc43b4_c0db36ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-03T00:24:51Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dc2d760dc\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "c2d760dc509c4dfc63e48caa7ab50d18540ee1c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b3b9e90_97e1b98a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-03T00:35:19Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "0ffc43b4_c0db36ac",
      "tag": "autogenerated:trybots~happy",
      "revId": "c2d760dc509c4dfc63e48caa7ab50d18540ee1c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a1b83f0_893b1b28",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-05-03T16:32:55Z",
      "side": 1,
      "message": "LGTM, so that we can continue to work on this in subsequent CLs.",
      "revId": "c2d760dc509c4dfc63e48caa7ab50d18540ee1c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "820bca3e_3b1c6428",
        "filename": "src/cmd/compile/internal/types2/call.go",
        "patchSetId": 23
      },
      "lineNbr": 507,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-05-03T16:32:55Z",
      "side": 1,
      "message": "Need this comment in go/types as well.",
      "range": {
        "startLine": 507,
        "startChar": 4,
        "endLine": 507,
        "endChar": 75
      },
      "revId": "c2d760dc509c4dfc63e48caa7ab50d18540ee1c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "365d93aa_743496eb",
        "filename": "src/cmd/compile/internal/types2/expr.go",
        "patchSetId": 23
      },
      "lineNbr": 1886,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-05-03T16:32:55Z",
      "side": 1,
      "message": "This path doesn\u0027t actually allow comma-ok expressions. I think you mean \u0027multi-valued expressoins\u0027.",
      "range": {
        "startLine": 1886,
        "startChar": 7,
        "endLine": 1886,
        "endChar": 26
      },
      "revId": "c2d760dc509c4dfc63e48caa7ab50d18540ee1c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "111cecb6_d477c2b4",
        "filename": "src/cmd/compile/internal/types2/infer.go",
        "patchSetId": 23
      },
      "lineNbr": 265,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-05-03T16:32:55Z",
      "side": 1,
      "message": "Hmm. Given that constraint type inference could now affect the type of arguments, don\u0027t we need to do function argument inference again? For a trivial example, consider the following: after step 1, we\u0027ll not have inferred anything. After step 2, we\u0027ll have inferred Q, and then we can infer P. This example is silly, but maybe there are less silly examples.\n\nf(g)\nfunc f[P any](P)\nfunc g[Q int]()",
      "range": {
        "startLine": 265,
        "startChar": 1,
        "endLine": 265,
        "endChar": 12
      },
      "revId": "c2d760dc509c4dfc63e48caa7ab50d18540ee1c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4370243b_496a59d4",
        "filename": "src/cmd/compile/internal/types2/infer.go",
        "patchSetId": 23
      },
      "lineNbr": 266,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-05-03T16:32:55Z",
      "side": 1,
      "message": "constants (just noticed...)",
      "range": {
        "startLine": 266,
        "startChar": 33,
        "endLine": 266,
        "endChar": 41
      },
      "revId": "c2d760dc509c4dfc63e48caa7ab50d18540ee1c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}