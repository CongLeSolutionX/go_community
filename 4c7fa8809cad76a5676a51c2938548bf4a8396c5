{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b9f7c827_26372f6b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 34636
      },
      "writtenOn": "2022-02-03T19:31:24Z",
      "side": 1,
      "message": "Some comment cleanup included. PTAL. Thanks!",
      "revId": "4c7fa8809cad76a5676a51c2938548bf4a8396c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a44a4c00_fa1caf72",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-03T19:59:14Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d4c7fa880",
      "tag": "autogenerated:trybots~beginning",
      "revId": "4c7fa8809cad76a5676a51c2938548bf4a8396c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddb2f1f7_a3f07bed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-03T20:14:45Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d4c7fa880",
      "tag": "autogenerated:trybots~beginning",
      "revId": "4c7fa8809cad76a5676a51c2938548bf4a8396c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ece31e0_2da66ca0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-03T20:14:45Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "a44a4c00_fa1caf72",
      "tag": "autogenerated:trybots~beginning",
      "revId": "4c7fa8809cad76a5676a51c2938548bf4a8396c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24e0fc31_d14246d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-02-03T20:26:54Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64-nocgo\n",
      "parentUuid": "ddb2f1f7_a3f07bed",
      "tag": "autogenerated:trybots~happy",
      "revId": "4c7fa8809cad76a5676a51c2938548bf4a8396c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f7f21d9_efacc142",
        "filename": "src/runtime/proc.go",
        "patchSetId": 6
      },
      "lineNbr": 1759,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-02-03T22:03:17Z",
      "side": 1,
      "message": "The use of preemptM here is problematic due to interactions with `mp.signalPending`, which we don\u0027t handle.\n\n1. sighandler calls `mDoFixup` prior to `doSigPreempt`, which clears `mp.signalPending`. Thus if this call races with deliver of another `preemptM` signal, the signal handler could be past the `mDoFixup` call (thus not running the fixup), while this `preemptM` sees `mp.signalPending` is set and does not send another signal.\n\nI get a deadlock due to this with only a few hundred iterations of TestAllThreadsSyscallBlockedSyscall locally.\n\n2. If asynchronous preemption is disabled, `doSigPreempt` does not run and `mp.signalPending` is never cleared. Thus this function would send a signal only exactly once.\n\nThese could both be resolved by better handling in the signal handler:\n* Clear `mp.signalPending` even if async preemption is disabled.\n* Run `mDoFixup` after clearing `mp.signalPending`.\n\nThough IMO it would be simpler and cleaner to use `signalM` directly and avoid this interaction entirely. I know this isn\u0027t defined on every OS, but perhaps a fixUpPokeM for each OS? (Or maybe we should move syscall_runtime_doAllThreadsSyscall in its entirety to os_linux.go)",
      "revId": "4c7fa8809cad76a5676a51c2938548bf4a8396c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "815f8609_eadecd0d",
        "filename": "src/syscall/syscall_linux_test.go",
        "patchSetId": 6
      },
      "lineNbr": 619,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-02-03T21:34:54Z",
      "side": 1,
      "message": "The goroutine is very unlikely to switch Ms from this Gosched (the same M will simply run it again immediately). The M we are running on also shouldn\u0027t matter at all.\n\nI don\u0027t think this Gosched should be necessary at all, but if it is, I think this comment should just say \"Give other goroutines an opportunity to run.\"",
      "range": {
        "startLine": 618,
        "startChar": 2,
        "endLine": 619,
        "endChar": 18
      },
      "revId": "4c7fa8809cad76a5676a51c2938548bf4a8396c5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}