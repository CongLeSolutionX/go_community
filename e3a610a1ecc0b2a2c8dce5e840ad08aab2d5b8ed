{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2fec070a_c3553998",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5305
      },
      "writtenOn": "2024-10-21T20:09:34Z",
      "side": 1,
      "message": "I don\u0027t understand why this is failing, but the failure seems to be consistent?",
      "revId": "e3a610a1ecc0b2a2c8dce5e840ad08aab2d5b8ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e52be01_79a77c30",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 34993
      },
      "writtenOn": "2024-10-22T13:21:44Z",
      "side": 1,
      "message": "The offending flag combinations is `O_WRONLY|O_APPEND`, which is used in here: https://github.com/golang/go/blob/38f85967873b1cd48c20681c5dff0e9f3de18516/src/cmd/go/internal/work/gc.go#L502\n\nI\u0027ve played a bit with `CreateFileW` access rights, and there is an (AFAIK) undocumented behavior where passing `GENERIC_WRITE` with `FILE_APPEND_DATA` and without `FILE_WRITE_DATA` opens the file with the file pointer set at the beginning of the file instead of at its end. This causes subsequent appends to potentially overwrite existing content, which is not what one would expect.\n\nOn the other hand, we can get the expected behavior by removing `GENERIC_WRITE` and just setting the documented `GENERIC_WRITE` bits without `FILE_WRITE_DATA`.",
      "parentUuid": "2fec070a_c3553998",
      "revId": "e3a610a1ecc0b2a2c8dce5e840ad08aab2d5b8ed",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}