{
  "comments": [
    {
      "key": {
        "uuid": "96d6bedc_545cd3e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-09-10T14:53:43Z",
      "side": 1,
      "message": "The original CL is just tests. While it is possible that the implementation may have bugs, I don\u0027t see a problem for the behavior the tests are testing. Why revert this?",
      "revId": "62ad185547d28fef83545c40505f0b3ef2d7d3d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5ff42f6_789b14b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 24534
      },
      "writtenOn": "2020-09-11T01:23:33Z",
      "side": 1,
      "message": "This CL didn\u0027t change the behavior of the tests. CL 126316 introduced an function avoidFunctions to skip the functions that we don\u0027t want to appear in CPU profile of gccgo. But gccgo has done this point with another way, so this function is nolonger needed. If we don\u0027t remove this function, a few gccgo tests will fail.",
      "parentUuid": "96d6bedc_545cd3e2",
      "revId": "62ad185547d28fef83545c40505f0b3ef2d7d3d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44adb6b7_680a74ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-09-11T01:49:00Z",
      "side": 1,
      "message": "But this code is already in gccgo\u0027s copy of this code, and the tests are passing.  What am I missing?",
      "parentUuid": "d5ff42f6_789b14b4",
      "revId": "62ad185547d28fef83545c40505f0b3ef2d7d3d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92cac991_e213d124",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 24534
      },
      "writtenOn": "2020-09-11T05:57:25Z",
      "side": 1,
      "message": "They are failing in gollvm. After porting this CL to gofrontend(https://go-review.googlesource.com/c/gofrontend/+/229337), these tests passed in gollvm, and it does not affect their passing in gccgo. I don\u0027t know why these tests pass in gccgo, but they do pass.\n\nThere are also two failed tests in the runtime/pprof package of gccgo. They are TestConvertMemProfile and TestConvertMemProfile . But it seems to have nothing to do with this issue ?",
      "parentUuid": "44adb6b7_680a74ef",
      "revId": "62ad185547d28fef83545c40505f0b3ef2d7d3d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02d6b9ad_2fbefde8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 24534
      },
      "writtenOn": "2020-09-11T10:04:13Z",
      "side": 1,
      "message": "Take TestCPUProfile as an example, the stack trace in gollvm is:\nruntime.sigprof\nruntime/pprof.cpuHog0\nruntime/pprof.cpuHog1\nruntime/pprof.cpuHogger\npprof.TestCPUProfile..func1\npprof.testCPUProfile\nruntime/pprof.TestCPUProfile\ntesting.tRunner\n\nruntime.sigprof is what we want to skip, but it appears, so the test failed.\n\nThe stack trace in gccgo is:\nruntime.callers\nruntime/pprof.cpuHog0\nruntime/pprof.cpuHog1\nruntime/pprof.cpuHogger\npprof.TestCPUProfile..func1\npprof.testCPUProfile\nruntime/pprof.TestCPUProfile\ntesting.tRunner\n\nThe stack trace doesn\u0027t contain runtime.sigprof, so the test passed in gccgo.\n\ngccgo and gollvm share gofrontend, but stacktrace is different, which is a bit strange. I don\u0027t understand this point.",
      "parentUuid": "92cac991_e213d124",
      "revId": "62ad185547d28fef83545c40505f0b3ef2d7d3d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83a65cdf_39fb1364",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-09-11T14:26:20Z",
      "side": 1,
      "message": "\u003e But gccgo has done this point with another way\n\nSorry, I still don\u0027t understand. If \"another way\" you meant is runtime_skipInCallback, that is _implementation_, not _test_. It appears to me that this CL _does_ change the behavior of the tests, as it removes the check for runtime.sigprof not being present.",
      "parentUuid": "02d6b9ad_2fbefde8",
      "revId": "62ad185547d28fef83545c40505f0b3ef2d7d3d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}