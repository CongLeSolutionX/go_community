{
  "comments": [
    {
      "key": {
        "uuid": "b66fced1_6590dba2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 16375
      },
      "writtenOn": "2018-11-08T16:51:25Z",
      "side": 1,
      "message": "Apologies if I\u0027ve missed the details in this CL, but it might be worth expanding what the change in semantics in the commit message? Are all operations effectively merged into a single go.mod? Or do commands act on the respective go.mod files for the main modules involved?",
      "revId": "5eb7f5787036c0624ed8c6ded2a6b29d8285768d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3fea47d_14acd51c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 6365
      },
      "writtenOn": "2018-11-08T20:49:39Z",
      "side": 1,
      "message": "Expanded commit message.\n\nAll operations start with a clean slate, and use the “outside“ view of the module(s) involved. That gives reasonably intuitive behavior even for operations like \u0027go get -d mod1@v1.X mod2@v1.Y\u0027, where there isn\u0027t an obvious single module to impersonate, and also sidesteps some awkwardness around file-path replacements.\n\n(We had discussed some sort of per-user fallback \u0027go.mod\u0027 file, but that will have to wait for 1.13 if it happens at all.)",
      "parentUuid": "b66fced1_6590dba2",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "5eb7f5787036c0624ed8c6ded2a6b29d8285768d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}