{
  "comments": [
    {
      "key": {
        "uuid": "17c6f1d9_8808774d",
        "filename": "src/cmd/compile/internal/ssa/gen/generic.rules",
        "patchSetId": 5
      },
      "lineNbr": 88,
      "author": {
        "id": 5200
      },
      "writtenOn": "2016-03-12T05:36:09Z",
      "side": 1,
      "message": "Also SliceCap/SliceCap?",
      "revId": "b670977e03ba8a9748219372ca814243ec52579b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c0ece29_17bcd4dd",
        "filename": "src/cmd/compile/internal/ssa/gen/generic.rules",
        "patchSetId": 5
      },
      "lineNbr": 88,
      "author": {
        "id": 6173
      },
      "writtenOn": "2016-03-12T23:28:52Z",
      "side": 1,
      "message": "(IsSliceInBounds SliceCap SliceCap) doesn\u0027t happen in practice. Nevertheless, I added the general case.\n\n(IsSliceInBounds SliceLen SliceCap) happens for a[i:]",
      "parentUuid": "17c6f1d9_8808774d",
      "revId": "b670977e03ba8a9748219372ca814243ec52579b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17c6f1d9_c8026f29",
        "filename": "src/cmd/compile/internal/ssa/prove.go",
        "patchSetId": 5
      },
      "lineNbr": 239,
      "author": {
        "id": 5200
      },
      "writtenOn": "2016-03-12T05:36:09Z",
      "side": 1,
      "message": "s/or/of/",
      "revId": "b670977e03ba8a9748219372ca814243ec52579b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c0ece29_770f9085",
        "filename": "src/cmd/compile/internal/ssa/prove.go",
        "patchSetId": 5
      },
      "lineNbr": 239,
      "author": {
        "id": 6173
      },
      "writtenOn": "2016-03-12T23:28:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17c6f1d9_c8026f29",
      "revId": "b670977e03ba8a9748219372ca814243ec52579b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17c6f1d9_28186396",
        "filename": "src/cmd/compile/internal/ssa/prove.go",
        "patchSetId": 5
      },
      "lineNbr": 300,
      "author": {
        "id": 5200
      },
      "writtenOn": "2016-03-12T05:36:09Z",
      "side": 1,
      "message": "s/braches/branches/",
      "revId": "b670977e03ba8a9748219372ca814243ec52579b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17c6f1d9_68125b76",
        "filename": "src/cmd/compile/internal/ssa/prove.go",
        "patchSetId": 5
      },
      "lineNbr": 315,
      "author": {
        "id": 5200
      },
      "writtenOn": "2016-03-12T05:36:09Z",
      "side": 1,
      "message": "Ah, so this means \"not equal\" in boolean speak.",
      "revId": "b670977e03ba8a9748219372ca814243ec52579b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17c6f1d9_0815a75c",
        "filename": "src/cmd/compile/internal/ssa/prove.go",
        "patchSetId": 5
      },
      "lineNbr": 370,
      "author": {
        "id": 5200
      },
      "writtenOn": "2016-03-12T05:36:09Z",
      "side": 1,
      "message": "Hmm, but we may have swapped a0 and a1 here?  Then we\u0027re examining the inequality in the wrong direction?",
      "revId": "b670977e03ba8a9748219372ca814243ec52579b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c0ece29_97e0e4e2",
        "filename": "src/cmd/compile/internal/ssa/prove.go",
        "patchSetId": 5
      },
      "lineNbr": 370,
      "author": {
        "id": 6173
      },
      "writtenOn": "2016-03-12T23:28:52Z",
      "side": 1,
      "message": "pushed the swap into factsTable.get.",
      "parentUuid": "17c6f1d9_0815a75c",
      "revId": "b670977e03ba8a9748219372ca814243ec52579b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}