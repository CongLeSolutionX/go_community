{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cb3aef87_4495c621",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-10-03T23:23:34Z",
      "side": 1,
      "message": "Still trying to wrap my head around iteration in the presence of grow \u0026 split \u0026 expanding the directory...\n\nOne thing we might do is also cache the directory in the iterator. That way at least we don\u0027t have to handle the directory growing during iteration.",
      "revId": "dbfc3a0f38cb231e5bbb2910995c96e79ad90b7b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb332bbb_66989150",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 12120
      },
      "writtenOn": "2024-10-04T15:12:15Z",
      "side": 1,
      "message": "\u003e One thing we might do is also cache the directory in the iterator. That way at least we don\u0027t have to handle the directory growing during iteration.\n\nHm, I don\u0027t think I considered that. I think it would make the code easier to follow. It would have a downside though. Right now when a table grows while we are iterating over it we have to do a full lookup of each subsequent key in the table since our cached version is stale.\n\nBut once we move on to the next table, we no longer need to do full lookups because we got the latest version of the table from the directory.\n\nIf we cache the directory, then if the directory grows we\u0027d have to do full lookups for the entire rest of iteration, as all tables are stale [1].\n\n[1] Though, hm, perhaps we could short circuit if we start a lookup but end up at the same *table from the new directory.",
      "parentUuid": "cb3aef87_4495c621",
      "revId": "dbfc3a0f38cb231e5bbb2910995c96e79ad90b7b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba69aebd_fd2a1cd4",
        "filename": "src/cmd/compile/internal/reflectdata/map_swiss.go",
        "patchSetId": 7
      },
      "lineNbr": 85,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-10-03T23:23:34Z",
      "side": 1,
      "message": "Table?",
      "range": {
        "startLine": 85,
        "startChar": 41,
        "endLine": 85,
        "endChar": 44
      },
      "revId": "dbfc3a0f38cb231e5bbb2910995c96e79ad90b7b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fed129e9_62fc2b6f",
        "filename": "src/cmd/compile/internal/reflectdata/map_swiss.go",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-10-03T23:23:34Z",
      "side": 1,
      "message": "Group?",
      "range": {
        "startLine": 91,
        "startChar": 50,
        "endLine": 91,
        "endChar": 53
      },
      "revId": "dbfc3a0f38cb231e5bbb2910995c96e79ad90b7b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5949077d_3cb73a81",
        "filename": "src/internal/runtime/maps/export_test.go",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 25391
      },
      "writtenOn": "2024-10-07T20:40:37Z",
      "side": 1,
      "message": "used up-stack? or can it be deleted",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 3
      },
      "revId": "dbfc3a0f38cb231e5bbb2910995c96e79ad90b7b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b2a390b_8fc81987",
        "filename": "src/internal/runtime/maps/map.go",
        "patchSetId": 7
      },
      "lineNbr": 213,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-10-03T23:23:34Z",
      "side": 1,
      "message": "This is just log_2(len(directory)).\nProbably we can get rid of this, or maybe even better make directory a **table and compute its length when needed as 1\u003c\u003cglobalDepth.",
      "revId": "dbfc3a0f38cb231e5bbb2910995c96e79ad90b7b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f7ca9b1_07452f9d",
        "filename": "src/internal/runtime/maps/map.go",
        "patchSetId": 7
      },
      "lineNbr": 281,
      "author": {
        "id": 25391
      },
      "writtenOn": "2024-10-07T20:40:37Z",
      "side": 1,
      "message": "It",
      "range": {
        "startLine": 281,
        "startChar": 6,
        "endLine": 281,
        "endChar": 7
      },
      "revId": "dbfc3a0f38cb231e5bbb2910995c96e79ad90b7b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "588726f1_7bbeae32",
        "filename": "src/internal/runtime/maps/map.go",
        "patchSetId": 7
      },
      "lineNbr": 354,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-10-03T23:23:34Z",
      "side": 1,
      "message": "Maybe we can avoid multiple clears of the same table?\n\nif t \u003d\u003d lastT { continue }\nt.Clear()\nlastT \u003d t",
      "revId": "dbfc3a0f38cb231e5bbb2910995c96e79ad90b7b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60218432_0eb9be45",
        "filename": "src/internal/runtime/maps/map_test.go",
        "patchSetId": 7
      },
      "lineNbr": 449,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-10-03T23:23:34Z",
      "side": 1,
      "message": "Might as well do\n\nif elem !\u003d key + 256 { t.Error... }",
      "revId": "dbfc3a0f38cb231e5bbb2910995c96e79ad90b7b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99a9429d_1f9b2f0e",
        "filename": "src/internal/runtime/maps/table.go",
        "patchSetId": 7
      },
      "lineNbr": 46,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-10-03T23:23:34Z",
      "side": 1,
      "message": "This could be uint8 if we had any other fields that we could also make smaller.",
      "range": {
        "startLine": 46,
        "startChar": 12,
        "endLine": 46,
        "endChar": 18
      },
      "revId": "dbfc3a0f38cb231e5bbb2910995c96e79ad90b7b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "229996cd_2c404df9",
        "filename": "src/internal/runtime/maps/table.go",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-10-03T23:23:34Z",
      "side": 1,
      "message": "Maybe all of these uint64 fields could be uint16 instead? If tables have a max size of ~1000 we don\u0027t need all that space.",
      "range": {
        "startLine": 74,
        "startChar": 12,
        "endLine": 74,
        "endChar": 18
      },
      "revId": "dbfc3a0f38cb231e5bbb2910995c96e79ad90b7b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ad5d084_1bb7f501",
        "filename": "src/internal/runtime/maps/table.go",
        "patchSetId": 7
      },
      "lineNbr": 443,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-10-03T23:23:34Z",
      "side": 1,
      "message": "dirOffset",
      "range": {
        "startLine": 443,
        "startChar": 66,
        "endLine": 443,
        "endChar": 72
      },
      "revId": "dbfc3a0f38cb231e5bbb2910995c96e79ad90b7b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3aa81d0_0c4c5d50",
        "filename": "src/internal/runtime/maps/table.go",
        "patchSetId": 7
      },
      "lineNbr": 679,
      "author": {
        "id": 5200
      },
      "writtenOn": "2024-10-03T23:23:34Z",
      "side": 1,
      "message": "(except by iterators)",
      "range": {
        "startLine": 679,
        "startChar": 31,
        "endLine": 679,
        "endChar": 37
      },
      "revId": "dbfc3a0f38cb231e5bbb2910995c96e79ad90b7b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}