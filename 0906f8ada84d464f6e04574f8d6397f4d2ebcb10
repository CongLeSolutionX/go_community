{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a360e668_f647a90c",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 29
      },
      "lineNbr": 99,
      "author": {
        "id": 62138
      },
      "writtenOn": "2023-04-06T04:33:50Z",
      "side": 1,
      "message": "this is interesting. have you raised an issue in wasmtime?",
      "revId": "0906f8ada84d464f6e04574f8d6397f4d2ebcb10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60432ac4_6b6d7654",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 29
      },
      "lineNbr": 99,
      "author": {
        "id": 12980
      },
      "writtenOn": "2023-04-06T04:57:55Z",
      "side": 1,
      "message": "It appears this particular issue was not reported, we\u0027ll do. Thanks for pointing it out!",
      "parentUuid": "a360e668_f647a90c",
      "revId": "0906f8ada84d464f6e04574f8d6397f4d2ebcb10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc46a892_be89bd59",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 29
      },
      "lineNbr": 99,
      "author": {
        "id": 12980
      },
      "writtenOn": "2023-04-06T19:56:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60432ac4_6b6d7654",
      "revId": "0906f8ada84d464f6e04574f8d6397f4d2ebcb10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "491892de_f4219aec",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 29
      },
      "lineNbr": 266,
      "author": {
        "id": 62138
      },
      "writtenOn": "2023-04-06T04:33:50Z",
      "side": 1,
      "message": "unnecessary continue?",
      "revId": "0906f8ada84d464f6e04574f8d6397f4d2ebcb10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f952365_3eb868d9",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 29
      },
      "lineNbr": 266,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-04-06T17:55:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "491892de_f4219aec",
      "revId": "0906f8ada84d464f6e04574f8d6397f4d2ebcb10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "feb2de21_ed3e0e55",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 29
      },
      "lineNbr": 275,
      "author": {
        "id": 62138
      },
      "writtenOn": "2023-04-06T04:33:50Z",
      "side": 1,
      "message": "q: this is interesting to me. I guess there\u0027s no reason to check this `PWD` from the spec perspective nor the status-quo of WASI impl. I guess this seems just a convenience for Go test suites?",
      "revId": "0906f8ada84d464f6e04574f8d6397f4d2ebcb10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1250813_09c6d442",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 29
      },
      "lineNbr": 275,
      "author": {
        "id": 12980
      },
      "writtenOn": "2023-04-06T04:57:55Z",
      "side": 1,
      "message": "WASI doesn\u0027t provide guidelines on how to set the working directory (it\u0027s not even a concept that exists in the spec), so this is the least disruptive way we could come up with to emulate the behavior.",
      "parentUuid": "feb2de21_ed3e0e55",
      "revId": "0906f8ada84d464f6e04574f8d6397f4d2ebcb10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe8dc9cd_d85c93f9",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 29
      },
      "lineNbr": 275,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-04-06T20:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1250813_09c6d442",
      "revId": "0906f8ada84d464f6e04574f8d6397f4d2ebcb10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d06eade3_7d2baf3e",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 29
      },
      "lineNbr": 754,
      "author": {
        "id": 62138
      },
      "writtenOn": "2023-04-06T04:33:50Z",
      "side": 1,
      "message": "I wonder if there is a way to avoid allocation on iovec by like making the fd_read and others accept uintptr instead of *iovec, allocating iovec on stack, passing it as uintptr. Not sure if it\u0027s feasible, but may be worth a thought.",
      "revId": "0906f8ada84d464f6e04574f8d6397f4d2ebcb10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "250c007a_2bb339d0",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 29
      },
      "lineNbr": 754,
      "author": {
        "id": 12980
      },
      "writtenOn": "2023-04-06T04:57:55Z",
      "side": 1,
      "message": "This actually does not cause a heap allocation: we mark the imports with go:noescape, and makeIOVec gets inlined at the call sites so the compiler knows it can allocate those values on the stack (verified with `go build -gcflags \u0027-m -m\u0027`).",
      "parentUuid": "d06eade3_7d2baf3e",
      "revId": "0906f8ada84d464f6e04574f8d6397f4d2ebcb10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1975dbc2_c17804e7",
        "filename": "src/syscall/fs_wasip1.go",
        "patchSetId": 29
      },
      "lineNbr": 754,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-04-06T14:28:50Z",
      "side": 1,
      "message": "Yeah, it does not have an allocation if makeIOVec is inlined. I think this is clearer than using uintptr.",
      "parentUuid": "250c007a_2bb339d0",
      "revId": "0906f8ada84d464f6e04574f8d6397f4d2ebcb10",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}