{
  "comments": [
    {
      "key": {
        "uuid": "190b6419_5bd277fc",
        "filename": "src/cmd/compile/internal/gc/const.go",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-05-29T21:53:58Z",
      "side": 1,
      "message": "No need for int conversion.",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_4b3c1985",
        "filename": "src/cmd/compile/internal/gc/const.go",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 5056
      },
      "writtenOn": "2015-06-02T16:19:40Z",
      "side": 1,
      "message": "That\u0027s a job for a separate automated conversion.\nNot changing in this CL.\nThe fewer changes I make by hand, the fewer bugs I introduce.",
      "parentUuid": "190b6419_5bd277fc",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "190b6419_1bdcff0c",
        "filename": "src/cmd/compile/internal/gc/const.go",
        "patchSetId": 1
      },
      "lineNbr": 372,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-05-29T21:53:58Z",
      "side": 1,
      "message": "For posterity: I confirmed that all calls to toint are of the form v \u003d toint(v), so there are no assumptions about aliasing.\n\nAn alternative, perhaps for a later general Val cleanup:\n\n// toint modifies Val to contain an int.\nfunc (v Val) toint() {\n  // ...\n  case CTRUNE:\n    v.U.(*Mpint).Rune \u003d false\n  // ...\n}",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "190b6419_fbc02b1f",
        "filename": "src/cmd/compile/internal/gc/const.go",
        "patchSetId": 1
      },
      "lineNbr": 479,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-05-29T21:53:58Z",
      "side": 1,
      "message": "Conversion to int unnecessary.",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "190b6419_bbcab33b",
        "filename": "src/cmd/compile/internal/gc/const.go",
        "patchSetId": 1
      },
      "lineNbr": 768,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-05-29T21:53:58Z",
      "side": 1,
      "message": "This pair of lines show up a lot. Worth a helper?",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_4b63b992",
        "filename": "src/cmd/compile/internal/gc/const.go",
        "patchSetId": 1
      },
      "lineNbr": 768,
      "author": {
        "id": 5056
      },
      "writtenOn": "2015-06-02T16:19:40Z",
      "side": 1,
      "message": "Maybe, but again I\u0027m explicitly avoiding doing unrelated cleanup in this CL sequence, so that I touch as little as possible. Believe me, it would balloon if I stopped to clean up every thing I noticed. (It was particularly hard not to fix range.go\u0027s massive indentation.)",
      "parentUuid": "190b6419_bbcab33b",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d54fde2_5ff00260",
        "filename": "src/cmd/compile/internal/gc/go.go",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 5206
      },
      "writtenOn": "2015-05-29T21:19:54Z",
      "side": 1,
      "message": "I don\u0027t see any ValCtype, and this comment no longer makes much sense anyhow.",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d54fde2_3f497e42",
        "filename": "src/cmd/compile/internal/gc/go.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 5206
      },
      "writtenOn": "2015-05-29T21:19:54Z",
      "side": 1,
      "message": "When would this happen?  I can perhaps understand a nil case, but a default case here seems to imply a compiler bug.",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_eb05c5c5",
        "filename": "src/cmd/compile/internal/gc/go.go",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 5056
      },
      "writtenOn": "2015-06-02T16:19:40Z",
      "side": 1,
      "message": "This lets me not put a return at the bottom of the function, which in turn makes the compiler check for me that the other cases all do return instead of breaking out of the switch. I agree it shouldn\u0027t happen. I can put in a panic instead.\nWill do in a followup CL.",
      "parentUuid": "0d54fde2_3f497e42",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "190b6419_9bc7ef33",
        "filename": "src/cmd/compile/internal/gc/sinit.go",
        "patchSetId": 1
      },
      "lineNbr": 524,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-05-29T21:53:58Z",
      "side": 1,
      "message": "return n.Op \u003d\u003d OLITERAL \u0026\u0026 n.Val.Ctype() !\u003d CTNIL",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a97860_6b68f56d",
        "filename": "src/cmd/compile/internal/gc/sinit.go",
        "patchSetId": 1
      },
      "lineNbr": 524,
      "author": {
        "id": 5056
      },
      "writtenOn": "2015-06-02T16:19:40Z",
      "side": 1,
      "message": "Not today. (Risk/reward.)",
      "parentUuid": "190b6419_9bc7ef33",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "190b6419_7bf41b84",
        "filename": "src/cmd/compile/internal/gc/subr.go",
        "patchSetId": 1
      },
      "lineNbr": 795,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-05-29T21:53:58Z",
      "side": 1,
      "message": "Is it worth a method on Val to check for CTNIL? Could be implemented more cheaply, with just comma, ok rather than type switch.",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "190b6419_5bf9577a",
        "filename": "src/cmd/compile/internal/gc/subr.go",
        "patchSetId": 1
      },
      "lineNbr": 798,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-05-29T21:53:58Z",
      "side": 1,
      "message": "return n !\u003d nil \u0026\u0026 n.Op \u003d\u003d OLITERAL \u0026\u0026 n.Val.Ctype() \u003d\u003d CTNIL",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "190b6419_3beea3b2",
        "filename": "src/cmd/compile/internal/gc/swt.go",
        "patchSetId": 1
      },
      "lineNbr": 745,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-05-29T21:53:58Z",
      "side": 1,
      "message": "Don\u0027t need int conversions here or the next two lines.",
      "revId": "95eb559daf5a68c585843a4f98544b3fa8e28032",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}