{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bdb80a2e_4e7ed1fa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 5137
      },
      "writtenOn": "2021-03-26T23:44:24Z",
      "side": 1,
      "message": "all: replace context.Done() with context.Err() where necessary",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 68
      },
      "revId": "f8fa56684fe72cdeaa9c664f72dd134f2b3f1347",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a09aaf11_7af1d04e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 5137
      },
      "writtenOn": "2021-03-26T23:44:24Z",
      "side": 1,
      "message": "This change replaces, where necessary, the select{} based\nnon-blocking waits with a call to context.Err()",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 32
      },
      "revId": "f8fa56684fe72cdeaa9c664f72dd134f2b3f1347",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c74061e_b40cf3cd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 5137
      },
      "writtenOn": "2021-03-26T23:44:24Z",
      "side": 1,
      "message": "context.BenchmarkCheckCanceled demonstrates",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 48
      },
      "revId": "f8fa56684fe72cdeaa9c664f72dd134f2b3f1347",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2556fcc6_fd12c29a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 27632
      },
      "writtenOn": "2021-03-02T23:37:48Z",
      "side": 1,
      "message": "i think all of these issues have been resolved.",
      "revId": "f8fa56684fe72cdeaa9c664f72dd134f2b3f1347",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93a0bdad_8dc75491",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 27632
      },
      "writtenOn": "2021-03-25T15:43:01Z",
      "side": 1,
      "message": "i think this is ready for review.",
      "revId": "f8fa56684fe72cdeaa9c664f72dd134f2b3f1347",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bd9f92c_728e45b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5137
      },
      "writtenOn": "2021-03-26T23:44:24Z",
      "side": 1,
      "message": "Thank you for this change Ayan, and great to see you contributing in 2021 too :-)\n\nI\u0027ve added some feedback to your change. Please rebase with the latest code from\nthe master branch, and please address the feedback below. When you are ready I shall\nstamp it. Also, please don\u0027t +1 your own CLs :-)\n\nThank you.",
      "revId": "f8fa56684fe72cdeaa9c664f72dd134f2b3f1347",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "279d0e13_7c2c52fb",
        "filename": "src/database/sql/ctxutil.go",
        "patchSetId": 6
      },
      "lineNbr": 128,
      "author": {
        "id": 5137
      },
      "writtenOn": "2021-03-26T23:44:24Z",
      "side": 1,
      "message": "Perhaps we could reverse conditional this and unnest it:\n\n  if err !\u003d nil {\n      return txi, err\n  }\n\n  err \u003d ctx.Err()\n  if err \u003d\u003d nil {\n      return txi, nil\n  }\n\n  // Otherwise rollback the transaction and discard it.\n  txi.Rollback()\n  return nil, err",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 128,
        "endChar": 16
      },
      "revId": "f8fa56684fe72cdeaa9c664f72dd134f2b3f1347",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42a9786f_8a2626a7",
        "filename": "src/database/sql/sql.go",
        "patchSetId": 6
      },
      "lineNbr": 2149,
      "author": {
        "id": 5137
      },
      "writtenOn": "2021-03-26T23:44:24Z",
      "side": 1,
      "message": "Given that we already retrieved tx.ctx.Err() we can use it here.\nreturn err",
      "revId": "f8fa56684fe72cdeaa9c664f72dd134f2b3f1347",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4314b28f_e28910d2",
        "filename": "src/database/sql/sql_test.go",
        "patchSetId": 6
      },
      "lineNbr": 348,
      "author": {
        "id": 5137
      },
      "writtenOn": "2021-03-26T23:44:24Z",
      "side": 1,
      "message": "We can simplify this to:\n\n if err :\u003d ctx.Err(); err !\u003d context.Canceled {\n      t.Fatalf(\"context err \u003d %v; want context.Canceled\", err)\n }",
      "range": {
        "startLine": 341,
        "startChar": 1,
        "endLine": 348,
        "endChar": 2
      },
      "revId": "f8fa56684fe72cdeaa9c664f72dd134f2b3f1347",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5a8d332_2113fee8",
        "filename": "src/database/sql/sql_test.go",
        "patchSetId": 6
      },
      "lineNbr": 2964,
      "author": {
        "id": 5137
      },
      "writtenOn": "2021-03-26T23:44:24Z",
      "side": 1,
      "message": "t.Fatalf(\"timeout: failed to rollback query without closing rows: %v\", err)",
      "range": {
        "startLine": 2964,
        "startChar": 2,
        "endLine": 2964,
        "endChar": 73
      },
      "revId": "f8fa56684fe72cdeaa9c664f72dd134f2b3f1347",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93679398_2e3b0dbe",
        "filename": "src/net/http/serve_test.go",
        "patchSetId": 6
      },
      "lineNbr": 4809,
      "author": {
        "id": 5137
      },
      "writtenOn": "2021-03-26T23:44:24Z",
      "side": 1,
      "message": "This is an incorrect translation, it should be that if ctx.Err() \u003d\u003d nil,\nthat we have the failure. I\u0027d say let\u0027s just revert and leave it as it was\notherwise if you retrieve an error we need to check for its value.",
      "range": {
        "startLine": 4809,
        "startChar": 0,
        "endLine": 4809,
        "endChar": 22
      },
      "revId": "f8fa56684fe72cdeaa9c664f72dd134f2b3f1347",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32d3ecf7_39d296ff",
        "filename": "src/net/http/transport.go",
        "patchSetId": 6
      },
      "lineNbr": 560,
      "author": {
        "id": 5137
      },
      "writtenOn": "2021-03-26T23:44:24Z",
      "side": 1,
      "message": "Please use the value from ctx.Err():\n  if err :\u003d ctx.Err(); err !\u003d nil {\n      req.closeBody()\n      return nil, err\n  }",
      "range": {
        "startLine": 560,
        "startChar": 2,
        "endLine": 560,
        "endChar": 23
      },
      "revId": "f8fa56684fe72cdeaa9c664f72dd134f2b3f1347",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}