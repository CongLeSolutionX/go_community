{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ea0b7b8d_8bc479db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-05T17:45:05Z",
      "side": 1,
      "message": "TRY\u003ddarwin-amd64,darwin-arm64",
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19934baf_2da579fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-05T17:45:22Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d81d64c6b\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e312384_075115f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-05T17:49:32Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d81d64c6b\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/81d64c6b/linux-amd64_8932b8c8.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "19934baf_2da579fc",
      "tag": "autogenerated:trybots~progress",
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1d586ff_9d920f98",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-05T18:30:20Z",
      "side": 1,
      "message": "11 of 47 SlowBots failed.\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/81d64c6b/linux-amd64_8932b8c8.log\nFailed on js-wasm-node18: https://storage.googleapis.com/go-build-log/81d64c6b/js-wasm-node18_f38eb87a.log\nFailed on linux-arm64: https://storage.googleapis.com/go-build-log/81d64c6b/linux-arm64_ee058442.log\nFailed on freebsd-amd64-12_3: https://storage.googleapis.com/go-build-log/81d64c6b/freebsd-amd64-12_3_a865c5a1.log\nFailed on linux-amd64-boringcrypto: https://storage.googleapis.com/go-build-log/81d64c6b/linux-amd64-boringcrypto_226f8874.log\nFailed on linux-386: https://storage.googleapis.com/go-build-log/81d64c6b/linux-386_ec8dad62.log\nFailed on wasip1-wasm-wasmtime: https://storage.googleapis.com/go-build-log/81d64c6b/wasip1-wasm-wasmtime_747dfd0d.log\nFailed on windows-amd64-2016: https://storage.googleapis.com/go-build-log/81d64c6b/windows-amd64-2016_237e88ce.log\nFailed on openbsd-amd64-72: https://storage.googleapis.com/go-build-log/81d64c6b/openbsd-amd64-72_8285868b.log\nFailed on windows-386-2016: https://storage.googleapis.com/go-build-log/81d64c6b/windows-386-2016_6d96bfc4.log\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/81d64c6b/linux-amd64-race_5ebfdd67.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\nSlowBot builds that ran:\n* darwin-amd64-13\n* darwin-arm64-12\n",
      "parentUuid": "19934baf_2da579fc",
      "tag": "autogenerated:trybots~failed",
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9380a22c_ef1dea9b",
        "filename": "src/runtime/pprof/defs_darwin.go",
        "patchSetId": 5
      },
      "lineNbr": 5,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-05T17:45:05Z",
      "side": 1,
      "message": "Minor: use a space here. Thanks.",
      "range": {
        "startLine": 5,
        "startChar": 2,
        "endLine": 5,
        "endChar": 3
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f4b3acb_e1ca0e8e",
        "filename": "src/runtime/pprof/defs_darwin.go",
        "patchSetId": 5
      },
      "lineNbr": 5,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-07-07T20:37:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9380a22c_ef1dea9b",
      "range": {
        "startLine": 5,
        "startChar": 2,
        "endLine": 5,
        "endChar": 3
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7842f705_1fb2dea2",
        "filename": "src/runtime/pprof/proto_test.go",
        "patchSetId": 5
      },
      "lineNbr": 149,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-05T17:45:05Z",
      "side": 1,
      "message": "It is probably possible that there is only one executable mapping, or f1 and f2 are in the same mapping (which is probably very likely). In that case maybe we should use the same mapping for both? (Or skip.)",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 149,
        "endChar": 4
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63f8f1d4_18a7be3d",
        "filename": "src/runtime/pprof/proto_test.go",
        "patchSetId": 5
      },
      "lineNbr": 149,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-07-07T20:37:46Z",
      "side": 1,
      "message": "I don\u0027t quite understand what you\u0027re suggesting. There is only one text segment unless the binary is run under rosetta (I added a comment here that mirrors the one in vminfo_darwin_test). When an x86 binary is run under rosetta the profile will incorrectly, show the x86 code. I don\u0027t propose to fix this since anyone encountering it has access to an apple silicon machine and it they are profiling the code then it\u0027s reasonable to expect that they intend to modify it and hence must have access to it. I could find a way to drop the rosetta segment I guess.",
      "parentUuid": "7842f705_1fb2dea2",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 149,
        "endChar": 4
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2730b2a5_b358d921",
        "filename": "src/runtime/pprof/proto_test.go",
        "patchSetId": 5
      },
      "lineNbr": 149,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-25T20:35:40Z",
      "side": 1,
      "message": "I think the test is expecting two mappings, with addr1 in map1 and addr2 in map2. If there is only one mapping I\u0027m not sure this is what the test would expect.\n\n(All I said is specifically about this test, not about profiling actual user programs.)",
      "parentUuid": "63f8f1d4_18a7be3d",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 149,
        "endChar": 4
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c451d1db_02aa2710",
        "filename": "src/runtime/pprof/proto_test.go",
        "patchSetId": 5
      },
      "lineNbr": 149,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-07-26T07:55:55Z",
      "side": 1,
      "message": "oh, I see, I\u0027ve copied how the Windows case is handled. Two separate mappings are returned that contain the same information.",
      "parentUuid": "2730b2a5_b358d921",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 149,
        "endChar": 4
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b049163_19eed592",
        "filename": "src/runtime/pprof/vminfo_darwin.go",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-05T17:45:05Z",
      "side": 1,
      "message": "Can we just use `\u0026buf[0]`?",
      "range": {
        "startLine": 47,
        "startChar": 2,
        "endLine": 47,
        "endChar": 51
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c12878e_439f25eb",
        "filename": "src/runtime/pprof/vminfo_darwin.go",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-07-07T20:37:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b049163_19eed592",
      "range": {
        "startLine": 47,
        "startChar": 2,
        "endLine": 47,
        "endChar": 51
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea69dc5b_5eed6485",
        "filename": "src/runtime/pprof/vminfo_darwin.go",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-05T17:45:05Z",
      "side": 1,
      "message": "As these functions don\u0027t escape its arguments, we could add a //go:noescape pragma to the declaration. This allows the compiler to do stack allocation. (This should only affect performance, not correctness. See also the discussion about GC.)",
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dadefac_a46c2eac",
        "filename": "src/runtime/pprof/vminfo_darwin.go",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-07-07T20:37:46Z",
      "side": 1,
      "message": "Done, but see comment on sys_darwin.go. The noescape prevents a crash.",
      "parentUuid": "ea69dc5b_5eed6485",
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c561771a_9734cf92",
        "filename": "src/runtime/pprof/vminfo_darwin.go",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-08-01T20:43:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "3dadefac_a46c2eac",
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0597e3f9_f02217f9",
        "filename": "src/runtime/pprof/vminfo_darwin_test.go",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-05T17:45:05Z",
      "side": 1,
      "message": "Can we also test that the mapping actually contains the address of a function?",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 38,
        "endChar": 2
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "066ca1e7_cc1d9388",
        "filename": "src/runtime/pprof/vminfo_darwin_test.go",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-07-07T20:37:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0597e3f9_f02217f9",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 38,
        "endChar": 2
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c577820f_fd033ab9",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 5
      },
      "lineNbr": 817,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-05T17:45:05Z",
      "side": 1,
      "message": "I don\u0027t think these callee-save registers? So they could be clobbered by the getpid call, at least in principle. Maybe it is easier to lift the getpid call to Go code. Or move DI to a callee-save register and load things out of it after the getpid call.",
      "range": {
        "startLine": 815,
        "startChar": 0,
        "endLine": 817,
        "endChar": 31
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a589ab5_f6b5299e",
        "filename": "src/runtime/sys_darwin_amd64.s",
        "patchSetId": 5
      },
      "lineNbr": 817,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-07-07T20:37:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c577820f_fd033ab9",
      "range": {
        "startLine": 815,
        "startChar": 0,
        "endLine": 817,
        "endChar": 31
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de85b216_d5cc5152",
        "filename": "src/runtime/sys_darwin_arm64.s",
        "patchSetId": 5
      },
      "lineNbr": 780,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-05T17:45:05Z",
      "side": 1,
      "message": "Minor: use tab here.",
      "range": {
        "startLine": 780,
        "startChar": 0,
        "endLine": 780,
        "endChar": 4
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19b021b9_b9798408",
        "filename": "src/runtime/sys_darwin_arm64.s",
        "patchSetId": 5
      },
      "lineNbr": 780,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-07-07T20:37:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "de85b216_d5cc5152",
      "range": {
        "startLine": 780,
        "startChar": 0,
        "endLine": 780,
        "endChar": 4
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e372908_a418c700",
        "filename": "src/runtime/sys_darwin_arm64.s",
        "patchSetId": 5
      },
      "lineNbr": 781,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-05T17:45:05Z",
      "side": 1,
      "message": "Minor: use one tab. (Also below.)",
      "range": {
        "startLine": 781,
        "startChar": 3,
        "endLine": 781,
        "endChar": 6
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3786e5f9_a908423f",
        "filename": "src/runtime/sys_darwin_arm64.s",
        "patchSetId": 5
      },
      "lineNbr": 781,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-07-07T20:37:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8e372908_a418c700",
      "range": {
        "startLine": 781,
        "startChar": 3,
        "endLine": 781,
        "endChar": 6
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01a3a161_9fb116ce",
        "filename": "src/runtime/sys_darwin_arm64.s",
        "patchSetId": 5
      },
      "lineNbr": 790,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-05T17:45:05Z",
      "side": 1,
      "message": "Same here for getpid possibly clobbering registers.",
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3801988c_eb620a4e",
        "filename": "src/runtime/sys_darwin_arm64.s",
        "patchSetId": 5
      },
      "lineNbr": 790,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-07-07T20:37:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01a3a161_9fb116ce",
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73f02e62_e6fb4afd",
        "filename": "src/runtime/sys_darwin_arm64.s",
        "patchSetId": 5
      },
      "lineNbr": 792,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-07-05T17:45:05Z",
      "side": 1,
      "message": "Minor: use tab. Thanks.",
      "range": {
        "startLine": 792,
        "startChar": 0,
        "endLine": 792,
        "endChar": 4
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f010d56e_b76c3c47",
        "filename": "src/runtime/sys_darwin_arm64.s",
        "patchSetId": 5
      },
      "lineNbr": 792,
      "author": {
        "id": 16845
      },
      "writtenOn": "2023-07-07T20:37:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73f02e62_e6fb4afd",
      "range": {
        "startLine": 792,
        "startChar": 0,
        "endLine": 792,
        "endChar": 4
      },
      "revId": "81d64c6b654b89832058611d0c2b815a59bf8bec",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}