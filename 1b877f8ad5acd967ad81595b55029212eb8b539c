{
  "comments": [
    {
      "key": {
        "uuid": "2edcd6b0_75536f99",
        "filename": "src/internal/cpu/cpu_arm.go",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 16006
      },
      "writtenOn": "2018-07-27T09:22:19Z",
      "side": 1,
      "message": "please reduce this to the set of features that are planned to be used in go1.12 apart from IDIVA which will already be covered in https://go-review.googlesource.com/c/go/+/114826.",
      "range": {
        "startLine": 17,
        "startChar": 1,
        "endLine": 17,
        "endChar": 23
      },
      "revId": "1b877f8ad5acd967ad81595b55029212eb8b539c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d417094b_accbd2fd",
        "filename": "src/internal/cpu/cpu_arm.go",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 17921
      },
      "writtenOn": "2018-07-27T09:56:17Z",
      "side": 1,
      "message": "A good set would be\n\n     hwcap_VFP      \u003d (1 \u003c\u003c 6)\n     hwcap_NEON     \u003d (1 \u003c\u003c 12)\n     hwcap_VFPv3    \u003d (1 \u003c\u003c 13)\n     hwcap_VFPv3D16 \u003d (1 \u003c\u003c 14)\n     hwcap_TLS      \u003d (1 \u003c\u003c 15)\n     hwcap_VFPv4    \u003d (1 \u003c\u003c 16)\n     hwcap_VFPD32   \u003d (1 \u003c\u003c 19)\n     hwcap2_AES     \u003d (1 \u003c\u003c 0)\n     hwcap2_PMULL   \u003d (1 \u003c\u003c 1)\n     hwcap2_SHA1    \u003d (1 \u003c\u003c 2)\n     hwcap2_SHA2    \u003d (1 \u003c\u003c 3)\n     hwcap2_CRC32   \u003d (1 \u003c\u003c 4)\n\n- Most of these are for detecting VFP variants. These are needed by runtime.checkgoarm as well as the FMA intrinsic.\n- #7300 will include NEON instructions in the assembler. #9005 confirms that detecting support for it will make crypto optimizations possible.\n- #24793 wants to use a register for TLS.\n- The last four are in case ARMv8 crypto extensions are enabled. The HWCAP bits are for ARM, but it\u0027s unclear if it\u0027s possible for an ARMv7 cpu and an ARMv8 crypto core to simultaneously exist.",
      "parentUuid": "2edcd6b0_75536f99",
      "range": {
        "startLine": 17,
        "startChar": 1,
        "endLine": 17,
        "endChar": 23
      },
      "revId": "1b877f8ad5acd967ad81595b55029212eb8b539c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5f07f11_923cee34",
        "filename": "src/internal/cpu/cpu_arm.go",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 16006
      },
      "writtenOn": "2018-07-27T10:10:23Z",
      "side": 1,
      "message": "thanks. New flags have only been added when they would be used in the go std lib soon and in some cases for tests or when ported over from the old feature detection code.\n\nAre you planning to implement any code (e.g. by solving the cited issues) that directly uses the flags for go1.12? Otherwise we should add them one by one when they are needed but we could add your tests for minimal features at any rate.",
      "parentUuid": "d417094b_accbd2fd",
      "range": {
        "startLine": 17,
        "startChar": 1,
        "endLine": 17,
        "endChar": 23
      },
      "revId": "1b877f8ad5acd967ad81595b55029212eb8b539c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf6baf63_42970180",
        "filename": "src/internal/cpu/cpu_arm.go",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 17921
      },
      "writtenOn": "2018-07-27T17:35:44Z",
      "side": 1,
      "message": "Currently, I\u0027m focused on implementing FMA, so the following will do:\n\n     hwcap_NEON     \u003d (1 \u003c\u003c 12)\n     hwcap_VFPv4    \u003d (1 \u003c\u003c 16)\n     hwcap_VFPD32   \u003d (1 \u003c\u003c 19)\n\nI see your point that we can add the others as implementations demand them.",
      "parentUuid": "c5f07f11_923cee34",
      "range": {
        "startLine": 17,
        "startChar": 1,
        "endLine": 17,
        "endChar": 23
      },
      "revId": "1b877f8ad5acd967ad81595b55029212eb8b539c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15dfb2f5_089bdff9",
        "filename": "src/runtime/os_freebsd_arm.go",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 16006
      },
      "writtenOn": "2018-07-27T10:29:16Z",
      "side": 1,
      "message": "I dont think this will work as checkgoarm will run before cpuinit.\n\nCan we remove the harddiv change parts from this CL and instead submit the version from https://go-review.googlesource.com/c/go/+/114826 that has been tested beforehand instead?\n\nYou can add a\nDO NOT SUBMIT\n- waiting on https://go-review.googlesource.com/c/go/+/114826 to be submitted first\n\nin the commit message than we can later add the new tests from this cl on top of cl/114826 after the runtime support has been added.",
      "range": {
        "startLine": 18,
        "startChar": 4,
        "endLine": 18,
        "endChar": 32
      },
      "revId": "1b877f8ad5acd967ad81595b55029212eb8b539c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}