{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "01fbaf08_37357372",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 46
      },
      "lineNbr": 0,
      "author": {
        "id": 34725
      },
      "writtenOn": "2023-02-24T21:38:45Z",
      "side": 1,
      "message": "@iant@golang.org @bcmills@google.com",
      "revId": "da711614d12640a0fb318622cb45f0c87b9f73d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62f2750a_3e9feff2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 46
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-24T21:39:08Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003dda711614\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "da711614d12640a0fb318622cb45f0c87b9f73d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d3403c3_6305cb33",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 46
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-24T21:48:05Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64\n",
      "parentUuid": "62f2750a_3e9feff2",
      "tag": "autogenerated:trybots~happy",
      "revId": "da711614d12640a0fb318622cb45f0c87b9f73d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d774afe_374c560a",
        "filename": "src/os/readfrom_linux_test.go",
        "patchSetId": 46
      },
      "lineNbr": 540,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-02-24T23:01:12Z",
      "side": 1,
      "message": "In my experience these kinds of `select` statements in tests tend to do more harm than good.\n\n- On slower builders, the test might just take too long and trip over the timeout, causing a spurious test failure.\n\n- Even on faster machines, if the test deadlocks we generally want a goroutine dump in order to diagnose the deadlock. A call to `t.Fatal` does not produce a goroutine dump, but if we let the test time out on its own it will send itself `SIGQUIT` and dump all the goroutines we need.\n\nSo the appropriate `cleanup` function here is probably just `func() { \u003c-done }`.",
      "range": {
        "startLine": 538,
        "startChar": 0,
        "endLine": 540,
        "endChar": 3
      },
      "revId": "da711614d12640a0fb318622cb45f0c87b9f73d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}