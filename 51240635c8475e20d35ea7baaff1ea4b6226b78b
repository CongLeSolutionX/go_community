{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fc3b2665_e333a75d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-01-17T22:39:18Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d51240635",
      "tag": "autogenerated:trybots~beginning",
      "revId": "51240635c8475e20d35ea7baaff1ea4b6226b78b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bcc98ff9_9ce4e618",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-01-17T22:50:54Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "fc3b2665_e333a75d",
      "tag": "autogenerated:trybots~happy",
      "revId": "51240635c8475e20d35ea7baaff1ea4b6226b78b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c9982cb_121af3fb",
        "filename": "src/crypto/tls/conn.go",
        "patchSetId": 1
      },
      "lineNbr": 1408,
      "author": {
        "id": 16585
      },
      "writtenOn": "2022-01-17T22:39:19Z",
      "side": 1,
      "message": "As mentioned in the issue I\u0027m still concerned that this doesn\u0027t check the error before returning - I don\u0027t know if this atomic variable is here solely to be able to short cut this logic, but it seems to me that any calls to Handshake and HandshakeContext should get the same error as the initial call.",
      "revId": "51240635c8475e20d35ea7baaff1ea4b6226b78b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fdb637e_d48760d1",
        "filename": "src/crypto/tls/conn.go",
        "patchSetId": 1
      },
      "lineNbr": 1408,
      "author": {
        "id": 16585
      },
      "writtenOn": "2022-01-17T22:56:24Z",
      "side": 1,
      "message": "The TryBots passed and I can\u0027t imagine we\u0027re not testing repeated Handshake calls on error, but I\u0027d still want someone with a bit more experience of this codebase to chime in :D.",
      "parentUuid": "9c9982cb_121af3fb",
      "revId": "51240635c8475e20d35ea7baaff1ea4b6226b78b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2f425cf_384bb186",
        "filename": "src/crypto/tls/conn.go",
        "patchSetId": 1
      },
      "lineNbr": 1408,
      "author": {
        "id": 55628
      },
      "writtenOn": "2022-01-17T23:02:43Z",
      "side": 1,
      "message": "Yeah, it\u0027d be great to get some confirmation from an expert here, as I\u0027m just reading around conn.go and friends for the first time today, but it looked like the atomic is only true if the handshake is complete and the connection can be read/written according to its comment and what I could make of its assignments, meaning there\u0027s no need to acquire the mutex and re-check handshakeErr if it is true? \n\nI assume that was the point of the separate atomic as well, to avoid the mutex on every read/write in the established steady state?",
      "parentUuid": "9c9982cb_121af3fb",
      "revId": "51240635c8475e20d35ea7baaff1ea4b6226b78b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}