{
  "comments": [
    {
      "key": {
        "uuid": "d7ee6a84_baf49490",
        "filename": "src/sort/genzfunc.go",
        "patchSetId": 30
      },
      "lineNbr": 40,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-03-31T21:58:24Z",
      "side": 1,
      "message": "funcsToWrite?\n\nthen you could drop the comment.",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "9301d8dec34d3ab5bab85e3b555600619ccb7f89",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66980be7_5ac20f70",
        "filename": "src/sort/genzfunc.go",
        "patchSetId": 30
      },
      "lineNbr": 40,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-03-31T21:58:24Z",
      "side": 1,
      "message": "drop the capacity hint. Premature optimization for code that\u0027s run once or twice per year at most.",
      "range": {
        "startLine": 40,
        "startChar": 34,
        "endLine": 40,
        "endChar": 38
      },
      "revId": "9301d8dec34d3ab5bab85e3b555600619ccb7f89",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54ebf1e4_c228efde",
        "filename": "src/sort/genzfunc.go",
        "patchSetId": 30
      },
      "lineNbr": 40,
      "author": {
        "id": 15048
      },
      "writtenOn": "2018-03-31T22:21:58Z",
      "side": 1,
      "message": "OK.",
      "parentUuid": "d7ee6a84_baf49490",
      "range": {
        "startLine": 39,
        "startChar": 1,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "9301d8dec34d3ab5bab85e3b555600619ccb7f89",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b23c27fe_08f917f8",
        "filename": "src/sort/genzfunc.go",
        "patchSetId": 30
      },
      "lineNbr": 40,
      "author": {
        "id": 15048
      },
      "writtenOn": "2018-03-31T22:21:58Z",
      "side": 1,
      "message": "OK.",
      "parentUuid": "66980be7_5ac20f70",
      "range": {
        "startLine": 40,
        "startChar": 34,
        "endLine": 40,
        "endChar": 38
      },
      "revId": "9301d8dec34d3ab5bab85e3b555600619ccb7f89",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48fda83d_6fd46c23",
        "filename": "src/sort/sort.go",
        "patchSetId": 30
      },
      "lineNbr": 412,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-03-31T21:58:24Z",
      "side": 1,
      "message": "these return types need names, or ideally a new type.\n\nand docs.",
      "range": {
        "startLine": 412,
        "startChar": 0,
        "endLine": 412,
        "endChar": 20
      },
      "revId": "9301d8dec34d3ab5bab85e3b555600619ccb7f89",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10febbce_e476c124",
        "filename": "src/sort/sort.go",
        "patchSetId": 30
      },
      "lineNbr": 472,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-03-31T21:58:24Z",
      "side": 1,
      "message": "comments for these?\n\nor maybe you need a new struct type if you\u0027re going to use some subset/all of these often?\n\nthen you could put docs on the struct.",
      "range": {
        "startLine": 472,
        "startChar": 1,
        "endLine": 472,
        "endChar": 65
      },
      "revId": "9301d8dec34d3ab5bab85e3b555600619ccb7f89",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7af30757_303881cb",
        "filename": "src/sort/sort.go",
        "patchSetId": 30
      },
      "lineNbr": 706,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-03-31T21:58:24Z",
      "side": 1,
      "message": "what is this?",
      "range": {
        "startLine": 706,
        "startChar": 8,
        "endLine": 706,
        "endChar": 16
      },
      "revId": "9301d8dec34d3ab5bab85e3b555600619ccb7f89",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c78b06f9_8389f1ad",
        "filename": "src/sort/sort.go",
        "patchSetId": 30
      },
      "lineNbr": 706,
      "author": {
        "id": 15048
      },
      "writtenOn": "2018-03-31T22:21:58Z",
      "side": 1,
      "message": "Oops, sorry about that. A remnant of older code.",
      "parentUuid": "7af30757_303881cb",
      "range": {
        "startLine": 706,
        "startChar": 8,
        "endLine": 706,
        "endChar": 16
      },
      "revId": "9301d8dec34d3ab5bab85e3b555600619ccb7f89",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1effe75f_1a97aab9",
        "filename": "src/sort/sort.go",
        "patchSetId": 30
      },
      "lineNbr": 810,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-03-31T21:58:24Z",
      "side": 1,
      "message": "docs?",
      "revId": "9301d8dec34d3ab5bab85e3b555600619ccb7f89",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "212d1e43_5b37243e",
        "filename": "src/sort/zfuncversion-stable.go",
        "patchSetId": 30
      },
      "lineNbr": 1,
      "author": {
        "id": 5065
      },
      "writtenOn": "2018-03-31T21:58:24Z",
      "side": 1,
      "message": "We don\u0027t want to manually maintain this 300 line func by hand and worry about it falling out of sync with the other file.\n\ngenzfunc needs to deal with it.",
      "revId": "9301d8dec34d3ab5bab85e3b555600619ccb7f89",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85ea5eb8_ae65a561",
        "filename": "src/sort/zfuncversion-stable.go",
        "patchSetId": 30
      },
      "lineNbr": 1,
      "author": {
        "id": 15048
      },
      "writtenOn": "2018-03-31T22:21:58Z",
      "side": 1,
      "message": "The problem is that genzfunc.go cannot as far as I understand do what it does correctly in the general case. That is if there is a value that implements Interface, we can rewrite it to lessSwap, but theoretically that Interface could later be asserted to a concrete type in the code, and I do not know how to solve that generally in genzfunc.go.",
      "parentUuid": "212d1e43_5b37243e",
      "revId": "9301d8dec34d3ab5bab85e3b555600619ccb7f89",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}