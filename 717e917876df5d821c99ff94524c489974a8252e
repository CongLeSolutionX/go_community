{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2c89662c_4fa5c340",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-25T16:09:46Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "7a324fc7_9e4a5a25",
      "tag": "autogenerated:trybots~beginning",
      "revId": "717e917876df5d821c99ff94524c489974a8252e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cf28e34_c5bf3a00",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-25T16:09:46Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d717e9178",
      "tag": "autogenerated:trybots~beginning",
      "revId": "717e917876df5d821c99ff94524c489974a8252e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8895b6cc_7044da9c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-25T16:20:33Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "1cf28e34_c5bf3a00",
      "tag": "autogenerated:trybots~happy",
      "revId": "717e917876df5d821c99ff94524c489974a8252e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1ae53d1_89b637d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-06-25T16:38:51Z",
      "side": 1,
      "message": "I\u0027ve done a quick review. Overall, I like it. But I have two important concerns below at the moment that I think need to be addressed before this CL is ready for submission.\n\nAlso, the noder/transform.go change looks reasonable to me, but I\u0027ll defer to Dan double check that. If it\u0027s fine with him, I\u0027ll make a second, deeper review of the rest of the CL after the outstanding issues are fixed.\n\nThanks.",
      "revId": "717e917876df5d821c99ff94524c489974a8252e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba89bd98_58bd3dae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-06-25T22:17:11Z",
      "side": 1,
      "message": "Yes, the change to transform.go is fine.  It is keeping transform.go in sync with func.go, which is what we want.  Thanks!",
      "parentUuid": "f1ae53d1_89b637d7",
      "revId": "717e917876df5d821c99ff94524c489974a8252e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c64fbb8_4df7ddcb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-06-25T22:35:19Z",
      "side": 1,
      "message": "Great, thanks Dan.",
      "parentUuid": "ba89bd98_58bd3dae",
      "revId": "717e917876df5d821c99ff94524c489974a8252e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2ff71ad_50eabb42",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-06-25T22:35:19Z",
      "side": 1,
      "message": "Took another look, and LGTM, aside from the comments below.",
      "revId": "717e917876df5d821c99ff94524c489974a8252e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae4a0fbe_7fcc3349",
        "filename": "src/cmd/compile/internal/devirtualize/devirtualize.go",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-06-25T16:38:51Z",
      "side": 1,
      "message": "Please separate this fix and the other one I identified in post-submit review of CL 330671 into a separate CL. Both of those issues are things that are currently broken and should be fixed by a minimally invasive CL before we continue with further refactoring/cleanup.\n\nThis CL is conceptually simple, but subtle in details. And OMETHEXPR is relatively rare today, so I\u0027m nervous it accidentally breaks something and needs to be reverted (at least temporarily). If that happens, we don\u0027t want to have to worry that reverting will re-introduce the issues from CL 330671.",
      "revId": "717e917876df5d821c99ff94524c489974a8252e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb6ac98d_6a031e43",
        "filename": "src/cmd/compile/internal/devirtualize/devirtualize.go",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-06-26T07:19:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae4a0fbe_7fcc3349",
      "revId": "717e917876df5d821c99ff94524c489974a8252e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4e1022a_67ea6bc6",
        "filename": "src/cmd/compile/internal/inline/inl.go",
        "patchSetId": 2
      },
      "lineNbr": 262,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-06-25T22:35:19Z",
      "side": 1,
      "message": "nit: Let\u0027s use \"switch n.X.Op() { ... }\"",
      "revId": "717e917876df5d821c99ff94524c489974a8252e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d582d81_746da166",
        "filename": "src/cmd/compile/internal/inline/inl.go",
        "patchSetId": 2
      },
      "lineNbr": 262,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-06-26T07:19:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4e1022a_67ea6bc6",
      "revId": "717e917876df5d821c99ff94524c489974a8252e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03cf7019_595c4e21",
        "filename": "src/cmd/compile/internal/inline/inl.go",
        "patchSetId": 2
      },
      "lineNbr": 262,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-06-26T07:28:03Z",
      "side": 1,
      "message": "Ops, we would have the nested switch case here, and we want to break the outermost. So I think just use if here is simpler.",
      "parentUuid": "6d582d81_746da166",
      "revId": "717e917876df5d821c99ff94524c489974a8252e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}