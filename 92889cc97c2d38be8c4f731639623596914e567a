{
  "comments": [
    {
      "key": {
        "uuid": "626209c2_2b3cf1c6",
        "filename": "src/cmd/compile/internal/gc/reflect.go",
        "patchSetId": 3
      },
      "lineNbr": 1071,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-03-08T03:38:10Z",
      "side": 1,
      "message": "Please make this uint16 with isddd in the high bit. Then there\u0027s clearly no problem with the limit. 256 is maybe something you might hit. 32768 is not.",
      "revId": "92889cc97c2d38be8c4f731639623596914e567a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "626209c2_ab3001ea",
        "filename": "src/runtime/type.go",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-03-08T03:38:10Z",
      "side": 1,
      "message": "I think this is not quite the right API. I think you want\n\nfunc (t *functype) in() []*_type { ... }\nfunc (t *functype) out() []*_type { ... }\n\nThen the loops over in and out can just fetch the actual slice once and then behave as before. No need for all this magic on every index operation.",
      "revId": "92889cc97c2d38be8c4f731639623596914e567a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "626209c2_0b300de5",
        "filename": "src/runtime/type.go",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-03-08T03:48:41Z",
      "side": 1,
      "message": "That is what I was originally going for, but I could not devise a way to construct a slice header under the runtime escape analysis limits. Do you have a trick for it I can use?",
      "parentUuid": "626209c2_ab3001ea",
      "revId": "92889cc97c2d38be8c4f731639623596914e567a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "626209c2_0b0e4d13",
        "filename": "src/runtime/type.go",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-03-08T04:28:27Z",
      "side": 1,
      "message": "return (*[1\u003c\u003c20]*_type)(add(unsafe.Pointer(t), uadd))[:t.inCount:t.inCount]",
      "parentUuid": "626209c2_0b300de5",
      "revId": "92889cc97c2d38be8c4f731639623596914e567a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}