{
  "comments": [
    {
      "key": {
        "uuid": "eb3e66f8_cd0ae9fa",
        "filename": "src/cmd/link/internal/ld/symtab.go",
        "patchSetId": 2
      },
      "lineNbr": 319,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-04-21T12:57:50Z",
      "side": 1,
      "message": "The old code was Syms.Lookup, which creates if not already there-- new code is ldr.Lookup, which doesn\u0027t create. Was this intentional? Or maybe it doesn\u0027t matter?",
      "revId": "3ca8a36ef3f93dacc81a24025ff4d2e7f484c972",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6756a3d2_69f406fc",
        "filename": "src/cmd/link/internal/ld/symtab.go",
        "patchSetId": 2
      },
      "lineNbr": 319,
      "author": {
        "id": 32560
      },
      "writtenOn": "2020-04-21T13:47:23Z",
      "side": 1,
      "message": "It looks to me like the original intent was for it to be a ROLookup (there\u0027s error handling).\n\nhttps://go-review.googlesource.com/27790",
      "parentUuid": "eb3e66f8_cd0ae9fa",
      "revId": "3ca8a36ef3f93dacc81a24025ff4d2e7f484c972",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93d1eeb0_e1fd4e1c",
        "filename": "src/cmd/link/internal/ld/symtab.go",
        "patchSetId": 2
      },
      "lineNbr": 319,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-04-21T14:11:46Z",
      "side": 1,
      "message": "OK good point, there is \"if s \u003d\u003d nil\" in the old code...",
      "parentUuid": "6756a3d2_69f406fc",
      "revId": "3ca8a36ef3f93dacc81a24025ff4d2e7f484c972",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13bccb86_9f5e1faa",
        "filename": "src/cmd/link/internal/ld/symtab.go",
        "patchSetId": 2
      },
      "lineNbr": 330,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-04-21T12:57:50Z",
      "side": 1,
      "message": "I think it would be cleaner to have symtab() return this (instead of making it a global var) and then it could be fed directly to dodata() in main.  For now thought this looks fine, I\u0027ll make that change when I convert dodata().",
      "revId": "3ca8a36ef3f93dacc81a24025ff4d2e7f484c972",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b2e7ddc_dfa1232c",
        "filename": "src/cmd/link/internal/ld/symtab.go",
        "patchSetId": 2
      },
      "lineNbr": 368,
      "author": {
        "id": 14020
      },
      "writtenOn": "2020-04-21T12:57:50Z",
      "side": 1,
      "message": "This doesn\u0027t really have anything to do with your change, but I find it very confusing that runtime.egcdata gets created via xdefine (which among other things marks the symbol as \"Special\") whereas runtime.gcdata doesn\u0027t get created this way. Why?",
      "revId": "3ca8a36ef3f93dacc81a24025ff4d2e7f484c972",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}