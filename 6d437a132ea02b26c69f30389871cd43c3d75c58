{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "32820365_07f46080",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5015
      },
      "writtenOn": "2022-06-23T01:02:30Z",
      "side": 1,
      "message": "n",
      "revId": "6d437a132ea02b26c69f30389871cd43c3d75c58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "823aaa8b_fbd4900d",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 1707,
      "author": {
        "id": 5015
      },
      "writtenOn": "2022-06-23T01:02:30Z",
      "side": 1,
      "message": "This is much more explanation than should be necessary.\n\nI suggest a different approach: The phrase \"pass by value\" does not appear in the spec. Put that in, and say that the term \"value\" in function call is the actual value for scalars and pointers, and the compound object for arrays and structs. For slices, maps, and channels, the value is of an implementation-specific object that includes the information (typically a pointer) to access its components, but not the components themselves.",
      "revId": "6d437a132ea02b26c69f30389871cd43c3d75c58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "254e51c0_5838e823",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 1707,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-06-23T04:05:25Z",
      "side": 1,
      "message": "\"Pass by value\" is specific to functions and describes the behavior of assignments of function arguments to function parameters. Typically the argument passing style is controlled by how the function parameters are declared (e.g. VAR parameters in Pascal, or reference parameters in C++); irrespective of the types involved. For instance, one can pass a pointer \"by reference\".\n\nThat is, the \"argument passing style\" is orthogonal to the reference-like property of certain types.\n\nThe reference-like property is also observed in ordinary assignment, with no functions involved.\n\nSo I think we need to distinguish this at the type level. Or at least at the assignment level. Maybe \"assigned by value\" (which becomes \"passed by value\" when function arguments are involved).\n\nBut I hear you. Completely rewrote the section.",
      "parentUuid": "823aaa8b_fbd4900d",
      "revId": "6d437a132ea02b26c69f30389871cd43c3d75c58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "437de026_f4e27e55",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 1710,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-06-23T00:02:07Z",
      "side": 1,
      "message": "Run-on sentence.  Perhaps period at end of line and on the next line s/which/This/",
      "revId": "6d437a132ea02b26c69f30389871cd43c3d75c58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d55b3f05_c5d78788",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 1710,
      "author": {
        "id": 57259
      },
      "writtenOn": "2022-06-23T02:48:26Z",
      "side": 1,
      "message": "I don\u0027t think the value vs reference type distinction is rigorous enough to belong in the spec. Slices and many structs contain a mix of values and references, which really muddies the waters.\n\nA few months back I sent https://go-review.googlesource.com/c/go/+/391634 to update the spec wording on this topic, and the approach it takes is to let pointers do most of the heavy lifting, to state that assignments make copies of pointers, leading to aliasing (effects through one copy of a pointer are observed through another), and to define that maps and channels are pointer-like references to the data structures created by \"make\".\n\nEven if you don\u0027t like the wording of that CL, you might find its approach has fewer moving parts.",
      "revId": "6d437a132ea02b26c69f30389871cd43c3d75c58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0800db74_680f7542",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 1710,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-06-23T04:05:25Z",
      "side": 1,
      "message": "My apologies; I completely forgot about your CL.\n\nI agree that there are fewer moving parts.",
      "parentUuid": "d55b3f05_c5d78788",
      "revId": "6d437a132ea02b26c69f30389871cd43c3d75c58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4700320_9bf97017",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 1710,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-06-23T04:05:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "437de026_f4e27e55",
      "revId": "6d437a132ea02b26c69f30389871cd43c3d75c58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ce1fee7_dbe6a643",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 1722,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-06-23T00:02:07Z",
      "side": 1,
      "message": "I think that pointer types are value types but I think you need a paragraph explaining that.",
      "revId": "6d437a132ea02b26c69f30389871cd43c3d75c58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69b1e421_1de220e3",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 1722,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-06-23T04:05:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1ce1fee7_dbe6a643",
      "revId": "6d437a132ea02b26c69f30389871cd43c3d75c58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92607968_25cbf863",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 1750,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-06-23T00:02:07Z",
      "side": 1,
      "message": "The link does use the word \"descriptor\" but I don\u0027t see a clear explanation as to what is the \"descriptor portion\" and what is not.",
      "revId": "6d437a132ea02b26c69f30389871cd43c3d75c58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bebf1efc_afa2e2e0",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 1750,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-06-23T04:05:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "92607968_25cbf863",
      "revId": "6d437a132ea02b26c69f30389871cd43c3d75c58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11be9ecf_eee124f2",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 1775,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-06-23T00:02:07Z",
      "side": 1,
      "message": "I\u0027m inclined to say that we don\u0027t need this paragraph in the spec.",
      "revId": "6d437a132ea02b26c69f30389871cd43c3d75c58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bedb607c_ae73760b",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 1775,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-06-23T04:05:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11be9ecf_eee124f2",
      "revId": "6d437a132ea02b26c69f30389871cd43c3d75c58",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}