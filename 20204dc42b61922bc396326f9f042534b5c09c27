{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "61401722_3daab421",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-12-21T15:54:36Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d20204dc4\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "20204dc42b61922bc396326f9f042534b5c09c27",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a3b24cc_46aba181",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-12-21T16:12:02Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* windows-amd64-longtest\n",
      "parentUuid": "61401722_3daab421",
      "tag": "autogenerated:trybots~happy",
      "revId": "20204dc42b61922bc396326f9f042534b5c09c27",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "978c9f8c_0b683c22",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 34993
      },
      "writtenOn": "2023-01-06T21:21:33Z",
      "side": 1,
      "message": "TRY\u003dwindows-amd64-longtest,windows-arm64",
      "revId": "20204dc42b61922bc396326f9f042534b5c09c27",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2b9a749_bec9e057",
        "filename": "src/runtime/signal_windows.go",
        "patchSetId": 18
      },
      "lineNbr": 136,
      "author": {
        "id": 12120
      },
      "writtenOn": "2022-12-22T20:09:11Z",
      "side": 1,
      "message": "Just for clarification, do these Windows exceptions unconditionally push directly onto whichever stack happens to be in use when the exception is raised?",
      "revId": "20204dc42b61922bc396326f9f042534b5c09c27",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9c21669_1ebeb416",
        "filename": "src/runtime/signal_windows.go",
        "patchSetId": 18
      },
      "lineNbr": 136,
      "author": {
        "id": 34993
      },
      "writtenOn": "2022-12-22T20:32:53Z",
      "side": 1,
      "message": "Yes. Does it affect the comment or the code?",
      "parentUuid": "e2b9a749_bec9e057",
      "revId": "20204dc42b61922bc396326f9f042534b5c09c27",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aab7507e_56726233",
        "filename": "src/runtime/signal_windows.go",
        "patchSetId": 18
      },
      "lineNbr": 136,
      "author": {
        "id": 5070
      },
      "writtenOn": "2022-12-22T21:01:00Z",
      "side": 1,
      "message": "Windows exception happen in a Windows thread. Each Windows thread has single stack pointed by SP. So Windows runs exception handler on the stack pointed by SP. Windows does not understand / recognise Go stacks.",
      "parentUuid": "a9c21669_1ebeb416",
      "revId": "20204dc42b61922bc396326f9f042534b5c09c27",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f25f1163_bad6b0b4",
        "filename": "src/runtime/signal_windows.go",
        "patchSetId": 18
      },
      "lineNbr": 136,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-01-09T19:20:19Z",
      "side": 1,
      "message": "Thanks, it doesn\u0027t affect anything, I just wasn\u0027t certain (on Linux etc, we have sigaltstack, I see that we don\u0027t have something similar for Windows).",
      "parentUuid": "aab7507e_56726233",
      "revId": "20204dc42b61922bc396326f9f042534b5c09c27",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}