{
  "comments": [
    {
      "key": {
        "uuid": "eba783d1_e6444b67",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 3313,
      "author": {
        "id": 13315
      },
      "writtenOn": "2019-01-23T16:39:09Z",
      "side": 1,
      "message": "This is not related to what is described in the CL. Should be a separate CL.",
      "range": {
        "startLine": 3312,
        "startChar": 0,
        "endLine": 3313,
        "endChar": 73
      },
      "revId": "85c005f2a5b09c2e3d47d3f9604e87d8a1a5e1ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5350d651_6f4ac514",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 3313,
      "author": {
        "id": 13315
      },
      "writtenOn": "2019-01-23T16:41:00Z",
      "side": 1,
      "message": "Is this really necessary? Have you seen the comment at line 3319?\n\n// ReverseBytes inlines correctly, no need to intrinsify it.",
      "parentUuid": "eba783d1_e6444b67",
      "range": {
        "startLine": 3312,
        "startChar": 0,
        "endLine": 3313,
        "endChar": 73
      },
      "revId": "85c005f2a5b09c2e3d47d3f9604e87d8a1a5e1ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "317cde02_dbc7a4c9",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 3313,
      "author": {
        "id": 24534
      },
      "writtenOn": "2019-01-24T04:10:08Z",
      "side": 1,
      "message": "Sorry, I didn\u0027t notice that some platforms don\u0027t need this intrinsic, but arm64 and arm need this alias, so I think p4... and p8... should be sys.ArchARM64, sys.ArchARM. In addition, does this need to be a separate CL, can I update the commit message and keep them in this CL?",
      "parentUuid": "5350d651_6f4ac514",
      "range": {
        "startLine": 3312,
        "startChar": 0,
        "endLine": 3313,
        "endChar": 73
      },
      "revId": "85c005f2a5b09c2e3d47d3f9604e87d8a1a5e1ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1258ccc4_1dd8a107",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 3313,
      "author": {
        "id": 13315
      },
      "writtenOn": "2019-01-28T15:54:20Z",
      "side": 1,
      "message": "Can you explain why it is needed on ARM(64)? Why inlining doesn\u0027t just do the right thing?\n\nvar x uint\nfunc F() { x \u003d bits.ReverseBytes(x) }\n\n\"\".F STEXT size\u003d48 args\u003d0x0 locals\u003d0x0 leaf\n\t0x0000 00000 (/tmp/x.go:7)\tTEXT\t\"\".F(SB), LEAF|NOFRAME|ABIInternal, $0-0\n\t0x0000 00000 (/tmp/x.go:7)\tFUNCDATA\tZR, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)\n\t0x0000 00000 (/tmp/x.go:7)\tFUNCDATA\t$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)\n\t0x0000 00000 (/tmp/x.go:7)\tFUNCDATA\t$3, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)\n\t0x0000 00000 (/tmp/x.go:7)\tPCDATA\t$2, ZR\n\t0x0000 00000 (/tmp/x.go:7)\tPCDATA\tZR, ZR\n\t0x0000 00000 (/tmp/x.go:7)\tHINT\tZR\n\t0x0004 00004 (/tmp/x.go:7)\tMOVD\t\"\".x(SB), R0\n\t0x0010 00016 ($GOROOT/src/math/bits/bits.go:257)\tREV\tR0, R0\n\t0x0014 00020 (/tmp/x.go:7)\tMOVD\tR0, \"\".x(SB)\n\t0x0020 00032 (/tmp/x.go:7)\tRET\t(R30)",
      "parentUuid": "317cde02_dbc7a4c9",
      "range": {
        "startLine": 3312,
        "startChar": 0,
        "endLine": 3313,
        "endChar": 73
      },
      "revId": "85c005f2a5b09c2e3d47d3f9604e87d8a1a5e1ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06d0ecb6_08d52998",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 3313,
      "author": {
        "id": 24534
      },
      "writtenOn": "2019-02-14T09:36:52Z",
      "side": 1,
      "message": "bits.ReverseBytes is inlined to bits.ReverseBytes32 on arm, but the benchmark performance of these two functions are different. If I add these two alias, their performance is the same, that\u0027s quite weird.",
      "parentUuid": "1258ccc4_1dd8a107",
      "range": {
        "startLine": 3312,
        "startChar": 0,
        "endLine": 3313,
        "endChar": 73
      },
      "revId": "85c005f2a5b09c2e3d47d3f9604e87d8a1a5e1ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4298d39a_6c07623a",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM.rules",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 13315
      },
      "writtenOn": "2019-01-23T16:39:09Z",
      "side": 1,
      "message": "Can we do (x \u003c\u003c 16 | x) \u003e\u003e 8 ? I.e.\nORR x\u003c\u003c16, x, out\nSLL $8, out\n\nI think this is one fewer instruction.",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 89,
        "endChar": 44
      },
      "revId": "85c005f2a5b09c2e3d47d3f9604e87d8a1a5e1ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "663ac21b_9c12cde8",
        "filename": "src/cmd/compile/internal/ssa/gen/ARM.rules",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 24534
      },
      "writtenOn": "2019-01-24T04:10:08Z",
      "side": 1,
      "message": "No, because although x is 16 bits, it will be loaded to a 32 bits register, and the high 16 bits are not set to 0, this will result in test failure.\n--- FAIL: TestReverseBytes (0.00s)\n    bits_test.go:593: ReverseBytes16(0x6789) \u003d\u003d 0xcd67; want 0x8967\nFAIL",
      "parentUuid": "4298d39a_6c07623a",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 89,
        "endChar": 44
      },
      "revId": "85c005f2a5b09c2e3d47d3f9604e87d8a1a5e1ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}