{
  "comments": [
    {
      "key": {
        "uuid": "2320f22c_f3e8f0ab",
        "filename": "src/debug/dwarf/entry.go",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 5206
      },
      "writtenOn": "2015-04-07T01:04:46Z",
      "side": 1,
      "message": "I don\u0027t see why we want to check the DWARF version here.  DWARF4 added DW_FORM_exprloc, and permits using it for DW_AT_location, et. al., but I wouldn\u0027t be amazed if some DWARF producer uses DWARF4 but still uses DW_FORM_block4 here.  If we see DW_FORM_block4 for an attrIsExprloc[attr], then even if DWARF 4 I think it\u0027s still ClassExprLoc, because what else could it be?",
      "revId": "1463d3f96df46b5966e26484a24914b79490557a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "234d525a_b97911c3",
        "filename": "src/debug/dwarf/entry.go",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 5167
      },
      "writtenOn": "2015-04-10T18:16:30Z",
      "side": 1,
      "message": "Yes. In this case, there\u0027s no attribute for which this is ambiguous, so we could promote block forms to exprloc for these attributes regardless of version.",
      "parentUuid": "2320f22c_f3e8f0ab",
      "revId": "1463d3f96df46b5966e26484a24914b79490557a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2320f22c_b3e278c8",
        "filename": "src/debug/dwarf/entry.go",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 5206
      },
      "writtenOn": "2015-04-07T01:04:46Z",
      "side": 1,
      "message": "Similarly I\u0027m not sure why we should check the DWARF version here.",
      "revId": "1463d3f96df46b5966e26484a24914b79490557a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "234d525a_7903290f",
        "filename": "src/debug/dwarf/entry.go",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 5167
      },
      "writtenOn": "2015-04-10T18:16:30Z",
      "side": 1,
      "message": "In this case we do need the version check, at least for AttrStartScope and AttrDataMemberLoc. In DWARF 4 these can legitimately be either constant or *ptr and need to be interpreted differently depending on their class.\n\nNone of the other attributes in attrPtrClass permit constant-class values, so they don\u0027t have this ambiguity. We could do the promotion unconditionally for those and only do the version check for the two ambiguous attributes. Would that be better?",
      "parentUuid": "2320f22c_b3e278c8",
      "revId": "1463d3f96df46b5966e26484a24914b79490557a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2320f22c_53d43ce5",
        "filename": "src/debug/dwarf/entry.go",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5206
      },
      "writtenOn": "2015-04-07T01:04:46Z",
      "side": 1,
      "message": "I think we should distinguish Sig8 here.",
      "revId": "1463d3f96df46b5966e26484a24914b79490557a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "234d525a_391a816e",
        "filename": "src/debug/dwarf/entry.go",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5167
      },
      "writtenOn": "2015-04-10T18:16:30Z",
      "side": 1,
      "message": "Okay. I\u0027ll introduce a new class. ClassReferenceSig?",
      "parentUuid": "2320f22c_53d43ce5",
      "revId": "1463d3f96df46b5966e26484a24914b79490557a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}