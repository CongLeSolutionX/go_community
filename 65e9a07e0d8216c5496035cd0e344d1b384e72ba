{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "44593798_ca0d93de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-31T20:39:20Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d65e9a07e\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "65e9a07e0d8216c5496035cd0e344d1b384e72ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3208771_5212cf4a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-05-31T20:52:06Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "44593798_ca0d93de",
      "tag": "autogenerated:trybots~happy",
      "revId": "65e9a07e0d8216c5496035cd0e344d1b384e72ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9f79ac5_e225c313",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-05-31T22:25:46Z",
      "side": 1,
      "message": "Ok, I think I understand this better now: When we see a type parameter, we need to look up its value in the environment within which it was set, _and_ we also need to use the _seen_ map of that environment. Which is why we need to remove an element from the path, assuming we use the path to detect cycles. Which is what the new code does, except that it also uses a map to record information for types that have already been seen, as an optimization (but because we never remove elements we need the path for correctness).\n\nAn alternative solution is to use a (deduped) map for cycle detection, but it would require that we make a copy of the map state when we push a new environment, because type parameters must use their environment\u0027s map state (this is the actual bug, I think).\n\nCopying maps seems more expensive than manipulating paths and possibly iterating over them (they tend to be short), so using a path maybe better.\n\nSo to summarize:\n- I believe we can use the reallyMarked path alone for cycle detection (we may still need to track the full path, but I\u0027m not sure yet).\n- Cycle detection via path may be extremely slow in some cases (testdata/fixedbugs/issue6977.go) which is we probably want to keep a map on the side for performance. This map simply records the information for types we already know about.\n- It may be sufficient to create these maps as needed (once per call to the top-level validType function), w/o the need to store them in the Checker, we may need the dedup mechanism for that.\n\nWith this said, we should be able to have a more principled fix.\n\nFinally, here\u0027s a simpler test case that is easier to follow:\n\nvar _ B[A]\n\ntype A struct {\n\t_ B[string]\n}\n\ntype B[P any] struct {\n\t_ C[P]\n}\n\ntype C[P any] struct {\n\t_ P\n}\n",
      "revId": "65e9a07e0d8216c5496035cd0e344d1b384e72ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5fb2110c_74b0c03a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-06-01T04:03:23Z",
      "side": 1,
      "message": "FYI: Here\u0027s a minimal fix (needs cleanups): https://go-review.googlesource.com/c/go/+/409694. It appears to work, it\u0027s just too slow for one esoteric test case. We can make that case faster with a helper map.",
      "revId": "65e9a07e0d8216c5496035cd0e344d1b384e72ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}