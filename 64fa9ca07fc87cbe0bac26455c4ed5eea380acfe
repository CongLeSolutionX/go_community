{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "739b8bc2_3b877f1d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-06-21T19:57:32Z",
      "side": 1,
      "message": "Thanks.",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfc1e2f9_315e40c1",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4414,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-06-20T22:11:09Z",
      "side": 1,
      "message": "Perhaps \"A use of a generic function may\" and adjust elsewhere.",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91b7dbcc_2bc02636",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4414,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-06-21T19:57:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfc1e2f9_315e40c1",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3ceed61_f806901c",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4418,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-06-20T22:11:09Z",
      "side": 1,
      "message": "Do we need the part after the semicolon?  Isn\u0027t that the same as the assignment rules anyhow?",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f087e74_641e1265",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4418,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-06-21T19:57:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e3ceed61_f806901c",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f59ff133_9727dfc6",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4421,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-06-20T22:11:09Z",
      "side": 1,
      "message": "You said \"match\" before and here you say \"relationship\" which I found a bit confusing.  Perhaps \"Each such pair of matched types\".",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1747b2ef_6071087a",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4421,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-06-21T19:57:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f59ff133_9727dfc6",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "827e499c_80389528",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4430,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-06-20T22:11:09Z",
      "side": 1,
      "message": "s/and not different from/just as/",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46e6d282_7e90af58",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4430,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-06-21T19:57:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "827e499c_80389528",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4451411a_b0a8836a",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4436,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-06-20T22:11:09Z",
      "side": 1,
      "message": "s/fails/also fails/",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44755045_432630b5",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4436,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-06-21T19:57:32Z",
      "side": 1,
      "message": "This is the first time \"fails\" applies to type inference. The previous \"fails\" applies to constraint satisfaction.",
      "parentUuid": "4451411a_b0a8836a",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4c3a4e2_900645af",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4454,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-06-20T22:11:09Z",
      "side": 1,
      "message": "It\u0027s a little confusing to read \"Slice of s\" because this is not a \"[]s\".  Perhaps \"The type of s, which is Slice, must be....\"",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b33b464b_a48aaedf",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4454,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-06-21T19:57:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4c3a4e2_900645af",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fc8a2b0_785b6bc4",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4460,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-06-20T22:11:09Z",
      "side": 1,
      "message": "In Gerrit in my browser the distinction between the two characters ≅ and ≡ you are using is nearly invisible.",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ae4170a_4b25017e",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4460,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-06-21T19:57:32Z",
      "side": 1,
      "message": "Yes. It\u0027s even worse in VSCode, so there\u0027s that :-)\n\nWill try to find a better solution.",
      "parentUuid": "1fc8a2b0_785b6bc4",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a564a435_16f0dd10",
        "filename": "doc/go_spec.html",
        "patchSetId": 2
      },
      "lineNbr": 4460,
      "author": {
        "id": 7392
      },
      "writtenOn": "2023-06-28T03:17:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ae4170a_4b25017e",
      "revId": "64fa9ca07fc87cbe0bac26455c4ed5eea380acfe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}