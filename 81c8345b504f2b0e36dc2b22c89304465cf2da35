{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c504e842_49f9247c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-28T21:40:26Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d81c8345b\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "81c8345b504f2b0e36dc2b22c89304465cf2da35",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f06b4447_a0678fe6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-28T21:40:26Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "87897547_c4f701bf",
      "tag": "autogenerated:trybots~beginning",
      "revId": "81c8345b504f2b0e36dc2b22c89304465cf2da35",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "918ef519_4cf30e5f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2023-07-28T21:46:09Z",
      "side": 1,
      "message": "This is ready for review now.",
      "revId": "81c8345b504f2b0e36dc2b22c89304465cf2da35",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "668af949_8c065704",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-07-28T21:52:19Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "c504e842_49f9247c",
      "tag": "autogenerated:trybots~happy",
      "revId": "81c8345b504f2b0e36dc2b22c89304465cf2da35",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4077f07_ffb166fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-07-28T22:27:19Z",
      "side": 1,
      "message": "k",
      "revId": "81c8345b504f2b0e36dc2b22c89304465cf2da35",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27c2877c_c5a22f73",
        "filename": "src/runtime/panic.go",
        "patchSetId": 7
      },
      "lineNbr": 629,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-07-28T22:27:19Z",
      "side": 1,
      "message": "This is strange that it is not just\n\np.startPC \u003d pc\np.startSP \u003d sp\n\nas we just called getcallerpc and getcallersp at all the callsites.\nSo startPC/startSP and pc/sp are off by one frame from each other? Not sure why that would be desired.",
      "revId": "81c8345b504f2b0e36dc2b22c89304465cf2da35",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39a0806a_6a92399c",
        "filename": "src/runtime/panic.go",
        "patchSetId": 7
      },
      "lineNbr": 655,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-07-28T22:27:19Z",
      "side": 1,
      "message": "Comment that this call doesn\u0027t return, and effectively stops panic processing.\nWhere does p get unlinked from gp._panic?",
      "revId": "81c8345b504f2b0e36dc2b22c89304465cf2da35",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "707a342a_8e6a0b74",
        "filename": "src/runtime/panic.go",
        "patchSetId": 7
      },
      "lineNbr": 664,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-07-28T22:27:19Z",
      "side": 1,
      "message": "My original thought was this should be:\n\nfor p.deferBitsPtr !\u003d nil \u0026\u0026 *p.deferBitsPtr !\u003d 0 {\n\nThat gets rid of the openDefers field.\n\n(this is easily done as a separate CL.)",
      "range": {
        "startLine": 664,
        "startChar": 8,
        "endLine": 664,
        "endChar": 18
      },
      "revId": "81c8345b504f2b0e36dc2b22c89304465cf2da35",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e7be182_eec13330",
        "filename": "src/runtime/panic.go",
        "patchSetId": 7
      },
      "lineNbr": 755,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-07-28T22:27:19Z",
      "side": 1,
      "message": "Related to the previous comment, then we wouldn\u0027t need this varint in the funcdata any more.\nWe\u0027d just process up to the highest set bit in the pointer mask.",
      "revId": "81c8345b504f2b0e36dc2b22c89304465cf2da35",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d03af0df_7ba3212d",
        "filename": "src/runtime/panic.go",
        "patchSetId": 7
      },
      "lineNbr": 774,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-07-28T22:27:19Z",
      "side": 1,
      "message": "This surprised me that it is minus.\nMakes sense now that I think about it (down from FP, right?) but maybe this function needs a better name. frameSlotFromOffset?",
      "range": {
        "startLine": 774,
        "startChar": 39,
        "endLine": 774,
        "endChar": 40
      },
      "revId": "81c8345b504f2b0e36dc2b22c89304465cf2da35",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}