{
  "comments": [
    {
      "key": {
        "uuid": "7d67596e_4b3f4fe9",
        "filename": "src/cmd/internal/src/xpos.go",
        "patchSetId": 18
      },
      "lineNbr": 112,
      "author": {
        "id": 5210
      },
      "writtenOn": "2019-09-11T20:00:14Z",
      "side": 1,
      "message": "Can we avoid exporting this? If I\u0027m not mistaken, this is the only field here (and elsewhere in the src package) that is \"internal\" and exported. Once exported, it will be hard to change the implementation.\n\nAfter all, you already introduce a level of abstraction via the FileIndex function (rather that directly use NameMap) - even though FileIndex blows through that abstraction by returning an \"internal\" index.\n\nI see that this table is needed dwarf.go to create the fileLUT table. Why not provide a function that does that here?\n\nAnd another thing to consider (though I don\u0027t know the overall structure here): Is this NameMap used anywhere else in relation to PosTable? Or another way of asking: Since the NameMap is populated exactly when calling XPos, couldn\u0027t this be done externally (where you call XPos) and then NameMap doesn\u0027t have to be in this package at all? (Caveat, I don\u0027t know if that makes sense, or there is more to come related to NameMap in the future. I just see that at the moment it looks like PosTable was \"just\" a convenient way to stash this table away.)",
      "range": {
        "startLine": 112,
        "startChar": 1,
        "endLine": 112,
        "endChar": 8
      },
      "revId": "debc9cb40423f58d11367bac977bc811c118d9b2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}