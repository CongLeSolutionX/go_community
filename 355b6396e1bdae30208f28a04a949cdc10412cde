{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fa1499b5_cd86359f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-04-09T18:22:29Z",
      "side": 1,
      "message": "TRY\u003dwazero",
      "revId": "355b6396e1bdae30208f28a04a949cdc10412cde",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9a1471c_4dea59f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-09T18:22:47Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d355b6396\nNote that builder wasip1-wasm-wazero has known issues:\n\thttps://go.dev/issue/58141\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "355b6396e1bdae30208f28a04a949cdc10412cde",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d69efd27_8b82071e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-09T18:23:46Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d355b6396\nFailed on wasip1-wasm-wazero: https://storage.googleapis.com/go-build-log/355b6396/wasip1-wasm-wazero_2767ab7c.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "e9a1471c_4dea59f9",
      "tag": "autogenerated:trybots~progress",
      "revId": "355b6396e1bdae30208f28a04a949cdc10412cde",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2248dc0_1a40021b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-09T18:31:23Z",
      "side": 1,
      "message": "1 of 45 SlowBots failed.\nFailed on wasip1-wasm-wazero: https://storage.googleapis.com/go-build-log/355b6396/wasip1-wasm-wazero_2767ab7c.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\nSlowBot builds that ran:\n* wasip1-wasm-wazero\n",
      "parentUuid": "e9a1471c_4dea59f9",
      "tag": "autogenerated:trybots~failed",
      "revId": "355b6396e1bdae30208f28a04a949cdc10412cde",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f16be73_9d619ddb",
        "filename": "src/cmd/compile/internal/ssagen/abi.go",
        "patchSetId": 2
      },
      "lineNbr": 376,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-04-10T16:23:57Z",
      "side": 1,
      "message": "Do you think we should explicitly disallow Go\u0027s uintptr type? Currently I think it is treated just like a 64-bit integer type, but that can be confusing given that its translation is different from unsafe.Pointer?",
      "revId": "355b6396e1bdae30208f28a04a949cdc10412cde",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9058eee_fd941f6f",
        "filename": "src/cmd/compile/internal/ssagen/abi.go",
        "patchSetId": 2
      },
      "lineNbr": 392,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-04-10T16:23:57Z",
      "side": 1,
      "message": "It seems the difference between this function and the above is the error message, and this function does not support unsafe.Pointer (why?). Maybe combine the two with an extra parameter to distinguish args and results?\n\nAlso, should we check that there is only one (or zero) result?",
      "revId": "355b6396e1bdae30208f28a04a949cdc10412cde",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}