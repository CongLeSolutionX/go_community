{
  "comments": [
    {
      "key": {
        "uuid": "8421f201_59aa5b62",
        "filename": "src/cmd/go/internal/modcmd/vendor.go",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 17092
      },
      "writtenOn": "2019-10-02T17:03:30Z",
      "side": 1,
      "message": "Consider extracting this code into a function. It would make it easier to be confident that it works the same way. I don\u0027t think it\u0027s necessary for the require/replace formatting code to be combined as they are above.",
      "revId": "6af0928764fa28c70add02280a39c648243d5c7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b2ff353_c41b06d5",
        "filename": "src/cmd/go/internal/modcmd/vendor.go",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-10-04T14:17:12Z",
      "side": 1,
      "message": "\u003e Consider extracting this code into a function. It would make it easier to be confident that it works the same way.\n\nDone.\n\n\u003e I don\u0027t think it\u0027s necessary for the require/replace formatting code to be combined as they are above.\n\nPerhaps, although one of my (minor) goals here is to minimize the diffs in vendor/modules.txt vs. what was generated by Go 1.13.\n\nAnd I think there is substantial value in putting the replacement annotation for modules that provide packages alongside the entries for those modules. Otherwise, it will be harder for a human to notice that the vendored packages came from a replacement instead of the original module path.",
      "parentUuid": "8421f201_59aa5b62",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "6af0928764fa28c70add02280a39c648243d5c7e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}