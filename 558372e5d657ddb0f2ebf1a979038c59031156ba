{
  "comments": [
    {
      "key": {
        "uuid": "4b5a2b3e_f677f1a8",
        "filename": "src/regexp/regexp.go",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 9525
      },
      "writtenOn": "2018-03-22T13:31:07Z",
      "side": 1,
      "message": "use `sync.Pool` instead of `*sync.Pool`. This should simplify the code for creating new Regexp and will remove unnecessary pointer chasing from the generated machine code.",
      "revId": "558372e5d657ddb0f2ebf1a979038c59031156ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "221b5157_a282a9d7",
        "filename": "src/regexp/regexp.go",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 26981
      },
      "writtenOn": "2018-03-22T14:51:47Z",
      "side": 1,
      "message": "That\u0027s how it was in Patch Set 1, and bcmills@ told to make this a pointer and share it. How do we make a final decision?",
      "parentUuid": "4b5a2b3e_f677f1a8",
      "revId": "558372e5d657ddb0f2ebf1a979038c59031156ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac99cd68_e7350957",
        "filename": "src/regexp/regexp.go",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 9525
      },
      "writtenOn": "2018-03-27T17:57:01Z",
      "side": 1,
      "message": "I see the point in `*sync.Pool` here now. Let it be a pointer",
      "parentUuid": "221b5157_a282a9d7",
      "revId": "558372e5d657ddb0f2ebf1a979038c59031156ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74466ff5_d4b34883",
        "filename": "src/regexp/regexp.go",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 9525
      },
      "writtenOn": "2018-03-27T17:59:56Z",
      "side": 1,
      "message": "I\u0027d add an explanatory comment here, since this contradicts typical embedding for sync.Pool inside structs",
      "parentUuid": "ac99cd68_e7350957",
      "revId": "558372e5d657ddb0f2ebf1a979038c59031156ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cf7f037_c5803b8c",
        "filename": "src/regexp/regexp.go",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 9525
      },
      "writtenOn": "2018-03-22T13:31:07Z",
      "side": 1,
      "message": "Remove this line.\n\nCopy may be still required for certain cases, since blind Regexp copying doesn\u0027t work.",
      "revId": "558372e5d657ddb0f2ebf1a979038c59031156ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c8d599c_757e30a7",
        "filename": "src/regexp/regexp.go",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 6365
      },
      "writtenOn": "2018-03-22T15:50:49Z",
      "side": 1,
      "message": "Could you clarify? (What are the cases in which a Copy would still be needed?)",
      "parentUuid": "7cf7f037_c5803b8c",
      "revId": "558372e5d657ddb0f2ebf1a979038c59031156ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c40a6c2_4d47b5fe",
        "filename": "src/regexp/regexp.go",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 9525
      },
      "writtenOn": "2018-03-27T17:57:01Z",
      "side": 1,
      "message": "The case is when a copy of regexp per dedicated worker thread (goroutine) is used for performance reasons. It is still faster than the sync.Pool version by a few percents.",
      "parentUuid": "4c8d599c_757e30a7",
      "revId": "558372e5d657ddb0f2ebf1a979038c59031156ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3848ef4c_2c9ebd38",
        "filename": "src/regexp/regexp.go",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 9525
      },
      "writtenOn": "2018-03-22T13:31:07Z",
      "side": 1,
      "message": "There is no need in copying the pool - let each Regexp have independent pool.",
      "revId": "558372e5d657ddb0f2ebf1a979038c59031156ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fce01079_aff11873",
        "filename": "src/regexp/regexp.go",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 6365
      },
      "writtenOn": "2018-03-22T15:50:49Z",
      "side": 1,
      "message": "https://golang.org/cl/44150043 was rolled back due to concerns about global mutex contention for new pools.\n\nSince the machines in the pool are sized to the particular regexp, sharing the pool should help to reduce that contention, and may also decrease the overall memory footprint of the regexps (since there will be one machine cached per thread instead of one per thread per copy).",
      "parentUuid": "3848ef4c_2c9ebd38",
      "revId": "558372e5d657ddb0f2ebf1a979038c59031156ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed909a0b_33a9aaf8",
        "filename": "src/regexp/regexp.go",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 9525
      },
      "writtenOn": "2018-03-27T17:57:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fce01079_aff11873",
      "revId": "558372e5d657ddb0f2ebf1a979038c59031156ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "934f8730_a41c8263",
        "filename": "src/regexp/regexp.go",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 9525
      },
      "writtenOn": "2018-03-22T13:31:07Z",
      "side": 1,
      "message": "move New initialization below the regexp initialization:\n\n    regexp.machines.New \u003d func() interface{} { return progMachine(prog, onepass) }\n\nThen the regexp initialization shouldn\u0027t touch machines at all.",
      "revId": "558372e5d657ddb0f2ebf1a979038c59031156ba",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}