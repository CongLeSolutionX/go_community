{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "23bd0a55_cccac03d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-04-08T20:35:20Z",
      "side": 1,
      "message": "We seem in agreement on the technical requirements, just deciding the best phrasing for it. I suggest we move this CL to the top of the CL stack so the implementation CLs can land and start getting testing while we work out the final phrasing.",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "334c1c4b_c250c117",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5056
      },
      "writtenOn": "2021-04-09T13:09:55Z",
      "side": 1,
      "message": "Please do not land implementation CLs before the spec lands.",
      "parentUuid": "23bd0a55_cccac03d",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56bf7283_ce202d88",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5143
      },
      "writtenOn": "2021-04-11T01:04:47Z",
      "side": 1,
      "message": "I\u0027m optimistically marking all conversations as resolved. I\u0027m sure you\u0027ll let me know in which cases I\u0027m wrong. :)",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d331581_ef409414",
        "filename": "doc/go_spec.html",
        "patchSetId": 10
      },
      "lineNbr": 4168,
      "author": {
        "id": 5056
      },
      "writtenOn": "2021-04-08T16:58:03Z",
      "side": 1,
      "message": "T is an array pointer (pointer to an array),\n\n(None of the other bullets say \"T has type\", in part because T is not a value.)",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62eb1f61_39ed0a17",
        "filename": "doc/go_spec.html",
        "patchSetId": 10
      },
      "lineNbr": 4168,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-04-08T17:50:07Z",
      "side": 1,
      "message": "FWIW, the Go spec uses the phrase \"pointer to array\" 6 times already, but doesn\u0027t use \"array pointer\" at all.\n\nSee also the unresolved comments on patchset 9.",
      "parentUuid": "3d331581_ef409414",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65be3de0_64e133a8",
        "filename": "doc/go_spec.html",
        "patchSetId": 10
      },
      "lineNbr": 4168,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-04-08T18:15:27Z",
      "side": 1,
      "message": "The spec also uses \"pointer to an array\" another 4 times for referring to values. (\"pointer to array\" is always used to refer to types.) I don\u0027t see any uses of \"X pointer\" to mean \"pointer to X\".\n\nBy Rob\u0027s earlier \"new stylistic form\" criteria (Apr 4 comment), \"array pointer\" seems to me an even more novel form than \"pointer-to-array\" (hyphenating an existing phrase for use as an adjective).",
      "parentUuid": "62eb1f61_39ed0a17",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5af89686_7722d12f",
        "filename": "doc/go_spec.html",
        "patchSetId": 10
      },
      "lineNbr": 4168,
      "author": {
        "id": 5056
      },
      "writtenOn": "2021-04-09T13:09:55Z",
      "side": 1,
      "message": "I have no problem with pointer-to-array instead.",
      "parentUuid": "65be3de0_64e133a8",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61042467_40f85b78",
        "filename": "doc/go_spec.html",
        "patchSetId": 10
      },
      "lineNbr": 4168,
      "author": {
        "id": 5143
      },
      "writtenOn": "2021-04-11T01:04:47Z",
      "side": 1,
      "message": "I\u0027ve been delaying replying to this in  this hopes that y\u0027all would reach consensus.\n\nAs that has not happened, I\u0027m going to try again with the original phrasing I used:\n\n\u003e x is a slice, T is a pointer to an array, and the slice and array types have identical element types.\n\nIn my opinion this is both readable and clear in context.\n\n\nThere\u0027s a concern we use \"a pointer to an array\" to describe values, not types. But  the prologue that precedes the list of types of conversions reads:\n\n\u003e A non-constant value x can be converted to type T in any of these cases:\n\nSo we state explicitly that T is a type.\n\nAnd the immediately preceding bullet reads:\n\n\u003e x is a string and T is a slice of bytes or runes.\n\nBut T is not actually a slice, it\u0027s a type. This hasn\u0027t been a problem in practice,  because the meaning is clear in context. So we have precedent for this kind of simple formulation.\n\n\nThat said, I don\u0027t feel strongly. I care only that we pick something so that we can move forward.",
      "parentUuid": "5af89686_7722d12f",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e0160e0_afb3fdf6",
        "filename": "doc/go_spec.html",
        "patchSetId": 10
      },
      "lineNbr": 4321,
      "author": {
        "id": 5015
      },
      "writtenOn": "2021-04-05T20:44:05Z",
      "side": 1,
      "message": "s/type // ?\n\nthe word type adds no information.",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fb65bef_05d26b58",
        "filename": "doc/go_spec.html",
        "patchSetId": 10
      },
      "lineNbr": 4321,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-04-05T21:17:15Z",
      "side": 1,
      "message": "+1 for the removal (it\u0027s also not there in the prose below)",
      "parentUuid": "4e0160e0_afb3fdf6",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fbf3437_153993f6",
        "filename": "doc/go_spec.html",
        "patchSetId": 10
      },
      "lineNbr": 4321,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-04-05T21:18:20Z",
      "side": 1,
      "message": "The previous two subheaders are \"Conversions between numeric types\" and \"Conversions to and from a string type\".",
      "parentUuid": "4e0160e0_afb3fdf6",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d34ba60c_2318b7ca",
        "filename": "doc/go_spec.html",
        "patchSetId": 10
      },
      "lineNbr": 4321,
      "author": {
        "id": 5056
      },
      "writtenOn": "2021-04-08T16:58:03Z",
      "side": 1,
      "message": "Conversion from slice to array pointer",
      "parentUuid": "9fbf3437_153993f6",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5da30538_492fd387",
        "filename": "doc/go_spec.html",
        "patchSetId": 10
      },
      "lineNbr": 4321,
      "author": {
        "id": 5143
      },
      "writtenOn": "2021-04-11T01:04:47Z",
      "side": 1,
      "message": "Done, except I used the plural \"Conversions\" to match the preceding subheaders. \n\n(Again, this is a reversion to the original wording I used, sans some indefinite articles.)",
      "parentUuid": "d34ba60c_2318b7ca",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4ba5df3_07809ae9",
        "filename": "doc/go_spec.html",
        "patchSetId": 10
      },
      "lineNbr": 4324,
      "author": {
        "id": 5056
      },
      "writtenOn": "2021-04-08T16:58:03Z",
      "side": 1,
      "message": "s/pointer to an array/array pointer/\n\n(The problem with all of these is the doubled \"to\", which makes it hard to parse.)",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fdaa418_4dc9a03e",
        "filename": "doc/go_spec.html",
        "patchSetId": 10
      },
      "lineNbr": 4324,
      "author": {
        "id": 5143
      },
      "writtenOn": "2021-04-11T01:04:47Z",
      "side": 1,
      "message": "Done.\n\n(Again, this reverts to the original wording I proposed. I take that to be a good sign for readability.)",
      "parentUuid": "a4ba5df3_07809ae9",
      "revId": "d9df3b7a84a79fd6f1bb76f675190dd5f1c62a57",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}