{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1ab122fe_e5d20d25",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 6320
      },
      "writtenOn": "2022-03-10T17:21:32Z",
      "side": 1,
      "message": "I think I would add to the first sentence that this is being done to comply with the assembly policy.",
      "revId": "590f02248adedbaddd1d5a1eac79aa71b671680e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "472a4dd5_c3e35002",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 6320
      },
      "writtenOn": "2022-03-10T17:21:32Z",
      "side": 1,
      "message": "I think you are breaking the assembly policy by doing this. This assembly code is not implementing the corresponding Go code exactly. Essentially you are storing the expanded keys in a different order from what the Go code does, which is based on FIPs 197. As a result, if you use the assembler key expansion, then you can\u0027t use this expanded key in any other Go function. Likewise, the assembler versions of the encrypt and decrypt functions depend on the key expansion being done in the assembler function and won\u0027t work if it was generated by the Go function.",
      "revId": "590f02248adedbaddd1d5a1eac79aa71b671680e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00993500_95bfc222",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 6320
      },
      "writtenOn": "2022-03-25T17:49:52Z",
      "side": 1,
      "message": "I see where one of the aes tests states that the key order could be different. That surprises me, but I will remove this objection.",
      "parentUuid": "472a4dd5_c3e35002",
      "revId": "590f02248adedbaddd1d5a1eac79aa71b671680e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ada160aa_fcb615b5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 21,
      "author": {
        "id": 6320
      },
      "writtenOn": "2022-03-10T17:21:32Z",
      "side": 1,
      "message": "and avoid a separate function to do this, which allows this to conform to the interfaces used on other platforms.",
      "revId": "590f02248adedbaddd1d5a1eac79aa71b671680e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae1986ec_a4caab78",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 6320
      },
      "writtenOn": "2022-03-10T17:21:32Z",
      "side": 1,
      "message": "Most people aren\u0027t going to know the behavior of lxvb16x. I think the key point to mention is that it loads the bytes in BE order which is needed by the algorithm and is vastly simpler than the previous implementation. This should be mentioned in at least one place.",
      "revId": "590f02248adedbaddd1d5a1eac79aa71b671680e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73c05115_1179c841",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 6320
      },
      "writtenOn": "2022-03-10T17:21:32Z",
      "side": 1,
      "message": "It would be good to add here that it was done to be consistent with the corresponding functions on other platforms.",
      "revId": "590f02248adedbaddd1d5a1eac79aa71b671680e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbf28122_1129fd96",
        "filename": "src/crypto/aes/asm_ppc64x.s",
        "patchSetId": 6
      },
      "lineNbr": 62,
      "author": {
        "id": 6320
      },
      "writtenOn": "2022-03-10T17:21:32Z",
      "side": 1,
      "message": "I think you should mention here that this will load the bytes in big endian order because it is not clear why you even mention LXVB16X.",
      "revId": "590f02248adedbaddd1d5a1eac79aa71b671680e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}