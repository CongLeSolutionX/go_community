{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b54bfefb_cecc73c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5167
      },
      "writtenOn": "2021-04-09T19:03:21Z",
      "side": 1,
      "message": "argument",
      "range": {
        "startLine": 9,
        "startChar": 36,
        "endLine": 9,
        "endChar": 45
      },
      "revId": "e96b86c6530673852119d7ff2c23dccfa77e0252",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df8a9faf_2646c3f3",
        "filename": "src/cmd/compile/internal/typecheck/builtin/runtime.go",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 5167
      },
      "writtenOn": "2021-04-09T19:03:21Z",
      "side": 1,
      "message": "I think it\u0027s becoming increasingly clear that it\u0027s unclear what \"uint64-like\" means in the comments below. Maybe add a comment here explaining a bit? I think as of this CL it really just means \"any 8 byte scalar value\". And probably explain that the compiler must cast the argument to the expected type so the call is ABI-insensitive?",
      "revId": "e96b86c6530673852119d7ff2c23dccfa77e0252",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e22bb351_3b6823d0",
        "filename": "src/cmd/compile/internal/typecheck/builtin/runtime.go",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-09T20:18:53Z",
      "side": 1,
      "message": "Alignment still matters. Otherwise conversion through memory may fail at least on some machine.\n\nMaybe we should just remove those comments, as the functions here just take specific types. And add a separate comment explaining when they are used.\n\nAdded comment.",
      "parentUuid": "df8a9faf_2646c3f3",
      "revId": "e96b86c6530673852119d7ff2c23dccfa77e0252",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "709add00_2d0f9c9b",
        "filename": "src/cmd/compile/internal/typecheck/builtin/runtime.go",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 5167
      },
      "writtenOn": "2021-04-09T19:03:21Z",
      "side": 1,
      "message": "Any idea why we used \"any\" here before? Does it really have to be string (or a named type that is string) specifically? Or does this accept, e.g., [1]string?",
      "range": {
        "startLine": 93,
        "startChar": 21,
        "endLine": 93,
        "endChar": 27
      },
      "revId": "e96b86c6530673852119d7ff2c23dccfa77e0252",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e28dcd61_c44ebb70",
        "filename": "src/cmd/compile/internal/typecheck/builtin/runtime.go",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-09T20:18:53Z",
      "side": 1,
      "message": "If I understand  the implementation, it does include named string type and things like [1]string.  (The comment didn\u0027t say so.)",
      "parentUuid": "709add00_2d0f9c9b",
      "range": {
        "startLine": 93,
        "startChar": 21,
        "endLine": 93,
        "endChar": 27
      },
      "revId": "e96b86c6530673852119d7ff2c23dccfa77e0252",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "719bed08_419ecebb",
        "filename": "src/cmd/compile/internal/typecheck/builtin/runtime.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 5167
      },
      "writtenOn": "2021-04-09T19:03:21Z",
      "side": 1,
      "message": "Can this be []any?",
      "range": {
        "startLine": 94,
        "startChar": 22,
        "endLine": 94,
        "endChar": 27
      },
      "revId": "e96b86c6530673852119d7ff2c23dccfa77e0252",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac4b5671_f39f96b9",
        "filename": "src/cmd/compile/internal/typecheck/builtin/runtime.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-04-09T20:18:53Z",
      "side": 1,
      "message": "It could, I assume. But then I\u0027d need to instantiate the \"any\". I\u0027d rather not do that  for just this one case.",
      "parentUuid": "719bed08_419ecebb",
      "range": {
        "startLine": 94,
        "startChar": 22,
        "endLine": 94,
        "endChar": 27
      },
      "revId": "e96b86c6530673852119d7ff2c23dccfa77e0252",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}