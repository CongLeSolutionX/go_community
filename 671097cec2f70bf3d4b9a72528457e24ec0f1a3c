{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "566ec660_fe0a09e6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-27T03:20:54Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d671097ce\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "671097cec2f70bf3d4b9a72528457e24ec0f1a3c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1229dcb4_c61a12be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-08-27T03:41:23Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "566ec660_fe0a09e6",
      "tag": "autogenerated:trybots~happy",
      "revId": "671097cec2f70bf3d4b9a72528457e24ec0f1a3c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2645e7b0_32fd35cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6480
      },
      "writtenOn": "2022-08-27T04:59:40Z",
      "side": 1,
      "message": "Alex, I\u0027d like to get your opinion on whether this is a valuable change. The basis for it is the use of the `VirtualAddress` and `VirtualSize` in `ImportedSymbols` to find which section contains the import directory table. AFAICS at the moment invalid values could result in failure to find the import directory table when there is an overflow here. I\u0027m not entirely sure that this is a bad enough outcome to prevent loading the whole file. An alternative would be to check for the overflow in `ImportedSymbols` and return an error there if no import directory table was found. WDYT?",
      "revId": "671097cec2f70bf3d4b9a72528457e24ec0f1a3c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51e88a4c_294af47a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5070
      },
      "writtenOn": "2022-09-11T03:22:22Z",
      "side": 1,
      "message": "I looked at `ImportedSymbols` code and I don\u0027t see any problems. Can you tell more? Perhaps if you can give me an example of section table values that trigger the bug that you describe, I will understand what you are referring to. Perhaps if you can point to the line of code with the problem, it will help.\n\nIt has been many years since I have changed this code. And I did not write the original code, so I had to figure out original author intentions by myself.",
      "parentUuid": "2645e7b0_32fd35cc",
      "revId": "671097cec2f70bf3d4b9a72528457e24ec0f1a3c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34853a04_ac722444",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5070
      },
      "writtenOn": "2022-09-11T03:22:22Z",
      "side": 1,
      "message": "Thank you for sending this CL.\n\nI am not sure, if you change is needed. Please, see my comment below.\n\nAlex",
      "revId": "671097cec2f70bf3d4b9a72528457e24ec0f1a3c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7d0a16a_4800f450",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6480
      },
      "writtenOn": "2022-09-11T03:36:07Z",
      "side": 1,
      "message": "The bug is a hypothetical that could potentially be found by fuzzing and is part of the hardening of the debug packages. In the code here it is possible that `SectionHeader32.VirtualAddress + SectionHeader32.VirtualSize` overflow uin32. The loop in `*File.ImportedSymbols` (debug/pe/file.go:350 in go1.19) would fail to find the import directory table if the values were carefully constructed to cause this. If the Windows PE loader is robust to this we would have a differential behaviour that would allow the constructed PE to be loaded by would prevent the symbol section from being parsed by the debug/pe package.\n\nBy adding the error return, we at least see that the values are not valid.\n\nThis is in the context of using debug/* packages for executable forensics.",
      "parentUuid": "51e88a4c_294af47a",
      "revId": "671097cec2f70bf3d4b9a72528457e24ec0f1a3c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ea13045_037a724e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5070
      },
      "writtenOn": "2022-09-11T04:10:56Z",
      "side": 1,
      "message": "But we already return from `*File.ImportedSymbols` on line 361. We return nil for both return parameters - function results and error.\n\nSo that makes `*File.ImportedSymbols` report success, but no DLL functions returned for the scenario you described.\n\nWhy do you think it is a problem?\n\nMicrosoft defined `SectionHeader32.VirtualAddress` and `SectionHeader32.VirtualSize` as uint32. I am not sure what Microsoft intended to do when the sum of these values overflow uint32. The error would help callers with corrupted executables with better error message, but it is possible that Microsoft intended not to report error here.\n\nI am not sure what to do.",
      "parentUuid": "b7d0a16a_4800f450",
      "revId": "671097cec2f70bf3d4b9a72528457e24ec0f1a3c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}