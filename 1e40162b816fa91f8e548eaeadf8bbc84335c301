{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "26c78f94_e2a719a9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2022-12-27T17:00:49Z",
      "side": 1,
      "message": "TRY\u003dlongtest",
      "revId": "1e40162b816fa91f8e548eaeadf8bbc84335c301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06b2bb00_97531d62",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-12-27T17:01:05Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d1e40162b\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1e40162b816fa91f8e548eaeadf8bbc84335c301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5be91351_dce6eba1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-12-27T17:16:35Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n",
      "parentUuid": "06b2bb00_97531d62",
      "tag": "autogenerated:trybots~happy",
      "revId": "1e40162b816fa91f8e548eaeadf8bbc84335c301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "481cff5c_a1308e51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-01-05T14:26:47Z",
      "side": 1,
      "message": "friendly ping, I would like to get this submitted at some point. Thanks.",
      "revId": "1e40162b816fa91f8e548eaeadf8bbc84335c301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8a82c86_d15feb9f",
        "filename": "src/cmd/cover/cover.go",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-01-05T15:57:08Z",
      "side": 1,
      "message": "When I read this variable I read “Pref” as “Preference”, but it seems to mean “Prefix” instead — a clearer name (and ideally a doc comment) would be helpful.",
      "range": {
        "startLine": 88,
        "startChar": 17,
        "endLine": 88,
        "endChar": 21
      },
      "revId": "1e40162b816fa91f8e548eaeadf8bbc84335c301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ca85a9f_f11990be",
        "filename": "src/cmd/cover/cover.go",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-01-05T15:57:08Z",
      "side": 1,
      "message": "This variable seems to be derived from the `pkgconfig` and `mode` variables, and if I\u0027m following correctly it always holds one of two constants (either the empty string or `atomicPackageName + \".\"`).\n\nTo reduce the likelihood of typestate bugs, could it be made a function instead of a variable? (It should be trivial for the compiler to inline.)",
      "revId": "1e40162b816fa91f8e548eaeadf8bbc84335c301",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}