{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "be4aa37c_2446516e",
        "filename": "src/go/scanner/scanner.go",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-04-08T22:06:07Z",
      "side": 1,
      "message": "rune(b) ?",
      "range": {
        "startLine": 67,
        "startChar": 17,
        "endLine": 67,
        "endChar": 20
      },
      "revId": "1fa933dcf9b33d883b87fc0b3c42ae7a6a11969f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e529950c_39ef3bbb",
        "filename": "src/go/scanner/scanner.go",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-04-08T22:06:07Z",
      "side": 1,
      "message": "only do the r \u003d\u003d 0 check here? the others are only needed if b \u003e\u003d utf8.RuneSelf, I think\n\n(or does that make next() too large?)",
      "range": {
        "startLine": 74,
        "startChar": 12,
        "endLine": 74,
        "endChar": 13
      },
      "revId": "1fa933dcf9b33d883b87fc0b3c42ae7a6a11969f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "251a68a2_2a8b3de5",
        "filename": "src/go/scanner/scanner.go",
        "patchSetId": 4
      },
      "lineNbr": 358,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-04-08T22:06:07Z",
      "side": 1,
      "message": "I think it suffices to split identifiers into two categories:\n- identifiers that are all ASCII\n- everything else\n\nI don\u0027t think we win much by writing complex code for the latter. On the other hand, we can perhaps write faster code for the former.\n\nConsider first scanning the ASCII identifier prefix which bails (with a signal) as soon as we see a more complex rune.\n\nThen we check the signal to see if there\u0027s a non-ASCII continuation in which case we use the \"nice but slow\" code.\n\nThis may give you perhaps a \"middle ground\" between fast and nice code. Right now you combine both cases which makes the code more complex, I think.",
      "range": {
        "startLine": 358,
        "startChar": 18,
        "endLine": 358,
        "endChar": 32
      },
      "revId": "1fa933dcf9b33d883b87fc0b3c42ae7a6a11969f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18efa35c_8910405e",
        "filename": "src/go/scanner/scanner.go",
        "patchSetId": 4
      },
      "lineNbr": 363,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-04-08T22:06:07Z",
      "side": 1,
      "message": "put this on one line - the trailing \u003c is confusing",
      "revId": "1fa933dcf9b33d883b87fc0b3c42ae7a6a11969f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5534269_3abbee0a",
        "filename": "src/go/scanner/scanner.go",
        "patchSetId": 4
      },
      "lineNbr": 376,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-04-08T22:06:07Z",
      "side": 1,
      "message": "use lower here?",
      "revId": "1fa933dcf9b33d883b87fc0b3c42ae7a6a11969f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}