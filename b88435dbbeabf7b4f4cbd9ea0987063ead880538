{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "371758f8_61af025b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-09-07T16:37:12Z",
      "side": 1,
      "message": "Not sure why it added all the other reviewers automatically.\n\nI am also working on a prototype where we just delay all possible transformations on generic functions until stencil time.  This would get rid of all the delay checking code with a simpler check as to whether the current function is generic.  But better to fix this bug right now.  Then it will be easier to judge if the prototype actually simplifies things that much.  ",
      "revId": "b88435dbbeabf7b4f4cbd9ea0987063ead880538",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b60eff77_a2ef0490",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-07T16:38:29Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003db88435db",
      "tag": "autogenerated:trybots~beginning",
      "revId": "b88435dbbeabf7b4f4cbd9ea0987063ead880538",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0382fdfe_29dacf5c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-07T16:56:30Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "b60eff77_a2ef0490",
      "tag": "autogenerated:trybots~happy",
      "revId": "b88435dbbeabf7b4f4cbd9ea0987063ead880538",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ab2ffb6_667f1b09",
        "filename": "src/cmd/compile/internal/noder/stmt.go",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 5200
      },
      "writtenOn": "2021-09-07T17:26:05Z",
      "side": 1,
      "message": "This makes me nervous. We\u0027re just throwing away init code here? Presumably then something later builds the exact same init code? Where is that?\nI\u0027d feel better if we fixed export/import to do init code correctly.",
      "revId": "b88435dbbeabf7b4f4cbd9ea0987063ead880538",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35c52254_b2ed9f8c",
        "filename": "src/cmd/compile/internal/noder/stmt.go",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-09-08T18:56:53Z",
      "side": 1,
      "message": "OK, thanks for the push on this.  I think I pinpointed all the issues here.  There was one bug in the dropping of Init nodes in tcSelect/transformSelect, and also quirky behavior related to Init nodes in iexport.go, and also the Def field was not being correctly exported/imported for OSELRECV2 and assignment statements.  I described things further in the new commit message.  I will get Matthew to review these fixes.",
      "parentUuid": "8ab2ffb6_667f1b09",
      "revId": "b88435dbbeabf7b4f4cbd9ea0987063ead880538",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}