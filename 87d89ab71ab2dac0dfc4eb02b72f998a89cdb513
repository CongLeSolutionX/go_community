{
  "comments": [
    {
      "key": {
        "uuid": "558948df_5e49a43e",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 48
      },
      "lineNbr": 876,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-11-01T21:47:33Z",
      "side": 1,
      "message": "a finalizer might on be enough. on openbsd I see a failure to reserve summary memory.\n\nI might re-introduce an explicit free function.",
      "range": {
        "startLine": 876,
        "startChar": 1,
        "endLine": 876,
        "endChar": 13
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7776fbc1_54549dc9",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 48
      },
      "lineNbr": 876,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-11-02T08:21:02Z",
      "side": 1,
      "message": "Since you\u0027re releasing hard OS resources, I\u0027d go with an explicit free function.",
      "parentUuid": "558948df_5e49a43e",
      "range": {
        "startLine": 876,
        "startChar": 1,
        "endLine": 876,
        "endChar": 13
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bf61c52_354444c7",
        "filename": "src/runtime/export_test.go",
        "patchSetId": 48
      },
      "lineNbr": 876,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-11-04T17:13:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7776fbc1_54549dc9",
      "range": {
        "startLine": 876,
        "startChar": 1,
        "endLine": 876,
        "endChar": 13
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d6990e1_e436a176",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 220,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-11-01T22:16:10Z",
      "side": 1,
      "message": "js-wasm doesn\u0027t guarantee page-alignment from sysReserve, and I think it may be the only platform we support to do so (plan9 seems to, for example, even though I don\u0027t think brk guarantees it).\n\nwith that being said, all of this code is bogus on js-wasm anyway because sysMap and sysUsed do nothing.\n\nI\u0027m not sure what the right call is. page alignment of the base is important for the addresses passed to sysMap and sysUsed, so I\u0027m loathe to remove this assertion.\n\nI\u0027m thinking I could either make a special case for js-wasm (with a comment and a TODO), maybe? the old code did not assert this and instead just assumed.",
      "range": {
        "startLine": 217,
        "startChar": 1,
        "endLine": 220,
        "endChar": 2
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3a8ce5b_ab721bd4",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 220,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-11-02T08:21:02Z",
      "side": 1,
      "message": "Given that js/wasm claims a physPageSize of 64KiB, mem_js.go\u0027s sysReserve should actually obey that alignment. It looks like that ought to be pretty trivial to do.",
      "parentUuid": "4d6990e1_e436a176",
      "range": {
        "startLine": 217,
        "startChar": 1,
        "endLine": 220,
        "endChar": 2
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e664b5c7_77c3a130",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 220,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-11-04T17:13:22Z",
      "side": 1,
      "message": "should I do that in this change or in a new change? I imagine a separate change is better just in case that breaks anything, but it\u0027s already freeze time... :(",
      "parentUuid": "e3a8ce5b_ab721bd4",
      "range": {
        "startLine": 217,
        "startChar": 1,
        "endLine": 220,
        "endChar": 2
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a16fe6dd_91e643a3",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 220,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-11-04T21:23:02Z",
      "side": 1,
      "message": "created a new change.",
      "parentUuid": "e664b5c7_77c3a130",
      "range": {
        "startLine": 217,
        "startChar": 1,
        "endLine": 220,
        "endChar": 2
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04ac212c_73ec728c",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 507,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-11-02T08:21:02Z",
      "side": 1,
      "message": "This should probably explain a little more why this is the right thing to do. Maybe something like:\n\nThis way, we\u0027ll record the first summary we find with any free pages on the root level and narrow that down if we descend into that summary. But as soon as we need to iterate beyond that summary in a level to find a large enough range, we\u0027ll stop narrowing.",
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29bd66d9_6bf1453a",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 507,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-11-04T17:13:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04ac212c_73ec728c",
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80aae79a_c977ca48",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 510,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-11-02T08:21:02Z",
      "side": 1,
      "message": "What does it mean for the range to be non-zero?",
      "range": {
        "startLine": 510,
        "startChar": 6,
        "endLine": 510,
        "endChar": 28
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9de5f770_f5675561",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 510,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-11-04T17:13:22Z",
      "side": 1,
      "message": "stale comment, fixed.",
      "parentUuid": "80aae79a_c977ca48",
      "range": {
        "startLine": 510,
        "startChar": 6,
        "endLine": 510,
        "endChar": 28
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35231342_3a2429a8",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 516,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-11-02T08:21:02Z",
      "side": 1,
      "message": "partially overlaps?",
      "range": {
        "startLine": 516,
        "startChar": 17,
        "endLine": 516,
        "endChar": 25
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "494765e6_cf4f3ce3",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 516,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-11-04T17:13:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35231342_3a2429a8",
      "range": {
        "startLine": 516,
        "startChar": 17,
        "endLine": 516,
        "endChar": 25
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4385ba0d_46189fa7",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 519,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-11-02T08:21:02Z",
      "side": 1,
      "message": "The throw message doesn\u0027t need to include this, since it\u0027ll be apparent from the traceback.",
      "range": {
        "startLine": 519,
        "startChar": 10,
        "endLine": 519,
        "endChar": 33
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e20f519_788a9076",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 519,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-11-04T17:13:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4385ba0d_46189fa7",
      "range": {
        "startLine": 519,
        "startChar": 10,
        "endLine": 519,
        "endChar": 33
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58a360b8_a6a2d8f9",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 656,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-11-02T08:21:02Z",
      "side": 1,
      "message": "free window",
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea2fdc68_9fa7cc7a",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 656,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-11-04T17:13:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "58a360b8_a6a2d8f9",
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "300328ec_d7add2b5",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 658,
      "author": {
        "id": 5167
      },
      "writtenOn": "2019-11-02T08:21:02Z",
      "side": 1,
      "message": "Can\u0027t this just be pageSize?",
      "range": {
        "startLine": 658,
        "startChar": 39,
        "endLine": 658,
        "endChar": 65
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ce989b1_a23a9d6e",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 658,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-11-04T17:13:22Z",
      "side": 1,
      "message": "it can, but then it no longer obeys the \"first free page is in this window\" invariant since that page may not be free. it would be valid in the end, but I\u0027d rather err on the side of maintaining the invariant documented above.",
      "parentUuid": "300328ec_d7add2b5",
      "range": {
        "startLine": 658,
        "startChar": 39,
        "endLine": 658,
        "endChar": 65
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ad561ed_ea1667ae",
        "filename": "src/runtime/mpagealloc.go",
        "patchSetId": 48
      },
      "lineNbr": 658,
      "author": {
        "id": 25391
      },
      "writtenOn": "2019-11-07T17:42:30Z",
      "side": 1,
      "message": "I\u0027m going to keep this as-is.",
      "parentUuid": "9ce989b1_a23a9d6e",
      "range": {
        "startLine": 658,
        "startChar": 39,
        "endLine": 658,
        "endChar": 65
      },
      "revId": "87d89ab71ab2dac0dfc4eb02b72f998a89cdb513",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}