{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b7663e49_bf161c83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-10T01:22:35Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d99836e77",
      "tag": "autogenerated:trybots~beginning",
      "revId": "99836e776a049cc1a37930aed9a886ad78c28234",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6110ac9_fb271857",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-10T01:33:39Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "b7663e49_bf161c83",
      "tag": "autogenerated:trybots~happy",
      "revId": "99836e776a049cc1a37930aed9a886ad78c28234",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbf6d6d0_90137bb0",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 329,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-09-10T16:09:52Z",
      "side": 1,
      "message": "I haven\u0027t analyzed this recursive type case in detail, but this doesn\u0027t seem quite right.  At the very least, you need to do a \u0027r.uint64()\u0027 call (like line 339 below) to absorb the uint64 in the export format.  Otherwise, you\u0027ll be out of sync for the next item you read, right?  Or can you put in a comment here on why you don\u0027t need to call r.uint64()?",
      "revId": "99836e776a049cc1a37930aed9a886ad78c28234",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42cf2f0b_6aa30e5c",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 329,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-09-10T17:25:59Z",
      "side": 1,
      "message": "I think we\u0027re fine, because for each declaration, we use new importReader and new declReader. And if we reach recursive type, the rest of the export data for this declaration is just duplicated of what we already read. But always do \"r.uint64()\" like your suggestion seems ok and more consistent.",
      "parentUuid": "cbf6d6d0_90137bb0",
      "revId": "99836e776a049cc1a37930aed9a886ad78c28234",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb36784d_29333ccd",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 329,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-09-13T14:43:08Z",
      "side": 1,
      "message": "After reminding myself of the importer code, I agree that this should be fine: we never use the importReader after a call to obj(). But it does look a bit fragile. At the least, I think a longer comment here and an update to the doc comment of obj  (\"obj may not read the entire declaration\", etc etc) would be helpful.",
      "parentUuid": "42cf2f0b_6aa30e5c",
      "revId": "99836e776a049cc1a37930aed9a886ad78c28234",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "575c08cc_1ca803e5",
        "filename": "src/cmd/compile/internal/importer/iimport.go",
        "patchSetId": 3
      },
      "lineNbr": 329,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-09-13T15:28:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb36784d_29333ccd",
      "revId": "99836e776a049cc1a37930aed9a886ad78c28234",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}