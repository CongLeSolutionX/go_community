{
  "comments": [
    {
      "key": {
        "uuid": "25241226_5c536774",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-06-10T20:07:10Z",
      "side": 1,
      "message": "The prefix should be an import path prefix (`cmd/go`, not `cmd/goget`).",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "dcb58d0b62e0e0dfa150da809bb296a9486a45c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "279df4f0_ddedffb7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 28805
      },
      "writtenOn": "2019-06-11T03:19:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25241226_5c536774",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 9
      },
      "revId": "dcb58d0b62e0e0dfa150da809bb296a9486a45c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6eb59a25_412fc238",
        "filename": "src/cmd/go/internal/get/get_test.go",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-06-10T20:07:10Z",
      "side": 1,
      "message": "New tests of `go get` belong in `src/cmd/go/testdata/script`; see the README there for reference.\n\nThis test should not need any external dependencies; instead, add a test module to `src/cmd/go/testdata/mod`.",
      "revId": "dcb58d0b62e0e0dfa150da809bb296a9486a45c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b61d833_5cd030bb",
        "filename": "src/cmd/go/internal/get/get_test.go",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 28805
      },
      "writtenOn": "2019-06-11T03:19:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6eb59a25_412fc238",
      "revId": "dcb58d0b62e0e0dfa150da809bb296a9486a45c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "603ad1e1_5d863367",
        "filename": "src/cmd/go/internal/load/pkg.go",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-06-10T20:07:10Z",
      "side": 1,
      "message": "Please don\u0027t add this method. The lack of a String method today provides a nice incentive to mention the field explicitly, or explicitly reveal the fact that the Package may be nil.",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 160,
        "endChar": 1
      },
      "revId": "dcb58d0b62e0e0dfa150da809bb296a9486a45c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a59eeac_80cbe16b",
        "filename": "src/cmd/go/internal/load/pkg.go",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 28805
      },
      "writtenOn": "2019-06-11T03:19:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "603ad1e1_5d863367",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 160,
        "endChar": 1
      },
      "revId": "dcb58d0b62e0e0dfa150da809bb296a9486a45c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d8f7176_7d48c87b",
        "filename": "src/cmd/go/internal/load/pkg.go",
        "patchSetId": 1
      },
      "lineNbr": 1958,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-06-10T20:07:10Z",
      "side": 1,
      "message": "This doesn\u0027t seem like the right place for this check: we should know whether we\u0027re looking at a module path or a file path before we even try to construct the package.\n\nMoreover, all we\u0027ve checked for here is that `err !\u003d nil`. That will potentially impact the error reporting for a large class of other issues (such as a typo\u0027d filename).",
      "range": {
        "startLine": 1955,
        "startChar": 0,
        "endLine": 1958,
        "endChar": 26
      },
      "revId": "dcb58d0b62e0e0dfa150da809bb296a9486a45c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e28b258_88c36441",
        "filename": "src/cmd/go/internal/load/pkg.go",
        "patchSetId": 1
      },
      "lineNbr": 1958,
      "author": {
        "id": 28805
      },
      "writtenOn": "2019-06-11T03:19:24Z",
      "side": 1,
      "message": "\u003e This doesn\u0027t seem like the right place for this check: we should know whether we\u0027re looking at a module path or a file path before we even try to construct the package.\n\u003e \n\u003e Moreover, all we\u0027ve checked for here is that `err !\u003d nil`. That will potentially impact the error reporting for a large class of other issues (such as a typo\u0027d filename).\n\nYou\u0027re right. I\u0027ve encountered a test fail: `go get -e -test -json -- c.c x.go`. The file `c.c` cause `GoFilesPackage` fails, so, both of them are loaded again as packages. I think if we permit package ended with \u0027.go\u0027, then \u0027c.c\u0027 should be a valid package name (if it exists). If you agree, I will update the test in `list_test_non_go_files` follow that asumption.",
      "parentUuid": "4d8f7176_7d48c87b",
      "range": {
        "startLine": 1955,
        "startChar": 0,
        "endLine": 1958,
        "endChar": 26
      },
      "revId": "dcb58d0b62e0e0dfa150da809bb296a9486a45c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcdf6d90_7ad36b36",
        "filename": "src/cmd/go/internal/load/pkg.go",
        "patchSetId": 1
      },
      "lineNbr": 2099,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-06-10T20:07:10Z",
      "side": 1,
      "message": "prefer `fmt.Errorf` over `errors.New(fmt.Sprintf`.",
      "range": {
        "startLine": 2099,
        "startChar": 15,
        "endLine": 2099,
        "endChar": 37
      },
      "revId": "dcb58d0b62e0e0dfa150da809bb296a9486a45c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9d4c095_8e822329",
        "filename": "src/cmd/go/internal/load/pkg.go",
        "patchSetId": 1
      },
      "lineNbr": 2099,
      "author": {
        "id": 28805
      },
      "writtenOn": "2019-06-11T03:19:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fcdf6d90_7ad36b36",
      "range": {
        "startLine": 2099,
        "startChar": 15,
        "endLine": 2099,
        "endChar": 37
      },
      "revId": "dcb58d0b62e0e0dfa150da809bb296a9486a45c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9af0ac80_e492f56b",
        "filename": "src/cmd/go/internal/load/pkg_test.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 6365
      },
      "writtenOn": "2019-06-10T20:07:10Z",
      "side": 1,
      "message": "Per https://golang.org/pkg/testing/, the only use of underscores in Go test names is for associating multiple examples with a single declaration.",
      "range": {
        "startLine": 70,
        "startChar": 5,
        "endLine": 70,
        "endChar": 27
      },
      "revId": "dcb58d0b62e0e0dfa150da809bb296a9486a45c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a2e1ee6_79987064",
        "filename": "src/cmd/go/internal/load/pkg_test.go",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 28805
      },
      "writtenOn": "2019-06-11T03:19:24Z",
      "side": 1,
      "message": "I use underscore here to avoid clashing with another method in main code that use to load test code and packages. In recent change,I\u0027ve renamed this method to `TestLoadPackagesAndErrors`.",
      "parentUuid": "9af0ac80_e492f56b",
      "range": {
        "startLine": 70,
        "startChar": 5,
        "endLine": 70,
        "endChar": 27
      },
      "revId": "dcb58d0b62e0e0dfa150da809bb296a9486a45c1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}