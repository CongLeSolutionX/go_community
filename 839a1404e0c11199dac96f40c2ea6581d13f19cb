{
  "comments": [
    {
      "key": {
        "uuid": "189b3eee_adb32f4a",
        "filename": "src/internal/poll/sendfile_windows.go",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 5070
      },
      "writtenOn": "2019-09-16T08:08:00Z",
      "side": 1,
      "message": "I am pretty sure that used to be broken during bootstrapping Go. So we just used numbers here. If you think, it works now, go ahead and use consts.",
      "range": {
        "startLine": 28,
        "startChar": 42,
        "endLine": 28,
        "endChar": 56
      },
      "revId": "839a1404e0c11199dac96f40c2ea6581d13f19cb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8fee8fa_65ad0419",
        "filename": "src/internal/poll/sendfile_windows.go",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 5070
      },
      "writtenOn": "2019-09-17T09:47:55Z",
      "side": 1,
      "message": "Never mind that too. I can see that we already use io.SeekCurrent and others in fd_windows.go.",
      "parentUuid": "189b3eee_adb32f4a",
      "range": {
        "startLine": 28,
        "startChar": 42,
        "endLine": 28,
        "endChar": 56
      },
      "revId": "839a1404e0c11199dac96f40c2ea6581d13f19cb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c07a89a7_39b9212f",
        "filename": "src/internal/poll/sendfile_windows.go",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 5137
      },
      "writtenOn": "2019-09-17T14:53:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a8fee8fa_65ad0419",
      "range": {
        "startLine": 28,
        "startChar": 42,
        "endLine": 28,
        "endChar": 56
      },
      "revId": "839a1404e0c11199dac96f40c2ea6581d13f19cb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6989b9f_8b08547d",
        "filename": "src/internal/poll/sendfile_windows.go",
        "patchSetId": 8
      },
      "lineNbr": 40,
      "author": {
        "id": 5070
      },
      "writtenOn": "2019-09-16T08:08:00Z",
      "side": 1,
      "message": "Are you sure you need this seek? I think previous seek (seeking from the end) should have current file position set correctly.",
      "revId": "839a1404e0c11199dac96f40c2ea6581d13f19cb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4556ef28_7833760c",
        "filename": "src/internal/poll/sendfile_windows.go",
        "patchSetId": 8
      },
      "lineNbr": 40,
      "author": {
        "id": 5070
      },
      "writtenOn": "2019-09-17T09:47:55Z",
      "side": 1,
      "message": "You are correct, we do need to seek from the start here.\n\nI was confused by -curpos in\n\nsyscall.Seek(o.handle, -curpos, io.SeekEnd)\n\nI suppose if you would write\n\nsyscall.Seek(o.handle, 0, io.SeekEnd)\n\nit would be obvious that we are at the end of the file.\n\nBut it is fine the way it is.",
      "parentUuid": "c6989b9f_8b08547d",
      "revId": "839a1404e0c11199dac96f40c2ea6581d13f19cb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72446902_b634e1d6",
        "filename": "src/internal/poll/sendfile_windows.go",
        "patchSetId": 8
      },
      "lineNbr": 40,
      "author": {
        "id": 5137
      },
      "writtenOn": "2019-09-17T14:53:24Z",
      "side": 1,
      "message": "Sure, I\u0027ll do the syscall.Seek(o.handle, 0, io.SeekEnd)",
      "parentUuid": "4556ef28_7833760c",
      "revId": "839a1404e0c11199dac96f40c2ea6581d13f19cb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d21041f_dcdd0b9d",
        "filename": "src/internal/poll/sendfile_windows.go",
        "patchSetId": 8
      },
      "lineNbr": 40,
      "author": {
        "id": 5070
      },
      "writtenOn": "2019-09-17T21:52:56Z",
      "side": 1,
      "message": "But now n will have size of the file in it. But you want n to have number of characters from curpos to the end of the file. Shouldn\u0027t you need to adjust n by n?",
      "parentUuid": "72446902_b634e1d6",
      "revId": "839a1404e0c11199dac96f40c2ea6581d13f19cb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2f5af62_101b6d23",
        "filename": "src/internal/poll/sendfile_windows.go",
        "patchSetId": 8
      },
      "lineNbr": 40,
      "author": {
        "id": 5137
      },
      "writtenOn": "2019-09-18T04:02:18Z",
      "side": 1,
      "message": "IMHO a bit of complexity and loss of readability creeps in with an n re-adjustment.\nI believe that:\n\n   // Now seek back to the original position.\n   syscall.Seek(o.handle, curpos, io.SeekStart)\n\nis more legible and maintainable than\n\n   // Walk back n bytes from the end of the file.\n   syscall.Seek(o.handle, n, io.SeekEnd)",
      "parentUuid": "0d21041f_dcdd0b9d",
      "revId": "839a1404e0c11199dac96f40c2ea6581d13f19cb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17163c30_881697d5",
        "filename": "src/internal/poll/sendfile_windows.go",
        "patchSetId": 8
      },
      "lineNbr": 40,
      "author": {
        "id": 5070
      },
      "writtenOn": "2019-09-18T10:02:50Z",
      "side": 1,
      "message": "I do not know what you are proposing. But I was suggesting to replace lines 35-38 of PS8 with\n\nn, err \u003d syscall.Seek(o.handle, 0, io.SeekEnd)\t// calculate file size\nif err !\u003d nil {\n\treturn\n}\nn -\u003d curpos\n\nor just leave things as they are.\n\nWhatever you decide, please, have another run of your test before we agree, and you remove the test again.\n\nThank you.",
      "parentUuid": "e2f5af62_101b6d23",
      "revId": "839a1404e0c11199dac96f40c2ea6581d13f19cb",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}