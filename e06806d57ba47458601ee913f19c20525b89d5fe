{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cb332187_302f3c11",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-07T21:56:05Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003de06806d5",
      "tag": "autogenerated:trybots~beginning",
      "revId": "e06806d57ba47458601ee913f19c20525b89d5fe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14d103f8_5e73e18f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-07T22:07:02Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "cb332187_302f3c11",
      "tag": "autogenerated:trybots~happy",
      "revId": "e06806d57ba47458601ee913f19c20525b89d5fe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bde49a6_a3e3e86f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9735
      },
      "writtenOn": "2021-06-08T03:36:22Z",
      "side": 1,
      "message": "Using convertibility does provide for possibly better UX in the common case, but there are some cases where it can lead to confusing behavior.\n\nFor example, converting int64(-1) to a uint64 will convert to a different value (i.e., -1 \u003d\u003e math.MaxUint64). Converting uint64(256) to a uint8 will lose precision (i.e., 256 \u003d\u003e 0). Perhaps we can considering treating it as a \"conversion\" error if the conversion results in a semantically different value. Similarly, conversion to/from int/uint types can be confusing when tests pass/fail depending on which architecture they\u0027re run on. For example, converting int64 to a int may or may not have precision loss depending on the system being 32-bit or 64-bit.\n\nConverting by default SGTM if you think these edge cases aren\u0027t a big deal.",
      "revId": "e06806d57ba47458601ee913f19c20525b89d5fe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "059ffccc_05ae94cf",
        "filename": "src/internal/fuzz/fuzz.go",
        "patchSetId": 1
      },
      "lineNbr": 710,
      "author": {
        "id": 9735
      },
      "writtenOn": "2021-06-08T03:36:22Z",
      "side": 1,
      "message": "s/excpeted/expected/",
      "range": {
        "startLine": 710,
        "startChar": 48,
        "endLine": 710,
        "endChar": 56
      },
      "revId": "e06806d57ba47458601ee913f19c20525b89d5fe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c02d065_99040c6f",
        "filename": "src/internal/fuzz/fuzz.go",
        "patchSetId": 1
      },
      "lineNbr": 726,
      "author": {
        "id": 9735
      },
      "writtenOn": "2021-06-08T03:36:22Z",
      "side": 1,
      "message": "Would be nice to give an example of such a case.",
      "range": {
        "startLine": 725,
        "startChar": 1,
        "endLine": 726,
        "endChar": 32
      },
      "revId": "e06806d57ba47458601ee913f19c20525b89d5fe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f15ede74_291b2f94",
        "filename": "src/testing/fuzz.go",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 9735
      },
      "writtenOn": "2021-06-08T03:36:22Z",
      "side": 1,
      "message": "\"convertible\"? Assignability and convertibility are slightly different according to the Go specification. The logic in internal/fuzz seems to use convertibility.",
      "range": {
        "startLine": 225,
        "startChar": 9,
        "endLine": 225,
        "endChar": 19
      },
      "revId": "e06806d57ba47458601ee913f19c20525b89d5fe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1019ae25_13e76b70",
        "filename": "src/testing/fuzz.go",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 9735
      },
      "writtenOn": "2021-06-08T03:36:22Z",
      "side": 1,
      "message": "This could be future work. We could consider remembering the callsite of each f.Add and providing such information here now that we know exactly which f.Add call was problematic.",
      "revId": "e06806d57ba47458601ee913f19c20525b89d5fe",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}