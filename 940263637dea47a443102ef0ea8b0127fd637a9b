{
  "comments": [
    {
      "key": {
        "uuid": "00eb29fb_4e94a8c7",
        "filename": "src/cmd/compile/internal/gc/pgen.go",
        "patchSetId": 1
      },
      "lineNbr": 603,
      "author": {
        "id": 13315
      },
      "writtenOn": "2019-03-22T15:45:30Z",
      "side": 1,
      "message": "Does this only happen with output parameter? What about input parameter?\n\nMaybe we could use the class of n.Name.Param.Stackcopy?",
      "revId": "940263637dea47a443102ef0ea8b0127fd637a9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cbfaed9_70693b94",
        "filename": "src/cmd/compile/internal/gc/pgen.go",
        "patchSetId": 1
      },
      "lineNbr": 603,
      "author": {
        "id": 14020
      },
      "writtenOn": "2019-03-22T16:09:07Z",
      "side": 1,
      "message": "I suppose you\u0027re right, I can\u0027t rule out the possibility of the same thing happening with an input parameter. I will try your suggestion.",
      "parentUuid": "00eb29fb_4e94a8c7",
      "revId": "940263637dea47a443102ef0ea8b0127fd637a9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbfe711b_1480f8e7",
        "filename": "src/cmd/compile/internal/gc/pgen.go",
        "patchSetId": 1
      },
      "lineNbr": 604,
      "author": {
        "id": 5200
      },
      "writtenOn": "2019-03-22T15:51:51Z",
      "side": 1,
      "message": "I suspect this will tell the user that the variable is on the stack in the param location, when in fact we\u0027ve moved it to the heap. So the stack location will be out of date (or for output params, not set yet).\nIs there any way to encode \"this variable is stored out of the stack frame - the pointer to it is stored in the stack frame here\"?\n\nNevertheless, this CL is no worse than the status quo, so it\u0027s an improvement.",
      "revId": "940263637dea47a443102ef0ea8b0127fd637a9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8b3b54e_8b5e2025",
        "filename": "src/cmd/compile/internal/gc/pgen.go",
        "patchSetId": 1
      },
      "lineNbr": 604,
      "author": {
        "id": 14020
      },
      "writtenOn": "2019-03-22T16:09:07Z",
      "side": 1,
      "message": "Yes. Cherry pointed this out as well while we were discussing the problem. I think for now I mainly want to fix the corrupted-DWARF problem; making sure that the location is accurate can be done in a follow-on CL.",
      "parentUuid": "bbfe711b_1480f8e7",
      "revId": "940263637dea47a443102ef0ea8b0127fd637a9b",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}