{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b893b8d1_2deb12c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-10-26T08:52:07Z",
      "side": 1,
      "message": "TRY\u003dlongtest",
      "revId": "1226128e41e94597eef205f10706d23ad5e15132",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4de4ccb0_eaf3c735",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-26T08:52:10Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d1226128e",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1226128e41e94597eef205f10706d23ad5e15132",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6091dea3_8e5dbc6f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-26T08:52:10Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "564d4f22_9257f991",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1226128e41e94597eef205f10706d23ad5e15132",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00d69985_64b688eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-26T09:02:21Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d1226128e\nFailed on linux-amd64-longtest: https://storage.googleapis.com/go-build-log/1226128e/linux-amd64-longtest_5f7d6eca.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "4de4ccb0_eaf3c735",
      "tag": "autogenerated:trybots~progress",
      "revId": "1226128e41e94597eef205f10706d23ad5e15132",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52acfee8_36b73b1d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-26T09:03:27Z",
      "side": 1,
      "message": "1 of 27 SlowBots failed.\nFailed on linux-amd64-longtest: https://storage.googleapis.com/go-build-log/1226128e/linux-amd64-longtest_5f7d6eca.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n",
      "parentUuid": "4de4ccb0_eaf3c735",
      "tag": "autogenerated:trybots~failed",
      "revId": "1226128e41e94597eef205f10706d23ad5e15132",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc4f0c04_694a0379",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-10-26T09:05:25Z",
      "side": 1,
      "message": "Longtest fails due to https://github.com/golang/go/issues/49159",
      "parentUuid": "52acfee8_36b73b1d",
      "revId": "1226128e41e94597eef205f10706d23ad5e15132",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa8508f3_f3e5d29b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-10-26T09:05:25Z",
      "side": 1,
      "message": "TRY\u003d",
      "revId": "1226128e41e94597eef205f10706d23ad5e15132",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1d61ed3_fadac0b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-26T09:05:43Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d1226128e",
      "tag": "autogenerated:trybots~beginning",
      "revId": "1226128e41e94597eef205f10706d23ad5e15132",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "869dc9b3_354891b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-26T09:16:27Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "b1d61ed3_fadac0b3",
      "tag": "autogenerated:trybots~happy",
      "revId": "1226128e41e94597eef205f10706d23ad5e15132",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfcc3744_4dbbf97e",
        "filename": "src/cmd/compile/internal/typecheck/crawler.go",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 5200
      },
      "writtenOn": "2021-10-26T17:35:09Z",
      "side": 1,
      "message": "This is kind of an unintended side-effect of markEmbed. At least, it\u0027s not clear to me that \"mark any methods that might be accessible via embedding\" and \"mark all methods\" are the same. We should be explicit about that in the doc comment for markEmbed. Or introduce a markAllMethods that does nothing but call markEmbed, just to document our intention.\n\nIs there any problem with the early-out in markEmbed for named pointer types? Does that prevent marking types that we need to export?",
      "revId": "1226128e41e94597eef205f10706d23ad5e15132",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4f27026_58b2b5cd",
        "filename": "src/cmd/compile/internal/typecheck/crawler.go",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-10-27T02:32:58Z",
      "side": 1,
      "message": "\u003e Is there any problem with the early-out in markEmbed for named pointer types? Does that prevent marking types that we need to export?\n\nAh right, that should be problem. Then I think introduce a \"p.markGeneric\" method is more concise.",
      "parentUuid": "bfcc3744_4dbbf97e",
      "revId": "1226128e41e94597eef205f10706d23ad5e15132",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}