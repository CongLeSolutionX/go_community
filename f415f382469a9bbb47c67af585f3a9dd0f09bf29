{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f6d91d44_2e375953",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-25T15:37:22Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003df415f382",
      "tag": "autogenerated:trybots~beginning",
      "revId": "f415f382469a9bbb47c67af585f3a9dd0f09bf29",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4317a87a_f4eaf932",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-25T15:37:22Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "8a60781e_2476008a",
      "tag": "autogenerated:trybots~beginning",
      "revId": "f415f382469a9bbb47c67af585f3a9dd0f09bf29",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecf45b98_91214a9f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-25T16:28:29Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "f6d91d44_2e375953",
      "tag": "autogenerated:trybots~happy",
      "revId": "f415f382469a9bbb47c67af585f3a9dd0f09bf29",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bd58167_7c0ede57",
        "filename": "src/cmd/compile/internal/types/type.go",
        "patchSetId": 7
      },
      "lineNbr": 1824,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-10-25T16:57:39Z",
      "side": 1,
      "message": "nit: maybe make this function private, then introduce two new functions:\n\n```\nfunc NewInterface(pkg *Pkg, methods []*Field) *Type {\n    return newInterface(pkg, methods, false)\n}\n\nfunc NewImplicitInterface(pkg *Pkg, methods []*Field) *Type {\n    return newInterface(pkg, methods, true)\n}\n```\n\nSeeing all the calls with \"NewInterface(LocalPkg, nil, false)\" looks not convenient.",
      "range": {
        "startLine": 1824,
        "startChar": 28,
        "endLine": 1824,
        "endChar": 59
      },
      "revId": "f415f382469a9bbb47c67af585f3a9dd0f09bf29",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7896b7a_660313b9",
        "filename": "src/cmd/compile/internal/types/type.go",
        "patchSetId": 7
      },
      "lineNbr": 1824,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-10-25T17:14:51Z",
      "side": 1,
      "message": "IMO having a single constructor for interfaces outweighs avoiding the implicit argument at call-sites. It is also cumbersome to choose between the constructors based on the value of implicit. I\u0027d prefer to leave as-is. Fortunately this is just an internal API, so we can always revisit later.",
      "parentUuid": "7bd58167_7c0ede57",
      "range": {
        "startLine": 1824,
        "startChar": 28,
        "endLine": 1824,
        "endChar": 59
      },
      "revId": "f415f382469a9bbb47c67af585f3a9dd0f09bf29",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b15217f_fd200bc7",
        "filename": "src/cmd/compile/internal/types/type.go",
        "patchSetId": 7
      },
      "lineNbr": 1824,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-10-25T17:17:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d7896b7a_660313b9",
      "range": {
        "startLine": 1824,
        "startChar": 28,
        "endLine": 1824,
        "endChar": 59
      },
      "revId": "f415f382469a9bbb47c67af585f3a9dd0f09bf29",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}