{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c141d555_7a422d31",
        "filename": "src/runtime/lock_wasip1.go",
        "patchSetId": 20
      },
      "lineNbr": 20,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-04T19:53:11Z",
      "side": 1,
      "message": "Is passive_spin used anywhere?  I suspect that this does not need to be defined.",
      "revId": "2edf113c79b5b8e43e647a4d741e76fffe63f626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3735583a_dd659910",
        "filename": "src/runtime/lock_wasip1.go",
        "patchSetId": 20
      },
      "lineNbr": 20,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-04-05T04:48:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c141d555_7a422d31",
      "revId": "2edf113c79b5b8e43e647a4d741e76fffe63f626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "255425c9_a8910a80",
        "filename": "src/runtime/netpoll.go",
        "patchSetId": 20
      },
      "lineNbr": 5,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-04T19:53:11Z",
      "side": 1,
      "message": "s/(wasip1 \u0026\u0026 wasm)/wasip1/",
      "revId": "2edf113c79b5b8e43e647a4d741e76fffe63f626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4b7431a_4b873150",
        "filename": "src/runtime/netpoll.go",
        "patchSetId": 20
      },
      "lineNbr": 5,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-04-04T20:13:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "255425c9_a8910a80",
      "revId": "2edf113c79b5b8e43e647a4d741e76fffe63f626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26d62095_0b624226",
        "filename": "src/runtime/netpoll_fake.go",
        "patchSetId": 20
      },
      "lineNbr": 8,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-04T19:53:11Z",
      "side": 1,
      "message": "s/(wasip1 \u0026\u0026 wasm)/wasip1/",
      "revId": "2edf113c79b5b8e43e647a4d741e76fffe63f626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3356b73c_f66c70b3",
        "filename": "src/runtime/netpoll_fake.go",
        "patchSetId": 20
      },
      "lineNbr": 8,
      "author": {
        "id": 16585
      },
      "writtenOn": "2023-04-04T20:13:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26d62095_0b624226",
      "revId": "2edf113c79b5b8e43e647a4d741e76fffe63f626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1f5973c_43a5539c",
        "filename": "src/runtime/os_wasip1.go",
        "patchSetId": 20
      },
      "lineNbr": 95,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-04T19:53:11Z",
      "side": 1,
      "message": "I don\u0027t understand this comment.  If the compiler rejects uint16, then how does it work to use uint16 here?",
      "revId": "2edf113c79b5b8e43e647a4d741e76fffe63f626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "318523ea_2f38d5e1",
        "filename": "src/runtime/os_wasip1.go",
        "patchSetId": 20
      },
      "lineNbr": 95,
      "author": {
        "id": 12980
      },
      "writtenOn": "2023-04-05T15:59:35Z",
      "side": 1,
      "message": "The go:wasmimport directive currently does not accept values of type uint16 in arguments or returns of the function signature. Most WASI imports return a errno value, which we have to define as uint32 because of that limitation. However, the WASI errno type is intended to be a 16 bits integer, and in the event struct the error field should be of type errno. If we used the errno type here it would result in a mismatching field alignment and struct size because errno is declared as a 32 bits types, so we declare the error field as a plain uint16.",
      "parentUuid": "a1f5973c_43a5539c",
      "revId": "2edf113c79b5b8e43e647a4d741e76fffe63f626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abba7d31_5c0e7829",
        "filename": "src/runtime/os_wasip1.go",
        "patchSetId": 20
      },
      "lineNbr": 95,
      "author": {
        "id": 5206
      },
      "writtenOn": "2023-04-05T19:29:51Z",
      "side": 1,
      "message": "Thanks for the explanation.  Can you add something like this to the comment in the source?  Because the current comment doesn\u0027t make much sense to me without that additional explanation.",
      "parentUuid": "318523ea_2f38d5e1",
      "revId": "2edf113c79b5b8e43e647a4d741e76fffe63f626",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}