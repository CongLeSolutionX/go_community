{
  "comments": [
    {
      "key": {
        "uuid": "d7a2c67b_5839168e",
        "filename": "src/cmd/compile/internal/ssa/loopreschedchecks.go",
        "patchSetId": 12
      },
      "lineNbr": 21,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-01-03T18:41:31Z",
      "side": 1,
      "message": "s/perfomed/performed/",
      "revId": "2c990cbf8199a1cc97df401a7ed0cfab17571784",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7a2c67b_78c1723c",
        "filename": "src/cmd/compile/internal/ssa/loopreschedchecks.go",
        "patchSetId": 12
      },
      "lineNbr": 92,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-01-03T18:41:31Z",
      "side": 1,
      "message": "Shouldn\u0027t at least the return use the initial memory?  So the only case that the memory would be dead-code-eliminated is a statically infinite loop.",
      "revId": "2c990cbf8199a1cc97df401a7ed0cfab17571784",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7a2c67b_1bbb98a7",
        "filename": "src/cmd/compile/internal/ssa/loopreschedchecks.go",
        "patchSetId": 12
      },
      "lineNbr": 137,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-01-03T18:41:31Z",
      "side": 1,
      "message": "This is a bit confusing because bd will always be counter0 here.  Might as well just make it counter0.\nYou\u0027re essentially just finding all blocks that can reach a backedge.\n\nI understand that ctrDefsAtBlockEnds will have richer data in it later, but it is simpler than that at this point.",
      "revId": "2c990cbf8199a1cc97df401a7ed0cfab17571784",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7a2c67b_1b0dd8af",
        "filename": "src/cmd/compile/internal/ssa/loopreschedchecks.go",
        "patchSetId": 12
      },
      "lineNbr": 222,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-01-03T18:41:31Z",
      "side": 1,
      "message": "delete",
      "revId": "2c990cbf8199a1cc97df401a7ed0cfab17571784",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7a2c67b_7b596ca1",
        "filename": "src/cmd/compile/internal/ssa/loopreschedchecks.go",
        "patchSetId": 12
      },
      "lineNbr": 379,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-01-03T18:41:31Z",
      "side": 1,
      "message": "Add a TODO to derecurse this.",
      "revId": "2c990cbf8199a1cc97df401a7ed0cfab17571784",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7a2c67b_bb4fe4da",
        "filename": "src/cmd/compile/internal/ssa/loopreschedchecks.go",
        "patchSetId": 12
      },
      "lineNbr": 422,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-01-03T18:41:31Z",
      "side": 1,
      "message": "Add a TODO to derecurse this.",
      "revId": "2c990cbf8199a1cc97df401a7ed0cfab17571784",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7a2c67b_bbd4c4d6",
        "filename": "test/fixedbugs/issue10958.go",
        "patchSetId": 12
      },
      "lineNbr": 2,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-01-03T18:41:31Z",
      "side": 1,
      "message": "Maybe add -d\u003dssa/check/on also?  With all the tricky SSA manipulations, it\u0027s probably worth checking our SSA invariants afterwards.\nOr will this be checked by the ssacheck builder anyway?",
      "revId": "2c990cbf8199a1cc97df401a7ed0cfab17571784",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7a2c67b_387f7a53",
        "filename": "test/fixedbugs/issue10958.go",
        "patchSetId": 12
      },
      "lineNbr": 67,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-01-03T18:41:31Z",
      "side": 1,
      "message": "All these \"a\" versions are unused.  Is that inentional?  If so, add a comment as to why (future examples that need fixing?).",
      "revId": "2c990cbf8199a1cc97df401a7ed0cfab17571784",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7a2c67b_b8136a1d",
        "filename": "test/run.go",
        "patchSetId": 12
      },
      "lineNbr": 708,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-01-03T18:41:31Z",
      "side": 1,
      "message": "You should definitely fix this one before submitting.",
      "revId": "2c990cbf8199a1cc97df401a7ed0cfab17571784",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}