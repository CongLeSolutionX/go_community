{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5dacbf3f_eb894a9d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 34561
      },
      "writtenOn": "2023-02-25T01:12:18Z",
      "side": 1,
      "message": "Maybe something else is wrong, too? on my CL I saw:\n\n```\nCodeMarshal-16                        1.364m ± 1%     1.439m ± ∞ ¹  +5.47% (p\u003d0.000 n\u003d30+5)\nCodeMarshalError-16                   1.570m ± 1%     1.686m ± ∞ ¹  +7.39% (p\u003d0.000 n\u003d30+5)\n```\n\nWhich is a much smaller degradation.",
      "revId": "9ba3ecbe2fbf18d88624af1ecfa935b71d00e361",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f48eb5e8_0379d30c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 8495
      },
      "writtenOn": "2023-02-25T01:14:03Z",
      "side": 1,
      "message": "Quite possibly due to different CPU architectures. I\u0027m on a AMD Ryzen 5900x.\n\nCould you run both this CL and your CL and see how they compare?\nThat way we can compare apples to apples.",
      "parentUuid": "5dacbf3f_eb894a9d",
      "revId": "9ba3ecbe2fbf18d88624af1ecfa935b71d00e361",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3c1dfc3_3f3cc04b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 34561
      },
      "writtenOn": "2023-02-25T01:15:08Z",
      "side": 1,
      "message": "Sure -- but on Monday :)",
      "parentUuid": "f48eb5e8_0379d30c",
      "revId": "9ba3ecbe2fbf18d88624af1ecfa935b71d00e361",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f614848_50d04233",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 8495
      },
      "writtenOn": "2023-02-25T01:15:26Z",
      "side": 1,
      "message": "Also, quite possible related to RAM speed too. I cheaped out and bought mediocre RAM for my computer.",
      "parentUuid": "f48eb5e8_0379d30c",
      "revId": "9ba3ecbe2fbf18d88624af1ecfa935b71d00e361",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "121d78f2_1743e119",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 34561
      },
      "writtenOn": "2023-02-27T18:55:51Z",
      "side": 1,
      "message": "I checked this and your change is actually an improvement on baseline, congrats. I was pretty skeptical of the Grow/AvailableBuffer paradigm but I guess if you start out with that approach it works just fine.\n\nI am using some sort of cloud system, so my numbers are probably less meaningful than yours, but here they are anyway:\n\n```\ngoos: linux\ngoarch: amd64\npkg: encoding/json\ncpu: Intel(R) Xeon(R) CPU @ 2.20GHz\n                                    │ change-455776.bench.txt │         change-471200.bench.txt          │\n                                    │        sec/op         │     sec/op       vs base                 │\nLargeOutput-16                                  2.359 ±  1%     2.185 ±  3%     -7.37% (p\u003d0.002 n\u003d10)\nCodeEncoder-16                                 1.163m ±  7%    1.064m ±  1%     -8.47% (p\u003d0.000 n\u003d10)\nCodeEncoderError-16                            1.239m ±  2%    1.170m ±  1%     -5.54% (p\u003d0.000 n\u003d10)\nAllocationWastage-16                           1.491m ±  3%    1.099m ±  1%    -26.25% (p\u003d0.000 n\u003d10)\nCodeMarshal-16                                 1.474m ± 15%    1.383m ±  2%     -6.15% (p\u003d0.000 n\u003d10)\nCodeMarshalError-16                            1.696m ±  2%    1.674m ±  1%          ~ (p\u003d0.075 n\u003d10)\nMarshalBytes/32-16                             305.8n ±  2%    283.9n ±  1%     -7.16% (p\u003d0.000 n\u003d10)\nMarshalBytes/256-16                            873.6n ±  3%    746.9n ±  1%    -14.51% (p\u003d0.000 n\u003d10)\nMarshalBytes/4096-16                           8.806µ ±  0%    8.310µ ±  0%     -5.64% (p\u003d0.000 n\u003d10)\nMarshalBytesError/32-16                        632.8µ ±  1%    660.9µ ±  1%     +4.43% (p\u003d0.000 n\u003d10)\nMarshalBytesError/256-16                       631.3µ ±  1%    667.3µ ±  1%     +5.72% (p\u003d0.000 n\u003d10)\nMarshalBytesError/4096-16                      647.0µ ±  1%    676.1µ ±  1%     +4.49% (p\u003d0.000 n\u003d10)\nCodeDecoder-16                                 5.080m ±  1%    5.145m ±  3%          ~ (p\u003d0.089 n\u003d10)\nUnicodeDecoder-16                              334.0n ±  1%    333.4n ±  0%          ~ (p\u003d0.644 n\u003d10)\nDecoderStream-16                               248.0n ±  1%    246.8n ±  1%     -0.48% (p\u003d0.050 n\u003d10)\nCodeUnmarshal-16                               6.503m ±  2%    6.515m ±  1%          ~ (p\u003d0.481 n\u003d10)\nCodeUnmarshalReuse-16                          5.185m ±  2%    5.210m ±  1%          ~ (p\u003d0.796 n\u003d10)\nUnmarshalString-16                             98.07n ±  2%   104.85n ±  4%     +6.92% (p\u003d0.000 n\u003d10)\nUnmarshalFloat64-16                            88.93n ±  2%    89.68n ±  2%     +0.85% (p\u003d0.009 n\u003d10)\nUnmarshalInt64-16                              76.63n ±  6%    79.98n ±  4%     +4.38% (p\u003d0.007 n\u003d10)\nIssue10335-16                                  129.4n ±  3%    129.4n ±  2%          ~ (p\u003d0.810 n\u003d10)\nIssue34127-16                                  60.48n ±  3%    57.61n ±  3%     -4.75% (p\u003d0.000 n\u003d10)\nUnmapped-16                                    288.7n ±  2%    283.7n ±  1%     -1.75% (p\u003d0.023 n\u003d10)\nTypeFieldsCache/MissTypes1-16                  18.31µ ±  4%    18.29µ ±  2%          ~ (p\u003d0.565 n\u003d10)\nTypeFieldsCache/MissTypes10-16                 74.79µ ±  1%    75.51µ ±  2%          ~ (p\u003d0.105 n\u003d10)\nTypeFieldsCache/MissTypes100-16                272.4µ ±  1%    277.8µ ±  1%     +1.98% (p\u003d0.001 n\u003d10)\nTypeFieldsCache/MissTypes1000-16               2.347m ±  2%    2.321m ±  2%          ~ (p\u003d0.315 n\u003d10)\nTypeFieldsCache/MissTypes10000-16              19.92m ±  2%    20.03m ±  1%          ~ (p\u003d0.247 n\u003d10)\nTypeFieldsCache/MissTypes100000-16             218.4m ±  2%    217.5m ±  4%          ~ (p\u003d0.971 n\u003d10)\nTypeFieldsCache/MissTypes1000000-16             2.539 ± 16%     2.596 ± 18%          ~ (p\u003d0.481 n\u003d10)\nTypeFieldsCache/HitTypes1-16                   3.526n ±  1%    3.460n ±  1%     -1.86% (p\u003d0.009 n\u003d10)\nTypeFieldsCache/HitTypes10-16                  3.478n ±  1%    3.486n ±  2%          ~ (p\u003d0.272 n\u003d10)\nTypeFieldsCache/HitTypes100-16                 3.388n ±  1%    3.486n ±  1%     +2.86% (p\u003d0.000 n\u003d10)\nTypeFieldsCache/HitTypes1000-16                3.436n ±  1%    3.385n ±   ∞ ¹        ~ (p\u003d0.286 n\u003d6+1)\n```\n\nIf you were to spend more time looking at this, the only thing I would look at is LargeOutput\u0027s allocation count, everything else looks great.\n\n```\n                      │ change-455776.bench.txt │         change-471200.bench.txt         │\n                      │       allocs/op       │  allocs/op    vs base                   │\nLargeOutput-16                    5.674k ± 1%   12.194k ± 0%  +114.90% (p\u003d0.000 n\u003d10)\n```",
      "parentUuid": "6f614848_50d04233",
      "revId": "9ba3ecbe2fbf18d88624af1ecfa935b71d00e361",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f5c1d83_0c6577f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-25T01:00:29Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d9ba3ecbe\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "9ba3ecbe2fbf18d88624af1ecfa935b71d00e361",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb2bcaea_69474181",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-25T01:03:29Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d9ba3ecbe\nFailed on linux-arm64: https://storage.googleapis.com/go-build-log/9ba3ecbe/linux-arm64_2b920c0c.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "8f5c1d83_0c6577f8",
      "tag": "autogenerated:trybots~progress",
      "revId": "9ba3ecbe2fbf18d88624af1ecfa935b71d00e361",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04224431_63333529",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-02-25T01:06:11Z",
      "side": 1,
      "message": "11 of 45 TryBots failed.\nFailed on linux-arm64: https://storage.googleapis.com/go-build-log/9ba3ecbe/linux-arm64_2b920c0c.log\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/9ba3ecbe/linux-amd64_d5eb77cf.log\nFailed on linux-386: https://storage.googleapis.com/go-build-log/9ba3ecbe/linux-386_cdc3f16e.log\nFailed on freebsd-amd64-12_3: https://storage.googleapis.com/go-build-log/9ba3ecbe/freebsd-amd64-12_3_268bb3aa.log\nFailed on linux-amd64-boringcrypto: https://storage.googleapis.com/go-build-log/9ba3ecbe/linux-amd64-boringcrypto_915a3200.log\nFailed on openbsd-amd64-72: https://storage.googleapis.com/go-build-log/9ba3ecbe/openbsd-amd64-72_f2107d6c.log\nFailed on windows-amd64-2016: https://storage.googleapis.com/go-build-log/9ba3ecbe/windows-amd64-2016_8a6e4869.log\nFailed on linux-amd64-race: https://storage.googleapis.com/go-build-log/9ba3ecbe/linux-amd64-race_68f9e6ec.log\nFailed on windows-386-2016: https://storage.googleapis.com/go-build-log/9ba3ecbe/windows-386-2016_7327e2f1.log\nFailed on js-wasm-node18: https://storage.googleapis.com/go-build-log/9ba3ecbe/js-wasm-node18_09c0d3c2.log\nFailed on windows-386-2012: https://storage.googleapis.com/go-build-log/9ba3ecbe/windows-386-2012_141ee38a.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "8f5c1d83_0c6577f8",
      "tag": "autogenerated:trybots~failed",
      "revId": "9ba3ecbe2fbf18d88624af1ecfa935b71d00e361",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}