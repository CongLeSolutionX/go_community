{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ccd178af_fa57831c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-04-22T20:53:37Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dd7cf2305",
      "tag": "autogenerated:trybots~beginning",
      "revId": "d7cf2305e829424f9525fe5e933dd63bfb101d1d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d2bdf88_c1fe68b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-04-22T21:11:14Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "ccd178af_fa57831c",
      "tag": "autogenerated:trybots~happy",
      "revId": "d7cf2305e829424f9525fe5e933dd63bfb101d1d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "677347b6_596c3d2b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-04-23T04:29:58Z",
      "side": 1,
      "message": "Thanks, this approach seems reasonable to me. Two suggestions below to make it more robust.",
      "revId": "d7cf2305e829424f9525fe5e933dd63bfb101d1d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2bd2336_a14bde77",
        "filename": "src/cmd/compile/internal/inline/inl.go",
        "patchSetId": 7
      },
      "lineNbr": 1110,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-04-23T04:29:58Z",
      "side": 1,
      "message": "How about changing this to \"defnMarker ir.NilExpr\"?\n\nir.NilExpr is smaller than ir.Name, and avoiding the pointer indirection means we don\u0027t need an extra heap allocation. Finally, since ir.NilExpr isn\u0027t a type that\u0027s ever used for Defn normally, it might help detect if we forget to remove it.",
      "revId": "d7cf2305e829424f9525fe5e933dd63bfb101d1d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db2e40cd_c5e3204e",
        "filename": "src/cmd/compile/internal/inline/inl.go",
        "patchSetId": 7
      },
      "lineNbr": 1110,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-04-23T04:40:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2bd2336_a14bde77",
      "revId": "d7cf2305e829424f9525fe5e933dd63bfb101d1d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63706ed3_e25bac4b",
        "filename": "src/cmd/compile/internal/inline/inl.go",
        "patchSetId": 7
      },
      "lineNbr": 1168,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-04-23T04:29:58Z",
      "side": 1,
      "message": "How about:\n\n```\nswitch defn :\u003d n.Defn.(type) {\ncase nil:\n    // ok\ncase *ir.Name:\n    // [existing ir.ONAME code]\ncase *ir.AssignStmt, *ir.AssignListStmt:\n    // Mark node for reassignment at the end of inlsubst.node.\n    m.Defn \u003d \u0026subst.defnMarker\ndefault:\n    base.FatalfAt(n.Pos(), \"unexpected Defn: %+v\", defn)\n}\n```\n\nThat\u0027ll make sure we\u0027re not forgetting any other Defn types in inlsubst.node, and should also let us simplify the `n.Defn.(*ir.Name)` expressions below.",
      "revId": "d7cf2305e829424f9525fe5e933dd63bfb101d1d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1444916_00f2f026",
        "filename": "src/cmd/compile/internal/inline/inl.go",
        "patchSetId": 7
      },
      "lineNbr": 1168,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-04-23T04:40:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63706ed3_e25bac4b",
      "revId": "d7cf2305e829424f9525fe5e933dd63bfb101d1d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}