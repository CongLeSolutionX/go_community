{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7aab1c5c_0ccb7ccb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-02-19T18:18:38Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003da23bd1af\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "a23bd1af255d105ae6ade7e54a6e1377dd9375ea",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "506cf7f1_a7691aa7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-02-19T18:37:42Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* windows-arm64-11\n",
      "parentUuid": "7aab1c5c_0ccb7ccb",
      "tag": "autogenerated:trybots~happy",
      "revId": "a23bd1af255d105ae6ade7e54a6e1377dd9375ea",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e148088_7958f2e8",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 3
      },
      "lineNbr": 170,
      "author": {
        "id": 6365
      },
      "writtenOn": "2024-02-22T17:17:26Z",
      "side": 1,
      "message": "(nit) I think this condition would be a little clearer swapped:\n```go\nif test.isMountPoint \u0026\u0026 winsymlink.Value() !\u003d \"0\" {\n\t‚Ä¶\n} else {\n\t// This is either a real symlink, or a mount point\n\t// treated as a symlink.\n\t‚Ä¶\n}\n```",
      "revId": "a23bd1af255d105ae6ade7e54a6e1377dd9375ea",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f79c3a5_39351e66",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 3
      },
      "lineNbr": 1268,
      "author": {
        "id": 6365
      },
      "writtenOn": "2024-02-22T17:17:26Z",
      "side": 1,
      "message": "I think this starts to kind of blur the meaning of ‚Äúwant‚Äù, since what we\u0027re passing in isn\u0027t really what we ‚Äúwant‚Äù in this case.\n\nCan we instead push this to the caller side, so that `want` always represents exactly the desired output? That would also help to illustrate what happens from a user\u0027s perspective if `os.Readlink` is called on a non-symlink.\n\nOn POSIX platforms it [returns `EINVAL` for non-symlinks](https://go.dev/play/p/Dbid32LD9k3), and in https://github.com/golang/go/issues/63703#issue-1958060170 I had originally intended to return a similar error, but in that case I think we wouldn\u0027t even reach this point ‚Äî we would instead fail at line 1263.",
      "range": {
        "startLine": 1267,
        "startChar": 0,
        "endLine": 1268,
        "endChar": 90
      },
      "revId": "a23bd1af255d105ae6ade7e54a6e1377dd9375ea",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42948210_bf3417fd",
        "filename": "src/os/os_windows_test.go",
        "patchSetId": 3
      },
      "lineNbr": 1317,
      "author": {
        "id": 6365
      },
      "writtenOn": "2024-02-22T17:17:26Z",
      "side": 1,
      "message": "If it is feasible, I would like to also have an explicit test for the behavior of `os.Stat` and `os.Lstat` for mount points, if there isn\u0027t one already.\n\nPer https://github.com/golang/go/issues/61893#issuecomment-1787724440, the behavior as I understand it should be:\n\n- `os.Lstat` should return a `FileInfo` for the reparse point itself, with `ModeIrregular` set, and `ModeDir` and `ModeSymlink` both unset.\n- `os.Stat` should return a `FileInfo` for the underlying directory joined at the mount point, with `ModeDir` set and `ModeIrregular` unset.",
      "revId": "a23bd1af255d105ae6ade7e54a6e1377dd9375ea",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d96a6a3a_2b1d88bc",
        "filename": "src/os/types_windows.go",
        "patchSetId": 3
      },
      "lineNbr": 186,
      "author": {
        "id": 6365
      },
      "writtenOn": "2024-02-22T17:17:26Z",
      "side": 1,
      "message": "We had some discussion about the `ModeDir` bit in proposal #61893, and concluded that we should not set that bit because it is in general not safe to traverse reparse points as if they were directories (for example, because that may lead to infinite recursion).\n\nIt would be good to leave a comment somewhere in here summarizing that decision, though. üòÖ",
      "revId": "a23bd1af255d105ae6ade7e54a6e1377dd9375ea",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}