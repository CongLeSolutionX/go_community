{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f5a97169_8abd8178",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-11-04T17:44:09Z",
      "side": 1,
      "message": "s/simmulating/simulating/",
      "range": {
        "startLine": 25,
        "startChar": 37,
        "endLine": 25,
        "endChar": 48
      },
      "revId": "dd226ba700471653be5a5e5daa0775f0e2da38bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a101521_b9470911",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 28759
      },
      "writtenOn": "2021-11-04T19:34:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5a97169_8abd8178",
      "range": {
        "startLine": 25,
        "startChar": 37,
        "endLine": 25,
        "endChar": 48
      },
      "revId": "dd226ba700471653be5a5e5daa0775f0e2da38bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3007be4e_3a302117",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-11-04T17:44:09Z",
      "side": 1,
      "message": "Now we just need to write a fuzz test that uses its input bytes to write (and fuzz) a fuzz test! üòÅ",
      "range": {
        "startLine": 25,
        "startChar": 34,
        "endLine": 26,
        "endChar": 53
      },
      "revId": "dd226ba700471653be5a5e5daa0775f0e2da38bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f17413bc_1aafed9e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 12545
      },
      "writtenOn": "2021-11-04T17:45:35Z",
      "side": 1,
      "message": "Seems like a reasonable approach, one thought\nabout unexpected panics:\n\n\u003e This doesn\u0027t handle every possible scenario,\n\u003e but improves the one we can control. For example,\n\u003e if the worker panics for some reason, we have no\n\u003e way of knowing whether the panic occurred in an\n\u003e expected way (while executing the fuzz target) or\n\u003e due to an internal error in the worker.\n\nThe test runner has some concept of when we are\ninside the fuzz function, vs. when we aren\u0027t,\nfor the workers at least. Could this be utilized\nto decide whether a panic was an actual crash vs.\nsomething going wrong inside the callers code?",
      "revId": "dd226ba700471653be5a5e5daa0775f0e2da38bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f062f382_b25e911a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 28759
      },
      "writtenOn": "2021-11-04T19:33:33Z",
      "side": 1,
      "message": "Maybe? (We talked about this a bit offline)\nProbably not for this CL though.",
      "parentUuid": "f17413bc_1aafed9e",
      "revId": "dd226ba700471653be5a5e5daa0775f0e2da38bc",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}