{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8aca6900_22fe58a0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-05-19T18:53:57Z",
      "side": 1,
      "message": "Please add\n\nFixes #53000",
      "revId": "74b6b13ae52e2e792fb5f5d83b4b6088d91b65ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29a10c20_0680079f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 14020
      },
      "writtenOn": "2022-05-19T18:59:30Z",
      "side": 1,
      "message": "A bit more context would be nice here, not everyone will immediately connect up https://reviews.llvm.org/D123534 with clang. Thanks.",
      "parentUuid": "8aca6900_22fe58a0",
      "revId": "74b6b13ae52e2e792fb5f5d83b4b6088d91b65ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5d23d5e_643263fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2022-05-19T18:59:30Z",
      "side": 1,
      "message": "Thanks for the patch. \n\nIt would be helpful to add a regression test as well.\n\n",
      "revId": "74b6b13ae52e2e792fb5f5d83b4b6088d91b65ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b61856c6_46210935",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6005
      },
      "writtenOn": "2022-05-19T19:04:11Z",
      "side": 1,
      "message": "(Moving myself to CC since this has active reviewers.)",
      "revId": "74b6b13ae52e2e792fb5f5d83b4b6088d91b65ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d02456bc_1380c662",
        "filename": "src/cmd/cgo/gcc.go",
        "patchSetId": 2
      },
      "lineNbr": 578,
      "author": {
        "id": 14020
      },
      "writtenOn": "2022-05-19T19:04:44Z",
      "side": 1,
      "message": "Would it make more sense to just skip variables that have no name here instead?\nE.g. \n\nif name \u003d\u003d \"\" { break }\n\nIf a C variable has no name, there\u0027s no way to refer to it from Go code.",
      "range": {
        "startLine": 578,
        "startChar": 0,
        "endLine": 578,
        "endChar": 44
      },
      "revId": "74b6b13ae52e2e792fb5f5d83b4b6088d91b65ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a08b5b7d_2bc22489",
        "filename": "src/cmd/cgo/gcc.go",
        "patchSetId": 2
      },
      "lineNbr": 578,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-05-19T19:19:21Z",
      "side": 1,
      "message": "We\u0027re going to break a few lines down anyhow, because the empty string won\u0027t start with \"__cgo__\".",
      "parentUuid": "d02456bc_1380c662",
      "range": {
        "startLine": 578,
        "startChar": 0,
        "endLine": 578,
        "endChar": 44
      },
      "revId": "74b6b13ae52e2e792fb5f5d83b4b6088d91b65ce",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}