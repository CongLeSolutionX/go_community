{
  "comments": [
    {
      "key": {
        "uuid": "b010f8cf_94a04987",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 5143
      },
      "writtenOn": "2016-11-19T19:20:10Z",
      "side": 1,
      "message": "Updates #17973",
      "revId": "65fc4df5a5c880d87e098eca3338a02ce1a6352d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b010f8cf_fec3dbee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 5206
      },
      "writtenOn": "2016-11-21T21:00:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b010f8cf_94a04987",
      "revId": "65fc4df5a5c880d87e098eca3338a02ce1a6352d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10d8e46b_cdaac9ba",
        "filename": "src/reflect/type.go",
        "patchSetId": 2
      },
      "lineNbr": 1441,
      "author": {
        "id": 5021
      },
      "writtenOn": "2016-11-18T20:57:20Z",
      "side": 1,
      "message": "I don\u0027t follow the logic here. The only other work being blocked would be concurrent calculations of this value. Blocking this duplicate work should improve performance in theory. But I am very sure I am overlooking something here.",
      "revId": "65fc4df5a5c880d87e098eca3338a02ce1a6352d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b010f8cf_50b664dc",
        "filename": "src/reflect/type.go",
        "patchSetId": 2
      },
      "lineNbr": 1441,
      "author": {
        "id": 5615
      },
      "writtenOn": "2016-11-18T21:08:07Z",
      "side": 1,
      "message": "\u003e The only other work being blocked would be concurrent calculations of this value.\n\nIt would also block concurrent calculations for other values.",
      "parentUuid": "10d8e46b_cdaac9ba",
      "revId": "65fc4df5a5c880d87e098eca3338a02ce1a6352d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0e0b014_0f8689fb",
        "filename": "src/reflect/type.go",
        "patchSetId": 2
      },
      "lineNbr": 1441,
      "author": {
        "id": 5021
      },
      "writtenOn": "2016-11-18T21:15:48Z",
      "side": 1,
      "message": "\u003e \u003e The only other work being blocked would be concurrent calculations of this value.\n \u003e \n \u003e It would also block concurrent calculations for other values.\n\nThanks for enlightening me Caleb. This was the fact I overlooked here.",
      "parentUuid": "b010f8cf_50b664dc",
      "revId": "65fc4df5a5c880d87e098eca3338a02ce1a6352d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b010f8cf_749dd552",
        "filename": "src/reflect/type.go",
        "patchSetId": 2
      },
      "lineNbr": 2209,
      "author": {
        "id": 5143
      },
      "writtenOn": "2016-11-19T19:20:10Z",
      "side": 1,
      "message": "It might be worth having a multi-insert variant of ptrTo, for internal use, so that this bit of code doesn\u0027t have to lock/copy/insert/unlock twice in a row.",
      "revId": "65fc4df5a5c880d87e098eca3338a02ce1a6352d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b010f8cf_1ecfcf17",
        "filename": "src/reflect/type.go",
        "patchSetId": 2
      },
      "lineNbr": 2209,
      "author": {
        "id": 5206
      },
      "writtenOn": "2016-11-21T21:00:50Z",
      "side": 1,
      "message": "Since approximately nobody calls reflect.MapOf, I don\u0027t think it\u0027s worth the complexity.",
      "parentUuid": "b010f8cf_749dd552",
      "revId": "65fc4df5a5c880d87e098eca3338a02ce1a6352d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}