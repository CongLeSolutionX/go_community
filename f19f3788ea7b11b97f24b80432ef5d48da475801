{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fd8ea5cd_2b776921",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-22T00:07:16Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003df19f3788",
      "tag": "autogenerated:trybots~beginning",
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d958d7b_64af958d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-22T00:16:17Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003df19f3788\nFailed on (x/tools) linux-amd64: https://storage.googleapis.com/go-build-log/f19f3788/linux-amd64_33be4391.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "fd8ea5cd_2b776921",
      "tag": "autogenerated:trybots~progress",
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b291c23_996b67fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-10-22T00:19:02Z",
      "side": 1,
      "message": "1 of 26 TryBots failed.\nFailed on (x/tools) linux-amd64: https://storage.googleapis.com/go-build-log/f19f3788/linux-amd64_33be4391.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "fd8ea5cd_2b776921",
      "tag": "autogenerated:trybots~failed",
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4c141fa_d1ac7704",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-10-22T17:09:56Z",
      "side": 1,
      "message": "The x/tools failure is addressed by https://golang.org/cl/358014",
      "parentUuid": "2b291c23_996b67fb",
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e5a54e1_ba586250",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-10-22T21:01:29Z",
      "side": 1,
      "message": "LGTM but there\u0027s a question if we just should use the global debug flag instead of passing a debug argument through, everywhere. We (well, I) also want to see the subscripts in debug/trace output.",
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65e642fd_efd8c1bc",
        "filename": "src/go/types/errors.go",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-10-22T21:01:29Z",
      "side": 1,
      "message": "do we really want to pass this in? (and hardwire at call sites?)\n\nWhy not leave away this argument and use the global debug flag here?",
      "range": {
        "startLine": 69,
        "startChar": 48,
        "endLine": 69,
        "endChar": 53
      },
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1999a036_b14faaa4",
        "filename": "src/go/types/errors.go",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-10-23T13:05:32Z",
      "side": 1,
      "message": "This is a low-level function. The number of call sites should be small and stable.\n\nTypeString is part of the go/types API, and on principle I don\u0027t think the debug flag should mutate the API (tests will fail, for one, unless we are careful to strip subscripts from test assertions).",
      "parentUuid": "65e642fd_efd8c1bc",
      "range": {
        "startLine": 69,
        "startChar": 48,
        "endLine": 69,
        "endChar": 53
      },
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d97a76f_b415ef28",
        "filename": "src/go/types/errors.go",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-10-22T21:01:29Z",
      "side": 1,
      "message": "If you make the suggested change for typeString, this just becomes\n\ntypeString(a, qf, debug)",
      "range": {
        "startLine": 87,
        "startChar": 6,
        "endLine": 87,
        "endChar": 11
      },
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29226730_9988460c",
        "filename": "src/go/types/errors.go",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-10-22T21:01:29Z",
      "side": 1,
      "message": "if !debug or swap branches",
      "range": {
        "startLine": 87,
        "startChar": 6,
        "endLine": 87,
        "endChar": 11
      },
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28b0fd09_cc85c293",
        "filename": "src/go/types/errors.go",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-10-23T13:05:32Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "4d97a76f_b415ef28",
      "range": {
        "startLine": 87,
        "startChar": 6,
        "endLine": 87,
        "endChar": 11
      },
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb4d5d6f_ee75d1ec",
        "filename": "src/go/types/errors.go",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-10-23T13:05:32Z",
      "side": 1,
      "message": "Oh wow, quite an oversight! Surprising that no tests failed.",
      "parentUuid": "29226730_9988460c",
      "range": {
        "startLine": 87,
        "startChar": 6,
        "endLine": 87,
        "endChar": 11
      },
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5907b9ce_042d1296",
        "filename": "src/go/types/typestring.go",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-10-22T21:01:29Z",
      "side": 1,
      "message": "make this lower-case typeString that takes a debug argument and then TypeString just calls typeString with a no-debug arg",
      "range": {
        "startLine": 52,
        "startChar": 5,
        "endLine": 52,
        "endChar": 16
      },
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65d09d80_db202824",
        "filename": "src/go/types/typestring.go",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-10-23T13:05:32Z",
      "side": 1,
      "message": "Good suggestion. Done.",
      "parentUuid": "5907b9ce_042d1296",
      "range": {
        "startLine": 52,
        "startChar": 5,
        "endLine": 52,
        "endChar": 16
      },
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d47ff18_6344c16d",
        "filename": "src/go/types/typestring.go",
        "patchSetId": 1
      },
      "lineNbr": 286,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-10-22T21:01:29Z",
      "side": 1,
      "message": "a bit more straight-forward:\n\nw.string(t.obj.name)\nif ... {\n   w.string(subscript(t.id))\n}",
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11aa1163_ea979919",
        "filename": "src/go/types/typestring.go",
        "patchSetId": 1
      },
      "lineNbr": 286,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-10-23T13:05:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d47ff18_6344c16d",
      "revId": "f19f3788ea7b11b97f24b80432ef5d48da475801",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}