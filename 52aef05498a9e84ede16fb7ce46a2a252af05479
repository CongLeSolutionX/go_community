{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bc0048bd_7fea7294",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 44473
      },
      "writtenOn": "2021-09-03T17:02:17Z",
      "side": 1,
      "message": "This still is not quite right. This is documenting the state for inputs and outputs to ast.NewPackage or the output of parser.ParseFile (etc.). nil just means unresolved within the ast package. I think we should have something that captures this nuance (and is likely longer) or revert this.",
      "revId": "52aef05498a9e84ede16fb7ce46a2a252af05479",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7fe865e9_805b80d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-09-03T17:18:33Z",
      "side": 1,
      "message": "What do you mean \"ast package\"? Also isn’t that \"unresolved\" means \"not found\"?\n\nWhat I understand is that rdindley dont want it to be exacted explain any details. The \"not found\" can be either the ident wasn’t resolved, or it was resolved but in different scope (ast.File).",
      "parentUuid": "bc0048bd_7fea7294",
      "revId": "52aef05498a9e84ede16fb7ce46a2a252af05479",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf084a5e_15b2461e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-09-03T17:27:24Z",
      "side": 1,
      "message": "I suggested \u0027parsed scope\u0027 because I thought it worked for either file or package, but you\u0027re right that it\u0027s a bit ambigious (especially since Scope means something specific).\n\nHow about \"nil if the identifier was not resolved within the set of files being parsed\"?\n\nThis avoids the ambiguous usage of the word \u0027scope\u0027, and is a bit more specific about why a declaration might not be found.",
      "parentUuid": "7fe865e9_805b80d7",
      "revId": "52aef05498a9e84ede16fb7ce46a2a252af05479",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "861e8052_127eedb9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-09-03T17:31:44Z",
      "side": 1,
      "message": "Or are you objecting to the use of \u0027parse\u0027, since this is in the AST package. That\u0027s also valid. Maybe we should just revert this.",
      "parentUuid": "bf084a5e_15b2461e",
      "revId": "52aef05498a9e84ede16fb7ce46a2a252af05479",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "216c1b82_b4e4a15f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 14665
      },
      "writtenOn": "2021-09-03T17:38:55Z",
      "side": 1,
      "message": "\u003e How about \"nil if the identifier was not resolved within the set of files being parsed\"?\n\nI think this is more confused, e.g, in CL 347089, Ident.Obj is only nil within the file scope (a.go), and it\u0027s not nil in other file scope (b.go), so here it\u0027s nil in just one file, and not nil in set files being parsed.",
      "parentUuid": "861e8052_127eedb9",
      "revId": "52aef05498a9e84ede16fb7ce46a2a252af05479",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac61189b_7640d516",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-09-03T18:15:05Z",
      "side": 1,
      "message": "Right. It would be resolved if those files were grouped with NewPackage.\n\nMaybe we should revert or just say \"nil if the identifier was not resolved\", and leave it at that.\n\nCuong, I defer to you since you filed the documentation issue: what would have helped you?",
      "parentUuid": "216c1b82_b4e4a15f",
      "revId": "52aef05498a9e84ede16fb7ce46a2a252af05479",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b996bc8e_cd56321c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 44473
      },
      "writtenOn": "2021-09-03T18:31:16Z",
      "side": 1,
      "message": "\u003e Or are you objecting to the use of \u0027parse\u0027, since this is in the AST package.\n\nMostly. I think we should document this so it makes sense w.r.t the \"go/ast\" package. Not what the post-condition of \"go/parser\"\u0027s ParseFile is. This is also a correct comment for the pre-condition of ast.NewPackage, which also does some resolution.\n\nThis comment is not really correct for the main user of the Obj field, \"go/parser\"\u0027s resolver type. nil is a valid state for the \"go/parser\" package and the parser will resolve the identifier when possible up to the given scope.\n\nAs for a suggestion, I think this should either be reverted or something like:\n\n\tIdent struct {\n\t\tNamePos token.Pos // identifier position\n\t\tName    string    // identifier name\n\t\t// Obj is the denoted object; or nil if the identifier is unresolved.\n\t\t// If this identifier is unresolved after object resolution,\n\t\t// it does not refer to an object in this File.\n\t\tObj     *Object\n\t}\n\nThis is quite the mouthful. But I think this is closer to the goal.\n\nOne way of viewing this is that we are arguably swimming upstream here because we are trying to expand on the documentation of parser.ParseFile when SkipObjectResolution is not set:\n\nhttps://cs.opensource.google/go/go/+/release-branch.go1.17:src/go/parser/interface.go;l\u003d71-74\n\n// The mode parameter controls the amount of source text parsed and other\n// optional parser functionality. If the SkipObjectResolution mode bit is set,\n// the object resolution phase of parsing will be skipped, causing File.Scope,\n// File.Unresolved, and all Ident.Obj fields to be nil.",
      "parentUuid": "216c1b82_b4e4a15f",
      "revId": "52aef05498a9e84ede16fb7ce46a2a252af05479",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}