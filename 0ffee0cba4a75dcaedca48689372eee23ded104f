{
  "comments": [
    {
      "key": {
        "uuid": "5631136e_c2feafff",
        "filename": "src/internal/cpu/cpu_arm.go",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 17921
      },
      "writtenOn": "2018-07-27T06:46:47Z",
      "side": 1,
      "message": "We should follow the lower-case convention for the Name field of option. \"IDIVA\" should be \"idiva\".",
      "revId": "0ffee0cba4a75dcaedca48689372eee23ded104f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8005a8d9_63c11f25",
        "filename": "src/internal/cpu/cpu_arm.go",
        "patchSetId": 7
      },
      "lineNbr": 22,
      "author": {
        "id": 16006
      },
      "writtenOn": "2018-07-27T07:41:57Z",
      "side": 1,
      "message": "Good catch. Thanks. It should indeed be lower case.",
      "parentUuid": "5631136e_c2feafff",
      "revId": "0ffee0cba4a75dcaedca48689372eee23ded104f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b0722f7_97172fce",
        "filename": "src/runtime/vlop_arm.s",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 17921
      },
      "writtenOn": "2018-07-27T06:46:47Z",
      "side": 1,
      "message": "Can we use cpu.ARM.HasIDIVA here directly? Maybe with the help of \"go_asm.h\",\n\n    MOVBU internal/cpuÂ·ARM+const_ARM_HasIDIVA(SB), Ra",
      "revId": "0ffee0cba4a75dcaedca48689372eee23ded104f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71dff7a2_de7196fd",
        "filename": "src/runtime/vlop_arm.s",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 16006
      },
      "writtenOn": "2018-07-27T07:41:57Z",
      "side": 1,
      "message": "If there is a way to get this working easily i would be delighted to know how.\nLast time i checked (~a year ago) as far as i understood go asm did not support referencing struct fields of variables in other packages. Did you test that proposed code works?",
      "parentUuid": "4b0722f7_97172fce",
      "revId": "0ffee0cba4a75dcaedca48689372eee23ded104f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e814a6b_f29c2fb5",
        "filename": "src/runtime/vlop_arm.s",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 17921
      },
      "writtenOn": "2018-07-27T07:49:39Z",
      "side": 1,
      "message": "I was hoping to find out if there was such a mechanism during review :) When trying to test, I got\n\n    ../src/runtime/vlop_arm.s:47: expected \u0027(\u0027, found /\n    asm: assembly of ../src/runtime/vlop_arm.s failed\n\nsrc/internal/bytealg manages to do it, but I think this is with the help of the compiler. https://github.com/golang/go/blob/bd98a81dc27a740f4c4192cc8799884da62c4bad/src/internal/bytealg/count_amd64.s#L9",
      "parentUuid": "71dff7a2_de7196fd",
      "revId": "0ffee0cba4a75dcaedca48689372eee23ded104f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffd2f310_1bf35aa1",
        "filename": "src/runtime/vlop_arm.s",
        "patchSetId": 7
      },
      "lineNbr": 47,
      "author": {
        "id": 16006
      },
      "writtenOn": "2018-07-27T08:04:02Z",
      "side": 1,
      "message": "I dont think there is any special support for bytealg. (I havent checked)\nSo it should work. Maybe this is a bug in the arm assembler? I would expect this to work elsewhere if it does in bytealg for x86.",
      "parentUuid": "7e814a6b_f29c2fb5",
      "revId": "0ffee0cba4a75dcaedca48689372eee23ded104f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}