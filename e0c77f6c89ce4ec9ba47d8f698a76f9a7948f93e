{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b56123e9_7e3eef73",
        "filename": "src/cmd/internal/obj/mips/asm0.go",
        "patchSetId": 25
      },
      "lineNbr": 488,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-04-21T16:31:02Z",
      "side": 1,
      "message": "Add a comment about what type 6 and 64 are, to make it easier to read.",
      "range": {
        "startLine": 488,
        "startChar": 7,
        "endLine": 488,
        "endChar": 37
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea891e13_0db495f4",
        "filename": "src/cmd/internal/obj/mips/asm0.go",
        "patchSetId": 25
      },
      "lineNbr": 488,
      "author": {
        "id": 45165
      },
      "writtenOn": "2022-04-22T13:08:53Z",
      "side": 1,
      "message": "OK, I added a comment.",
      "parentUuid": "b56123e9_7e3eef73",
      "range": {
        "startLine": 488,
        "startChar": 7,
        "endLine": 488,
        "endChar": 37
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cc7e34e_ce3a644d",
        "filename": "src/cmd/internal/obj/mips/asm0.go",
        "patchSetId": 25
      },
      "lineNbr": 1774,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-04-21T16:31:02Z",
      "side": 1,
      "message": "Reuse rel.Sym ?",
      "range": {
        "startLine": 1774,
        "startChar": 13,
        "endLine": 1774,
        "endChar": 44
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13b118a5_2f97282d",
        "filename": "src/cmd/internal/obj/mips/asm0.go",
        "patchSetId": 25
      },
      "lineNbr": 1774,
      "author": {
        "id": 45165
      },
      "writtenOn": "2022-04-22T13:08:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0cc7e34e_ce3a644d",
      "range": {
        "startLine": 1774,
        "startChar": 13,
        "endLine": 1774,
        "endChar": 44
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edcc0910_8dcacf20",
        "filename": "src/cmd/internal/obj/mips/asm0.go",
        "patchSetId": 25
      },
      "lineNbr": 1805,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-04-21T16:31:02Z",
      "side": 1,
      "message": "Same here.",
      "range": {
        "startLine": 1805,
        "startChar": 13,
        "endLine": 1805,
        "endChar": 44
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbc9f67e_e7350c57",
        "filename": "src/cmd/internal/obj/mips/asm0.go",
        "patchSetId": 25
      },
      "lineNbr": 1805,
      "author": {
        "id": 45165
      },
      "writtenOn": "2022-04-22T13:08:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edcc0910_8dcacf20",
      "range": {
        "startLine": 1805,
        "startChar": 13,
        "endLine": 1805,
        "endChar": 44
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75dd404c_d59b0a2e",
        "filename": "src/cmd/internal/obj/mips/obj0.go",
        "patchSetId": 25
      },
      "lineNbr": 831,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-04-21T16:31:02Z",
      "side": 1,
      "message": "I\u0027m very confused with this. From the comment it looks like it computes an address and store it to REGSB? There is no store, right? So To.Type should be TYPE_REG instead of TYPE_MEM, and To.Name should be nil. From should not be a register  R25 either.",
      "range": {
        "startLine": 821,
        "startChar": 0,
        "endLine": 831,
        "endChar": 18
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41a6c72b_abd402a6",
        "filename": "src/cmd/internal/obj/mips/obj0.go",
        "patchSetId": 25
      },
      "lineNbr": 831,
      "author": {
        "id": 45165
      },
      "writtenOn": "2022-04-22T13:08:53Z",
      "side": 1,
      "message": "Yes, I reversed them. I deleted the From register R25.\nThanks!",
      "parentUuid": "75dd404c_d59b0a2e",
      "range": {
        "startLine": 821,
        "startChar": 0,
        "endLine": 831,
        "endChar": 18
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5e7f6ed_bdfe5e74",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 25
      },
      "lineNbr": 277,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-04-21T16:31:02Z",
      "side": 1,
      "message": "I\u0027m still not sure I understand this. Does it apply to a CALL instruction or some other instruction? Why a function symbol is different from a data symbol?",
      "range": {
        "startLine": 276,
        "startChar": 0,
        "endLine": 277,
        "endChar": 14
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f2598cc_63adcb00",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 25
      },
      "lineNbr": 277,
      "author": {
        "id": 45165
      },
      "writtenOn": "2022-04-22T13:08:53Z",
      "side": 1,
      "message": "Sorry for this oversight.\nThe MIPS ELF manual says:\n The difference between the R_MIPS_CALL* operators and the corresponding R_MIPS_GOT* operators is that the former allow initial resolution by rld to a lazy evaluation stub, whereas the latter must be resolved to the ultimate address at initialization.\n\nSo I rewrite the commend to \"R_MIPS_CALL16 resolves to the lazy evaluation stub of the function in PIC mode\".",
      "parentUuid": "f5e7f6ed_bdfe5e74",
      "range": {
        "startLine": 276,
        "startChar": 0,
        "endLine": 277,
        "endChar": 14
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0c72b43_1318ece9",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 25
      },
      "lineNbr": 280,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-04-21T16:31:02Z",
      "side": 1,
      "message": "I think this is still not clear. What does \"preempted\" mean here? It certainly is not goroutine preemption. What does it optimize to? Does the linker rewrite a \"CALL (R25)\" instruction back to a concrete \"CALL symbol\" instruction? Maybe\n\n// R_MIPS_JALR tells the linker the concrete call target of a \"CALL (R25)\" instruction in PIC mode, so the linker can optimize it back to a concrete call when \u003ccondition\u003e (with the proper condition. \"not preempted\" doesn\u0027t sound clear.)",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 280,
        "endChar": 12
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8a9a53e_fdef5c9c",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 25
      },
      "lineNbr": 280,
      "author": {
        "id": 45165
      },
      "writtenOn": "2022-04-22T13:08:53Z",
      "side": 1,
      "message": "The R_MIPS_JALR is for GNU linker to optimize instruction here. It doesn\u0027t matter to delete it. Could we delete it?",
      "parentUuid": "a0c72b43_1318ece9",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 280,
        "endChar": 12
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7c5f278_fa3169a6",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 25
      },
      "lineNbr": 280,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-04-25T15:34:25Z",
      "side": 1,
      "message": "It is okay to add this, just the comment needs to be clearer.\n\nAlso, the Go linker\u0027s stack bounds check needs to find the concrete call targets. As it rewrites concrete calls to indirect calls, I think it is necessary to have a relocation to point to the call target. Maybe you want to add it to IsDirectCall below?",
      "parentUuid": "a8a9a53e_fdef5c9c",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 280,
        "endChar": 12
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3722cf7c_5c2a3fdb",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 25
      },
      "lineNbr": 280,
      "author": {
        "id": 45165
      },
      "writtenOn": "2022-04-27T04:07:14Z",
      "side": 1,
      "message": "It might be OK. Per the notes of the IsDirectCall function and JALR instruction takes the target address in register, so it is an indirect call. When r is R_MIPS_JALR, IsDirectCall should return false.\n```\n// IsDirectCall reports whether r is a relocation for a direct call.\n// A direct call is a CALL instruction that takes the target address\n// as an immediate. The address is embedded into the instruction, possibly\n// with limited width. An indirect call is a CALL instruction that takes\n// the target address in register or memory.\n```\n\u003e What does \"preempted\" mean here? \nThe preemted symbol is a concept at load time. There are some words to explain it:\nhttp://rsusu1.rnd.runnet.ru/linux/doc/c_ug/lin1004.htm\nI think it is similar as IsDirectCall.",
      "parentUuid": "b7c5f278_fa3169a6",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 280,
        "endChar": 12
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00a251b1_fd089c38",
        "filename": "src/cmd/internal/objabi/reloctype.go",
        "patchSetId": 25
      },
      "lineNbr": 280,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-04-28T15:22:02Z",
      "side": 1,
      "message": "I understand that strictly speaking it is not a direct call in the hardware\u0027s perspective. IsDirectCall is used for the Go linker to build the call graph. Since we know the concrete call target, the Go linker can treat it as a direct call for that purpose. It doesn\u0027t actually matter how the call is made in hardware. I suggest you add it to IsDirectCall, with a comment explaining that it is not a hardware direct call but we know the call target and the linker can treat it as a direct call.\n\nThanks for the link. I think it mostly doesn\u0027t matter in the situation here (e.g. C code should never override a Go symbol). I think you can just remove \"which is not preempted\" in the comment.",
      "parentUuid": "3722cf7c_5c2a3fdb",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 280,
        "endChar": 12
      },
      "revId": "e0c77f6c89ce4ec9ba47d8f698a76f9a7948f93e",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}