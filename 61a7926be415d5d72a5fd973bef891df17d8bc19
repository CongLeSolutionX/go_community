{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3a3f56bc_a5c0bf1a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2021-05-21T20:56:29Z",
      "side": 1,
      "message": "I\u0027m trying to come up with a test case for this that actually fails before the change, but I haven\u0027t been able to yet. do you have more information on what exactly the failure mode was? or maybe I shouldn\u0027t bother if we\u0027re going to remove the spill space anyway? most non-trivial code out there using this would probably fail in some bad way.",
      "revId": "61a7926be415d5d72a5fd973bef891df17d8bc19",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8a2cae9_58618d47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-21T20:56:42Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d61a7926b",
      "tag": "autogenerated:trybots~beginning",
      "revId": "61a7926be415d5d72a5fd973bef891df17d8bc19",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d70a629b_9b5fff55",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-05-21T21:08:29Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "d8a2cae9_58618d47",
      "tag": "autogenerated:trybots~happy",
      "revId": "61a7926be415d5d72a5fd973bef891df17d8bc19",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "096ae80f_2f06dd74",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-05-21T21:14:33Z",
      "side": 1,
      "message": "Thanks. LGTM.\n\nWould it be possible to add a test?",
      "revId": "61a7926be415d5d72a5fd973bef891df17d8bc19",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9c57d27_8c34d0e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2021-05-21T21:17:59Z",
      "side": 1,
      "message": "ah, yeah. I left a comment about that -- I can\u0027t figure out how to make a small reproducer. I was hoping you had more details as to what exactly went wrong so I can try to recreate that. :) if not, I\u0027ll dig into it myself.",
      "parentUuid": "096ae80f_2f06dd74",
      "revId": "61a7926be415d5d72a5fd973bef891df17d8bc19",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1876d5ee_3c5f8c3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2021-05-21T21:25:32Z",
      "side": 1,
      "message": "Based on https://play.golang.org/p/2JzHDalGN7Q , I think the callback needs to have a few args, and has the args used after the runtime.GC call, so they are spilled (or maybe you can have the args address-taken, but don\u0027t escape the address). I think the problem was the args are spilled to the spill area (the callee thinks it has but not really), and clobbers the return PC of call16.\n\nI\u0027m not sure how to invoke a callback in the simplest way, though.",
      "parentUuid": "b9c57d27_8c34d0e1",
      "revId": "61a7926be415d5d72a5fd973bef891df17d8bc19",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}