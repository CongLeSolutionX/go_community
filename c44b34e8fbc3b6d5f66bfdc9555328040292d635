{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "083fa6e5_eb1d128a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-04-13T00:30:33Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dc44b34e8",
      "tag": "autogenerated:trybots~beginning",
      "revId": "c44b34e8fbc3b6d5f66bfdc9555328040292d635",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a58a20f6_9ad3cde4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-04-13T00:42:57Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "083fa6e5_eb1d128a",
      "tag": "autogenerated:trybots~happy",
      "revId": "c44b34e8fbc3b6d5f66bfdc9555328040292d635",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49433b10_982ba0a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5056
      },
      "writtenOn": "2022-04-13T20:58:18Z",
      "side": 1,
      "message": "Instead of looking at std vs not, why not preserve any groupings that are present? That is, delete the unused imports, but leave any blank lines between non-empty import path sections.\n",
      "revId": "c44b34e8fbc3b6d5f66bfdc9555328040292d635",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f44c0cd3_d8f6a4e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 31647
      },
      "writtenOn": "2022-04-13T21:05:57Z",
      "side": 1,
      "message": "LGTM for the current heuristic, but preserving all import groups seems like a better heuristic.",
      "revId": "c44b34e8fbc3b6d5f66bfdc9555328040292d635",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5fe411c4_2028449b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 31647
      },
      "writtenOn": "2022-04-13T21:05:57Z",
      "side": 1,
      "message": "This suggestion makes sense to me, and would probably simplify the implementation.",
      "parentUuid": "49433b10_982ba0a7",
      "revId": "c44b34e8fbc3b6d5f66bfdc9555328040292d635",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fb9a9b7_9ae57852",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 14570
      },
      "writtenOn": "2022-04-20T20:05:56Z",
      "side": 1,
      "message": "Done.\n\nI don\u0027t have a FileSet so I can\u0027t see blank lines.\n\nInstead I assumed that they are properly formatted, so that if there are two positions (newline, tab) between them they are on adjacent lines. I remember the start of each group, and set the position of each new import to the start position of its group.\n\nLet me know if you see a simpler way.",
      "parentUuid": "5fe411c4_2028449b",
      "revId": "c44b34e8fbc3b6d5f66bfdc9555328040292d635",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}