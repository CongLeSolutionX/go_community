{
  "comments": [
    {
      "key": {
        "uuid": "5ed3e071_901a7d91",
        "filename": "src/cmd/compile/internal/ppc64/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-02-16T00:46:15Z",
      "side": 1,
      "message": "Don\u0027t we need a SYNC here somewhere?  The assembly code in runtime/internal/atomic has one.\n\nAt a higher level, maybe And8 and Or8 as used in the runtime don\u0027t require any barriers.  I\u0027ll ask Austin.",
      "revId": "cae79e3bf9922b3260c5569c4be3db37dafb37bf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46112dce_adf43d14",
        "filename": "src/cmd/compile/internal/ppc64/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-02-16T16:14:18Z",
      "side": 1,
      "message": "Yes I intended that it matched the asm code.  Sorry I thought I reviewed them all carefully.  Let me try that.",
      "parentUuid": "5ed3e071_901a7d91",
      "revId": "cae79e3bf9922b3260c5569c4be3db37dafb37bf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b751b73_2b3f52be",
        "filename": "src/cmd/compile/internal/ppc64/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 321,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-02-16T00:46:15Z",
      "side": 1,
      "message": "I don\u0027t understand what this comparison and branch are about.",
      "revId": "cae79e3bf9922b3260c5569c4be3db37dafb37bf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15a29000_587dbb00",
        "filename": "src/cmd/compile/internal/ppc64/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 321,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-02-16T16:14:18Z",
      "side": 1,
      "message": "This is the way the load atomic is implemented on ppc64/ppc64le based on the C11 model for sequential consistency in other compilers/runtimes.  My understanding is that by executing the cmp and bne, that enables a dependency on what was just loaded which ensures sequential consistency. This sequence appears in the ISA document B.2.3 Safe Fetch.",
      "parentUuid": "9b751b73_2b3f52be",
      "revId": "cae79e3bf9922b3260c5569c4be3db37dafb37bf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f33fb5bc_029bb8a8",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64.rules",
        "patchSetId": 1
      },
      "lineNbr": 777,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-02-16T00:46:15Z",
      "side": 1,
      "message": "AtomicStorePtrNoWB could rewrite to LoweredAtomicStore64 also?",
      "revId": "cae79e3bf9922b3260c5569c4be3db37dafb37bf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bd8388b_3cd418af",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 363,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-02-16T00:46:15Z",
      "side": 1,
      "message": "Wouldn\u0027t this load overwrite the value we\u0027re trying to add?",
      "revId": "cae79e3bf9922b3260c5569c4be3db37dafb37bf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33867913_8d3ec734",
        "filename": "src/cmd/compile/internal/ssa/gen/PPC64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 363,
      "author": {
        "id": 6320
      },
      "writtenOn": "2017-02-20T21:27:37Z",
      "side": 1,
      "message": "Comment is wrong, I\u0027ll fix.  The corresponding comment in ppc64/ssa.go is correct.",
      "parentUuid": "1bd8388b_3cd418af",
      "revId": "cae79e3bf9922b3260c5569c4be3db37dafb37bf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}