{
  "comments": [
    {
      "key": {
        "uuid": "ed0a495c_f8c1859f",
        "filename": "src/cmd/internal/ssa/op.go",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "missing period",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_588c1189",
        "filename": "src/cmd/internal/ssa/op.go",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "Add:\n  opInvalid \u003d 0\n?",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_d8be410f",
        "filename": "src/cmd/internal/ssa/op.go",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "opAMD64Base",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_a3c872a3",
        "filename": "src/cmd/internal/ssa/op.go",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "If you let the left-to-right order of names imply the argument numbering, you can give meaningful names.\nPerhaps something like this:\n\n    slice \u003d SliceMake(ptr, len, cap)\n\nDo any ops return multiple values?",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_b8a09de9",
        "filename": "src/cmd/internal/ssa/op.go",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "This returns a memory.",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_984f99c3",
        "filename": "src/cmd/internal/ssa/op.go",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "TODO: rename IsNonNil ?\n\nsince it\u0027s just a predicate.  \"Check\" sounds like an assertion.\n\nDoes this return a reified boolean or a flag?",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_f84ce5cf",
        "filename": "src/cmd/internal/ssa/op.go",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "rename IsInBounds?\n\nDoes this return a boolean or a flag?",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_03d69e45",
        "filename": "src/cmd/internal/ssa/opamd64.go",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "opAMD64Start",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_e3d27a4f",
        "filename": "src/cmd/internal/ssa/opamd64.go",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "No need for *s here.",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_c3f496d5",
        "filename": "src/cmd/internal/ssa/opamd64.go",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "\"from which we\"",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_23380200",
        "filename": "src/cmd/internal/ssa/opamd64.go",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "Is \"args0 encodes\" right?  Conceptually, doesn\u0027t arg0 encode the entire set of condition flags and SETEQ just extracts one of them?",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_832d6ec4",
        "filename": "src/cmd/internal/ssa/opamd64.go",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "Presumably InvertFlags\u0027 operand value must be a comparison operation of some kind, because it doesn\u0027t make sense to invert a value.  You can\u0027t derive x\u003cy from the reified value of y\u003cx, for example.  Put another way, InvertFlags is more like a macro than a function.",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_63320a22",
        "filename": "src/cmd/internal/ssa/opamd64.go",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "returns mem",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_c32656e5",
        "filename": "src/cmd/internal/ssa/opamd64.go",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "returns mem",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_a32352d3",
        "filename": "src/cmd/internal/ssa/opamd64.go",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "returns mem",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed0a495c_03217eca",
        "filename": "src/cmd/internal/ssa/opamd64.go",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 5195
      },
      "writtenOn": "2015-05-13T21:47:42Z",
      "side": 1,
      "message": "returns mem\nreturns mem",
      "revId": "2bb642163cbcdb130c7cedb550f92865fe868df1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}