{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2ba88ae7_3069f3a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-10T00:18:41Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dd888db4a\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "162687e4_da260758",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-10T00:33:32Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "2ba88ae7_3069f3a0",
      "tag": "autogenerated:trybots~happy",
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e81a13aa_c8c9cd19",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-11-10T00:34:06Z",
      "side": 1,
      "message": "This CL is ready for review. Thanks,",
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74bf4c68_fe63583d",
        "filename": "src/cmd/go/internal/work/build.go",
        "patchSetId": 7
      },
      "lineNbr": 495,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-11-10T16:53:18Z",
      "side": 1,
      "message": "I\u0027m concerned that with the number of different places this is called, it will be easy to miss one (either in this CL or in the face of future changes).\n\nWould it make sense to move this into the end of `load.PackagesAndErrors`?\n\n(Are there any cases in which we want to set the PGO path without calling that function either directly or indirectly, or cases in which we want to call `load.PackagesAndErrors` without modifying the PGO path?)",
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56d94fc0_aa5f7861",
        "filename": "src/cmd/go/internal/work/build.go",
        "patchSetId": 7
      },
      "lineNbr": 495,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-11-12T00:03:46Z",
      "side": 1,
      "message": "Maybe. I think currently setting PGO path always follows `load.PackagesAndErrors`. For the other direction, it looks like `load.PackagesAndErrors` is called more than build-related actions, e.g. go vet, go fmt, go generate. They don\u0027t seem to need PGO (but it probably doesn\u0027t hurt to set PGO path?)\n\nAnother concern is error reporting (if we move it to `load.PackagesAndErrors`). For erroneous cases, I don\u0027t want to -pgo\u003dauto to change what error it reports. (Maybe we can solve this by making `SetPGOProfilePath` not error out if any package is erroneous.)\n\nYou\u0027re more familiar with this code. If you think it is better to move it to `load.PackagesAndErrors`, I can do that. Let me know what you think. Thanks.",
      "parentUuid": "74bf4c68_fe63583d",
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bf0f058_6bfb8416",
        "filename": "src/cmd/go/internal/work/build.go",
        "patchSetId": 7
      },
      "lineNbr": 495,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-11-15T20:12:32Z",
      "side": 1,
      "message": "\u003e Maybe. I think currently setting PGO path always follows `load.PackagesAndErrors`. For the other direction, it looks like `load.PackagesAndErrors` is called more than build-related actions, e.g. go vet, go fmt, go generate. They don\u0027t seem to need PGO (but it probably doesn\u0027t hurt to set PGO path?)\n\nSeems benign, and setting it might improve the cache hit rate for tools that end up loading export data (I\u0027m not sure whether `go vet` does, but it seems plausible).\n\n\u003e Another concern is error reporting (if we move it to `load.PackagesAndErrors`). For erroneous cases, I don\u0027t want to -pgo\u003dauto to change what error it reports. (Maybe we can solve this by making `SetPGOProfilePath` not error out if any package is erroneous.)\n\nHmm, that brings up an interesting point. `go list -e -deps -pgo\u003dauto main1 main2` should probably still list all of the packages and dependencies. I\u0027m inclined to attach the PGO error to only the `main` packages, since those are the ones that prevent us from having a well-defined PGO file for the rest of the packages. ðŸ¤”",
      "parentUuid": "56d94fc0_aa5f7861",
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f170c2e_3f85d27e",
        "filename": "src/cmd/go/internal/work/build.go",
        "patchSetId": 7
      },
      "lineNbr": 495,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-11-15T23:50:01Z",
      "side": 1,
      "message": "Thanks. Done. Also change to attach the error to main packages, PTAL. Thanks,",
      "parentUuid": "6bf0f058_6bfb8416",
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a52660c1_d5a827ca",
        "filename": "src/cmd/go/internal/work/build.go",
        "patchSetId": 7
      },
      "lineNbr": 563,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-11-10T16:53:18Z",
      "side": 1,
      "message": "I think this will cause `go test` and `go list -deps` to fail, since they end up constructing several packages in the service of running a single test.\n\nWould it make sense to filter through `pkgs` to find the one named `\"main\"` (ignoring its dependencies) and only fail if we find more than one?\n\nâ€•\n\nI guess a related question is: if I run `go build -pgo\u003dauto ./...`, and there is exactly one `main` package in a subdirectory, should that cause all of the packages to be built with the PGO file for the one main package, or should it be an error?\n\nIf it should build everything with the PGO file for the one main package, then this approach is fine and we should just look for the `main` among the results.\n\nIf it should be an error, then perhaps we should also check the `CmdlinePkg` field for the other packages and/or `CmdlinePkgLiteral` for `main`?",
      "range": {
        "startLine": 560,
        "startChar": 0,
        "endLine": 563,
        "endChar": 3
      },
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae4d562d_c094b7ee",
        "filename": "src/cmd/go/internal/work/build.go",
        "patchSetId": 7
      },
      "lineNbr": 563,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-11-12T00:03:46Z",
      "side": 1,
      "message": "\u003e I think this will cause go test and go list -deps to fail, since they end up constructing several packages in the service of running a single test.\n\nI think currently it doesn\u0027t fail, as we call SetPGOProfilePath before -test or -deps adjust the package list.\n\n\u003e Would it make sense to filter through pkgs to find the one named \"main\" (ignoring its dependencies) and only fail if we find more than one?\n\nI think it is fine either way. The previous version of the CL does this, except that it silently ignores PGO when multiple main packages appear. Maybe it is better this way (fewer error cases).\n\nDone.",
      "parentUuid": "a52660c1_d5a827ca",
      "range": {
        "startLine": 560,
        "startChar": 0,
        "endLine": 563,
        "endChar": 3
      },
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e74be21_b7893ebe",
        "filename": "src/cmd/go/internal/work/build.go",
        "patchSetId": 7
      },
      "lineNbr": 563,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-11-15T20:12:32Z",
      "side": 1,
      "message": "\u003e \u003e I think this will cause go test and go list -deps to fail, since they end up constructing several packages in the service of running a single test.\n\u003e \n\u003e I think currently it doesn\u0027t fail, as we call SetPGOProfilePath before -test or -deps adjust the package list.\n\nThat sounds like a good argument for moving `SetPGOProfilePath` into `load.PackagesAndErrors`, so that there are fewer parts of the code that depend on subtle ordering constraints. ðŸ˜…",
      "parentUuid": "ae4d562d_c094b7ee",
      "range": {
        "startLine": 560,
        "startChar": 0,
        "endLine": 563,
        "endChar": 3
      },
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d345709_c4f455ee",
        "filename": "src/cmd/go/internal/work/build.go",
        "patchSetId": 7
      },
      "lineNbr": 563,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-11-15T23:50:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e74be21_b7893ebe",
      "range": {
        "startLine": 560,
        "startChar": 0,
        "endLine": 563,
        "endChar": 3
      },
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e7d4d80_62323417",
        "filename": "src/cmd/go/testdata/script/build_pgo_auto.txt",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-11-10T16:53:18Z",
      "side": 1,
      "message": "Also test the other commands that allow build flags (`test`, `run`, `list`, `list -deps`, `list -test`)?",
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20a7f431_c3be0c7c",
        "filename": "src/cmd/go/testdata/script/build_pgo_auto.txt",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-11-12T00:03:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e7d4d80_62323417",
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55c5eaad_e11113ba",
        "filename": "src/cmd/go/testdata/script/build_pgo_auto.txt",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 6365
      },
      "writtenOn": "2022-11-10T16:53:18Z",
      "side": 1,
      "message": "`-pgo\u003dauto` will presumably guide the build for all dependencies of `main`, so to better capture the real expected usage the test should also use a `main` with a nontrivial set of dependencies.",
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fd57ea2_62fa32b9",
        "filename": "src/cmd/go/testdata/script/build_pgo_auto.txt",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 13315
      },
      "writtenOn": "2022-11-12T00:03:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55c5eaad_e11113ba",
      "revId": "d888db4acea2cd5fc2136f10bb306aeff8062fdf",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}