{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3720deb8_25753b50",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-09-11T06:15:31Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003daa9fe5f4\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e29b3366_2a60ac01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-09-11T06:26:59Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "3720deb8_25753b50",
      "tag": "autogenerated:trybots~happy",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "191cdcaa_b5092947",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "Sorry for the delay. Looks reasonable overall. Thanks for making this work!",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "269b4532_c91605ea",
        "filename": "src/cmd/internal/obj/arm64/a.out.go",
        "patchSetId": 13
      },
      "lineNbr": 180,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "Maybe spell out SME and ZA for the first time.",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2500f79e_bfc8e596",
        "filename": "src/cmd/internal/obj/arm64/a.out.go",
        "patchSetId": 13
      },
      "lineNbr": 228,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "What is this?",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1505668_f7f6e072",
        "filename": "src/cmd/internal/obj/arm64/a.out.go",
        "patchSetId": 13
      },
      "lineNbr": 230,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "Maybe write it as `(REG_ZT0 + 1) | 0x1f` or something, using bit operations. Otherwise 23 looks very weird.",
      "range": {
        "startLine": 230,
        "startChar": 11,
        "endLine": 230,
        "endChar": 23
      },
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5bf6c24_548f2d5d",
        "filename": "src/cmd/internal/obj/arm64/a.out.go",
        "patchSetId": 13
      },
      "lineNbr": 642,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "Operand type? Add a comment.",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "391aa3e5_230dad5e",
        "filename": "src/cmd/internal/obj/arm64/a.out.go",
        "patchSetId": 13
      },
      "lineNbr": 871,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "What does \"unreasonable\" mean here exactly?",
      "range": {
        "startLine": 871,
        "startChar": 44,
        "endLine": 871,
        "endChar": 56
      },
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "823257a9_dc199476",
        "filename": "src/cmd/internal/obj/arm64/a.out.go",
        "patchSetId": 13
      },
      "lineNbr": 873,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "Is it possible for this to be generated? Or, if most of them can be generated with a few exceptions, can we just list the exceptions?",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f4d9755_c2a00546",
        "filename": "src/cmd/internal/obj/arm64/arm64ops.go",
        "patchSetId": 13
      },
      "lineNbr": 5,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "It would be good to have some comment explaining what this type is, and how it differs from the A constants for the opcodes that Go uses. You could print the comment from the generator. Or move the type definition to a hand-written file.\n\nAlso, besides appearing in table entries, is this used anywhere?",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a2f89c7_18e8d8ba",
        "filename": "src/cmd/internal/obj/arm64/arm64ops.go",
        "patchSetId": 13
      },
      "lineNbr": 9,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "This doesn\u0027t need to be exported. Maybe start with lowercase \"a\".",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4aa2c6a_836abef4",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 13
      },
      "lineNbr": 2309,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "This function has some overlap with aclass. Is it possible to deduplicate some? Also, this function probably shouldn\u0027t modify the state, so maybe we should remove the code that sets c.instoffset and a.Reg?",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "012b2b7e_6677962a",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 13
      },
      "lineNbr": 2430,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "A comment would be good.",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5975ad6_ca57159f",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 13
      },
      "lineNbr": 2557,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "What does this mean here? The comment in obj/link.go says \"size of the instruction in bytes\", but that doesn\u0027t seem to be what happens here. It seems this is the number of matches * 4. Why times 4? Also, it seems only checked in a comparison, so maybe just use a flag?",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ec9b71e_332e9f63",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 13
      },
      "lineNbr": 2604,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "Maybe mention in what order the operands are returned.",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2274c311_fa703e13",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 13
      },
      "lineNbr": 2655,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "Could we use `sort.Search`? Or that is too slow because of function pointers?",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88b27cf4_b472845e",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 13
      },
      "lineNbr": 6529,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T19:32:53Z",
      "side": 1,
      "message": "How are relocations handled in the new code path? Does it currently not handle any instruction that needs relocation?",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9f3cca1_bb51ec01",
        "filename": "src/cmd/internal/obj/arm64/asm7.go",
        "patchSetId": 13
      },
      "lineNbr": 6533,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "What is the purpose for this map? Just reduce allocations? Also, the map seems unused in the encoding functions.",
      "range": {
        "startLine": 6531,
        "startChar": 0,
        "endLine": 6533,
        "endChar": 3
      },
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5692bfd8_43b2a8e5",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 13
      },
      "lineNbr": 46,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "an",
      "range": {
        "startLine": 46,
        "startChar": 63,
        "endLine": 46,
        "endChar": 64
      },
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a52ffc0_0dba0537",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 13
      },
      "lineNbr": 72,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "ldrsw is mentioned above",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3682bf2_16275475",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 13
      },
      "lineNbr": 346,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "What do these mean?",
      "range": {
        "startLine": 346,
        "startChar": 42,
        "endLine": 346,
        "endChar": 60
      },
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfe5495d_d8abf0d7",
        "filename": "src/cmd/internal/obj/arm64/doc.go",
        "patchSetId": 13
      },
      "lineNbr": 353,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "Is this new syntax? Added in this CL? I don\u0027t recall we have something like this.",
      "range": {
        "startLine": 353,
        "startChar": 25,
        "endLine": 353,
        "endChar": 38
      },
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3aaade7c_86f4e9cf",
        "filename": "src/cmd/internal/obj/arm64/elements.go",
        "patchSetId": 13
      },
      "lineNbr": 5,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "Same as a64type, some comment may be good to have.",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07d1c5c1_a2e10cf4",
        "filename": "src/cmd/internal/obj/arm64/instgen/go.mod",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "We try to avoid non-top-level go.mod in the tree, if possible. Could we not have this? Does it work if we use \"cmd/internal/arm64/instgen\" for the package path, in the top-level cmd module?",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92d1768b_099c5dee",
        "filename": "src/cmd/internal/obj/arm64/instgen/inst.go",
        "patchSetId": 13
      },
      "lineNbr": 342,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "This part doesn\u0027t seem to need to be generated. Just move to a hand-written file.",
      "range": {
        "startLine": 295,
        "startChar": 0,
        "endLine": 342,
        "endChar": 2
      },
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b02409be_ca5f8735",
        "filename": "src/cmd/internal/obj/arm64/instgen/inst.go",
        "patchSetId": 13
      },
      "lineNbr": 404,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "Some comments on the FEAT constants would probably be good.\n\nAlso, maybe put it in a separate file. instructions.go is already enormous and hard to look at. It would be better for instructions.go to contain one and only one table, nothing else. So a reader wouldn\u0027t need to open that large file to find anything other than the table entries.",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47d92e69_95c50707",
        "filename": "src/cmd/internal/obj/arm64/instgen/main.go",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "What do you think about putting the generator into the x/arch repo? This has quite some code that are only needed for generating files and not needed by the rest of the standard library, so maybe x/arch is probably a better place for this. Also, maybe later we can extend this to also generate the disassembler, which also lives in the x/arch repo.",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "791202bd_a902d744",
        "filename": "src/cmd/internal/obj/arm64/instgen/main.go",
        "patchSetId": 13
      },
      "lineNbr": 16,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "\"Users\" to match the above. Or, maybe say it from the tool\u0027s perspective, like \"instgen (or it) also accepts a download link of the manual by the -url flag\".",
      "range": {
        "startLine": 16,
        "startChar": 3,
        "endLine": 16,
        "endChar": 6
      },
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2e604f8_b813b821",
        "filename": "src/cmd/internal/obj/arm64/instgen/main.go",
        "patchSetId": 13
      },
      "lineNbr": 21,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "Maybe name files with \"_gen.go\" suffix, like inst_gen.go, elem_gen.go, etc. so it is clear that which files are generated.",
      "range": {
        "startLine": 21,
        "startChar": 3,
        "endLine": 21,
        "endChar": 58
      },
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c325b01c_251fd273",
        "filename": "src/cmd/internal/obj/arm64/instgen/main.go",
        "patchSetId": 13
      },
      "lineNbr": 91,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "Code below uses log.Print, maybe we should use that here as well.",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d90b4a7a_bfd4387f",
        "filename": "src/cmd/internal/obj/arm64/instgen/main.go",
        "patchSetId": 13
      },
      "lineNbr": 150,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "Minor: remove \"try to\".",
      "range": {
        "startLine": 150,
        "startChar": 13,
        "endLine": 150,
        "endChar": 20
      },
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edd17d2f_42c5d5e1",
        "filename": "src/cmd/internal/obj/arm64/instgen/parser.go",
        "patchSetId": 13
      },
      "lineNbr": 196,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "This has too many level of indentations. Maybe use some helper functions?",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2aeb8b41_62d1cf2b",
        "filename": "src/cmd/internal/obj/link.go",
        "patchSetId": 13
      },
      "lineNbr": 541,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-10-06T18:52:01Z",
      "side": 1,
      "message": "ARM64 has more than 2047 opcodes?!",
      "revId": "aa9fe5f403edb01c8a6847e51c81b0999be57774",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}