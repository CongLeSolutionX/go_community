{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "632a02b8_9af608a3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-07-12T15:10:48Z",
      "side": 1,
      "message": "Do we actually need seq cst? My understanding is that acquire/release should be sufficient for the atomics implemented.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 14,
        "endChar": 75
      },
      "revId": "b42cf7220924ac13b949bd727aa5c4340913b241",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2985a3c0_d106a1db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-07-12T15:49:10Z",
      "side": 1,
      "message": "I guess the remaining question is, is #51295 fixed if we mark LR as acquire only?",
      "revId": "b42cf7220924ac13b949bd727aa5c4340913b241",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24e6499e_d55ecf7f",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 2075,
      "author": {
        "id": 6875
      },
      "writtenOn": "2023-07-11T16:31:28Z",
      "side": 1,
      "message": "I\u0027m a bit wary of redefining what assembly instructions do. Maybe we should add different LR variants as different instructions?\n \nI guess this is safe, as adding sync marks can\u0027t hurt (except perhaps performance-wise).\n\nIs this change necessary, given the fix to the other instructions below? My intuitions says LR needs only acquire semantics.",
      "revId": "b42cf7220924ac13b949bd727aa5c4340913b241",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb34e185_96759888",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 2075,
      "author": {
        "id": 7530
      },
      "writtenOn": "2023-07-12T03:07:23Z",
      "side": 1,
      "message": "I grepped Go repo and only runtime/internal/atomic using this LR, I think it\u0027s safe to change this default encoding. GNU as using suffix for different mode i.e. `lr.w.aqrl`. Maybe we can add this later in 1.22 after floating point round mode CL 504737 been apply?",
      "parentUuid": "24e6499e_d55ecf7f",
      "revId": "b42cf7220924ac13b949bd727aa5c4340913b241",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61d0d6f1_44babfd7",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 2075,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-07-12T15:10:48Z",
      "side": 1,
      "message": "There\u0027s a bit to unpack here...\n\nIt looks like the real issue here is that SC is setting \u0027aq\u0027 instead of \u0027rl\u0027 (which , combined with \u0027rl\u0027 being needed on the AMO* instructions. I do not believe that we need or want \u0027aqrl\u0027 for LR. To quote the RISC-V ISA:\n\n\"Software should not set the rl bit on an LR instruction unless the aq bit is also set, nor should software set the aq bit on an SC instruction unless the rl bit is also set. LR.rl and SC.aq instructions are not guaranteed to provide any stronger ordering than those with both bits clear, but may result in lower performance.\"\n\nI\u0027m not really concerned by changing the assembly opcodes - very few things use these instructions (I\u0027d be surprised if there is anything outside of the Go\u0027s runtime/internal/atomic package) and the change is to fix incorrect operations (which only improves the situation by strengthening ordering).\n\nI do not think we should add suffixed modes - that seems unnecessary and would only potentially lead to further incorrect usage/performance issues.",
      "parentUuid": "eb34e185_96759888",
      "revId": "b42cf7220924ac13b949bd727aa5c4340913b241",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cea2ee0a_9e5b3e91",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 2075,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-07-12T15:49:10Z",
      "side": 1,
      "message": "My worry would be about other repos using these instructions, not the stdlib.\n\nBut it should be ok as long as we are only constraining behavior, or fixing obvious bugs.",
      "parentUuid": "61d0d6f1_44babfd7",
      "revId": "b42cf7220924ac13b949bd727aa5c4340913b241",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "061bf4ed_37f80943",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 2080,
      "author": {
        "id": 6875
      },
      "writtenOn": "2023-07-11T16:31:28Z",
      "side": 1,
      "message": "This definitely looks like just a bug in the old code. SC should definitely be release, not acquire.",
      "revId": "b42cf7220924ac13b949bd727aa5c4340913b241",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "450fe154_2293a5e4",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 2080,
      "author": {
        "id": 7530
      },
      "writtenOn": "2023-07-12T03:07:23Z",
      "side": 1,
      "message": "Should I send two CLs?",
      "parentUuid": "061bf4ed_37f80943",
      "revId": "b42cf7220924ac13b949bd727aa5c4340913b241",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62055756_33490c19",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 2080,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-07-12T15:10:48Z",
      "side": 1,
      "message": "Fixing SC and AMO* in the same CL seems sensible to me.",
      "parentUuid": "450fe154_2293a5e4",
      "revId": "b42cf7220924ac13b949bd727aa5c4340913b241",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "962250af_0fa8418e",
        "filename": "src/cmd/internal/obj/riscv/obj.go",
        "patchSetId": 2
      },
      "lineNbr": 2080,
      "author": {
        "id": 5200
      },
      "writtenOn": "2023-07-12T15:49:10Z",
      "side": 1,
      "message": "A single CL is fine.",
      "parentUuid": "62055756_33490c19",
      "revId": "b42cf7220924ac13b949bd727aa5c4340913b241",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}