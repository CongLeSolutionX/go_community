{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "51a7d3d0_b31865c0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-04T13:21:07Z",
      "side": 1,
      "message": "Is there a reference document for the FreeBSD syscall ABI on ARM? I\u0027m having trouble finding one.",
      "range": {
        "startLine": 9,
        "startChar": 57,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "302f6ce57647e14f3db9e28690148036865ab734",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1242dab6_1d76f10b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-04T13:44:09Z",
      "side": 1,
      "message": "Ah, looks like it follows the ARM calling convention in general:\nhttps://github.com/ARM-software/abi-aa/blob/2bcab1e3b22d55170c563c3c7940134089176746/aapcs32/aapcs32.rst#parameter-passing\n\nThe relevant step here is C.3:\n\u003e If the argument requires double-word alignment (8-byte), the NCRN is rounded up to the next even register number.",
      "parentUuid": "51a7d3d0_b31865c0",
      "range": {
        "startLine": 9,
        "startChar": 57,
        "endLine": 10,
        "endChar": 40
      },
      "revId": "302f6ce57647e14f3db9e28690148036865ab734",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "750c6f64_afe1a6c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-04T13:10:39Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d302f6ce5\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "302f6ce57647e14f3db9e28690148036865ab734",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7951a1e6_66a37c67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-04T13:10:39Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "87b66654_20216293",
      "tag": "autogenerated:trybots~beginning",
      "revId": "302f6ce57647e14f3db9e28690148036865ab734",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3beec59_51d978a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-04T13:20:03Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d302f6ce5\nFailed on linux-amd64: https://storage.googleapis.com/go-build-log/302f6ce5/linux-amd64_374de6fc.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "750c6f64_afe1a6c6",
      "tag": "autogenerated:trybots~progress",
      "revId": "302f6ce57647e14f3db9e28690148036865ab734",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01fca3cc_73356d90",
        "filename": "src/internal/syscall/unix/fallocate_freebsd_arm.go",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-04-04T13:33:24Z",
      "side": 1,
      "message": "https://man.freebsd.org/cgi/man.cgi?query\u003dposix_fallocate\u0026sektion\u003d2\u0026n\u003d1 says:\n\u003e If successful, `posix_fallocate()` returns zero.  It\treturns an error on failure, without setting _errno_.\n\nDoes that mean we should be converting the error from the `r1` return value rather than using the `errno` value, for all of these wrappers?",
      "revId": "302f6ce57647e14f3db9e28690148036865ab734",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0911fbf6_bed79d9d",
        "filename": "src/internal/syscall/unix/fallocate_freebsd_arm.go",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 19560
      },
      "writtenOn": "2023-04-04T13:50:12Z",
      "side": 1,
      "message": "Right, thanks for the pointer.",
      "parentUuid": "01fca3cc_73356d90",
      "revId": "302f6ce57647e14f3db9e28690148036865ab734",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}