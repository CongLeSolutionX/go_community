{
  "comments": [
    {
      "key": {
        "uuid": "0b78b3b0_377d7293",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "binary",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78b3b0_177876a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "Is this supposed to be golang.org/cl/XXX?",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78b3b0_5797ce93",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof.go",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "Don\u0027t need any of this.",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78b3b0_779c4ab5",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof.go",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "Delete.",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78b3b0_d78afe67",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof.go",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "if len(b) \u003c minRawProfile || len(b)%unsafe.Sizeof(uintptr) !\u003d 0 {\n    return nil, fmt.Errorf(\"truncated profile\")\n}\nn :\u003d len(b)/unsafe.Sizeof(uintptr)\ndata :\u003d (*[1\u003c\u003c29]uintptr)(unsafe.Pointer(\u0026b[0]))[:n:n]\nperiod :\u003d data[4]\ndata \u003d data[5:] // skip header\n\np :\u003d ...\nlocs :\u003d ...\n\nfor {\n   if len(data) \u003c 2 {\n        return nil, fmt.Errorf(\"truncated profile\")\n   }\n   count :\u003d data[0]\n   nstk :\u003d data[1]\n   if len(data) \u003c 2 + nstk {\n        return nil, fmt.Errorf(\"truncated profile\")\n   }\n   stk :\u003d data[2:2+nstk]\n   data \u003d data[2+nstk:]\n\n   if count \u003d\u003d 0 \u0026\u0026 nstk \u003d\u003d 1 \u0026\u0026 stk[0] \u003d\u003d 0 {\n      // end of data marker\n      break\n   }\n\n   for i, addr :\u003d range stk {\n        ...\n   }\n}\n\nif runtime.GOOS \u003d\u003d \"linux\" {\n   ... addMappings ...\n}\nreturn p, nil",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78b3b0_3796d295",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof.go",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "s/n4/period/",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78b3b0_3afa3904",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof.go",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "This should be at the bottom of the function (done in the code suggested above).",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b3ccff2_7f128fca",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof.go",
        "patchSetId": 2
      },
      "lineNbr": 225,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "Handle errors first, and make the problem being avoided explicit.\n\nf :\u003d runtime.FuncForPC(pc)\nif f \u003d\u003d nil {\n    return nil // interface nil\n}\nreturn f",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78b3b0_b768a2d1",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof.go",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "runtime/pprof not runtime/proto. But this really shouldn\u0027t be here at all. Instead of having the runtime/pprof package serialize a data structure to text and then parsing the text back into a data structure, why not have runtime/pprof actually generate a data structure from the first data structure?\n\nThat is, probably runtime/pprof.printCountProfile should generate the protobuf format directly when debug\u003d\u003d0. Then this parser is not needed. \n\nLet\u0027s remove non-CPU-profile handling code from this CL and do the other profile types in a followup. (And that followup should probably avoid the serialization to text and parsing of that text.)",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b3ccff2_1f0d43ab",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof.go",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "add\nloc.Line \u003d []profile.Line{{Function: addFunction(p, f), Line: int64(lineno)}}\n\nThen we don\u0027t even need to apply symbolize to this profile.\n(Maybe it will be needed for others.)",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b3ccff2_3f08079b",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof.go",
        "patchSetId": 2
      },
      "lineNbr": 292,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "Delete from this CL until we need it for something else.",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78b3b0_da2f85a3",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof.go",
        "patchSetId": 2
      },
      "lineNbr": 346,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "This is such a weird use of methods. It confuses me every time I see it.\n\nThe key here is unnecessarily complicated. The caller already has a *runtime.Func that is a perfectly good key (well, I guess a \"function\" for testing).\n\nfunc addFunction(p *profile.Profile, m map[function]*profile.Function, f function) {\n\nAnd drop the type profileFunctionMap declaration entirely.",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78b3b0_7a2191ba",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof.go",
        "patchSetId": 2
      },
      "lineNbr": 365,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "I don\u0027t understand this claim. Is this really true of Go? Maybe it was true of the C++ profiler? I\u0027ve never seen this problem in Go profiles. Please delete this function until we know it\u0027s a problem. (And if it is a problem we can just fix the runtime.)",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78b3b0_7a4af174",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof_test.go",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "Blank line after copyright notices please.",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78b3b0_1a3f3dce",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof_test.go",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "None of this makes sense. Why is a test of some straightforward data conversion functions using HTTP servers and HTTP handlers? If this package is about converting the data, make the tests about converting the data. Don\u0027t add HTTP into the mix.",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78b3b0_ba4f297d",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof_test.go",
        "patchSetId": 2
      },
      "lineNbr": 275,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "Let\u0027s drop this until we get to the CL that actually uses symbolize.",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b78b3b0_5a6e15e6",
        "filename": "src/runtime/pprof/internal/protopprof/protopprof_test.go",
        "patchSetId": 2
      },
      "lineNbr": 360,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-11-04T20:11:51Z",
      "side": 1,
      "message": "Let\u0027s drop this until we get to the CL that updates goroutine profiles.",
      "revId": "7f3b9c335dd430522744226e09eb1f9ae64b2f63",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}