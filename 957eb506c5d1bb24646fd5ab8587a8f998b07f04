{
  "comments": [
    {
      "key": {
        "uuid": "fbcdf6b0_9bc1cf29",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-08-01T13:57:10Z",
      "side": 1,
      "message": "cmd/go: show examples with empty output in go test -list\n\nFixes #21205",
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a5219c0_5f1d52bc",
        "filename": "src/testing/match_test.go",
        "patchSetId": 4
      },
      "lineNbr": 242,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-08-01T13:57:10Z",
      "side": 1,
      "message": "Why don\u0027t you also a test with no // Output line.",
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f984e393_6e1a0b36",
        "filename": "src/testing/match_test.go",
        "patchSetId": 4
      },
      "lineNbr": 257,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-08-01T13:57:10Z",
      "side": 1,
      "message": "You should restore this flag when the test is over.  Before the loop write something like\n    defer flag.Set(\"test.list\", flag.Lookup(\"test.list\").String())",
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11725307_aaff84b7",
        "filename": "src/testing/match_test.go",
        "patchSetId": 4
      },
      "lineNbr": 261,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-08-01T13:57:10Z",
      "side": 1,
      "message": "\"-test.list\u003d%s returned %q, expected %s\", tc.listFlag, results, tc.output",
      "range": {
        "startLine": 261,
        "startChar": 13,
        "endLine": 261,
        "endChar": 42
      },
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "410ff4ad_fdbb8bfc",
        "filename": "src/testing/match_test.go",
        "patchSetId": 4
      },
      "lineNbr": 261,
      "author": {
        "id": 15570
      },
      "writtenOn": "2017-08-01T14:46:34Z",
      "side": 1,
      "message": "Thanks, I couldn\u0027t come up with a good format.\nI\u0027ll change it.",
      "parentUuid": "11725307_aaff84b7",
      "range": {
        "startLine": 261,
        "startChar": 13,
        "endLine": 261,
        "endChar": 42
      },
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bc390ab_fcfc1bd1",
        "filename": "src/testing/testing.go",
        "patchSetId": 4
      },
      "lineNbr": 919,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-08-01T13:57:10Z",
      "side": 1,
      "message": "for _, n :\u003d range testNames {\n    fmt.Println(n)\n}",
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0ce2b4d_38ef506f",
        "filename": "src/testing/testing.go",
        "patchSetId": 4
      },
      "lineNbr": 964,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-08-01T13:57:10Z",
      "side": 1,
      "message": "Is there a reason that you are changing this function so much?  It would be nice to get this into 1.9, but for that the change should be minimal.",
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a36073a2_235cb268",
        "filename": "src/testing/testing.go",
        "patchSetId": 4
      },
      "lineNbr": 964,
      "author": {
        "id": 6005
      },
      "writtenOn": "2017-08-01T16:48:27Z",
      "side": 1,
      "message": "Ian, in case you didn\u0027t see, this CL is an (unintended) replacement for CL 52030. That one was a minimal fix (1 line change), but the code review feedback was \"can you add a test too?\"\n\nThe previous version of listTests isn\u0027t very testable: it prints to os.Stdout using fmt.Println and does os.Exit(1) on error in matchString.\n\nIt\u0027s still possible to test it by temporarily overriding os.Stdout (that fmt.Println prints to) with a temp file, then comparing its contents with the expected list, and restoring os.Stdout to its original value, but it\u0027s hard to recommend that approach.\n\nOne other idea I have to make the change smaller (at the expense of a harder to write test) is to change signature to take an io.Writer to write to. Then the test can write into a *bytes.Buffer, while the real code can pass os.Stdout. But, that also seems worse to me than the current change to make listTests return results to its caller for further processing.\n\nAt least that\u0027s my understanding, perhaps Seiji has other comments on your question.",
      "parentUuid": "d0ce2b4d_38ef506f",
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c9a447c_21689a0e",
        "filename": "src/testing/testing.go",
        "patchSetId": 4
      },
      "lineNbr": 964,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-08-01T21:11:45Z",
      "side": 1,
      "message": "I see.  Thanks.\n\nAnother way to test this code would be to add something to cmd/go/go_test.go.  That has the framework to test the output of the go command.",
      "parentUuid": "a36073a2_235cb268",
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98515e00_deac47e9",
        "filename": "src/testing/testing.go",
        "patchSetId": 4
      },
      "lineNbr": 964,
      "author": {
        "id": 15570
      },
      "writtenOn": "2017-08-02T01:19:20Z",
      "side": 1,
      "message": "There\u0027s no difference to my intention.\nHowever, I didn\u0027t know about cmd/go/go_test.go, so I\u0027ll try to add the tests there.\nThe idea seems efficient for refactoring.",
      "parentUuid": "2c9a447c_21689a0e",
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8e25155_fd2a68a0",
        "filename": "src/testing/testing.go",
        "patchSetId": 4
      },
      "lineNbr": 967,
      "author": {
        "id": 5206
      },
      "writtenOn": "2017-08-01T13:57:10Z",
      "side": 1,
      "message": "return nil, err",
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65b4b8b1_034c5c57",
        "filename": "src/testing/testing.go",
        "patchSetId": 4
      },
      "lineNbr": 967,
      "author": {
        "id": 6005
      },
      "writtenOn": "2017-08-01T16:48:27Z",
      "side": 1,
      "message": "Instead of returning err without context here, you should add context here, where it makes sense:\n\n    return nil, fmt.Errorf(\"invalid regexp in -test.list (%q): %s\", *matchList, err)\n\nThen the code in func (m *M) Run() int can be modified to do this:\n\n\ttestNames, err :\u003d listTests(m.deps.MatchString, m.tests, m.benchmarks, m.examples)\n\tif err !\u003d nil {\n\t\tfmt.Fprintf(os.Stderr, \"testing: %v\\n\", err)\n\t\tos.Exit(1)\n\t}\n\nOtherwise, printing the error details (the fact it\u0027s a problem with -test.list regexp) is separated far away from where the actual error occurs, so it\u0027s both hard to read, and easy for it to get out of sync later if other errors are returned from listTests.",
      "parentUuid": "d8e25155_fd2a68a0",
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbc9844f_f33d93e0",
        "filename": "src/testing/testing.go",
        "patchSetId": 4
      },
      "lineNbr": 978,
      "author": {
        "id": 6005
      },
      "writtenOn": "2017-08-01T16:48:27Z",
      "side": 1,
      "message": "You forgot to delete this fmt.Println line here.",
      "range": {
        "startLine": 978,
        "startChar": 3,
        "endLine": 978,
        "endChar": 26
      },
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea498df4_484dc9e0",
        "filename": "src/testing/testing.go",
        "patchSetId": 4
      },
      "lineNbr": 978,
      "author": {
        "id": 15570
      },
      "writtenOn": "2017-08-02T01:19:20Z",
      "side": 1,
      "message": "omg, so sorry.",
      "parentUuid": "bbc9844f_f33d93e0",
      "range": {
        "startLine": 978,
        "startChar": 3,
        "endLine": 978,
        "endChar": 26
      },
      "revId": "957eb506c5d1bb24646fd5ab8587a8f998b07f04",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}