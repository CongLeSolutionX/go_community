{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a71bd2bc_fcc453fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 28783
      },
      "writtenOn": "2021-09-08T18:56:53Z",
      "side": 1,
      "message": "Thanks for the review, Keith.  Please take a look at the new changes if you have time, but I will also get Matthew to review, since he has touched a lot of the relevant code.\n",
      "revId": "e08413c5b79e3e93734d104a17ef65591de9b9d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4db1f8f2_18a0ef42",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-09-08T18:57:14Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003de08413c5",
      "tag": "autogenerated:trybots~beginning",
      "revId": "e08413c5b79e3e93734d104a17ef65591de9b9d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "780287e1_38d59e75",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5200
      },
      "writtenOn": "2021-09-08T19:10:14Z",
      "side": 1,
      "message": "Looks good, thanks for getting all that worked out.\n",
      "revId": "e08413c5b79e3e93734d104a17ef65591de9b9d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd944743_6c30fbac",
        "filename": "src/cmd/compile/internal/noder/unified_test.go",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5200
      },
      "writtenOn": "2021-09-08T19:10:14Z",
      "side": 1,
      "message": "Needs a TODO, issue link, or something.",
      "revId": "e08413c5b79e3e93734d104a17ef65591de9b9d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "915b2d38_dcc0f0d3",
        "filename": "src/cmd/compile/internal/noder/unified_test.go",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-09-08T19:14:17Z",
      "side": 1,
      "message": "Does this CL break this test? If so, that seems suspicious.",
      "revId": "e08413c5b79e3e93734d104a17ef65591de9b9d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c79ee6fc_311b940a",
        "filename": "src/cmd/compile/internal/typecheck/iexport.go",
        "patchSetId": 2
      },
      "lineNbr": 1461,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-09-08T19:14:17Z",
      "side": 1,
      "message": "Below Init list is only written out for ir.OAS when Y!\u003dnil, but there\u0027s no analogous check for that here?",
      "range": {
        "startLine": 1461,
        "startChar": 6,
        "endLine": 1461,
        "endChar": 12
      },
      "revId": "e08413c5b79e3e93734d104a17ef65591de9b9d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4d99153_f663cbe1",
        "filename": "src/cmd/compile/internal/typecheck/iexport.go",
        "patchSetId": 2
      },
      "lineNbr": 1508,
      "author": {
        "id": 5440
      },
      "writtenOn": "2021-09-08T19:14:17Z",
      "side": 1,
      "message": "Please write out Init before X, but probably after Pos. It semantically before X, and it makes me nervous any time we traverse the AST in non-semantic order. (We also delta encode positions, so serializing the AST out of order implies a less efficient encoding.)\n\nSame comments below.",
      "revId": "e08413c5b79e3e93734d104a17ef65591de9b9d5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}