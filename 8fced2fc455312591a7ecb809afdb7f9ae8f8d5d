{
  "comments": [
    {
      "key": {
        "uuid": "7c871bd2_c1a562ac",
        "filename": "src/encoding/json/decode_test.go",
        "patchSetId": 2
      },
      "lineNbr": 1626,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-05-23T14:44:04Z",
      "side": 1,
      "message": "@rsc I think you misread the CL, \"True\" errors and so does \"False\" just like we expect, keeping in line with the old behavior.",
      "revId": "8fced2fc455312591a7ecb809afdb7f9ae8f8d5d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "974d8a5c_d4cdd242",
        "filename": "src/encoding/json/decode_test.go",
        "patchSetId": 2
      },
      "lineNbr": 1626,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-05-23T14:52:41Z",
      "side": 1,
      "message": "OK, but it looks like ttt does not error.",
      "parentUuid": "7c871bd2_c1a562ac",
      "revId": "8fced2fc455312591a7ecb809afdb7f9ae8f8d5d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c98df32_7eb751e4",
        "filename": "src/encoding/json/decode_test.go",
        "patchSetId": 2
      },
      "lineNbr": 1626,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-05-23T14:58:32Z",
      "side": 1,
      "message": "Ah I see, so it isn\u0027t obvious. I commented below on the line where the check for tt.mustErr is.",
      "parentUuid": "974d8a5c_d4cdd242",
      "revId": "8fced2fc455312591a7ecb809afdb7f9ae8f8d5d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "974d8a5c_b4f12e7c",
        "filename": "src/encoding/json/decode_test.go",
        "patchSetId": 2
      },
      "lineNbr": 1626,
      "author": {
        "id": 5056
      },
      "writtenOn": "2016-05-23T15:05:56Z",
      "side": 1,
      "message": "What\u0027s not obvious to me is why (for example) tests 2-5,9-12 look different from tests 6-8. They should all expect an error because none of them say \"true\" or \"false\". But only tests 6-8 says mustErr: true. It looks like this code is drawing a distinction between malformed upper case booleans and malformed lower case booleans. That\u0027s not right.",
      "parentUuid": "1c98df32_7eb751e4",
      "revId": "8fced2fc455312591a7ecb809afdb7f9ae8f8d5d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcf7d3e0_06eb1cb2",
        "filename": "src/encoding/json/decode_test.go",
        "patchSetId": 2
      },
      "lineNbr": 1626,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-05-25T07:48:06Z",
      "side": 1,
      "message": "Gotcha. In the next cycle, I\u0027ll switch them up to just test for one attribute. Currently they test a mix of other attributes ie `Allowed`, `Name` and `Examined` to ensure that we can always Unmarshal with a mix of values but for sure in the next iteration I\u0027ll explicitly make them just test true or false to match your suggestion.",
      "parentUuid": "974d8a5c_b4f12e7c",
      "revId": "8fced2fc455312591a7ecb809afdb7f9ae8f8d5d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c98df32_bea5d9ac",
        "filename": "src/encoding/json/decode_test.go",
        "patchSetId": 2
      },
      "lineNbr": 1650,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-05-23T14:58:32Z",
      "side": 1,
      "message": "@rsc please see here where we check that we expect an error. I guess I\u0027ll probably have to reword the CL to make it clearer. When we get to review time, any kinds hints on how I could improve it for readability?",
      "revId": "8fced2fc455312591a7ecb809afdb7f9ae8f8d5d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}