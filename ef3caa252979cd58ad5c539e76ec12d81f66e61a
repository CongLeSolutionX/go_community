{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f600bae3_11db4a55",
        "filename": "src/cmd/compile/internal/ssa/gen/generic.rules",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-06-09T20:45:07Z",
      "side": 1,
      "message": "I\u0027d rather use !math.IsNaN(floorF(c)), it documents itself better. (See Sqrt constant-folding rule below.)",
      "range": {
        "startLine": 59,
        "startChar": 32,
        "endLine": 59,
        "endChar": 54
      },
      "revId": "ef3caa252979cd58ad5c539e76ec12d81f66e61a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60fb03b0_daf24e8d",
        "filename": "src/cmd/compile/internal/ssa/gen/generic.rules",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-06-09T20:50:53Z",
      "side": 1,
      "message": "In fact, now that I think about it, we don\u0027t need this test at all. c is guaranteed to not be NaN, and math.Floor and friends never make a NaN from a non-NaN.",
      "parentUuid": "f600bae3_11db4a55",
      "range": {
        "startLine": 59,
        "startChar": 32,
        "endLine": 59,
        "endChar": 54
      },
      "revId": "ef3caa252979cd58ad5c539e76ec12d81f66e61a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e915349_d9532fcd",
        "filename": "src/cmd/compile/internal/ssa/gen/generic.rules",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 55763
      },
      "writtenOn": "2022-06-10T05:39:56Z",
      "side": 1,
      "message": "Didnt knew constants couldnt be NaN. That neat.\n\nDone",
      "parentUuid": "60fb03b0_daf24e8d",
      "range": {
        "startLine": 59,
        "startChar": 32,
        "endLine": 59,
        "endChar": 54
      },
      "revId": "ef3caa252979cd58ad5c539e76ec12d81f66e61a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d7b1315_1dce5d79",
        "filename": "src/cmd/compile/internal/ssa/gen/generic.rules",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 5200
      },
      "writtenOn": "2022-06-09T20:45:07Z",
      "side": 1,
      "message": "These helper functions aren\u0027t really necessary. Just call math.Ceil(c) directly.",
      "range": {
        "startLine": 60,
        "startChar": 32,
        "endLine": 60,
        "endChar": 37
      },
      "revId": "ef3caa252979cd58ad5c539e76ec12d81f66e61a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33629aa2_03714306",
        "filename": "src/cmd/compile/internal/ssa/gen/generic.rules",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 55763
      },
      "writtenOn": "2022-06-10T05:39:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d7b1315_1dce5d79",
      "range": {
        "startLine": 60,
        "startChar": 32,
        "endLine": 60,
        "endChar": 37
      },
      "revId": "ef3caa252979cd58ad5c539e76ec12d81f66e61a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}