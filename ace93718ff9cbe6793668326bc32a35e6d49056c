{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e4623888_8b585ce6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-10-24T09:43:18Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dace93718\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "ace93718ff9cbe6793668326bc32a35e6d49056c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bcdb202_22ab4950",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-10-24T09:43:18Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "6932e27a_e40a697f",
      "tag": "autogenerated:trybots~beginning",
      "revId": "ace93718ff9cbe6793668326bc32a35e6d49056c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f863513d_047adb0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-10-24T09:53:10Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "e4623888_8b585ce6",
      "tag": "autogenerated:trybots~happy",
      "revId": "ace93718ff9cbe6793668326bc32a35e6d49056c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4e85b12_cc920cac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 14020
      },
      "writtenOn": "2023-11-01T19:16:31Z",
      "side": 1,
      "message": "Have you run compilebench on this set of changes to see what sort of impact it has on compile and and on export data size? Thanks.",
      "revId": "ace93718ff9cbe6793668326bc32a35e6d49056c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da5cb8ce_7c971c49",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 61439
      },
      "writtenOn": "2023-11-07T08:20:02Z",
      "side": 1,
      "message": "I refer to [this website](https://pkg.go.dev/golang.org/x/tools@v0.14.0/cmd/compilebench) to make a comparison between the master branch and my branch, and the comparison results are as follows. It doesn\u0027t make the compilation slow, and it doesn\u0027t make the binary too big.\n```shell\n$ benchstat old.txt new.txt \n                         │   old.txt    │               new.txt               │\n                         │    sec/op    │    sec/op     vs base               │\nTemplate                   210.5m ±  6%   215.3m ± 14%       ~ (p\u003d0.436 n\u003d10)\nUnicode                    154.6m ±  6%   162.2m ± 20%       ~ (p\u003d0.481 n\u003d10)\nGoTypes                     1.402 ±  9%    1.393 ±  7%       ~ (p\u003d0.684 n\u003d10)\nCompiler                   133.6m ±  9%   136.9m ±  9%       ~ (p\u003d0.853 n\u003d10)\nSSA                         10.89 ±  7%    10.83 ± 11%       ~ (p\u003d0.739 n\u003d10)\nFlate                      125.0m ± 12%   114.1m ± 14%       ~ (p\u003d0.105 n\u003d10)\nGoParser                   235.7m ± 11%   252.8m ± 13%       ~ (p\u003d0.529 n\u003d10)\nReflect                    509.5m ± 10%   517.4m ± 22%       ~ (p\u003d0.579 n\u003d10)\nTar                        196.9m ± 10%   188.6m ±  7%       ~ (p\u003d0.393 n\u003d10)\nXML                        240.7m ± 11%   228.3m ± 15%       ~ (p\u003d0.247 n\u003d10)\nLinkCompiler               785.4m ±  9%   815.2m ±  7%       ~ (p\u003d0.165 n\u003d10)\nExternalLinkCompiler        2.382 ±  7%    2.265 ± 19%       ~ (p\u003d0.353 n\u003d10)\nLinkWithoutDebugCompiler   499.8m ±  4%   496.4m ±  6%       ~ (p\u003d0.631 n\u003d10)\nStdCmd                      50.59 ±  2%    51.41 ±  5%       ~ (p\u003d0.315 n\u003d10)\ngeomean                    646.6m         645.6m        -0.16%\n\n                         │   old.txt    │               new.txt               │\n                         │ user-sec/op  │ user-sec/op   vs base               │\nTemplate                   445.9m ±  4%   463.8m ± 10%       ~ (p\u003d0.481 n\u003d10)\nUnicode                    159.4m ± 12%   163.0m ± 20%       ~ (p\u003d0.739 n\u003d10)\nGoTypes                     3.923 ±  5%    3.919 ±  5%       ~ (p\u003d0.912 n\u003d10)\nCompiler                   165.5m ±  8%   164.4m ±  7%       ~ (p\u003d0.529 n\u003d10)\nSSA                         32.96 ±  3%    32.95 ±  8%       ~ (p\u003d0.631 n\u003d10)\nFlate                      253.9m ± 14%   249.7m ± 10%       ~ (p\u003d0.631 n\u003d10)\nGoParser                   530.9m ±  6%   540.2m ± 11%       ~ (p\u003d0.247 n\u003d10)\nReflect                     1.265 ±  7%    1.266 ± 11%       ~ (p\u003d0.579 n\u003d10)\nTar                        412.3m ±  7%   391.6m ±  6%       ~ (p\u003d0.105 n\u003d10)\nXML                        528.1m ± 11%   512.3m ±  9%       ~ (p\u003d0.353 n\u003d10)\nLinkCompiler                1.212 ±  8%    1.250 ±  7%       ~ (p\u003d0.190 n\u003d10)\nExternalLinkCompiler        2.520 ±  6%    2.448 ± 19%       ~ (p\u003d0.393 n\u003d10)\nLinkWithoutDebugCompiler   565.2m ±  4%   575.4m ±  6%       ~ (p\u003d0.796 n\u003d10)\ngeomean                    836.0m         835.6m        -0.05%\n\n          │   old.txt    │                new.txt                │\n          │  text-bytes  │  text-bytes   vs base                 │\nHelloSize   793.5Ki ± 0%   793.5Ki ± 0%       ~ (p\u003d1.000 n\u003d10) ¹\nCmdGoSize   10.77Mi ± 0%   10.77Mi ± 0%       ~ (p\u003d1.000 n\u003d10) ¹\ngeomean     2.889Mi        2.889Mi       +0.00%\n¹ all samples are equal\n\n          │   old.txt    │                new.txt                │\n          │  data-bytes  │  data-bytes   vs base                 │\nHelloSize   14.36Ki ± 0%   14.36Ki ± 0%       ~ (p\u003d1.000 n\u003d10) ¹\nCmdGoSize   313.3Ki ± 0%   313.3Ki ± 0%       ~ (p\u003d1.000 n\u003d10) ¹\ngeomean     67.07Ki        67.07Ki       +0.00%\n¹ all samples are equal\n\n          │   old.txt    │                new.txt                │\n          │  bss-bytes   │  bss-bytes    vs base                 │\nHelloSize   199.4Ki ± 0%   199.4Ki ± 0%       ~ (p\u003d1.000 n\u003d10) ¹\nCmdGoSize   231.2Ki ± 0%   231.2Ki ± 0%       ~ (p\u003d1.000 n\u003d10) ¹\ngeomean     214.7Ki        214.7Ki       +0.00%\n¹ all samples are equal\n\n          │   old.txt    │                new.txt                │\n          │  exe-bytes   │  exe-bytes    vs base                 │\nHelloSize   1.237Mi ± 0%   1.237Mi ± 0%       ~ (p\u003d1.000 n\u003d10) ¹\nCmdGoSize   16.10Mi ± 0%   16.10Mi ± 0%  -0.00% (p\u003d0.000 n\u003d10)\ngeomean     4.462Mi        4.462Mi       -0.00%\n¹ all samples are equal\n```",
      "parentUuid": "e4e85b12_cc920cac",
      "revId": "ace93718ff9cbe6793668326bc32a35e6d49056c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}