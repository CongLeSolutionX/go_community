{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9ddf05b2_baec6759",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 32
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-15T19:10:38Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d5461e725\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5036bdb4_43380787",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 32
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-03-15T19:19:47Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* freebsd-amd64-13_0\n",
      "parentUuid": "9ddf05b2_baec6759",
      "tag": "autogenerated:trybots~happy",
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bac0b6c_9f7da051",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 32
      },
      "lineNbr": 0,
      "author": {
        "id": 50449
      },
      "writtenOn": "2023-03-15T19:25:01Z",
      "side": 1,
      "message": "Ready for review.",
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2233051_6b2fef3d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 32
      },
      "lineNbr": 0,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-03-17T15:07:53Z",
      "side": 1,
      "message": "LGTM. I\u0027d like Austin to take a look at the use of inlineUnwinder.",
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52ee12d3_394a33ee",
        "filename": "src/runtime/trace.go",
        "patchSetId": 32
      },
      "lineNbr": 94,
      "author": {
        "id": 57733
      },
      "writtenOn": "2023-03-17T20:53:49Z",
      "side": 1,
      "message": "Should this be increased by 1, since one of the entries in the stack buffer is now going to be taken up by the stack sentinel/skip value?",
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a618c08c_f0b50b6a",
        "filename": "src/runtime/trace.go",
        "patchSetId": 32
      },
      "lineNbr": 94,
      "author": {
        "id": 50449
      },
      "writtenOn": "2023-03-18T19:48:55Z",
      "side": 1,
      "message": "If the goal is to keep the maximum stack depth exactly as before, then yes. But I\u0027m not sure if that matters, since the value is kind of arbitrary to begin with.\n\nI don\u0027t feel strongly about it. Do you?",
      "parentUuid": "52ee12d3_394a33ee",
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92a592d4_f435679b",
        "filename": "src/runtime/trace.go",
        "patchSetId": 32
      },
      "lineNbr": 863,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-03-17T15:07:53Z",
      "side": 1,
      "message": "Comment noting that profile stacks are already expanded?\n\nI suspect we\u0027re going to change how profiling handles stacks and forget about this tracing code.",
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcf439b0_f764950b",
        "filename": "src/runtime/trace.go",
        "patchSetId": 32
      },
      "lineNbr": 897,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-03-17T15:07:53Z",
      "side": 1,
      "message": "Something is off in the grammar here.",
      "range": {
        "startLine": 897,
        "startChar": 19,
        "endLine": 897,
        "endChar": 53
      },
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64b524e1_0ec00e69",
        "filename": "src/runtime/trace.go",
        "patchSetId": 32
      },
      "lineNbr": 897,
      "author": {
        "id": 57733
      },
      "writtenOn": "2023-03-17T20:53:49Z",
      "side": 1,
      "message": "FWIW, this isn\u0027t just a special workaround for mcall--it works for systemstack too, because in both cases it basically matches the behavior of gcallers:\n\n* Start with the PC saved just prior to the stack transition\n* Get the rest of the call stack by unwinding from the stack frame prior to the transition\n\ngcallers reconstructs the address of the frame using the saved PC and SP, instead of using sched.bp. We can use sched.bp now because CL 472195 and CL 476235 make it point to the right frame.",
      "range": {
        "startLine": 895,
        "startChar": 3,
        "endLine": 897,
        "endChar": 54
      },
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c784fa9_335bad39",
        "filename": "src/runtime/trace.go",
        "patchSetId": 32
      },
      "lineNbr": 897,
      "author": {
        "id": 50449
      },
      "writtenOn": "2023-03-18T19:48:55Z",
      "side": 1,
      "message": "Thanks for noticing. I rewrote the comment.",
      "parentUuid": "fcf439b0_f764950b",
      "range": {
        "startLine": 897,
        "startChar": 19,
        "endLine": 897,
        "endChar": 53
      },
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8a27445_4da6b185",
        "filename": "src/runtime/trace.go",
        "patchSetId": 32
      },
      "lineNbr": 899,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-03-17T15:07:53Z",
      "side": 1,
      "message": "Could you document in a function comment that pcBuf must be traceStackSize?",
      "range": {
        "startLine": 899,
        "startChar": 57,
        "endLine": 899,
        "endChar": 61
      },
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "425dd1a6_d969f918",
        "filename": "src/runtime/trace.go",
        "patchSetId": 32
      },
      "lineNbr": 899,
      "author": {
        "id": 50449
      },
      "writtenOn": "2023-03-18T19:48:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8a27445_4da6b185",
      "range": {
        "startLine": 899,
        "startChar": 57,
        "endLine": 899,
        "endChar": 61
      },
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6969d529_aa29d6ef",
        "filename": "src/runtime/trace.go",
        "patchSetId": 32
      },
      "lineNbr": 925,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-03-17T15:07:53Z",
      "side": 1,
      "message": "Please put the //go:nosplit pragma on its own line, separate from the comment explaining it. This is clever, but also looks like arguments to the nosplit pragma.",
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ba95842_61dbf2df",
        "filename": "src/runtime/trace.go",
        "patchSetId": 32
      },
      "lineNbr": 925,
      "author": {
        "id": 50449
      },
      "writtenOn": "2023-03-18T19:48:55Z",
      "side": 1,
      "message": "Yeah, I definitely tried to be cute with that ðŸ˜…. Moved the comment as suggested.",
      "parentUuid": "6969d529_aa29d6ef",
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9272b172_c71be27b",
        "filename": "src/runtime/trace.go",
        "patchSetId": 32
      },
      "lineNbr": 1488,
      "author": {
        "id": 12120
      },
      "writtenOn": "2023-03-17T15:07:53Z",
      "side": 1,
      "message": "logicalStackSentinel",
      "range": {
        "startLine": 1488,
        "startChar": 36,
        "endLine": 1488,
        "endChar": 47
      },
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45d7ff66_9b784411",
        "filename": "src/runtime/trace.go",
        "patchSetId": 32
      },
      "lineNbr": 1488,
      "author": {
        "id": 50449
      },
      "writtenOn": "2023-03-18T19:48:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9272b172_c71be27b",
      "range": {
        "startLine": 1488,
        "startChar": 36,
        "endLine": 1488,
        "endChar": 47
      },
      "revId": "5461e725839cc9187baab5d33c3e12302453a389",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}