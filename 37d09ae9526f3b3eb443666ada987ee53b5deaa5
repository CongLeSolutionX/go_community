{
  "comments": [
    {
      "key": {
        "uuid": "53305d12_429a52f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-06-29T16:42:22Z",
      "side": 1,
      "message": "cmd/compile/ssa: please",
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53305d12_229f4ee4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-06-29T16:42:22Z",
      "side": 1,
      "message": "Do these TODOs belong in the TODO file?",
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73a3a180_c6e9e4a9",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 1085,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-06-29T16:42:22Z",
      "side": 1,
      "message": "amd64\u0027s clearfat doesn\u0027t use MOVW. Any idea why? Just an oversight?",
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3ae0d65_49fd057e",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 1085,
      "author": {
        "id": 5310
      },
      "writtenOn": "2015-06-29T19:45:19Z",
      "side": 1,
      "message": "Haven\u0027t got a clue.",
      "parentUuid": "73a3a180_c6e9e4a9",
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3333e921_c4acb07b",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 1149,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-06-29T16:42:22Z",
      "side": 1,
      "message": "// movZero generates...",
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3ae0d65_69024115",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 1149,
      "author": {
        "id": 5310
      },
      "writtenOn": "2015-06-29T19:45:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3333e921_c4acb07b",
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "133a65f6_43b5381d",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 1152,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-06-29T16:42:22Z",
      "side": 1,
      "message": "Add a TODO to use ZR on architectures with a zero register?",
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3ae0d65_09070d24",
        "filename": "src/cmd/compile/internal/gc/ssa.go",
        "patchSetId": 1
      },
      "lineNbr": 1152,
      "author": {
        "id": 5310
      },
      "writtenOn": "2015-06-29T19:45:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "133a65f6_43b5381d",
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "133a65f6_23bab40e",
        "filename": "src/cmd/compile/internal/ssa/func.go",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-06-29T16:42:22Z",
      "side": 1,
      "message": "Update copy/pasted doc comment.",
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3a99960_e80dcb40",
        "filename": "src/cmd/compile/internal/ssa/func.go",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 5310
      },
      "writtenOn": "2015-06-29T19:45:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "133a65f6_23bab40e",
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "734801a1_bb7d4795",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64.rules",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-06-27T21:11:59Z",
      "side": 1,
      "message": "What if size is not a multiple of 8?",
      "range": {
        "startLine": 145,
        "startChar": 45,
        "endLine": 145,
        "endChar": 53
      },
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3ae0d65_a642a65b",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64.rules",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 5310
      },
      "writtenOn": "2015-06-29T13:12:24Z",
      "side": 1,
      "message": "Need to figure out what happens. I think I might have to lower the value into (MOVZero [remainder] (offset destptr) (REPSTOSQ destptr mem)), but I don\u0027t think the rewriter will recursively rewrite MOVZero [0] into a copy.",
      "parentUuid": "734801a1_bb7d4795",
      "range": {
        "startLine": 145,
        "startChar": 45,
        "endLine": 145,
        "endChar": 53
      },
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "734801a1_1b9f1be4",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64.rules",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-06-29T13:18:38Z",
      "side": 1,
      "message": "You can add a (MOVZero [0] x) -\u003e (Copy x) rule.  The rewriter does handle recursive rewrites, it keeps applying rules until no more fire.\n\nOr you could add two rules, one with a size%8 \u003d\u003d 0 condition and one with a size%8 !\u003d 0 condition.",
      "parentUuid": "d3ae0d65_a642a65b",
      "range": {
        "startLine": 145,
        "startChar": 45,
        "endLine": 145,
        "endChar": 53
      },
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "734801a1_9b7a0b99",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-06-27T21:11:59Z",
      "side": 1,
      "message": "I\u0027d rather use MOVzero or MOVXzero to distinguish the opcode from the modifier.  MOVZ sounds like zero extension.",
      "range": {
        "startLine": 156,
        "startChar": 10,
        "endLine": 156,
        "endChar": 17
      },
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3ae0d65_e6489e81",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 5310
      },
      "writtenOn": "2015-06-29T13:12:24Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "734801a1_9b7a0b99",
      "range": {
        "startLine": 156,
        "startChar": 10,
        "endLine": 156,
        "endChar": 17
      },
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "734801a1_fb77cfae",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-06-27T21:11:59Z",
      "side": 1,
      "message": "Since the instruction takes the count in a register, that count should be an argument to this instruction, not a aux constant.  The register allocator will put the constant into a register for us.\n\nMOVZero is an exception, but I\u0027d like to keep lowered SSA ops encoding exactly one machine instruction as often as we can.\n\nI don\u0027t see REPSTOSQ implemented in ssa.go.",
      "range": {
        "startLine": 157,
        "startChar": 10,
        "endLine": 157,
        "endChar": 18
      },
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3ae0d65_86452a68",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 5310
      },
      "writtenOn": "2015-06-29T13:12:24Z",
      "side": 1,
      "message": "I tried to implement this, but the lack of register clobbering in regalloc means that it doesn\u0027t quite work yet.",
      "parentUuid": "734801a1_fb77cfae",
      "range": {
        "startLine": 157,
        "startChar": 10,
        "endLine": 157,
        "endChar": 18
      },
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "734801a1_7b945fc4",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-06-29T13:18:38Z",
      "side": 1,
      "message": "Ok, then plop a TODO in somewhere.",
      "parentUuid": "d3ae0d65_86452a68",
      "range": {
        "startLine": 157,
        "startChar": 10,
        "endLine": 157,
        "endChar": 18
      },
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53305d12_02884aa5",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-06-29T16:42:22Z",
      "side": 1,
      "message": "And be sure that all.bash still passes. If it doesn\u0027t, the TODO might have to be a call to Unimplementedf.",
      "parentUuid": "734801a1_7b945fc4",
      "range": {
        "startLine": 157,
        "startChar": 10,
        "endLine": 157,
        "endChar": 18
      },
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3ae0d65_290c4945",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 5310
      },
      "writtenOn": "2015-06-29T19:45:19Z",
      "side": 1,
      "message": "Not an issue here, but the new calling rules for canSSA changed. Removed a fatal there.",
      "parentUuid": "53305d12_02884aa5",
      "range": {
        "startLine": 157,
        "startChar": 10,
        "endLine": 157,
        "endChar": 18
      },
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "133a65f6_63c4bc85",
        "filename": "src/cmd/compile/internal/ssa/gen/genericOps.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 5143
      },
      "writtenOn": "2015-06-29T16:42:22Z",
      "side": 1,
      "message": "a/Arg0/arg0/ for consistency",
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3ae0d65_c9101558",
        "filename": "src/cmd/compile/internal/ssa/gen/genericOps.go",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 5310
      },
      "writtenOn": "2015-06-29T19:45:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "133a65f6_63c4bc85",
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}