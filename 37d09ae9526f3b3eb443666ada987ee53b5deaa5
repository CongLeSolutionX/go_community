{
  "comments": [
    {
      "key": {
        "uuid": "734801a1_bb7d4795",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64.rules",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-06-27T21:11:59Z",
      "side": 1,
      "message": "What if size is not a multiple of 8?",
      "range": {
        "startLine": 145,
        "startChar": 45,
        "endLine": 145,
        "endChar": 53
      },
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "734801a1_9b7a0b99",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 156,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-06-27T21:11:59Z",
      "side": 1,
      "message": "I\u0027d rather use MOVzero or MOVXzero to distinguish the opcode from the modifier.  MOVZ sounds like zero extension.",
      "range": {
        "startLine": 156,
        "startChar": 10,
        "endLine": 156,
        "endChar": 17
      },
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "734801a1_fb77cfae",
        "filename": "src/cmd/compile/internal/ssa/gen/AMD64Ops.go",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 5200
      },
      "writtenOn": "2015-06-27T21:11:59Z",
      "side": 1,
      "message": "Since the instruction takes the count in a register, that count should be an argument to this instruction, not a aux constant.  The register allocator will put the constant into a register for us.\n\nMOVZero is an exception, but I\u0027d like to keep lowered SSA ops encoding exactly one machine instruction as often as we can.\n\nI don\u0027t see REPSTOSQ implemented in ssa.go.",
      "range": {
        "startLine": 157,
        "startChar": 10,
        "endLine": 157,
        "endChar": 18
      },
      "revId": "37d09ae9526f3b3eb443666ada987ee53b5deaa5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}