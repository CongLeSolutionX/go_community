{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b31ebcb0_c7bd0800",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-07-25T17:40:43Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "f04f5ea0_f6682488",
      "tag": "autogenerated:trybots~beginning",
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58cb8ca6_f70ba925",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-07-25T17:40:43Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d8b395c00\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e7bd062_c2769101",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-07-25T17:56:23Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "58cb8ca6_f70ba925",
      "tag": "autogenerated:trybots~happy",
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12916243_e76399ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "this is awesome! the comments are mostly minor, or could be done in follow-up CLs. feel free to submit whenever you\u0027re ready.",
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3e866da_f587fe67",
        "filename": "src/runtime/mbitmap.go",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "this was a little hard to parse (the old text was too). maybe put start in quotes? (\"start\") then it\u0027s a variable.",
      "range": {
        "startLine": 20,
        "startChar": 61,
        "endLine": 20,
        "endChar": 66
      },
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74a7fd59_dc23e203",
        "filename": "src/runtime/mbitmap.go",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "do you mean to say that oblets will always be fully scanned (i.e. only the full object has a noMorePtrs bit for its overall tail?",
      "range": {
        "startLine": 33,
        "startChar": 16,
        "endLine": 33,
        "endChar": 30
      },
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19972498_ae303267",
        "filename": "src/runtime/mbitmap.go",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "I would appreciate more clarity that this specifically means its not zeroed.",
      "range": {
        "startLine": 35,
        "startChar": 38,
        "endLine": 35,
        "endChar": 48
      },
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0a4f120_4f831aca",
        "filename": "src/runtime/mbitmap.go",
        "patchSetId": 4
      },
      "lineNbr": 387,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "nit: extra period",
      "range": {
        "startLine": 387,
        "startChar": 68,
        "endLine": 387,
        "endChar": 69
      },
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcbbbfba_4c198080",
        "filename": "src/runtime/mbitmap.go",
        "patchSetId": 4
      },
      "lineNbr": 399,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "\"must ensure the range [addr, addr+size) is in an allocated span\" maybe?",
      "range": {
        "startLine": 399,
        "startChar": 19,
        "endLine": 399,
        "endChar": 30
      },
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b30b0921_ab996b35",
        "filename": "src/runtime/mbitmap.go",
        "patchSetId": 4
      },
      "lineNbr": 587,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "this looked a little odd to me for a moment. maybe parenthesize the subtraction so it\u0027s clearer that this is a length? same thing below.\n\nmaybe \"src + (addr-dst)\". this is very minor though. up to you.",
      "range": {
        "startLine": 587,
        "startChar": 37,
        "endLine": 587,
        "endChar": 47
      },
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "969240ac_5e24c573",
        "filename": "src/runtime/mbitmap.go",
        "patchSetId": 4
      },
      "lineNbr": 719,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "marker",
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24d2a1e7_4e41a0e9",
        "filename": "src/runtime/mbitmap.go",
        "patchSetId": 4
      },
      "lineNbr": 797,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "this lookup is kind of expensive. if it\u0027s in the cache, I suppose it\u0027s fine? there may be a small win here to keep a pointer to the arena in writeHeapBits and only do the lookup when necessary.",
      "range": {
        "startLine": 796,
        "startChar": 0,
        "endLine": 797,
        "endChar": 38
      },
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a5977df_fa13c012",
        "filename": "src/runtime/mbitmap.go",
        "patchSetId": 4
      },
      "lineNbr": 800,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "can I suggest a signpost comment about this being safe b/c the bitmap words are always aligned to a span, and manipulating heap bits for a span is always thread-local?",
      "range": {
        "startLine": 800,
        "startChar": 1,
        "endLine": 800,
        "endChar": 41
      },
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d14bca49_ece0db67",
        "filename": "src/runtime/mgcmark.go",
        "patchSetId": 4
      },
      "lineNbr": 1322,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "this might actually be worth filing a bug about. the original pacer tried to do this, but it didn\u0027t work because it wasn\u0027t easy to skip over non-pointers.",
      "range": {
        "startLine": 1321,
        "startChar": 26,
        "endLine": 1322,
        "endChar": 61
      },
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a74d63c2_6404338c",
        "filename": "src/runtime/mgcmark.go",
        "patchSetId": 4
      },
      "lineNbr": 1323,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "nit: this looks like goarch.PtrSize and it confused me. maybe \"lastPtr\"?",
      "range": {
        "startLine": 1323,
        "startChar": 2,
        "endLine": 1323,
        "endChar": 9
      },
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc733423_a7c93709",
        "filename": "src/runtime/mheap.go",
        "patchSetId": 4
      },
      "lineNbr": 230,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "this took me a few reads to parse. maybe:\n\n\"If the i\u0027th bit of noMorePtrs is true, then there are no more pointers for the object containing the word described by the high bit of bitmap[i].\"",
      "range": {
        "startLine": 228,
        "startChar": 0,
        "endLine": 230,
        "endChar": 67
      },
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f9ea8a5_d6d7b099",
        "filename": "src/runtime/mheap.go",
        "patchSetId": 4
      },
      "lineNbr": 232,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "maybe \"with no more pointers\"?",
      "range": {
        "startLine": 232,
        "startChar": 27,
        "endLine": 232,
        "endChar": 37
      },
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a4e4cc3_a4aeef39",
        "filename": "src/runtime/mheap.go",
        "patchSetId": 4
      },
      "lineNbr": 232,
      "author": {
        "id": 25391
      },
      "writtenOn": "2022-08-04T22:05:04Z",
      "side": 1,
      "message": "TODO what?",
      "range": {
        "startLine": 232,
        "startChar": 38,
        "endLine": 232,
        "endChar": 44
      },
      "revId": "8b395c00809c85e87c049491c206ed5e40a1c376",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}