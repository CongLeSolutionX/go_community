{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e2a75369_730176fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-17T14:41:39Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d2d105925",
      "tag": "autogenerated:trybots~beginning",
      "revId": "2d105925e6e2b9d62ec37ef3676b35c679f0c045",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17213485_c2a508c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-17T14:41:39Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "e7ebadfa_0061a799",
      "tag": "autogenerated:trybots~beginning",
      "revId": "2d105925e6e2b9d62ec37ef3676b35c679f0c045",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79b4d4e5_e30a9471",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-11-17T14:56:40Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "e2a75369_730176fe",
      "tag": "autogenerated:trybots~happy",
      "revId": "2d105925e6e2b9d62ec37ef3676b35c679f0c045",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fa4a1ee_75f339b5",
        "filename": "src/go/types/unify.go",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-11-17T16:08:40Z",
      "side": 1,
      "message": "I\u0027m concerned that adding this check here could hide bugs elsewhere. Can we do the check in the type hasher? Or ensure that we initialize the type parameters correctly, in all cases?",
      "revId": "2d105925e6e2b9d62ec37ef3676b35c679f0c045",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e9bafbe_65106855",
        "filename": "src/go/types/unify.go",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-11-17T16:12:45Z",
      "side": 1,
      "message": "Sure.\n\nWe can definitely guard in the type hash, though we also hit this while tracing.",
      "parentUuid": "3fa4a1ee_75f339b5",
      "revId": "2d105925e6e2b9d62ec37ef3676b35c679f0c045",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a17afad1_a4d2325b",
        "filename": "src/go/types/unify.go",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 5210
      },
      "writtenOn": "2021-11-17T16:37:26Z",
      "side": 1,
      "message": "Let\u0027s leave this as is if you haven\u0027t change it yet but add a comment explaining why the 0 \u003c\u003d i is needed, together with a TODO to investigate a better approach.\n\nAlso, since it\u0027s a one-liner (plus comments), please do the types2 changes in the same CL. Thanks.",
      "parentUuid": "4e9bafbe_65106855",
      "revId": "2d105925e6e2b9d62ec37ef3676b35c679f0c045",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b759044a_ae7fd0b4",
        "filename": "src/go/types/unify.go",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 31647
      },
      "writtenOn": "2021-11-17T17:52:59Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "a17afad1_a4d2325b",
      "revId": "2d105925e6e2b9d62ec37ef3676b35c679f0c045",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}