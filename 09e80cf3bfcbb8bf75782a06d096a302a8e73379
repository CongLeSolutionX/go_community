{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "967ec87a_91402bd2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2021-12-03T22:53:01Z",
      "side": 1,
      "message": "now that the trybots are back, let\u0027s give it a shot. I don\u0027t expect it to just work, but we\u0027ll see.",
      "revId": "09e80cf3bfcbb8bf75782a06d096a302a8e73379",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd3b7b7d_3b3e8b19",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-12-03T22:53:15Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d09e80cf3\nNote that builder ios-arm64-corellium has a known issue golang.org/issue/49616.",
      "tag": "autogenerated:trybots~beginning",
      "revId": "09e80cf3bfcbb8bf75782a06d096a302a8e73379",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fefe7d21_06998367",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-12-03T22:53:15Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "304f3e02_764a6b78",
      "tag": "autogenerated:trybots~beginning",
      "revId": "09e80cf3bfcbb8bf75782a06d096a302a8e73379",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a47f2b7_6b3a5bf8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-12-03T23:10:46Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d09e80cf3\nFailed on ios-arm64-corellium: https://storage.googleapis.com/go-build-log/09e80cf3/ios-arm64-corellium_4897befb.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "cd3b7b7d_3b3e8b19",
      "tag": "autogenerated:trybots~progress",
      "revId": "09e80cf3bfcbb8bf75782a06d096a302a8e73379",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "473e7889_7f00c064",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-12-03T23:18:07Z",
      "side": 1,
      "message": "1 of 30 SlowBots failed.\nFailed on ios-arm64-corellium: https://storage.googleapis.com/go-build-log/09e80cf3/ios-arm64-corellium_4897befb.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\nSlowBot builds that ran:\n* ios-arm64-corellium\n",
      "parentUuid": "cd3b7b7d_3b3e8b19",
      "tag": "autogenerated:trybots~failed",
      "revId": "09e80cf3bfcbb8bf75782a06d096a302a8e73379",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d3de9cb_344fc80f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2021-12-03T23:22:35Z",
      "side": 1,
      "message": "that\u0027a s fun new failure mode. and a lot harder to connect that back to the current CL. hm.",
      "parentUuid": "8a47f2b7_6b3a5bf8",
      "revId": "09e80cf3bfcbb8bf75782a06d096a302a8e73379",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b52bc573_5c573819",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2021-12-03T23:35:01Z",
      "side": 1,
      "message": "actually, I don\u0027t understand this failure. the failing line accesses an mcache\u0027s tinyoffset field, but the problem is that the faulting address is 0x0 and tinyoffset is not at the beginning of that struct. it *could* be a nil check, but that mcache pointer is already checked for nil earlier in the function, so it should be eliminated.",
      "parentUuid": "0d3de9cb_344fc80f",
      "revId": "09e80cf3bfcbb8bf75782a06d096a302a8e73379",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8497b16_15d4b426",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2021-12-03T23:36:00Z",
      "side": 1,
      "message": "on top of that, I have no idea how this would actually get nil in the first place. getMCache succeeded, so the P is non-nil...",
      "parentUuid": "b52bc573_5c573819",
      "revId": "09e80cf3bfcbb8bf75782a06d096a302a8e73379",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd1ed860_51ee313c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2021-12-03T23:49:16Z",
      "side": 1,
      "message": "testing in a gomote, I can confirm that it looks like the environment really, really does not like the PageAlloc tests.\n\nand I think I see the problem.",
      "parentUuid": "a8497b16_15d4b426",
      "revId": "09e80cf3bfcbb8bf75782a06d096a302a8e73379",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4052c7c2_65ba59a9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2021-12-03T23:55:05Z",
      "side": 1,
      "message": "I was setting pageAlloc64Bit differently (for testing) on iOS, but that meant that FreePageAlloc was totally wrong. it would basically unmap real, random address ranges.\n\ndefinitely an issue. let\u0027s see if it fixes the tests...",
      "parentUuid": "dd1ed860_51ee313c",
      "revId": "09e80cf3bfcbb8bf75782a06d096a302a8e73379",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc9dc52d_edb03274",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2021-12-04T00:22:09Z",
      "side": 1,
      "message": "yes! this should resolve the builder issue.",
      "parentUuid": "4052c7c2_65ba59a9",
      "revId": "09e80cf3bfcbb8bf75782a06d096a302a8e73379",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}