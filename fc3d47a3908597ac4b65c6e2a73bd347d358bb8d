{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "61e7aee3_4c2abf31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-15T20:52:32Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dfc3d47a3\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "fc3d47a3908597ac4b65c6e2a73bd347d358bb8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f330cb9_c3c38c8a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6005
      },
      "writtenOn": "2023-05-15T20:53:15Z",
      "side": 1,
      "message": "Thanks.",
      "revId": "fc3d47a3908597ac4b65c6e2a73bd347d358bb8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "635ac813_11ac9c83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-05-15T21:02:38Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "61e7aee3_4c2abf31",
      "tag": "autogenerated:trybots~happy",
      "revId": "fc3d47a3908597ac4b65c6e2a73bd347d358bb8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d8d656f_55ef84f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6005
      },
      "writtenOn": "2023-05-15T21:21:41Z",
      "side": 1,
      "message": "(adding a few more comments)",
      "revId": "fc3d47a3908597ac4b65c6e2a73bd347d358bb8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75cad65a_8e7fe5c8",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 6005
      },
      "writtenOn": "2023-05-15T21:21:41Z",
      "side": 1,
      "message": "(nit) Maybe \u0027variantNames\u0027 is slightly better, to reduce confusion between \"variant\" and \"variant name\"? Not a big deal.",
      "range": {
        "startLine": 77,
        "startChar": 1,
        "endLine": 77,
        "endChar": 9
      },
      "revId": "fc3d47a3908597ac4b65c6e2a73bd347d358bb8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2db6386_37bef1b1",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-05-15T21:36:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75cad65a_8e7fe5c8",
      "range": {
        "startLine": 77,
        "startChar": 1,
        "endLine": 77,
        "endChar": 9
      },
      "revId": "fc3d47a3908597ac4b65c6e2a73bd347d358bb8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "161aa269_5f0d5347",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 6005
      },
      "writtenOn": "2023-05-15T21:21:41Z",
      "side": 1,
      "message": "Maybe this doesn\u0027t have to happen until slightly later, but I\u0027ll mention this now anyway. Feel free to leave it out of scope of this CL if that\u0027s better.\n\nIt seems we should also require that the variant is empty whenever the test configuration is equivalent to what \u0027go test \u003cpackage\u003e\u0027 does. That is to say that only the registerStdTest method should be allowed to register tests with an empty variant value, and all others must be non-empty (or else an an automated check would report it as a problem, so no way to forget).\n\nThe motivation of doing this is that it would preserve the ability to do `go test std cmd \u0026\u0026 go tool dist test -run\u003d\u0027!^go_test:.+$\u0027` (or equivalent pattern for variant names), and have both full test coverage and minimal unnecessary overlap. Not that I expect it\u0027ll be widely used, but it seems easy and worthwhile to preserve it.",
      "revId": "fc3d47a3908597ac4b65c6e2a73bd347d358bb8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d6d9084_5ff29692",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 2
      },
      "lineNbr": 304,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-05-15T21:36:26Z",
      "side": 1,
      "message": "That\u0027s an interesting idea. Right now we don\u0027t have a notion of default invocation or not, but I\u0027m planning to add one as part of implementing Bryan\u0027s suggestion that we print any non-default commands dist runs. At that point it would be relatively easy to consistency check against the variant.\n\nI\u0027ve noted this as a TODO on my branch to implement that.",
      "parentUuid": "161aa269_5f0d5347",
      "revId": "fc3d47a3908597ac4b65c6e2a73bd347d358bb8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a110bc8_19b67130",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 2
      },
      "lineNbr": 868,
      "author": {
        "id": 6005
      },
      "writtenOn": "2023-05-15T21:21:41Z",
      "side": 1,
      "message": "I understand the variant here needs to be set to avoid duplicate variant names. But for purpose of test IDs (variant name + \".\" + test name), it will be better if we get rid of it later, so that they would be like:\n\n- cmd/internal/testdir.Test/typeparam/issue47684.go\n- cmd/internal/testdir.Test/typeparam/issue47684b.go\n\nInstead of ending up being:\n\n- cmd/internal/testdir:5_10.Test/typeparam/issue47684.go\n- cmd/internal/testdir:6_10.Test/typeparam/issue47684b.go\n\nThat is to say I think the shard number isn\u0027t a significant test variant.",
      "revId": "fc3d47a3908597ac4b65c6e2a73bd347d358bb8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "318328fd_7dacee5e",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 2
      },
      "lineNbr": 868,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-05-15T21:36:26Z",
      "side": 1,
      "message": "Oh, that\u0027s really interesting.\n\nThe only way I can think to do this, but still keep reasonable consistency checks, it to add another field to goTest that says \"I pinky swear I don\u0027t need a variant name for this.\" Any better ideas?",
      "parentUuid": "8a110bc8_19b67130",
      "revId": "fc3d47a3908597ac4b65c6e2a73bd347d358bb8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a343d529_52242a05",
        "filename": "src/cmd/dist/test.go",
        "patchSetId": 2
      },
      "lineNbr": 868,
      "author": {
        "id": 6005
      },
      "writtenOn": "2023-05-15T22:17:49Z",
      "side": 1,
      "message": "A field like that seems okay. Or just a hard-coded special exception for this particular test name, since I don\u0027t think we\u0027ll need it for any more tests than this one. In both cases, my hope is that it should be short-lived.\n\nThis custom sharding implementation for the GOROOT/test directory was initially made because it used to be a run.go runner whose work didn\u0027t really have any other way of being split up the caller. (See https://go-review.googlesource.com/c/go/+/10688/5/src/cmd/dist/test.go#b377.)\n\nNow that it\u0027s a normal Go package with a test with many sub-tests, it\u0027s viable to shard by that, and hopefully we\u0027ll be able to that instead as needed. That\u0027s a mechanism that is supported by all Go packages, not just one, and doesn\u0027t need any extra custom machinery. So I hope long-term this particular test and its special registration can just be dropped in favor of running all tests in the \"cmd/internal/testdir\" Go package normally.",
      "parentUuid": "318328fd_7dacee5e",
      "revId": "fc3d47a3908597ac4b65c6e2a73bd347d358bb8d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}