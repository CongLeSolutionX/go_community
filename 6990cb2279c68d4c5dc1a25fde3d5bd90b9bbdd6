{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fafa24aa_e68ec812",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-01-22T12:58:02Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d6990cb22\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "6990cb2279c68d4c5dc1a25fde3d5bd90b9bbdd6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "794aaa95_87ceacea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-01-22T13:05:01Z",
      "side": 1,
      "message": "Build is still in progress... Status page: https://farmer.golang.org/try?commit\u003d6990cb22\nFailed on windows-386-2016: https://storage.googleapis.com/go-build-log/6990cb22/windows-386-2016_0dc2fbc8.log\nOther builds still in progress; subsequent failure notices suppressed until final report.\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n",
      "parentUuid": "fafa24aa_e68ec812",
      "tag": "autogenerated:trybots~progress",
      "revId": "6990cb2279c68d4c5dc1a25fde3d5bd90b9bbdd6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c27d338_ab6ea58e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-01-22T13:08:34Z",
      "side": 1,
      "message": "1 of 47 TryBots failed.\nFailed on windows-386-2016: https://storage.googleapis.com/go-build-log/6990cb22/windows-386-2016_0dc2fbc8.log\n\nConsult https://build.golang.org/ to see whether they are new failures. Keep in mind that TryBots currently test *exactly* your git commit, without rebasing. If your commit\u0027s git parent is old, the failure might\u0027ve already been fixed.\n\n",
      "parentUuid": "fafa24aa_e68ec812",
      "tag": "autogenerated:trybots~failed",
      "revId": "6990cb2279c68d4c5dc1a25fde3d5bd90b9bbdd6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea8563be_c3f7a8ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6785
      },
      "writtenOn": "2024-01-23T19:12:18Z",
      "side": 1,
      "message": "I\u0027m not sure that this is related to my changes. It does look kind of similar to https://github.com/golang/go/issues/56875 though.",
      "parentUuid": "8c27d338_ab6ea58e",
      "revId": "6990cb2279c68d4c5dc1a25fde3d5bd90b9bbdd6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a2b1ed2_2de6ed43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2024-01-23T22:01:29Z",
      "side": 1,
      "message": "This feels like it is at the wrong layer. `time.Time` already has support for a higher-precision “monotonic clock” for measuring durations — if we can make that work on Windows too, then it will improve `time.Time.Sub` and `time.Since` for all programs, not just benchmarks.\n\nI see in https://go.dev/issue/31160#issuecomment-612584400 that Alex investigated that possibility in 2020, and found that an implementation using `syscall.Syscall` would make `time.Now` about an order of magnitude slower.\n\nHowever, `time.now` is currently implemented in assembly on `linux/amd64`, and Austin wrote a proof-of-concept change to call `QueryUnbiasedInterruptTime` in assembly in CL 211307. Has anyone investigated the possibility of changing `time.now` to call `QueryPerformanceCounter` from assembly?",
      "revId": "6990cb2279c68d4c5dc1a25fde3d5bd90b9bbdd6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0b67cb0_57c3fd85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6785
      },
      "writtenOn": "2024-01-24T00:07:24Z",
      "side": 1,
      "message": "In principle I agree, if there was a better solution for time.Time then that would be great.\n\nI\u0027m not aware of anyone investigating to call `QueryPerformanceCounter` from assembly. Also, do you mean calling QPC from assembly, or reimplementing QPC in assembly?",
      "parentUuid": "0a2b1ed2_2de6ed43",
      "revId": "6990cb2279c68d4c5dc1a25fde3d5bd90b9bbdd6",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}