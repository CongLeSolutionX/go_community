{
  "comments": [
    {
      "key": {
        "uuid": "30b79fb7_1698821e",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 9735
      },
      "writtenOn": "2016-09-20T18:45:11Z",
      "side": 1,
      "message": "Perhaps wc should be zw to be consistent with Brad\u0027s suggestion below?",
      "range": {
        "startLine": 19,
        "startChar": 1,
        "endLine": 19,
        "endChar": 3
      },
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b79fb7_a415bbab",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-09-22T05:20:20Z",
      "side": 1,
      "message": "True, done.",
      "parentUuid": "30b79fb7_1698821e",
      "range": {
        "startLine": 19,
        "startChar": 1,
        "endLine": 19,
        "endChar": 3
      },
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b79fb7_56f91a68",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 9735
      },
      "writtenOn": "2016-09-20T18:27:29Z",
      "side": 1,
      "message": "While we\u0027re making other changes, let\u0027s avoid io.WriteString here. There is no benefit to using it here. The allocation still exists, but it also introduces another function call and also a type assertion. I\u0027d like to avoid having the examples portray WriteString as having a benefit here that it doesn\u0027t have.\n\n wc.Write([]byte(...))\n\nDo this below too.",
      "range": {
        "startLine": 26,
        "startChar": 11,
        "endLine": 26,
        "endChar": 29
      },
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b79fb7_441abfd9",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 26,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-09-22T05:20:20Z",
      "side": 1,
      "message": "Aye aye! Done, thanks.",
      "parentUuid": "30b79fb7_56f91a68",
      "range": {
        "startLine": 26,
        "startChar": 11,
        "endLine": 26,
        "endChar": 29
      },
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b79fb7_302caea0",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-09-20T15:22:56Z",
      "side": 1,
      "message": "zr instead of rc.\n\nrc is what it does (read closer), but zr is what it is (gzip reader)",
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b79fb7_641fc3c8",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-09-22T05:20:20Z",
      "side": 1,
      "message": "Truu. Done, thanks.",
      "parentUuid": "30b79fb7_302caea0",
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b79fb7_10272ac1",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 40,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-09-20T15:22:56Z",
      "side": 1,
      "message": "I don\u0027t like encouraging slurping APIs. We should teach the streaming APIs. What about:\n\nhttps://play.golang.org/p/aFdVH7Wsyv",
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0f62fe4_092b2def",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 40,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-09-22T05:20:20Z",
      "side": 1,
      "message": "@bradfitz I see. However, that example seems like a bit of magic with the headers plus body in the source itself.\n\nLet me change up the examples to take out slurping. Am gonna prepare one with io.Copy(os.Stdout, zr).\n\nI was slurping because I assumed it would make easier to read the examples, however, we can make them without the slurping.\n\nDone, thanks.",
      "parentUuid": "30b79fb7_10272ac1",
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b79fb7_d040b23a",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 50,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-09-20T15:22:56Z",
      "side": 1,
      "message": "I\u0027d drop Data: and put an extra \\n before the data so it looks like RFC 822 headers.",
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b79fb7_d6e2eac4",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 50,
      "author": {
        "id": 9735
      },
      "writtenOn": "2016-09-20T18:27:29Z",
      "side": 1,
      "message": "Hahaha, I think you\u0027ve been HTTP land for too long ;P\n\nThe suggestion SGTM, though.",
      "parentUuid": "30b79fb7_d040b23a",
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b79fb7_8458b75a",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 50,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-09-22T05:20:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30b79fb7_d040b23a",
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b79fb7_36e4a6a1",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 60,
      "author": {
        "id": 9735
      },
      "writtenOn": "2016-09-20T18:45:11Z",
      "side": 1,
      "message": "Perhaps the Writer side should also be a loop?\n\nSee the archive/tar example to see what I mean:\nhttps://golang.org/pkg/archive/tar/#example_",
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b79fb7_848e77df",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 60,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-09-22T05:20:20Z",
      "side": 1,
      "message": "See I wanted to do that before, but thought I\u0027d plainly add the parts in unrolled. But sure, since it makes for better examples with less duplicated code, done, thanks.",
      "parentUuid": "30b79fb7_36e4a6a1",
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b79fb7_7693fe06",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 94,
      "author": {
        "id": 9735
      },
      "writtenOn": "2016-09-20T18:45:11Z",
      "side": 1,
      "message": "The Close method on gzip.Reader does absolutely nothing to cleanup resources, but provides a way to sanity that the stream is complete without errors.\n\nThus, a defer without checkout the error is pretty pointless.\nI\u0027m okay with this being at the end simply as:\n\n if err :\u003d zr.Close(); err !\u003d nil {\n \tlog.Fatal(err)\n }",
      "range": {
        "startLine": 94,
        "startChar": 1,
        "endLine": 94,
        "endChar": 17
      },
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0f62fe4_c9fd1556",
        "filename": "src/compress/gzip/example_test.go",
        "patchSetId": 8
      },
      "lineNbr": 94,
      "author": {
        "id": 5137
      },
      "writtenOn": "2016-09-22T05:20:20Z",
      "side": 1,
      "message": "Roger that. Done, thanks.",
      "parentUuid": "30b79fb7_7693fe06",
      "range": {
        "startLine": 94,
        "startChar": 1,
        "endLine": 94,
        "endChar": 17
      },
      "revId": "a0089bae05f34b8527e463b0dabfcfcc266ca7a1",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}