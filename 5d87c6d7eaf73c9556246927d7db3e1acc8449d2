{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cb4328a1_779d7c90",
        "filename": "src/testing/fstest/testfs.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-10-23T14:25:39Z",
      "side": 1,
      "message": "Instead of defining a new error type here, why not use `errors.Join` directly?\n\n```go\nreturn fmt.Errorf(\"TestFS found errors:\\n%w\", errors.Join(t.errors))\n```",
      "revId": "5d87c6d7eaf73c9556246927d7db3e1acc8449d2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "034f80a8_d014ad58",
        "filename": "src/testing/fstest/testfs.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 10685
      },
      "writtenOn": "2023-10-23T16:16:14Z",
      "side": 1,
      "message": "I choose to preserve the exact text of the existing error in Error method. This could not be achieved with errors.Join because of the prefix.",
      "parentUuid": "cb4328a1_779d7c90",
      "revId": "5d87c6d7eaf73c9556246927d7db3e1acc8449d2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "450004e7_558a1ace",
        "filename": "src/testing/fstest/testfs.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 10685
      },
      "writtenOn": "2023-10-23T16:19:30Z",
      "side": 1,
      "message": "An alternative would be to use:\n\n   fmt.Errorf(\"TestFS found errors:\\n%w\", errors.Join(t.errors))",
      "parentUuid": "034f80a8_d014ad58",
      "revId": "5d87c6d7eaf73c9556246927d7db3e1acc8449d2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7e57f90_76e576a2",
        "filename": "src/testing/fstest/testfs.go",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 10685
      },
      "writtenOn": "2023-10-23T16:26:57Z",
      "side": 1,
      "message": "Sorry I missed your suggestion. I\u0027m disturbed by Gerrit\u0027s formatting.\n\nI\u0027ll apply your suggestion.",
      "parentUuid": "450004e7_558a1ace",
      "revId": "5d87c6d7eaf73c9556246927d7db3e1acc8449d2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4769c42f_0ebdbfa4",
        "filename": "src/testing/fstest/testfs_test.go",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-10-23T14:25:39Z",
      "side": 1,
      "message": "(nit) I don\u0027t think it\u0027s important to have this type assertion succeed — the user-facing property we want to provide is that `errors.Is` works properly, so testing only `errors.Is` should suffice.",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 99,
        "endChar": 2
      },
      "revId": "5d87c6d7eaf73c9556246927d7db3e1acc8449d2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee5e8481_f1493dbe",
        "filename": "src/testing/fstest/testfs_test.go",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 10685
      },
      "writtenOn": "2023-10-23T16:16:14Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "4769c42f_0ebdbfa4",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 99,
        "endChar": 2
      },
      "revId": "5d87c6d7eaf73c9556246927d7db3e1acc8449d2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9aab21ab_63915ec6",
        "filename": "src/testing/fstest/testfs_test.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-10-23T14:25:39Z",
      "side": 1,
      "message": "Please omit this `t.Log` — it adds no new information, since the test log (in verbose mode) will already indicate that the test has passed.",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 105,
        "endChar": 2
      },
      "revId": "5d87c6d7eaf73c9556246927d7db3e1acc8449d2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf6dbc6b_8f5de248",
        "filename": "src/testing/fstest/testfs_test.go",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 10685
      },
      "writtenOn": "2023-10-23T16:16:14Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "9aab21ab_63915ec6",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 105,
        "endChar": 2
      },
      "revId": "5d87c6d7eaf73c9556246927d7db3e1acc8449d2",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}