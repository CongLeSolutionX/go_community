{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0239b0f5_a6f9412b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-01T18:36:26Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d4d449765\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "4d449765abd0cd562594b5bd46f2675079aa665d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a211fe9_24cefa9f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-01T18:36:26Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "f6231878_f8a0c8d3",
      "tag": "autogenerated:trybots~beginning",
      "revId": "4d449765abd0cd562594b5bd46f2675079aa665d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e24aca77_bc8fc6a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-09-01T18:49:47Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "0239b0f5_a6f9412b",
      "tag": "autogenerated:trybots~happy",
      "revId": "4d449765abd0cd562594b5bd46f2675079aa665d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe001cd5_065d8db7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 59038
      },
      "writtenOn": "2022-09-08T20:13:34Z",
      "side": 1,
      "message": "This question is inspired by the attempt to automatically convert these runtime/metrics into OpenTelemetry\u0027s data model here: https://github.com/open-telemetry/opentelemetry-go-contrib/pull/2643.",
      "revId": "4d449765abd0cd562594b5bd46f2675079aa665d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80f36be6_9fed33e3",
        "filename": "src/runtime/metrics.go",
        "patchSetId": 11
      },
      "lineNbr": 127,
      "author": {
        "id": 59038
      },
      "writtenOn": "2022-09-08T20:13:34Z",
      "side": 1,
      "message": "Note that in the existing metrics that use \"classes\" in the name, e.g., /memory/classes/*, there is only one total metric defined (/memory/classes/total:bytes) even though there are multiple levels of attribute hierarchy that could be totalized.\n\n- What logic prevented creating a /cpu/classes/gc/mark/total:cpu-seconds (at the third level of hierarchy). My guess: because /cpu/classes/gc/total:cpu-seconds is what you might have computed using `MemStats.GCCPUFraction*uptime*gomaxprocs` (so it\u0027s important, whereas total gc-mark time maybe isn\u0027t?)\n- What logic prevented creating /memory/classes/heap/total:bytes as a total of all the /memory/classes/heap/* classes? (Or /memory/classes/metadata/total:bytes as a total of all /memory/classes/metadata/* classes?)\n\nDo we need the extra two sub-total metrics in this change? Instead, should callers perhaps compute those two sub-totals (i.e., `/cpu/classes/gc/total:cpu-seconds` and `/cpu/classes/scavenge/total:cpu-seconds`) manually?",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 127,
        "endChar": 4
      },
      "revId": "4d449765abd0cd562594b5bd46f2675079aa665d",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}