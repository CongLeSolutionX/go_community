{
  "comments": [
    {
      "key": {
        "uuid": "45e71697_4d12ba1e",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 10033
      },
      "writtenOn": "2017-02-10T17:14:41Z",
      "side": 1,
      "message": "Should these be called label for consistency with the other code? I made the mistake of using \u0027tag\u0027 and \u0027label\u0027 interchangably in my docs.",
      "range": {
        "startLine": 18,
        "startChar": 64,
        "endLine": 18,
        "endChar": 68
      },
      "revId": "e01dd042cfa3c72f51da722146fe6701cc97ae4c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "049dfd4a_2dbf7189",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 5056
      },
      "writtenOn": "2017-02-10T17:18:28Z",
      "side": 1,
      "message": "For the purposes of profBuf, the term is tag. \nThe fact that the recorded tags happen to be goroutine labels is fine,\nbut this code isn\u0027t about labels, only tags.",
      "parentUuid": "45e71697_4d12ba1e",
      "range": {
        "startLine": 18,
        "startChar": 64,
        "endLine": 18,
        "endChar": 68
      },
      "revId": "e01dd042cfa3c72f51da722146fe6701cc97ae4c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e83420ee_e5529eb2",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 10033
      },
      "writtenOn": "2017-02-10T17:31:18Z",
      "side": 1,
      "message": "ah, ok",
      "parentUuid": "049dfd4a_2dbf7189",
      "range": {
        "startLine": 18,
        "startChar": 64,
        "endLine": 18,
        "endChar": 68
      },
      "revId": "e01dd042cfa3c72f51da722146fe6701cc97ae4c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b241417_1b0772e4",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 10033
      },
      "writtenOn": "2017-02-10T17:35:33Z",
      "side": 1,
      "message": "Another naive question: I don\u0027t understand the code here. Who is this code competing against for the lock?",
      "range": {
        "startLine": 277,
        "startChar": 2,
        "endLine": 277,
        "endChar": 34
      },
      "revId": "e01dd042cfa3c72f51da722146fe6701cc97ae4c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0779b9c5_82b3ee7b",
        "filename": "src/runtime/profbuf.go",
        "patchSetId": 4
      },
      "lineNbr": 277,
      "author": {
        "id": 5056
      },
      "writtenOn": "2017-02-10T20:46:03Z",
      "side": 1,
      "message": "It\u0027s a good question. I forgot to put the locking operations into the followup CL that started using this code. They are supposed to go around updates to g.labels. However, I\u0027m not convinced that\u0027s right. We can leave this detail for a followup CL. This few lines of code is by far the most subtle in the entire CL.",
      "parentUuid": "3b241417_1b0772e4",
      "range": {
        "startLine": 277,
        "startChar": 2,
        "endLine": 277,
        "endChar": 34
      },
      "revId": "e01dd042cfa3c72f51da722146fe6701cc97ae4c",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}