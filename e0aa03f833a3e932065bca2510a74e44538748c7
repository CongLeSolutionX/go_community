{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "103e0e77_cfcdb339",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 50449
      },
      "writtenOn": "2023-01-05T07:35:55Z",
      "side": 1,
      "message": "Considering that empty stacks won\u0027t show up in any profile visualizations, I\u0027d prefer if profiles with empty stacks would not be considered valid.\n\nInstead we could either insert a dummy frame (as its already done for other situations where a sample fails to unwind) or show the `runtime.goexit` frame in this case.\n\nAnyway, that\u0027s out of scope for this patch and could be done in a follow-up.",
      "revId": "e0aa03f833a3e932065bca2510a74e44538748c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adfcd9fc_65eb0925",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-01-05T14:18:48Z",
      "side": 1,
      "message": "Hmm, perhaps. I don\u0027t feel particularly strongly about this, but what rubs me the wrong way about showing runtime.goexit in this case is that it\u0027s entirely an implementation artifact. From a language perspective, the stack really is empty at this point. There\u0027s always a tension between how much we represent things from a language model perspective versus exposing the truth of the implementation because different people want different things. I guess we could do a dummy frame, \"(empty stack)\" or something, though dummy frames always feel a bit gross to me. That almost feels like something that should be done in the profile consumer?",
      "parentUuid": "103e0e77_cfcdb339",
      "revId": "e0aa03f833a3e932065bca2510a74e44538748c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "331b6e52_18e49fb7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 50449
      },
      "writtenOn": "2023-01-05T14:40:41Z",
      "side": 1,
      "message": "\u003e  I guess we could do a dummy frame, \"(empty stack)\" or something, though dummy frames always feel a bit gross to me. That almost feels like something that should be done in the profile consumer?\n\nYou mean that the profile could contain the truth (not filter any runtime internal frames), and e.g. the pprof viewer could simplify the data? That\u0027d be nice as far as I\u0027m concerned.\n\nMeanwhile a dummy frame would also be okay for me - but I agree that it\u0027s kinda gross!",
      "parentUuid": "adfcd9fc_65eb0925",
      "revId": "e0aa03f833a3e932065bca2510a74e44538748c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "094d48b3_aeedea0b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-01-09T20:24:52Z",
      "side": 1,
      "message": "I was thinking more specifically that the runtime could still filter frames like goexit, since the details of how to do that are tightly coupled to the runtime, but the UI could more gracefully handle being presented with an empty stack.",
      "parentUuid": "331b6e52_18e49fb7",
      "revId": "e0aa03f833a3e932065bca2510a74e44538748c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0f20836_dc9313af",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 50449
      },
      "writtenOn": "2023-01-09T20:30:35Z",
      "side": 1,
      "message": "Ah, that works too. Would you like me to file an upstream issue for this?",
      "parentUuid": "094d48b3_aeedea0b",
      "revId": "e0aa03f833a3e932065bca2510a74e44538748c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "630bf824_a649aeee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 5167
      },
      "writtenOn": "2023-01-09T21:19:28Z",
      "side": 1,
      "message": "That would be much appreciated!",
      "parentUuid": "d0f20836_dc9313af",
      "revId": "e0aa03f833a3e932065bca2510a74e44538748c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5edc4f0_e714869e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 50449
      },
      "writtenOn": "2023-01-05T07:35:55Z",
      "side": 1,
      "message": "LGTM - thanks for figuring this out!",
      "revId": "e0aa03f833a3e932065bca2510a74e44538748c7",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}