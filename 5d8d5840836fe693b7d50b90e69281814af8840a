{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d4969651_72521a0e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-23T17:04:38Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d5d8d5840",
      "tag": "autogenerated:trybots~beginning",
      "revId": "5d8d5840836fe693b7d50b90e69281814af8840a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97cc3aa9_83367067",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-03-23T17:17:40Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "d4969651_72521a0e",
      "tag": "autogenerated:trybots~happy",
      "revId": "5d8d5840836fe693b7d50b90e69281814af8840a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "accc1811_1dd1a118",
        "filename": "src/unicode/utf16/utf16.go",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5385
      },
      "writtenOn": "2022-03-23T17:04:24Z",
      "side": 1,
      "message": "Elsewhere in the package (and on unicode.org), these are called surrogates:\n\n  ... number of surrogates required to ...",
      "range": {
        "startLine": 34,
        "startChar": 33,
        "endLine": 34,
        "endChar": 45
      },
      "revId": "5d8d5840836fe693b7d50b90e69281814af8840a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54ce5025_3de86350",
        "filename": "src/unicode/utf16/utf16.go",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-03-24T00:30:26Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s right.  \"Surrogates\" is the name used when a single Unicode rune is encoded using a pair of 16-bit words (as a surrogate pair).  But when only one 16-bit word is required, it\u0027s not a surrogate.\n\nThat said, I think this could be slightly improved.\n\n// RuneLen returns the number of 16-bit words in the UTF-16 encoding of the rune.",
      "parentUuid": "accc1811_1dd1a118",
      "range": {
        "startLine": 34,
        "startChar": 33,
        "endLine": 34,
        "endChar": 45
      },
      "revId": "5d8d5840836fe693b7d50b90e69281814af8840a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04692d64_2be0a33e",
        "filename": "src/unicode/utf16/utf16.go",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5385
      },
      "writtenOn": "2022-03-24T07:41:59Z",
      "side": 1,
      "message": "Ah, indeed, sorry for the confusion. They call them \"16-bit code units\", and only when they are in pair they use \"surrogates\".",
      "parentUuid": "54ce5025_3de86350",
      "range": {
        "startLine": 34,
        "startChar": 33,
        "endLine": 34,
        "endChar": 45
      },
      "revId": "5d8d5840836fe693b7d50b90e69281814af8840a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0dd5cf0e_c4968530",
        "filename": "src/unicode/utf16/utf16.go",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 15726
      },
      "writtenOn": "2022-03-24T08:53:59Z",
      "side": 1,
      "message": "The comment was inspired by the same on the one on the unicode/utf8.RuneLen function:\n\n// RuneLen returns the number of bytes required to encode the rune. It returns -1 if the rune is not a valid value to encode in UTF-8.",
      "parentUuid": "04692d64_2be0a33e",
      "range": {
        "startLine": 34,
        "startChar": 33,
        "endLine": 34,
        "endChar": 45
      },
      "revId": "5d8d5840836fe693b7d50b90e69281814af8840a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b36f42ab_9fd41067",
        "filename": "src/unicode/utf16/utf16.go",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5206
      },
      "writtenOn": "2022-03-24T15:22:28Z",
      "side": 1,
      "message": "Understood.  I also think that that comment could be clearer.",
      "parentUuid": "0dd5cf0e_c4968530",
      "range": {
        "startLine": 34,
        "startChar": 33,
        "endLine": 34,
        "endChar": 45
      },
      "revId": "5d8d5840836fe693b7d50b90e69281814af8840a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e89d25d7_112cb761",
        "filename": "src/unicode/utf16/utf16.go",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 66749
      },
      "writtenOn": "2024-03-07T05:12:26Z",
      "side": 1,
      "message": "Ping.\nSo should this and that (in UTF-8) doc be like as below?\n// RuneLen returns the number of 16-bit words in the UTF-16 encoding of the rune.\n// RuneLen returns the number of 8-bit words in the UTF-16 encoding of the rune.",
      "parentUuid": "b36f42ab_9fd41067",
      "range": {
        "startLine": 34,
        "startChar": 33,
        "endLine": 34,
        "endChar": 45
      },
      "revId": "5d8d5840836fe693b7d50b90e69281814af8840a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de67943f_d33d9c45",
        "filename": "src/unicode/utf16/utf16.go",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 66749
      },
      "writtenOn": "2024-03-07T10:19:28Z",
      "side": 1,
      "message": "// RuneLen returns the number of 16-bit words in the UTF-16 encoding of the rune.\n// RuneLen returns the number of 8-bit words in the `UTF-8` encoding of the rune.\n\nFixed typo.\n\nOnce `RuneLen` is added, I think `Encode` can be simplified as\n```\n// Encode returns the UTF-16 encoding of the Unicode code point sequence s.\nfunc Encode(s []rune) []uint16 {\n\tn :\u003d len(s)\n\tfor _, v :\u003d range s {\n\t\tif v \u003e\u003d surrSelf {\n\t\t\tn++\n\t\t}\n\t}\n\n\ta :\u003d make([]uint16, n)\n\tn \u003d 0\n\tfor _, v :\u003d range s {\n\t\tswitch RuneLen(v) {\n\t\tcase 1: // normal rune\n\t\t\ta[n] \u003d uint16(v)\n\t\t\tn++\n\t\tcase 2: // needs surrogate sequence\n\t\t\tr1, r2 :\u003d EncodeRune(v)\n\t\t\ta[n] \u003d uint16(r1)\n\t\t\ta[n+1] \u003d uint16(r2)\n\t\t\tn +\u003d 2\n\t\tdefault:\n\t\t\ta[n] \u003d uint16(replacementChar)\n\t\t\tn++\n\t\t}\n\t}\n\treturn a[:n]\n}\n```",
      "parentUuid": "e89d25d7_112cb761",
      "range": {
        "startLine": 34,
        "startChar": 33,
        "endLine": 34,
        "endChar": 45
      },
      "revId": "5d8d5840836fe693b7d50b90e69281814af8840a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}