{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ef6fa12f_a6543074",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-30T16:44:58Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d2a79addd",
      "tag": "autogenerated:trybots~beginning",
      "revId": "2a79addde5e4b6cf29a60f246033282acbf3ec02",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ceb339d2_13b40a93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2021-06-30T16:55:49Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "ef6fa12f_a6543074",
      "tag": "autogenerated:trybots~happy",
      "revId": "2a79addde5e4b6cf29a60f246033282acbf3ec02",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60f2716c_d115625b",
        "filename": "src/path/filepath/path_test.go",
        "patchSetId": 1
      },
      "lineNbr": 1476,
      "author": {
        "id": 6365
      },
      "writtenOn": "2021-06-30T17:05:50Z",
      "side": 1,
      "message": "Do we know why Darwin deletes the temporary directory? That seems like a really odd (and oddly hostile) behavior. (I would rather have a portable workaround that causes the test to pass everywhere instead of one that tolerates spurious failures on certain platforms.)\n\nIs it possible that the OS is using only the access time to decide when to remove the symlink directory, and is not treating the creation of the symlink as an access in considering that time? (What does https://play.golang.org/p/cbp8LKjRDKW output on macOS?)\n\nIs there a reasonable way to mark the symlink directory b itself as still relevant? (For example, could we create \"a/file\" through the \"b\" symlink instead of the original \"a\" directory, or call `os.Open(filepath.Join(evalTmpDir, \"b\"))` and keep the resulting os.File open until the end of the test?)",
      "range": {
        "startLine": 1474,
        "startChar": 0,
        "endLine": 1476,
        "endChar": 64
      },
      "revId": "2a79addde5e4b6cf29a60f246033282acbf3ec02",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}