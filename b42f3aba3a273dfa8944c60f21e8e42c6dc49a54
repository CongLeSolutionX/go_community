{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "02deaaae_1da1ac57",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-11-12T01:31:04Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003db42f3aba\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "b42f3aba3a273dfa8944c60f21e8e42c6dc49a54",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2c3b4ed_ea227738",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-11-12T01:36:53Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "02deaaae_1da1ac57",
      "tag": "autogenerated:trybots~happy",
      "revId": "b42f3aba3a273dfa8944c60f21e8e42c6dc49a54",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11b8152b_7a055a56",
        "filename": "src/runtime/example_test.go",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-11-12T03:49:16Z",
      "side": 1,
      "message": "The point of an example is to show people how to use a function, in this case CallersFrames. This comment is long and doesn\u0027t help people use CallerFrames. I suggest something much shorter.\n\n// Canonicalize function name and skip callers of this function\n// for predictable example output.\n// You probably don\u0027t need this in your own code.\n\n    function :\u003d strings.Replace(frame.Function, \"main.main\", \"runtime_test.ExampleFrames\")\n    if !strings.HasPrefix(function, \"runtime\") { break }\n\n    fmt.Printf(...)",
      "revId": "b42f3aba3a273dfa8944c60f21e8e42c6dc49a54",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}