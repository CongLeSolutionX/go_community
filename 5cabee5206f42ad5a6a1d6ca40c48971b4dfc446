{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7ff09852_29d62e7b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-06-09T01:27:07Z",
      "side": 1,
      "message": "TRY\u003dlongtest",
      "revId": "5cabee5206f42ad5a6a1d6ca40c48971b4dfc446",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "267c46dc_15243f3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-06-09T01:27:23Z",
      "side": 1,
      "message": "SlowBots beginning. Status page: https://farmer.golang.org/try?commit\u003d5cabee52\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "5cabee5206f42ad5a6a1d6ca40c48971b4dfc446",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d850a3c5_fbd27194",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-06-09T01:38:21Z",
      "side": 1,
      "message": "SlowBots are happy.\n\nSlowBot builds that ran:\n* linux-amd64-longtest\n",
      "parentUuid": "267c46dc_15243f3a",
      "tag": "autogenerated:trybots~happy",
      "revId": "5cabee5206f42ad5a6a1d6ca40c48971b4dfc446",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52dbdb33_c525a390",
        "filename": "src/cmd/go/internal/modload/init.go",
        "patchSetId": 1
      },
      "lineNbr": 1907,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-06-09T03:45:13Z",
      "side": 1,
      "message": "This still doesn\u0027t seem quite right. We should only record mod sums for zip sums if:\n1. we actually downloaded the zip (not just the `go.mod` file), and\n2. we intend to actually use it.\n\nThat probably means `go mod download all` and `go list -mod\u003dmod`, but not `go list -m` or `go mod graph -go\u003d1.16` or `go get`. (In the case of `go get`, we already recorded it for packages from `ld` above, which suffices.)\n\nMaybe it\u0027s a lost cause and we should condition it on `cfg.BuildMod \u003d\u003d \"mod\"` and just let it get messy..? ü§î",
      "range": {
        "startLine": 1904,
        "startChar": 0,
        "endLine": 1907,
        "endChar": 18
      },
      "revId": "5cabee5206f42ad5a6a1d6ca40c48971b4dfc446",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "834fcacf_77dc8b56",
        "filename": "src/cmd/go/internal/modload/init.go",
        "patchSetId": 1
      },
      "lineNbr": 1907,
      "author": {
        "id": 6365
      },
      "writtenOn": "2023-06-09T18:48:21Z",
      "side": 1,
      "message": "Upon further reflection:\n- This is indeed still not quite right.\n- The behavior in (and before) this CL is ‚Äúsometimes cruft gets added to the `go.sum` file for no apparent reason, but `go mod tidy` removes it‚Äù, which is unfortunate but not hugely terrible.\n- A proper fix is going to involve a fair amount of cleanup and plumbing.\n- This CL does fix the failure mode reported in #60667.\n\nSo I think we should go with this for now, and perhaps try to clean it up for 1.22 or later.",
      "parentUuid": "52dbdb33_c525a390",
      "range": {
        "startLine": 1904,
        "startChar": 0,
        "endLine": 1907,
        "endChar": 18
      },
      "revId": "5cabee5206f42ad5a6a1d6ca40c48971b4dfc446",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}