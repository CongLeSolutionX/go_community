{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7a4ccbb3_6e447357",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 51518
      },
      "writtenOn": "2024-08-23T17:32:07Z",
      "side": 1,
      "message": "I haven\u0027t constructed a good enough use case to expose the problem yet, but it looks like a potential bug.  https://go.dev/play/p/S-m4PVhQrdy\n\nCurrently, I can pass all unit tests and compile successfully locally. I want to use LUCI to see if the test can pass on more platforms.\n\nSorry for any inconvenience.",
      "revId": "d43a544fb2bd6325cf8547ab6f897ce686bdce86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5426026d_d60a39b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-08-23T17:34:32Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003dd43a544f\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "d43a544fb2bd6325cf8547ab6f897ce686bdce86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba87e84e_c457d3ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2024-08-23T17:39:53Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "5426026d_d60a39b1",
      "tag": "autogenerated:trybots~happy",
      "revId": "d43a544fb2bd6325cf8547ab6f897ce686bdce86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39edd59e_6dd4801a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-08-24T00:20:21Z",
      "side": 1,
      "message": "I think that this should report an error, but without your change it does not:\n\n{{range .Items}}{{if .X}}{{break}}{{end}}\u003ca{{if .Y}}{{continue}}{{end}}\u003e{{if .Z}}{{continue}}{{end}}{{end}}",
      "parentUuid": "7a4ccbb3_6e447357",
      "revId": "d43a544fb2bd6325cf8547ab6f897ce686bdce86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25c49cb7_e0e42475",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 51518
      },
      "writtenOn": "2024-08-24T04:36:32Z",
      "side": 1,
      "message": "Thank you for your insightful guidance. I will certainly open an issue on GitHub if I encounter a similar problem next time.\n\nAfter debugging, I\u0027ve discovered that this is not actually a bug. However, it appears that the existing test cases do not cover the scenario you mentioned. Consequently, my modifications still pass all current test cases.\n\nGiven this situation, I\u0027m wondering if we should add the scenario  to test case. If you believe this addition is unnecessary, please feel free to disregard this CL.\n\nThanks very much again.",
      "parentUuid": "39edd59e_6dd4801a",
      "revId": "d43a544fb2bd6325cf8547ab6f897ce686bdce86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6bb4a543_b7da5fa1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-08-24T05:12:49Z",
      "side": 1,
      "message": "Oh, I was thinking that that test case should report an error.  Why shouldn\u0027t it?",
      "parentUuid": "25c49cb7_e0e42475",
      "revId": "d43a544fb2bd6325cf8547ab6f897ce686bdce86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e03b707_70d3c3d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 51518
      },
      "writtenOn": "2024-08-24T06:11:13Z",
      "side": 1,
      "message": "If we run this use case with the current Go, it will pass. But if the go binary file compiled from my modified code is used to perform this test, the following error will be reported:\n\n```\n\u003d\u003d\u003d RUN   TestErrors\nescape_test.go:1185: input\u003d\"{{range .Items}}{{if .X}}{{break}}{{end}}\u003ca{{if .Y}}{{continue}}{{end}}\u003e{{if .Z}}{{continue}}{{end}}{{end}}\": unexpected error \"html/template:z:1:54: at range loop continue: {{range}} branches end in different contexts: {stateText delimNone urlPartNone jsCtxRegexp attrNone elementNone \u003cnil\u003e}, {stateTag delimNone urlPartNone jsCtxRegexp attrNone elementNone \u003cnil\u003e}\"\n--- FAIL: TestErrors (0.00s)\n```\n\n\n(So I think adding this use case can avoid my erroneous changes.)\n\n\nI constructed a demo that looks like the execution result in the playground, and it won\u0027t generate any errors.  https://go.dev/play/p/sglp6P5kiV6\n\nBut if we use the go compiled from my modified source code to execute this code, it will throw an error:\n\n```\nhave an error: html/template:test:1:54: at range loop continue: {{range}} branches end in different contexts: {stateText delimNone urlPartNone jsCtxRegexp attrNone elementNone \u003cnil\u003e}, {stateTag delimNone urlPartNone jsCtxRegexp attrNone elementNone \u003cnil\u003e}\n```",
      "parentUuid": "6bb4a543_b7da5fa1",
      "revId": "d43a544fb2bd6325cf8547ab6f897ce686bdce86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0660c27c_e2909666",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-08-24T14:48:22Z",
      "side": 1,
      "message": "Yes.  And I think that test case should report an error.  So I think your change is a good idea.\n\nBut maybe I misunderstand something.  Is there a reason that this test case should not report an error?\n\nI agree that either way we should add this test case.",
      "parentUuid": "5e03b707_70d3c3d9",
      "revId": "d43a544fb2bd6325cf8547ab6f897ce686bdce86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e1208b8_bcff229d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 51518
      },
      "writtenOn": "2024-08-24T16:37:17Z",
      "side": 1,
      "message": "Sorry I may not have expressed myself clearly enough.  Let me try to express my thoughts again: \n\n\nAdding this test case currently won\u0027t report any errors, LUCI will pass.\n\nOnly when the go compiled from the code I previously modified ( `e.rangeContext. contins\u003dappend (e.rangeContext. breaks, c) ---\u003ee.rangeContext. contins\u003dappend (e.rangeContext. contins, c)` ) is used to perform the test, an error will occur. \n\nBut it seems that my previous changes were incorrect, and the current code ( `e.rangeContext. contines\u003dappend (e.rangeContext. breaks, c)`  ) has no bugs.\n\n\nPerhaps my understanding is not thorough enough, and I am looking forward to your advice.",
      "parentUuid": "0660c27c_e2909666",
      "revId": "d43a544fb2bd6325cf8547ab6f897ce686bdce86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f36812fa_eb92ac7a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2024-08-25T04:54:17Z",
      "side": 1,
      "message": "I think I understand what you are saying. \n\nHere is my question: do you think that the test case I posted should return an error?  I understand that it does not return an error today.  I understand that with your earlier patch it does return an error.  My question is: do you think it should return an error?  Do you think there is a problem that should be reported?  Why or why not?  Thanks.",
      "parentUuid": "5e1208b8_bcff229d",
      "revId": "d43a544fb2bd6325cf8547ab6f897ce686bdce86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e66d74ce_87351508",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 51518
      },
      "writtenOn": "2024-08-25T06:35:46Z",
      "side": 1,
      "message": "I may have misinterpreted your previous guidance. Initially, I thought you were suggesting that I should not directly submit a CL, but rather follow the established process of reporting the identified issue through GitHub\u0027s issue tracker.",
      "parentUuid": "f36812fa_eb92ac7a",
      "revId": "d43a544fb2bd6325cf8547ab6f897ce686bdce86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac8fdc58_9161ca88",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 51518
      },
      "writtenOn": "2024-08-25T06:45:17Z",
      "side": 1,
      "message": "This is my current opinion after consideration: the template you provided  doesn\u0027t trigger an error, but the output result is not a complete and correct HTML.  So in fact, it should report an error. \n\nThat is to say, my previous changes were correct, and the current \u0027append\u0027 appears to be problematic.\n\nIf my understanding is correct, I am very willing to report the issue on GitHub, fix the code, and add the testcase. (Of course, it should be added in the Error cases part :-) )",
      "parentUuid": "e66d74ce_87351508",
      "revId": "d43a544fb2bd6325cf8547ab6f897ce686bdce86",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}