{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "12215250_8e3db44c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-21T06:59:51Z",
      "side": 1,
      "message": "Any new comments?",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5654104a_b066749f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "I made a few comments, but this CL will be for 1.17 anyhow.",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7da839b_da83602d",
        "filename": "src/internal/poll/splice_linux.go",
        "patchSetId": 10
      },
      "lineNbr": 157,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "\"pipe\" is kind of an overloaded name here, let\u0027s call this slicePipe or something like that.",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d56a9a0_cfd14bfb",
        "filename": "src/internal/poll/splice_linux.go",
        "patchSetId": 10
      },
      "lineNbr": 170,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "This comment seems to just restate how SetFinalizer works, which doesn\u0027t seem helpful.",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8211867_51a656d9",
        "filename": "src/internal/poll/splice_linux.go",
        "patchSetId": 10
      },
      "lineNbr": 215,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "pp \u003d pipe{rfd: fds[2], wfd: fds[1]}",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "358af748_40c652f8",
        "filename": "src/internal/poll/splice_linux.go",
        "patchSetId": 10
      },
      "lineNbr": 235,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "Don\u0027t write \"_ \u003d \" to ignore an error.  Just write CloseFunc(p.rfd) without the \"_ \u003d\".",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd08f47e_adf4276e",
        "filename": "src/internal/poll/splice_linux_test.go",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "No need to explicitly convert 100 + 10 to time.Duration.",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f64530e4_45e619ab",
        "filename": "src/internal/poll/splice_linux_test.go",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "Tests that sleep are inherently flaky.  They can misbehave on overloaded machines.  I\u0027m not sure this test is worth the flakiness.",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}