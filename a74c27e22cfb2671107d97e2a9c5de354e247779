{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "12215250_8e3db44c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-21T06:59:51Z",
      "side": 1,
      "message": "Any new comments?",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5654104a_b066749f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "I made a few comments, but this CL will be for 1.17 anyhow.",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d236403d_8a18080b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-21T15:00:56Z",
      "side": 1,
      "message": "Could this CL be merged into Go 1.16 if everything goes well? All network applications that calls splice() can benifit from it, so as our application.",
      "parentUuid": "5654104a_b066749f",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "604475c4_569eea39",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-21T15:07:42Z",
      "side": 1,
      "message": "Benefit from it sooner.",
      "parentUuid": "d236403d_8a18080b",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0a8286b_ba9b2f38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T22:15:49Z",
      "side": 1,
      "message": "No.  This is new behavior for code that has already given us problems in recent releases (for unrelated reasons).  We aren\u0027t going to introduce any changes to this code after the release freeze (other than small bug fixes if required).",
      "parentUuid": "604475c4_569eea39",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5bd84ff_af4a5e8b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-22T02:32:10Z",
      "side": 1,
      "message": "Understood.",
      "parentUuid": "b0a8286b_ba9b2f38",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7da839b_da83602d",
        "filename": "src/internal/poll/splice_linux.go",
        "patchSetId": 10
      },
      "lineNbr": 157,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "\"pipe\" is kind of an overloaded name here, let\u0027s call this slicePipe or something like that.",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cabd21c3_3d7f4526",
        "filename": "src/internal/poll/splice_linux.go",
        "patchSetId": 10
      },
      "lineNbr": 157,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-21T14:55:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7da839b_da83602d",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d56a9a0_cfd14bfb",
        "filename": "src/internal/poll/splice_linux.go",
        "patchSetId": 10
      },
      "lineNbr": 170,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "This comment seems to just restate how SetFinalizer works, which doesn\u0027t seem helpful.",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87aa5ba6_bb16e5fd",
        "filename": "src/internal/poll/splice_linux.go",
        "patchSetId": 10
      },
      "lineNbr": 170,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-21T14:55:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d56a9a0_cfd14bfb",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8211867_51a656d9",
        "filename": "src/internal/poll/splice_linux.go",
        "patchSetId": 10
      },
      "lineNbr": 215,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "pp \u003d pipe{rfd: fds[2], wfd: fds[1]}",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24c963f7_0707525b",
        "filename": "src/internal/poll/splice_linux.go",
        "patchSetId": 10
      },
      "lineNbr": 215,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-21T14:55:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8211867_51a656d9",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "358af748_40c652f8",
        "filename": "src/internal/poll/splice_linux.go",
        "patchSetId": 10
      },
      "lineNbr": 235,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "Don\u0027t write \"_ \u003d \" to ignore an error.  Just write CloseFunc(p.rfd) without the \"_ \u003d\".",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89e822cd_fcda4386",
        "filename": "src/internal/poll/splice_linux.go",
        "patchSetId": 10
      },
      "lineNbr": 235,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-21T14:55:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "358af748_40c652f8",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd08f47e_adf4276e",
        "filename": "src/internal/poll/splice_linux_test.go",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "No need to explicitly convert 100 + 10 to time.Duration.",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc056c52_32630bf5",
        "filename": "src/internal/poll/splice_linux_test.go",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-21T14:56:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd08f47e_adf4276e",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f64530e4_45e619ab",
        "filename": "src/internal/poll/splice_linux_test.go",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T14:07:07Z",
      "side": 1,
      "message": "Tests that sleep are inherently flaky.  They can misbehave on overloaded machines.  I\u0027m not sure this test is worth the flakiness.",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1b7d056_f1c31160",
        "filename": "src/internal/poll/splice_linux_test.go",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-21T14:55:58Z",
      "side": 1,
      "message": "I refer to https://go.googlesource.com/go/+/refs/tags/go1.15.5/src/sync/pool_test.go#126",
      "parentUuid": "f64530e4_45e619ab",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a6428cc_a39b9983",
        "filename": "src/internal/poll/splice_linux_test.go",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 5206
      },
      "writtenOn": "2020-11-21T22:15:49Z",
      "side": 1,
      "message": "Yes, that test is also problematic.  And at least that test uses a loop with an exponential time decay to try to reduce flakiness.",
      "parentUuid": "e1b7d056_f1c31160",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c0c2946_bd961f06",
        "filename": "src/internal/poll/splice_linux_test.go",
        "patchSetId": 10
      },
      "lineNbr": 26,
      "author": {
        "id": 34725
      },
      "writtenOn": "2020-11-22T02:32:10Z",
      "side": 1,
      "message": "But still, some spleeping have to do after the runtime.GC() to verify if some stuff take effect and I didn\u0027t find a pefect way to do that except for waiting GC, any advices?",
      "parentUuid": "9a6428cc_a39b9983",
      "revId": "a74c27e22cfb2671107d97e2a9c5de354e247779",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}