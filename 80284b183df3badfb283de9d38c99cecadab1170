{
  "comments": [
    {
      "key": {
        "uuid": "e8769f8b_4696b106",
        "filename": "src/cmd/compile/internal/gc/main.go",
        "patchSetId": 1
      },
      "lineNbr": 1318,
      "author": {
        "id": 32560
      },
      "writtenOn": "2020-04-23T14:36:59Z",
      "side": 1,
      "message": "path.Base?",
      "range": {
        "startLine": 1318,
        "startChar": 17,
        "endLine": 1318,
        "endChar": 21
      },
      "revId": "80284b183df3badfb283de9d38c99cecadab1170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5315e63_b07ad015",
        "filename": "src/cmd/compile/internal/gc/main.go",
        "patchSetId": 1
      },
      "lineNbr": 1318,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-04-23T15:45:44Z",
      "side": 1,
      "message": "This is moved from the old code. I\u0027ll try it in a follow-up CL.",
      "parentUuid": "e8769f8b_4696b106",
      "range": {
        "startLine": 1318,
        "startChar": 17,
        "endLine": 1318,
        "endChar": 21
      },
      "revId": "80284b183df3badfb283de9d38c99cecadab1170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "875da05e_a01486af",
        "filename": "src/cmd/internal/goobj/readnew.go",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 5167
      },
      "writtenOn": "2020-04-23T15:47:06Z",
      "side": 1,
      "message": "Maybe a comment mentioning that this object format ignores p.Fingerprint.",
      "revId": "80284b183df3badfb283de9d38c99cecadab1170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc682b58_b726de69",
        "filename": "src/cmd/internal/goobj/readnew.go",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-04-23T16:04:58Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "875da05e_a01486af",
      "revId": "80284b183df3badfb283de9d38c99cecadab1170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "657184d0_a2878827",
        "filename": "src/cmd/internal/goobj2/objfile.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 5167
      },
      "writtenOn": "2020-04-23T15:47:06Z",
      "side": 1,
      "message": "It\u0027s a little weird that it\u0027s an [8]byte in some places and a uint64 in others. Can we use a consistent type?",
      "revId": "80284b183df3badfb283de9d38c99cecadab1170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b6cd828_39a2fc9a",
        "filename": "src/cmd/internal/goobj2/objfile.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-04-23T16:04:58Z",
      "side": 1,
      "message": "Yeah, I thought about that. uint64 is nicer to work with, so I used uint64 in most places. But I also don\u0027t want to convert back and forth so many times. Maybe we just use uint64 throughout, and just do the conversion for serialization. Let me know if you have better suggestions. Thanks.",
      "parentUuid": "657184d0_a2878827",
      "revId": "80284b183df3badfb283de9d38c99cecadab1170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad116235_5b7b0e6a",
        "filename": "src/cmd/internal/goobj2/objfile.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-04-23T16:51:03Z",
      "side": 1,
      "message": "Changed to uint64 in most places. PTAL. Thanks.",
      "parentUuid": "4b6cd828_39a2fc9a",
      "revId": "80284b183df3badfb283de9d38c99cecadab1170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c7372eb_76155231",
        "filename": "src/cmd/internal/goobj2/objfile.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 5167
      },
      "writtenOn": "2020-04-23T20:03:58Z",
      "side": 1,
      "message": "Interesting. I was actually thinking a [8]uint8 (or [8]byte) would be easier to work with. It starts life as an MD5, which is a [something]byte, reading and writing an [8]byte doesn\u0027t require any serialization or deserialization, and you only have to compare it for equality, which is just as easy on an [8]byte as a uint8.\n\nIf my argument doesn\u0027t intrigue you, I\u0027m perfectly happy with what you have. :)",
      "parentUuid": "ad116235_5b7b0e6a",
      "revId": "80284b183df3badfb283de9d38c99cecadab1170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57d08b4a_02335614",
        "filename": "src/cmd/internal/goobj2/objfile.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-04-23T21:07:26Z",
      "side": 1,
      "message": "I think I\u0027m convinced that [8]byte is better. I\u0027ll do the change. Thanks.",
      "parentUuid": "4c7372eb_76155231",
      "revId": "80284b183df3badfb283de9d38c99cecadab1170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "717fa248_b3881f7f",
        "filename": "src/cmd/internal/goobj2/objfile.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-04-23T21:42:56Z",
      "side": 1,
      "message": "Done, changed to [8]byte. I made a named type so it won\u0027t be too many magical \"8\".\n\nThe two slightly annoying parts are\n- reading now needs to use copy, like \"copy(h.Fingerprint[:], r.BytesAt(off, len(h.Fingerprint)))\"\n- writing the zero value is longer, e.g. https://go-review.googlesource.com/c/go/+/229618/4/src/cmd/link/internal/ld/lib.go#1990\n\nIt does get rid of all encoding/binary stuff.\n\nThanks.",
      "parentUuid": "57d08b4a_02335614",
      "revId": "80284b183df3badfb283de9d38c99cecadab1170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "743ce1cb_c747c116",
        "filename": "src/cmd/internal/goobj2/objfile.go",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 5167
      },
      "writtenOn": "2020-04-24T17:11:32Z",
      "side": 1,
      "message": "That\u0027s true. On balance I do like this better, though, and thanks for making the type.\n\n\u003e writing the zero value is longer\n\nFingerprintType could have an IsZero method? (Or we could go the proto route and make it a *[8]byte! /s)",
      "parentUuid": "717fa248_b3881f7f",
      "revId": "80284b183df3badfb283de9d38c99cecadab1170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8325cdce_c3e2621a",
        "filename": "src/cmd/internal/goobj2/objfile.go",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 32560
      },
      "writtenOn": "2020-04-23T14:36:59Z",
      "side": 1,
      "message": "comment: why 8?",
      "range": {
        "startLine": 522,
        "startChar": 36,
        "endLine": 522,
        "endChar": 37
      },
      "revId": "80284b183df3badfb283de9d38c99cecadab1170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16f6640f_6fde8671",
        "filename": "src/cmd/internal/goobj2/objfile.go",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 13315
      },
      "writtenOn": "2020-04-23T15:45:44Z",
      "side": 1,
      "message": "Moved the const declaration next to the type definition, so it becomes clear.",
      "parentUuid": "8325cdce_c3e2621a",
      "range": {
        "startLine": 522,
        "startChar": 36,
        "endLine": 522,
        "endChar": 37
      },
      "revId": "80284b183df3badfb283de9d38c99cecadab1170",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}