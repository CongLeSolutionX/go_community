{
  "comments": [
    {
      "key": {
        "uuid": "5695a06b_c3435d80",
        "filename": "src/cmd/compile/internal/arm64/ggen.go",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 13315
      },
      "writtenOn": "2017-11-14T18:59:30Z",
      "side": 1,
      "message": "Could we change 16 to gc.Ctxt.FixedFrameSize()? Also below.",
      "range": {
        "startLine": 31,
        "startChar": 94,
        "endLine": 31,
        "endChar": 96
      },
      "revId": "4f178d157d156c6a5fd9c0a35d44e57ca89a9599",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aea01794_ed4fdc2d",
        "filename": "src/cmd/compile/internal/arm64/ggen.go",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 16227
      },
      "writtenOn": "2017-11-24T07:51:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5695a06b_c3435d80",
      "range": {
        "startLine": 31,
        "startChar": 94,
        "endLine": 31,
        "endChar": 96
      },
      "revId": "4f178d157d156c6a5fd9c0a35d44e57ca89a9599",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ac0676a_7ab07560",
        "filename": "src/cmd/compile/internal/arm64/ssa.go",
        "patchSetId": 3
      },
      "lineNbr": 579,
      "author": {
        "id": 13315
      },
      "writtenOn": "2017-11-14T18:59:30Z",
      "side": 1,
      "message": "For AMD64 we do this in the assembler backend (https://go.googlesource.com/go/+/510327012bd42aca3deac989e2e109dc71bb4605/src/cmd/internal/obj/x86/asm6.go#4029). Can we also do it there?",
      "revId": "4f178d157d156c6a5fd9c0a35d44e57ca89a9599",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c22f32d_ad004d6e",
        "filename": "src/cmd/compile/internal/arm64/ssa.go",
        "patchSetId": 3
      },
      "lineNbr": 579,
      "author": {
        "id": 16227
      },
      "writtenOn": "2017-11-24T07:51:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ac0676a_7ab07560",
      "revId": "4f178d157d156c6a5fd9c0a35d44e57ca89a9599",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68331533_f43c42a1",
        "filename": "src/cmd/internal/obj/arm64/obj7.go",
        "patchSetId": 3
      },
      "lineNbr": 595,
      "author": {
        "id": 13315
      },
      "writtenOn": "2017-11-14T18:59:30Z",
      "side": 1,
      "message": "This should be before the update of SP?",
      "revId": "4f178d157d156c6a5fd9c0a35d44e57ca89a9599",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0bf433a_d3c1529d",
        "filename": "src/cmd/internal/obj/arm64/obj7.go",
        "patchSetId": 3
      },
      "lineNbr": 595,
      "author": {
        "id": 16227
      },
      "writtenOn": "2017-11-24T07:51:58Z",
      "side": 1,
      "message": "FP always points to the start of current frame (i.e updated RSP)",
      "parentUuid": "68331533_f43c42a1",
      "revId": "4f178d157d156c6a5fd9c0a35d44e57ca89a9599",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c90c08fe_b4f4edf6",
        "filename": "src/cmd/internal/obj/arm64/obj7.go",
        "patchSetId": 3
      },
      "lineNbr": 595,
      "author": {
        "id": 13315
      },
      "writtenOn": "2017-11-27T19:25:56Z",
      "side": 1,
      "message": "This is very confusing. As far as I understand how frame pointer works in general, it should point to the top of the current frame, or the bottom of the caller\u0027s frame (whereas the stack pointer points to the bottom of the current frame). This is also how Go AMD64 toolchain uses frame pointer.\n\nDoes your change work in completely different way? I think we need more explanation.",
      "parentUuid": "e0bf433a_d3c1529d",
      "revId": "4f178d157d156c6a5fd9c0a35d44e57ca89a9599",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99afc8dc_6579e9aa",
        "filename": "src/cmd/internal/obj/arm64/obj7.go",
        "patchSetId": 3
      },
      "lineNbr": 595,
      "author": {
        "id": 16227
      },
      "writtenOn": "2017-11-28T13:02:17Z",
      "side": 1,
      "message": "The implementation is according to Procedure Call Standard for the ARM 64-bit Architecture (http://infocenter.arm.com/help/topic/com.arm.doc.ihi0055b/IHI0055B_aapcs64.pdf) 5.2.3 The Frame Pointer: The frame record for the innermost frame (belonging\nto the most recent routine invocation) shall be pointed to by the Frame Pointer register (FP). \nAlso, our FP implementation is the same as that of GCC.",
      "parentUuid": "c90c08fe_b4f4edf6",
      "revId": "4f178d157d156c6a5fd9c0a35d44e57ca89a9599",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70bd07c1_4dfc0d4f",
        "filename": "src/cmd/internal/obj/arm64/obj7.go",
        "patchSetId": 3
      },
      "lineNbr": 618,
      "author": {
        "id": 13315
      },
      "writtenOn": "2017-11-14T18:59:30Z",
      "side": 1,
      "message": "So is this. This should probably be ADD $framesize, SP, FP ?",
      "revId": "4f178d157d156c6a5fd9c0a35d44e57ca89a9599",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9585a6b1_d230b7fc",
        "filename": "src/cmd/internal/obj/arm64/obj7.go",
        "patchSetId": 3
      },
      "lineNbr": 618,
      "author": {
        "id": 16227
      },
      "writtenOn": "2017-11-24T07:51:58Z",
      "side": 1,
      "message": "\"ADD $framesize, SP, FP\" will make FP point to previous frame.",
      "parentUuid": "70bd07c1_4dfc0d4f",
      "revId": "4f178d157d156c6a5fd9c0a35d44e57ca89a9599",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f53f2cd6_001a0d06",
        "filename": "src/cmd/vet/asmdecl.go",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 13315
      },
      "writtenOn": "2017-11-14T18:59:30Z",
      "side": 1,
      "message": "intSize and ptrSize are equal, but other lines use intSize, so let\u0027s do the same here.",
      "range": {
        "startLine": 258,
        "startChar": 29,
        "endLine": 258,
        "endChar": 36
      },
      "revId": "4f178d157d156c6a5fd9c0a35d44e57ca89a9599",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebae4849_e66d4822",
        "filename": "src/cmd/vet/asmdecl.go",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 16227
      },
      "writtenOn": "2017-11-24T07:51:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f53f2cd6_001a0d06",
      "range": {
        "startLine": 258,
        "startChar": 29,
        "endLine": 258,
        "endChar": 36
      },
      "revId": "4f178d157d156c6a5fd9c0a35d44e57ca89a9599",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}