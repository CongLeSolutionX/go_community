{
  "comments": [
    {
      "key": {
        "uuid": "dcdd835f_6bd86109",
        "filename": "src/net/http/client.go",
        "patchSetId": 2
      },
      "lineNbr": 451,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-10-19T07:30:25Z",
      "side": 1,
      "message": "icookies \u003d c.reqCookies(req)\n\nAnd then move the below into a method.",
      "revId": "d22f4c0fa3e3c6d94ea5365a15261429d9f2e52a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcdd835f_8be26dba",
        "filename": "src/net/http/client.go",
        "patchSetId": 2
      },
      "lineNbr": 563,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-10-19T07:30:25Z",
      "side": 1,
      "message": "this function (doFollowingRedirects) went from too long to way too long. Can this be broken up into a helper function somehow?",
      "revId": "d22f4c0fa3e3c6d94ea5365a15261429d9f2e52a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c714b5a_8c28679e",
        "filename": "src/net/http/client.go",
        "patchSetId": 2
      },
      "lineNbr": 563,
      "author": {
        "id": 9735
      },
      "writtenOn": "2016-10-20T01:03:59Z",
      "side": 1,
      "message": "The challenge is that the logic is dependent on state that is scoped within this function. I didn\u0027t want to add them as fields to the Client struct since that\u0027s a larger scope than needed. I also didn\u0027t want to keep passing them as arguments to this helper function.\n\nThe best solution I could think of was to have a method that returned a copyHeaders callback which could reference the ireqhdrs and icookies variables only within the scope that matters.\n\nPTAL, what are your thoughts?",
      "parentUuid": "dcdd835f_8be26dba",
      "revId": "d22f4c0fa3e3c6d94ea5365a15261429d9f2e52a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcf8878b_cc3fa47c",
        "filename": "src/net/http/client.go",
        "patchSetId": 2
      },
      "lineNbr": 585,
      "author": {
        "id": 9735
      },
      "writtenOn": "2016-10-18T22:10:19Z",
      "side": 1,
      "message": "RFC 6265, section 4.2.2 says:\n\n Although cookies are serialized linearly in the Cookie header,\n servers SHOULD NOT rely upon the serialization order.\n\nThus, it should be okay to iterate over a map (which will present the cookie in a non-deterministic order). Pointing this out, if you can think of other issues this may cause.",
      "range": {
        "startLine": 585,
        "startChar": 4,
        "endLine": 585,
        "endChar": 33
      },
      "revId": "d22f4c0fa3e3c6d94ea5365a15261429d9f2e52a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcdd835f_abdd29fc",
        "filename": "src/net/http/client.go",
        "patchSetId": 2
      },
      "lineNbr": 585,
      "author": {
        "id": 5065
      },
      "writtenOn": "2016-10-19T07:30:25Z",
      "side": 1,
      "message": "non-deterministic is annoying for testing and surprising for users, though. At least do a strings.Sort on it before the strings.Join",
      "parentUuid": "fcf8878b_cc3fa47c",
      "revId": "d22f4c0fa3e3c6d94ea5365a15261429d9f2e52a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c714b5a_ec9a434c",
        "filename": "src/net/http/client.go",
        "patchSetId": 2
      },
      "lineNbr": 585,
      "author": {
        "id": 9735
      },
      "writtenOn": "2016-10-20T01:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dcdd835f_abdd29fc",
      "revId": "d22f4c0fa3e3c6d94ea5365a15261429d9f2e52a",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}