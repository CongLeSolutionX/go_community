{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3bd151d7_d0c7e8a7",
        "filename": "src/runtime/mbarrier.go",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-11-15T16:58:20Z",
      "side": 1,
      "message": "In the places this function is called it seems we can have type information. Maybe consider pass that in. (Not necessarily for this CL.)",
      "revId": "4df4c84cf1222d2a14808e7d7f83829166344ded",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78c1fb9d_f5595aeb",
        "filename": "src/runtime/mbitmap_allocheaders.go",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-11-15T16:58:20Z",
      "side": 1,
      "message": "Maybe also nowritebarrierrec?",
      "revId": "4df4c84cf1222d2a14808e7d7f83829166344ded",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5f3a8ca_4346bb4e",
        "filename": "src/runtime/mbitmap_allocheaders.go",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-11-15T18:33:36Z",
      "side": 1,
      "message": "perhaps I misunderstand nowritebarrierrec, but shouldn\u0027t that requirement already be propagated down from its callers? this function itself doesn\u0027t have any reason to disallow write barriers.\n\nthe comment is perhaps a bit misleading (and a bit fragile) though. the real reason its nosplit is because its callers are nosplit and are required to only call nosplit functions. fixed the comment.",
      "parentUuid": "78c1fb9d_f5595aeb",
      "revId": "4df4c84cf1222d2a14808e7d7f83829166344ded",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "698f0580_ed8f2b93",
        "filename": "src/runtime/mbitmap_allocheaders.go",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-11-15T18:48:38Z",
      "side": 1,
      "message": "\u003e but shouldn\u0027t that requirement already be propagated down from its callers?\n\nYeah, you\u0027re right.",
      "parentUuid": "a5f3a8ca_4346bb4e",
      "revId": "4df4c84cf1222d2a14808e7d7f83829166344ded",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23fc24e8_93bfc6db",
        "filename": "src/runtime/mbitmap_allocheaders.go",
        "patchSetId": 2
      },
      "lineNbr": 403,
      "author": {
        "id": 13315
      },
      "writtenOn": "2023-11-15T16:58:20Z",
      "side": 1,
      "message": "Maybe document the `typ` parameter. (In particular, it can be the type of dst and src, or an array element type.)",
      "revId": "4df4c84cf1222d2a14808e7d7f83829166344ded",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bd0f059_45fe1f77",
        "filename": "src/runtime/mbitmap_allocheaders.go",
        "patchSetId": 2
      },
      "lineNbr": 403,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-11-15T18:33:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23fc24e8_93bfc6db",
      "revId": "4df4c84cf1222d2a14808e7d7f83829166344ded",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}