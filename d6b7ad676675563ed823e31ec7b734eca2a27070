{
  "comments": [
    {
      "key": {
        "uuid": "67fce493_ac4452ad",
        "filename": "src/os/exec/exec_test.go",
        "patchSetId": 1
      },
      "lineNbr": 880,
      "author": {
        "id": 5065
      },
      "writtenOn": "2017-05-23T03:23:56Z",
      "side": 1,
      "message": "or type delayedInfiniteReader if that 100ms sleep is important\n\nbut this is private and test-only so it doesn\u0027t matter much.",
      "range": {
        "startLine": 880,
        "startChar": 5,
        "endLine": 880,
        "endChar": 19
      },
      "revId": "d6b7ad676675563ed823e31ec7b734eca2a27070",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f846533e_89f89ccb",
        "filename": "src/os/exec/exec_test.go",
        "patchSetId": 1
      },
      "lineNbr": 882,
      "author": {
        "id": 5065
      },
      "writtenOn": "2017-05-23T03:23:56Z",
      "side": 1,
      "message": "FYI only: no need for a receiver name here. can drop the \"r \". but also fine as-is.",
      "range": {
        "startLine": 882,
        "startChar": 6,
        "endLine": 882,
        "endChar": 8
      },
      "revId": "d6b7ad676675563ed823e31ec7b734eca2a27070",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "610a4552_5b208870",
        "filename": "src/os/exec/exec_test.go",
        "patchSetId": 1
      },
      "lineNbr": 911,
      "author": {
        "id": 5065
      },
      "writtenOn": "2017-05-23T03:23:56Z",
      "side": 1,
      "message": "or just re-use \"out\".\n\nbut this looks like a subtest. I\u0027d use t.Run with two named cases and share the bulk of the code except the reader.\n\n   testWith :\u003d func(r io.Reader) func (*testing.T) {\n        return func(t *testing.T) {\n                cmd :\u003d helperCommand(t, \"echo\", \"foo\")\n              var out bytes.Buffer\n\t      cmd.Stdin \u003d r\n              ....\n         }\n   }\n   t.Run(\"10MB\", testWith(strings.NewReader(strings.Repeat(\"x\", 10\u003c\u003c20)))\n   t.Run(\"Infinite\", testWith(infiniteReader{}))",
      "revId": "d6b7ad676675563ed823e31ec7b734eca2a27070",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}