{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f4c94871_f223cbe4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 62423
      },
      "writtenOn": "2023-05-13T06:56:43Z",
      "side": 1,
      "message": "Hi @mknyszek@google.com @iant@golang.org @austin@google.com\n\nping...",
      "revId": "7b4cbe3c7b4cd0af7028b9dd83280322739936f5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb08fdd5_6ccac778",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-05-15T15:49:52Z",
      "side": 1,
      "message": "sorry, I left these comments in a draft state and forgot to send them.",
      "revId": "7b4cbe3c7b4cd0af7028b9dd83280322739936f5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0048deff_91892c43",
        "filename": "src/runtime/mem_linux.go",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-05-15T15:49:52Z",
      "side": 1,
      "message": "while we\u0027re here, making this an atomic.Uint32 would be a nice cleanup, if you\u0027re so inclined.",
      "range": {
        "startLine": 39,
        "startChar": 16,
        "endLine": 39,
        "endChar": 22
      },
      "revId": "7b4cbe3c7b4cd0af7028b9dd83280322739936f5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3da9a01_cadba4b8",
        "filename": "src/runtime/mem_linux.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-05-15T15:49:52Z",
      "side": 1,
      "message": "nit: maybe \"adviseUnusedUnsupported\"? it\u0027s long, but it\u0027s only used in one place, and it\u0027s very clear.",
      "range": {
        "startLine": 40,
        "startChar": 1,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "7b4cbe3c7b4cd0af7028b9dd83280322739936f5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a33b859_55ca1774",
        "filename": "src/runtime/mem_linux.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-05-15T15:49:52Z",
      "side": 1,
      "message": "this can be an atomic.Bool.",
      "range": {
        "startLine": 40,
        "startChar": 14,
        "endLine": 40,
        "endChar": 20
      },
      "revId": "7b4cbe3c7b4cd0af7028b9dd83280322739936f5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6146db5d_494c1a10",
        "filename": "src/runtime/mem_linux.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-05-15T17:08:20Z",
      "side": 1,
      "message": "on second thought, maybe this should be encoded instead as a \"0\" adviseUnused?\n\nthen the logic, I think, becomes clearer. something like (in pseudocode):\n\n    const madviseUnsupported \u003d 0\n    \n    switch adviseUnused.Load() {\n    case _MADV_FREE:\n        // ... do MADV_FREE.\n        if success {\n            return\n        }\n        // On failure ...\n        adviseUnused.Store(_MADV_DONTNEED)\n        fallthrough\n    case _MADV_DONTNEED\n        // ... do MADV_FREE.\n        if success {\n            return\n        }\n        // On ENOSYS ...\n        adviseUnused.Store(madviseUnsupported)\n        fallthrough\n    case madviseUnsupported:\n        // Remap.\n        mmap(v, n, _PROT_READ|_PROT_WRITE, _MAP_ANON|_MAP_FIXED|_MAP_PRIVATE, -1, 0)\n    }",
      "parentUuid": "c3da9a01_cadba4b8",
      "range": {
        "startLine": 40,
        "startChar": 1,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "7b4cbe3c7b4cd0af7028b9dd83280322739936f5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b26ae261_4e71e972",
        "filename": "src/runtime/mem_linux.go",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 62423
      },
      "writtenOn": "2023-05-16T03:09:24Z",
      "side": 1,
      "message": "thanks a lot!\nIt\u0027s very nice and clear, I will submit a new PR.",
      "parentUuid": "6146db5d_494c1a10",
      "range": {
        "startLine": 40,
        "startChar": 1,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "7b4cbe3c7b4cd0af7028b9dd83280322739936f5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ceab7c1d_86623102",
        "filename": "src/runtime/mem_linux.go",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 25391
      },
      "writtenOn": "2023-05-15T15:49:52Z",
      "side": 1,
      "message": "duplicating this is a bit unfortunate (it\u0027s only one line but there\u0027s quite a bit of detail here).\n\n\nI\u0027ll come back later with some suggestions, but I\u0027d like to remove this duplication before landing it. even just a wrapper function for this (e.g. \"remap\" or something) would help.",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 80
      },
      "revId": "7b4cbe3c7b4cd0af7028b9dd83280322739936f5",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}