{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b130bca1_7603a0eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-18T00:03:11Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003df5369bfc\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "f5369bfc8e68db4ed66f56d216db4aac78d049d8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "718dbbc4_52ba7c1f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2022-11-18T00:16:51Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "b130bca1_7603a0eb",
      "tag": "autogenerated:trybots~happy",
      "revId": "f5369bfc8e68db4ed66f56d216db4aac78d049d8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11920d67_54403dad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-11-18T00:20:51Z",
      "side": 1,
      "message": "LG overall, but some comments.\n\nAlso, the change needs to be ported to go/types (identical structure).",
      "revId": "f5369bfc8e68db4ed66f56d216db4aac78d049d8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d7b9afe_d793ed32",
        "filename": "src/cmd/compile/internal/types2/typestring.go",
        "patchSetId": 7
      },
      "lineNbr": 162,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-11-18T00:20:51Z",
      "side": 1,
      "message": "But basic types are always \"exported\" - also they are always the same. What am I missing? Do you have concrete example?",
      "revId": "f5369bfc8e68db4ed66f56d216db4aac78d049d8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ad8d0bc_abcf0d51",
        "filename": "src/cmd/compile/internal/types2/typestring.go",
        "patchSetId": 7
      },
      "lineNbr": 162,
      "author": {
        "id": 7061
      },
      "writtenOn": "2022-11-18T01:33:56Z",
      "side": 1,
      "message": "If basic types are always exported, what\u0027s going on in the test?  Running it with tip, I see:\n\nmain.go:19:12: cannot use b.S{} (value of type b.S) as I1 value in variable declaration: b.S does not implement I1 (wrong type for method M1)\n\t\thave M1() (struct{string})\n\t\twant M1() (struct{string})\n\ni.e., it is an embedding, with the basic type string.  I thought this was a little unfortunate when I saw it, but figured that maybe that was just the rules.",
      "parentUuid": "0d7b9afe_d793ed32",
      "revId": "f5369bfc8e68db4ed66f56d216db4aac78d049d8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16fc0485_19032b77",
        "filename": "test/fixedbugs/issue54258.dir/main.go",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 7392
      },
      "writtenOn": "2022-11-18T00:20:51Z",
      "side": 1,
      "message": "can you add a case with embedding, perhaps with a pointer",
      "revId": "f5369bfc8e68db4ed66f56d216db4aac78d049d8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85095c94_e0b53b1b",
        "filename": "test/fixedbugs/issue54258.dir/main.go",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 7061
      },
      "writtenOn": "2022-11-18T01:33:56Z",
      "side": 1,
      "message": "will do.",
      "parentUuid": "16fc0485_19032b77",
      "revId": "f5369bfc8e68db4ed66f56d216db4aac78d049d8",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}