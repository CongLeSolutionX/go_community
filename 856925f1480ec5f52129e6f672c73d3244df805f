{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c8c6a4d9_54d8b378",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-25T07:00:24Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d856925f1\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "856925f1480ec5f52129e6f672c73d3244df805f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07e71da8_f3dce156",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-25T07:11:06Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "c8c6a4d9_54d8b378",
      "tag": "autogenerated:trybots~happy",
      "revId": "856925f1480ec5f52129e6f672c73d3244df805f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "406f7488_e5aa516b",
        "filename": "src/syscall/mkasm.go",
        "patchSetId": 8
      },
      "lineNbr": 58,
      "author": {
        "id": 36863
      },
      "writtenOn": "2023-04-27T21:18:13Z",
      "side": 1,
      "message": "I couldn\u0027t find any reasonable way inside the assembler today to determine if a call is a dynamic call. I don\u0027t think we want a hack in the asm preprocessor to search for calls to libc_ symbols, and insert a nop.\n\nI think the least painful solution is to generate `OR $0, R0` after the call. That will work for any build configuration.",
      "revId": "856925f1480ec5f52129e6f672c73d3244df805f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e74ddc72_0982f636",
        "filename": "src/syscall/mkasm.go",
        "patchSetId": 8
      },
      "lineNbr": 58,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-07-26T12:53:45Z",
      "side": 1,
      "message": "Thanks - am I correct in thinking that you\u0027re suggesting:\n\n```\nCALL %s(SB)\nOR $0, R0\nRET\n```\n\n(i.e. adding a NOOP that can be optionally patched as a TOC restore slot)",
      "parentUuid": "406f7488_e5aa516b",
      "revId": "856925f1480ec5f52129e6f672c73d3244df805f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89a5bdaa_da9a528c",
        "filename": "src/syscall/mkasm.go",
        "patchSetId": 8
      },
      "lineNbr": 58,
      "author": {
        "id": 13640
      },
      "writtenOn": "2023-08-14T07:28:26Z",
      "side": 1,
      "message": "I\u0027ll land this as is for now - I suspect we\u0027ll need to revisit this in order to be able to enable cgo.",
      "parentUuid": "e74ddc72_0982f636",
      "revId": "856925f1480ec5f52129e6f672c73d3244df805f",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}