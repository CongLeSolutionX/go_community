{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b9ad4166_6c62cf29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-18T23:08:11Z",
      "side": 1,
      "message": "TryBots beginning. Status page: https://farmer.golang.org/try?commit\u003d28d14356\n",
      "tag": "autogenerated:trybots~beginning",
      "revId": "28d14356bfa0d4c8cc8e1b774f145570e6559358",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9fae0b9_3237a6d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-18T23:08:11Z",
      "side": 1,
      "message": "Superseded.",
      "parentUuid": "f9c30197_4a4fe619",
      "tag": "autogenerated:trybots~beginning",
      "revId": "28d14356bfa0d4c8cc8e1b774f145570e6559358",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b4da435_0788fe47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5976
      },
      "writtenOn": "2023-04-18T23:18:08Z",
      "side": 1,
      "message": "TryBots are happy.\n\n",
      "parentUuid": "b9ad4166_6c62cf29",
      "tag": "autogenerated:trybots~happy",
      "revId": "28d14356bfa0d4c8cc8e1b774f145570e6559358",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce57573a_a2589057",
        "filename": "src/cmd/compile/internal/types2/assignments.go",
        "patchSetId": 2
      },
      "lineNbr": 238,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-04-19T01:20:58Z",
      "side": 1,
      "message": "Per the docstring, if x !\u003d nil then rhs has already been evaluated, and we can avoid this check.use, right?\n\n(pre-existing, but overlaps with the new logic)",
      "range": {
        "startLine": 238,
        "startChar": 2,
        "endLine": 238,
        "endChar": 16
      },
      "revId": "28d14356bfa0d4c8cc8e1b774f145570e6559358",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c17d706_8a362e70",
        "filename": "src/cmd/compile/internal/types2/assignments.go",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 31647
      },
      "writtenOn": "2023-04-19T01:20:58Z",
      "side": 1,
      "message": "How do you think about the fact that RHS operands are mutated in this function and/or check.assignment?\n\nAn operand is an intermediate value. At this point, while checking an assignment, I would expect that the RHS operand is fully evaluated and immutable.\n\nI think the point is that operands are not fully evaluated until after the assignment is type-checked, as their type may depend on the LHS. But if you have a better way to think about it, I\u0027d be interested.",
      "range": {
        "startLine": 240,
        "startChar": 3,
        "endLine": 240,
        "endChar": 19
      },
      "revId": "28d14356bfa0d4c8cc8e1b774f145570e6559358",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705"
    }
  ]
}