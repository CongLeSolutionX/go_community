{
  "comments": [
    {
      "key": {
        "uuid": "bbc39662_d75f91b5",
        "filename": "src/cmd/compile/internal/gc/alg.go",
        "patchSetId": 1
      },
      "lineNbr": 720,
      "author": {
        "id": 5200
      },
      "writtenOn": "2020-06-15T17:58:06Z",
      "side": 1,
      "message": "Josh, the reason why 230207 didn\u0027t cause failures is that the eqdata value that eqinterface returns uses OCALLFUNC, not OCALL. We build the call using OCALL, but typecheck rewrites the op to OCALLFUNC.\nSame thing for eqstring. eqmem doesn\u0027t call typecheck on the call node, so it is still OCALL.\n\nWe probably want to clean this optimization up, and add a test that it triggers somehow.",
      "range": {
        "startLine": 720,
        "startChar": 18,
        "endLine": 720,
        "endChar": 23
      },
      "revId": "60a45ac14985e8f81d1ab8e7bdaf0b1440591891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5df2f390_f4d5e2a2",
        "filename": "src/cmd/compile/internal/gc/alg.go",
        "patchSetId": 1
      },
      "lineNbr": 721,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-06-15T17:16:40Z",
      "side": 1,
      "message": "aside: Do we really need both SliceStable and the idx comparison? Shouldn\u0027t just one of the other be sufficient here? That is, either switch to just Slice, or remove the idx field.\n\nDoesn\u0027t seem worth messing with right now, but caught my eye while looking at this.",
      "revId": "60a45ac14985e8f81d1ab8e7bdaf0b1440591891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3708e66b_607ea707",
        "filename": "src/cmd/compile/internal/gc/alg.go",
        "patchSetId": 1
      },
      "lineNbr": 721,
      "author": {
        "id": 5200
      },
      "writtenOn": "2020-06-15T17:17:57Z",
      "side": 1,
      "message": "Yes, I agree. That\u0027s my TODO comment above.",
      "parentUuid": "5df2f390_f4d5e2a2",
      "revId": "60a45ac14985e8f81d1ab8e7bdaf0b1440591891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53b5e5a9_d9125c37",
        "filename": "src/cmd/compile/internal/gc/alg.go",
        "patchSetId": 1
      },
      "lineNbr": 721,
      "author": {
        "id": 5440
      },
      "writtenOn": "2020-06-15T17:38:51Z",
      "side": 1,
      "message": "Ah, right. Ack.",
      "parentUuid": "3708e66b_607ea707",
      "revId": "60a45ac14985e8f81d1ab8e7bdaf0b1440591891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2a7e1d2_178a2578",
        "filename": "test/fixedbugs/issue8606.go",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 5200
      },
      "writtenOn": "2020-06-15T17:05:32Z",
      "side": 1,
      "message": "This is the test case that breaks without the changes in alg.go.\nThe memequal of the three fields a,b,c gets reordered with the interface comparison.",
      "revId": "60a45ac14985e8f81d1ab8e7bdaf0b1440591891",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    }
  ]
}